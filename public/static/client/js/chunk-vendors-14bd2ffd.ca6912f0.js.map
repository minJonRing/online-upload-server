{"version":3,"file":"static/client/js/chunk-vendors-14bd2ffd.ca6912f0.js","mappings":"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","sources":["webpack://d1/./node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst prevRadius = spherical.radius;\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\t\t\t\t\tzoomChanged = prevRadius != spherical.radius;\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\tzoomChanged = prevZoom !== scope.object.zoom;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tconst prevZoom = scope.object.zoom;\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\n\t\t\t\t\tif ( prevZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\tdocument.removeEventListener( 'keydown', interceptControlDown, { capture: true } );\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tlet controlActive = false;\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale( delta ) {\n\n\t\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed * normalizedDelta );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateZoomParameters( x, y ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst dx = x - rect.left;\n\t\t\tconst dy = y - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( dx / w ) * 2 - 1;\n\t\t\tmouse.y = - ( dy / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientX );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( dollyDelta.y ) );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( dollyDelta.y ) );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateZoomParameters( event.clientX, event.clientY );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale( event.deltaY ) );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale( event.deltaY ) );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\t\tupdateZoomParameters( centerX, centerY );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( isTrackingPointer( event ) ) return;\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tconst pointerId = pointers[ 0 ];\n\t\t\t\t\tconst position = pointerPositions[ pointerId ];\n\n\t\t\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\t\t\tonTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( customWheelEvent( event ) );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction customWheelEvent( event ) {\n\n\t\t\tconst mode = event.deltaMode;\n\n\t\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\t\tconst newEvent = {\n\t\t\t\tclientX: event.clientX,\n\t\t\t\tclientY: event.clientY,\n\t\t\t\tdeltaY: event.deltaY,\n\t\t\t};\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 1: // LINE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // PAGE_MODE\n\t\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// detect if event was triggered by pinching\n\t\t\tif ( event.ctrlKey && ! controlActive ) {\n\n\t\t\t\tnewEvent.deltaY *= 10;\n\n\t\t\t}\n\n\t\t\treturn newEvent;\n\n\t\t}\n\n\t\tfunction interceptControlDown( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = true;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.addEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction interceptControlUp( event ) {\n\n\t\t\tif ( event.key === 'Control' ) {\n\n\t\t\t\tcontrolActive = false;\n\n\n\t\t\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\t\t\tdocument.removeEventListener( 'keyup', interceptControlUp, { passive: true, capture: true } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event.pointerId );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isTrackingPointer( event ) {\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ] == event.pointerId ) return true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointerId = ( event.pointerId === pointers[ 0 ] ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tconst document = scope.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keydown', interceptControlDown, { passive: true, capture: true } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"names":["_changeEvent","type","_startEvent","_endEvent","_ray","Ray","_plane","Plane","TILT_LIMIT","Math","cos","MathUtils","DEG2RAD","OrbitControls","EventDispatcher","constructor","object","domElement","super","this","style","touchAction","enabled","target","Vector3","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","lastTargetPosition","twoPI","deltaTime","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","addScaledVector","panOffset","add","clampLength","zoomChanged","performCursorZoom","isOrthographicCamera","radius","clampDistance","prevRadius","scale","setFromSpherical","lookAt","multiplyScalar","set","newRadius","isPerspectiveCamera","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","prevZoom","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","EPS","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","document","getRootNode","interceptControlDown","capture","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","controlActive","getZoomScale","delta","normalizedDelta","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","updateZoomParameters","rect","getBoundingClientRect","dx","dy","w","width","h","height","normalize","dist","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","handleTouchStartRotate","pageX","pageY","getSecondPointerPosition","handleTouchStartPan","handleTouchStartDolly","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","centerX","centerY","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","isTrackingPointer","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","customWheelEvent","mode","deltaMode","newEvent","key","interceptControlUp","passive","trackPointer","DOLLY_ROTATE","push","i","splice","undefined"],"sourceRoot":""}