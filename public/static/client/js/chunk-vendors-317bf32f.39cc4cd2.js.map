{"version":3,"file":"static/client/js/chunk-vendors-317bf32f.39cc4cd2.js","mappings":"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","sources":["webpack://d1/./node_modules/echarts/lib/action/roamHelper.js","webpack://d1/./node_modules/echarts/lib/animation/basicTransition.js","webpack://d1/./node_modules/echarts/lib/animation/customGraphicKeyframeAnimation.js","webpack://d1/./node_modules/echarts/lib/animation/customGraphicTransition.js","webpack://d1/./node_modules/echarts/lib/animation/morphTransitionHelper.js","webpack://d1/./node_modules/echarts/lib/animation/universalTransition.js"],"sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getCenterCoord(view, point) {\n  // Use projected coord as center because it's linear.\n  return view.pointToProjected ? view.pointToProjected(point) : view.pointToData(point);\n}\nexport function updateCenterAndZoom(view, payload, zoomLimit, api) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.projectedToPoint ? view.projectedToPoint(center) : view.dataToPoint(center);\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    view.setCenter(getCenterCoord(view, point), api);\n  }\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    }\n    // Zoom on given point(originX, originY)\n    view.scaleX *= zoom;\n    view.scaleY *= zoom;\n    var fixX = (payload.originX - view.x) * (zoom - 1);\n    var fixY = (payload.originY - view.y) * (zoom - 1);\n    view.x -= fixX;\n    view.y -= fixY;\n    view.updateTransform();\n    // Get the new center\n    view.setCenter(getCenterCoord(view, point), api);\n    view.setZoom(zoom * previousZoom);\n  }\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isFunction, isObject, retrieve2 } from 'zrender/lib/core/util.js';\nimport { makeInner } from '../util/model.js';\n// Stored properties for further transition.\nexport var transitionStore = makeInner();\n/**\n * Return null if animation is disabled.\n */\nexport function getAnimationConfig(animationType, animatableModel, dataIndex,\n// Extra opts can override the option in animatable model.\nextraOpts,\n// TODO It's only for pictorial bar now.\nextraDelayParams) {\n  var animationPayload;\n  // Check if there is global animation configuration from dataZoom/resize can override the config in option.\n  // If animation is enabled. Will use this animation config in payload.\n  // If animation is disabled. Just ignore it.\n  if (animatableModel && animatableModel.ecModel) {\n    var updatePayload = animatableModel.ecModel.getUpdatePayload();\n    animationPayload = updatePayload && updatePayload.animation;\n  }\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n  var isUpdate = animationType === 'update';\n  if (animationEnabled) {\n    var duration = void 0;\n    var easing = void 0;\n    var delay = void 0;\n    if (extraOpts) {\n      duration = retrieve2(extraOpts.duration, 200);\n      easing = retrieve2(extraOpts.easing, 'cubicOut');\n      delay = 0;\n    } else {\n      duration = animatableModel.getShallow(isUpdate ? 'animationDurationUpdate' : 'animationDuration');\n      easing = animatableModel.getShallow(isUpdate ? 'animationEasingUpdate' : 'animationEasing');\n      delay = animatableModel.getShallow(isUpdate ? 'animationDelayUpdate' : 'animationDelay');\n    }\n    // animation from payload has highest priority.\n    if (animationPayload) {\n      animationPayload.duration != null && (duration = animationPayload.duration);\n      animationPayload.easing != null && (easing = animationPayload.easing);\n      animationPayload.delay != null && (delay = animationPayload.delay);\n    }\n    if (isFunction(delay)) {\n      delay = delay(dataIndex, extraDelayParams);\n    }\n    if (isFunction(duration)) {\n      duration = duration(dataIndex);\n    }\n    var config = {\n      duration: duration || 0,\n      delay: delay,\n      easing: easing\n    };\n    return config;\n  } else {\n    return null;\n  }\n}\nfunction animateOrSetProps(animationType, el, props, animatableModel, dataIndex, cb, during) {\n  var isFrom = false;\n  var removeOpt;\n  if (isFunction(dataIndex)) {\n    during = cb;\n    cb = dataIndex;\n    dataIndex = null;\n  } else if (isObject(dataIndex)) {\n    cb = dataIndex.cb;\n    during = dataIndex.during;\n    isFrom = dataIndex.isFrom;\n    removeOpt = dataIndex.removeOpt;\n    dataIndex = dataIndex.dataIndex;\n  }\n  var isRemove = animationType === 'leave';\n  if (!isRemove) {\n    // Must stop the remove animation.\n    el.stopAnimation('leave');\n  }\n  var animationConfig = getAnimationConfig(animationType, animatableModel, dataIndex, isRemove ? removeOpt || {} : null, animatableModel && animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n  if (animationConfig && animationConfig.duration > 0) {\n    var duration = animationConfig.duration;\n    var animationDelay = animationConfig.delay;\n    var animationEasing = animationConfig.easing;\n    var animateConfig = {\n      duration: duration,\n      delay: animationDelay || 0,\n      easing: animationEasing,\n      done: cb,\n      force: !!cb || !!during,\n      // Set to final state in update/init animation.\n      // So the post processing based on the path shape can be done correctly.\n      setToFinal: !isRemove,\n      scope: animationType,\n      during: during\n    };\n    isFrom ? el.animateFrom(props, animateConfig) : el.animateTo(props, animateConfig);\n  } else {\n    el.stopAnimation();\n    // If `isFrom`, the props is the \"from\" props.\n    !isFrom && el.attr(props);\n    // Call during at least once.\n    during && during(1);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\nfunction updateProps(el, props,\n// TODO: TYPE AnimatableModel\nanimatableModel, dataIndex, cb, during) {\n  animateOrSetProps('update', el, props, animatableModel, dataIndex, cb, during);\n}\nexport { updateProps };\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n */\nexport function initProps(el, props, animatableModel, dataIndex, cb, during) {\n  animateOrSetProps('enter', el, props, animatableModel, dataIndex, cb, during);\n}\n/**\n * If element is removed.\n * It can determine if element is having remove animation.\n */\nexport function isElementRemoved(el) {\n  if (!el.__zr) {\n    return true;\n  }\n  for (var i = 0; i < el.animators.length; i++) {\n    var animator = el.animators[i];\n    if (animator.scope === 'leave') {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Remove graphic element\n */\nexport function removeElement(el, props, animatableModel, dataIndex, cb, during) {\n  // Don't do remove animation twice.\n  if (isElementRemoved(el)) {\n    return;\n  }\n  animateOrSetProps('leave', el, props, animatableModel, dataIndex, cb, during);\n}\nfunction fadeOutDisplayable(el, animatableModel, dataIndex, done) {\n  el.removeTextContent();\n  el.removeTextGuideLine();\n  removeElement(el, {\n    style: {\n      opacity: 0\n    }\n  }, animatableModel, dataIndex, done);\n}\nexport function removeElementWithFadeOut(el, animatableModel, dataIndex) {\n  function doRemove() {\n    el.parent && el.parent.remove(el);\n  }\n  // Hide label and labelLine first\n  // TODO Also use fade out animation?\n  if (!el.isGroup) {\n    fadeOutDisplayable(el, animatableModel, dataIndex, doRemove);\n  } else {\n    el.traverse(function (disp) {\n      if (!disp.isGroup) {\n        // Can invoke doRemove multiple times.\n        fadeOutDisplayable(disp, animatableModel, dataIndex, doRemove);\n      }\n    });\n  }\n}\n/**\n * Save old style for style transition in universalTransition module.\n * It's used when element will be reused in each render.\n * For chart like map, heatmap, which will always create new element.\n * We don't need to save this because universalTransition can get old style from the old element\n */\nexport function saveOldStyle(el) {\n  transitionStore(el).oldStyle = el.style;\n}\nexport function getOldStyle(el) {\n  return transitionStore(el).oldStyle;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { keys, filter, each, isArray, indexOf } from 'zrender/lib/core/util.js';\nimport { ELEMENT_ANIMATABLE_PROPS } from './customGraphicTransition.js';\nimport { getAnimationConfig } from './basicTransition.js';\nimport { warn } from '../util/log.js';\nimport { makeInner } from '../util/model.js';\nvar getStateToRestore = makeInner();\nvar KEYFRAME_EXCLUDE_KEYS = ['percent', 'easing', 'shape', 'style', 'extra'];\n/**\n * Stop previous keyframe animation and restore the attributes.\n * Avoid new keyframe animation starts with wrong internal state when the percent: 0 is not set.\n */\nexport function stopPreviousKeyframeAnimationAndRestore(el) {\n  // Stop previous keyframe animation.\n  el.stopAnimation('keyframe');\n  // Restore\n  el.attr(getStateToRestore(el));\n}\nexport function applyKeyframeAnimation(el, animationOpts, animatableModel) {\n  if (!animatableModel.isAnimationEnabled() || !animationOpts) {\n    return;\n  }\n  if (isArray(animationOpts)) {\n    each(animationOpts, function (singleAnimationOpts) {\n      applyKeyframeAnimation(el, singleAnimationOpts, animatableModel);\n    });\n    return;\n  }\n  var keyframes = animationOpts.keyframes;\n  var duration = animationOpts.duration;\n  if (animatableModel && duration == null) {\n    // Default to use duration of config.\n    // NOTE: animation config from payload will be ignored because they are mainly for transitions.\n    var config = getAnimationConfig('enter', animatableModel, 0);\n    duration = config && config.duration;\n  }\n  if (!keyframes || !duration) {\n    return;\n  }\n  var stateToRestore = getStateToRestore(el);\n  each(ELEMENT_ANIMATABLE_PROPS, function (targetPropName) {\n    if (targetPropName && !el[targetPropName]) {\n      return;\n    }\n    var animator;\n    var endFrameIsSet = false;\n    // Sort keyframes by percent.\n    keyframes.sort(function (a, b) {\n      return a.percent - b.percent;\n    });\n    each(keyframes, function (kf) {\n      // Stop current animation.\n      var animators = el.animators;\n      var kfValues = targetPropName ? kf[targetPropName] : kf;\n      if (process.env.NODE_ENV !== 'production') {\n        if (kf.percent >= 1) {\n          endFrameIsSet = true;\n        }\n      }\n      if (!kfValues) {\n        return;\n      }\n      var propKeys = keys(kfValues);\n      if (!targetPropName) {\n        // PENDING performance?\n        propKeys = filter(propKeys, function (key) {\n          return indexOf(KEYFRAME_EXCLUDE_KEYS, key) < 0;\n        });\n      }\n      if (!propKeys.length) {\n        return;\n      }\n      if (!animator) {\n        animator = el.animate(targetPropName, animationOpts.loop, true);\n        animator.scope = 'keyframe';\n      }\n      for (var i = 0; i < animators.length; i++) {\n        // Stop all other animation that is not keyframe.\n        if (animators[i] !== animator && animators[i].targetName === animator.targetName) {\n          animators[i].stopTracks(propKeys);\n        }\n      }\n      targetPropName && (stateToRestore[targetPropName] = stateToRestore[targetPropName] || {});\n      var savedTarget = targetPropName ? stateToRestore[targetPropName] : stateToRestore;\n      each(propKeys, function (key) {\n        // Save original value.\n        savedTarget[key] = ((targetPropName ? el[targetPropName] : el) || {})[key];\n      });\n      animator.whenWithKeys(duration * kf.percent, kfValues, propKeys, kf.easing);\n    });\n    if (!animator) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!endFrameIsSet) {\n        warn('End frame with percent: 1 is missing in the keyframeAnimation.', true);\n      }\n    }\n    animator.delay(animationOpts.delay || 0).duration(duration).start(animationOpts.easing);\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { makeInner, normalizeToArray } from '../util/model.js';\nimport { assert, bind, each, eqNaN, extend, hasOwn, indexOf, isArrayLike, keys, reduce } from 'zrender/lib/core/util.js';\nimport { cloneValue } from 'zrender/lib/animation/Animator.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nimport { getAnimationConfig } from './basicTransition.js';\nimport { Path } from '../util/graphic.js';\nimport { warn } from '../util/log.js';\nimport { TRANSFORMABLE_PROPS } from 'zrender/lib/core/Transformable.js';\nvar LEGACY_TRANSFORM_PROPS_MAP = {\n  position: ['x', 'y'],\n  scale: ['scaleX', 'scaleY'],\n  origin: ['originX', 'originY']\n};\nvar LEGACY_TRANSFORM_PROPS = keys(LEGACY_TRANSFORM_PROPS_MAP);\nvar TRANSFORM_PROPS_MAP = reduce(TRANSFORMABLE_PROPS, function (obj, key) {\n  obj[key] = 1;\n  return obj;\n}, {});\nvar transformPropNamesStr = TRANSFORMABLE_PROPS.join(', ');\n// '' means root\nexport var ELEMENT_ANIMATABLE_PROPS = ['', 'style', 'shape', 'extra'];\n;\nvar transitionInnerStore = makeInner();\n;\nfunction getElementAnimationConfig(animationType, el, elOption, parentModel, dataIndex) {\n  var animationProp = animationType + \"Animation\";\n  var config = getAnimationConfig(animationType, parentModel, dataIndex) || {};\n  var userDuring = transitionInnerStore(el).userDuring;\n  // Only set when duration is > 0 and it's need to be animated.\n  if (config.duration > 0) {\n    // For simplicity, if during not specified, the previous during will not work any more.\n    config.during = userDuring ? bind(duringCall, {\n      el: el,\n      userDuring: userDuring\n    }) : null;\n    config.setToFinal = true;\n    config.scope = animationType;\n  }\n  extend(config, elOption[animationProp]);\n  return config;\n}\nexport function applyUpdateTransition(el, elOption, animatableModel, opts) {\n  opts = opts || {};\n  var dataIndex = opts.dataIndex,\n    isInit = opts.isInit,\n    clearStyle = opts.clearStyle;\n  var hasAnimation = animatableModel.isAnimationEnabled();\n  // Save the meta info for further morphing. Like apply on the sub morphing elements.\n  var store = transitionInnerStore(el);\n  var styleOpt = elOption.style;\n  store.userDuring = elOption.during;\n  var transFromProps = {};\n  var propsToSet = {};\n  prepareTransformAllPropsFinal(el, elOption, propsToSet);\n  prepareShapeOrExtraAllPropsFinal('shape', elOption, propsToSet);\n  prepareShapeOrExtraAllPropsFinal('extra', elOption, propsToSet);\n  if (!isInit && hasAnimation) {\n    prepareTransformTransitionFrom(el, elOption, transFromProps);\n    prepareShapeOrExtraTransitionFrom('shape', el, elOption, transFromProps);\n    prepareShapeOrExtraTransitionFrom('extra', el, elOption, transFromProps);\n    prepareStyleTransitionFrom(el, elOption, styleOpt, transFromProps);\n  }\n  propsToSet.style = styleOpt;\n  applyPropsDirectly(el, propsToSet, clearStyle);\n  applyMiscProps(el, elOption);\n  if (hasAnimation) {\n    if (isInit) {\n      var enterFromProps_1 = {};\n      each(ELEMENT_ANIMATABLE_PROPS, function (propName) {\n        var prop = propName ? elOption[propName] : elOption;\n        if (prop && prop.enterFrom) {\n          if (propName) {\n            enterFromProps_1[propName] = enterFromProps_1[propName] || {};\n          }\n          extend(propName ? enterFromProps_1[propName] : enterFromProps_1, prop.enterFrom);\n        }\n      });\n      var config = getElementAnimationConfig('enter', el, elOption, animatableModel, dataIndex);\n      if (config.duration > 0) {\n        el.animateFrom(enterFromProps_1, config);\n      }\n    } else {\n      applyPropsTransition(el, elOption, dataIndex || 0, animatableModel, transFromProps);\n    }\n  }\n  // Store leave to be used in leave transition.\n  updateLeaveTo(el, elOption);\n  styleOpt ? el.dirty() : el.markRedraw();\n}\nexport function updateLeaveTo(el, elOption) {\n  // Try merge to previous set leaveTo\n  var leaveToProps = transitionInnerStore(el).leaveToProps;\n  for (var i = 0; i < ELEMENT_ANIMATABLE_PROPS.length; i++) {\n    var propName = ELEMENT_ANIMATABLE_PROPS[i];\n    var prop = propName ? elOption[propName] : elOption;\n    if (prop && prop.leaveTo) {\n      if (!leaveToProps) {\n        leaveToProps = transitionInnerStore(el).leaveToProps = {};\n      }\n      if (propName) {\n        leaveToProps[propName] = leaveToProps[propName] || {};\n      }\n      extend(propName ? leaveToProps[propName] : leaveToProps, prop.leaveTo);\n    }\n  }\n}\nexport function applyLeaveTransition(el, elOption, animatableModel, onRemove) {\n  if (el) {\n    var parent_1 = el.parent;\n    var leaveToProps = transitionInnerStore(el).leaveToProps;\n    if (leaveToProps) {\n      // TODO TODO use leave after leaveAnimation in series is introduced\n      // TODO Data index?\n      var config = getElementAnimationConfig('update', el, elOption, animatableModel, 0);\n      config.done = function () {\n        parent_1.remove(el);\n        onRemove && onRemove();\n      };\n      el.animateTo(leaveToProps, config);\n    } else {\n      parent_1.remove(el);\n      onRemove && onRemove();\n    }\n  }\n}\nexport function isTransitionAll(transition) {\n  return transition === 'all';\n}\nfunction applyPropsDirectly(el,\n// Can be null/undefined\nallPropsFinal, clearStyle) {\n  var styleOpt = allPropsFinal.style;\n  if (!el.isGroup && styleOpt) {\n    if (clearStyle) {\n      el.useStyle({});\n      // When style object changed, how to trade the existing animation?\n      // It is probably complicated and not needed to cover all the cases.\n      // But still need consider the case:\n      // (1) When using init animation on `style.opacity`, and before the animation\n      //     ended users triggers an update by mousewhel. At that time the init\n      //     animation should better be continued rather than terminated.\n      //     So after `useStyle` called, we should change the animation target manually\n      //     to continue the effect of the init animation.\n      // (2) PENDING: If the previous animation targeted at a `val1`, and currently we need\n      //     to update the value to `val2` and no animation declared, should be terminate\n      //     the previous animation or just modify the target of the animation?\n      //     Therotically That will happen not only on `style` but also on `shape` and\n      //     `transfrom` props. But we haven't handle this case at present yet.\n      // (3) PENDING: Is it proper to visit `animators` and `targetName`?\n      var animators = el.animators;\n      for (var i = 0; i < animators.length; i++) {\n        var animator = animators[i];\n        // targetName is the \"topKey\".\n        if (animator.targetName === 'style') {\n          animator.changeTarget(el.style);\n        }\n      }\n    }\n    el.setStyle(styleOpt);\n  }\n  if (allPropsFinal) {\n    // Not set style here.\n    allPropsFinal.style = null;\n    // Set el to the final state firstly.\n    allPropsFinal && el.attr(allPropsFinal);\n    allPropsFinal.style = styleOpt;\n  }\n}\nfunction applyPropsTransition(el, elOption, dataIndex, model,\n// Can be null/undefined\ntransFromProps) {\n  if (transFromProps) {\n    var config = getElementAnimationConfig('update', el, elOption, model, dataIndex);\n    if (config.duration > 0) {\n      el.animateFrom(transFromProps, config);\n    }\n  }\n}\nfunction applyMiscProps(el, elOption) {\n  // Merge by default.\n  hasOwn(elOption, 'silent') && (el.silent = elOption.silent);\n  hasOwn(elOption, 'ignore') && (el.ignore = elOption.ignore);\n  if (el instanceof Displayable) {\n    hasOwn(elOption, 'invisible') && (el.invisible = elOption.invisible);\n  }\n  if (el instanceof Path) {\n    hasOwn(elOption, 'autoBatch') && (el.autoBatch = elOption.autoBatch);\n  }\n}\n// Use it to avoid it be exposed to user.\nvar tmpDuringScope = {};\nvar transitionDuringAPI = {\n  // Usually other props do not need to be changed in animation during.\n  setTransform: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS_MAP, key), 'Only ' + transformPropNamesStr + ' available in `setTransform`.');\n    }\n    tmpDuringScope.el[key] = val;\n    return this;\n  },\n  getTransform: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(hasOwn(TRANSFORM_PROPS_MAP, key), 'Only ' + transformPropNamesStr + ' available in `getTransform`.');\n    }\n    return tmpDuringScope.el[key];\n  },\n  setShape: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var el = tmpDuringScope.el;\n    var shape = el.shape || (el.shape = {});\n    shape[key] = val;\n    el.dirtyShape && el.dirtyShape();\n    return this;\n  },\n  getShape: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var shape = tmpDuringScope.el.shape;\n    if (shape) {\n      return shape[key];\n    }\n  },\n  setStyle: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var el = tmpDuringScope.el;\n    var style = el.style;\n    if (style) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (eqNaN(val)) {\n          warn('style.' + key + ' must not be assigned with NaN.');\n        }\n      }\n      style[key] = val;\n      el.dirtyStyle && el.dirtyStyle();\n    }\n    return this;\n  },\n  getStyle: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var style = tmpDuringScope.el.style;\n    if (style) {\n      return style[key];\n    }\n  },\n  setExtra: function (key, val) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var extra = tmpDuringScope.el.extra || (tmpDuringScope.el.extra = {});\n    extra[key] = val;\n    return this;\n  },\n  getExtra: function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      assertNotReserved(key);\n    }\n    var extra = tmpDuringScope.el.extra;\n    if (extra) {\n      return extra[key];\n    }\n  }\n};\nfunction assertNotReserved(key) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (key === 'transition' || key === 'enterFrom' || key === 'leaveTo') {\n      throw new Error('key must not be \"' + key + '\"');\n    }\n  }\n}\nfunction duringCall() {\n  // Do not provide \"percent\" until some requirements come.\n  // Because consider thies case:\n  // enterFrom: {x: 100, y: 30}, transition: 'x'.\n  // And enter duration is different from update duration.\n  // Thus it might be confused about the meaning of \"percent\" in during callback.\n  var scope = this;\n  var el = scope.el;\n  if (!el) {\n    return;\n  }\n  // If el is remove from zr by reason like legend, during still need to called,\n  // because el will be added back to zr and the prop value should not be incorrect.\n  var latestUserDuring = transitionInnerStore(el).userDuring;\n  var scopeUserDuring = scope.userDuring;\n  // Ensured a during is only called once in each animation frame.\n  // If a during is called multiple times in one frame, maybe some users' calculation logic\n  // might be wrong (not sure whether this usage exists).\n  // The case of a during might be called twice can be: by default there is a animator for\n  // 'x', 'y' when init. Before the init animation finished, call `setOption` to start\n  // another animators for 'style'/'shape'/'extra'.\n  if (latestUserDuring !== scopeUserDuring) {\n    // release\n    scope.el = scope.userDuring = null;\n    return;\n  }\n  tmpDuringScope.el = el;\n  // Give no `this` to user in \"during\" calling.\n  scopeUserDuring(transitionDuringAPI);\n  // FIXME: if in future meet the case that some prop will be both modified in `during` and `state`,\n  // consider the issue that the prop might be incorrect when return to \"normal\" state.\n}\n\nfunction prepareShapeOrExtraTransitionFrom(mainAttr, fromEl, elOption, transFromProps) {\n  var attrOpt = elOption[mainAttr];\n  if (!attrOpt) {\n    return;\n  }\n  var elPropsInAttr = fromEl[mainAttr];\n  var transFromPropsInAttr;\n  if (elPropsInAttr) {\n    var transition = elOption.transition;\n    var attrTransition = attrOpt.transition;\n    if (attrTransition) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      if (isTransitionAll(attrTransition)) {\n        extend(transFromPropsInAttr, elPropsInAttr);\n      } else {\n        var transitionKeys = normalizeToArray(attrTransition);\n        for (var i = 0; i < transitionKeys.length; i++) {\n          var key = transitionKeys[i];\n          var elVal = elPropsInAttr[key];\n          transFromPropsInAttr[key] = elVal;\n        }\n      }\n    } else if (isTransitionAll(transition) || indexOf(transition, mainAttr) >= 0) {\n      !transFromPropsInAttr && (transFromPropsInAttr = transFromProps[mainAttr] = {});\n      var elPropsInAttrKeys = keys(elPropsInAttr);\n      for (var i = 0; i < elPropsInAttrKeys.length; i++) {\n        var key = elPropsInAttrKeys[i];\n        var elVal = elPropsInAttr[key];\n        if (isNonStyleTransitionEnabled(attrOpt[key], elVal)) {\n          transFromPropsInAttr[key] = elVal;\n        }\n      }\n    }\n  }\n}\nfunction prepareShapeOrExtraAllPropsFinal(mainAttr, elOption, allProps) {\n  var attrOpt = elOption[mainAttr];\n  if (!attrOpt) {\n    return;\n  }\n  var allPropsInAttr = allProps[mainAttr] = {};\n  var keysInAttr = keys(attrOpt);\n  for (var i = 0; i < keysInAttr.length; i++) {\n    var key = keysInAttr[i];\n    // To avoid share one object with different element, and\n    // to avoid user modify the object inexpectedly, have to clone.\n    allPropsInAttr[key] = cloneValue(attrOpt[key]);\n  }\n}\nfunction prepareTransformTransitionFrom(el, elOption, transFromProps) {\n  var transition = elOption.transition;\n  var transitionKeys = isTransitionAll(transition) ? TRANSFORMABLE_PROPS : normalizeToArray(transition || []);\n  for (var i = 0; i < transitionKeys.length; i++) {\n    var key = transitionKeys[i];\n    if (key === 'style' || key === 'shape' || key === 'extra') {\n      continue;\n    }\n    var elVal = el[key];\n    if (process.env.NODE_ENV !== 'production') {\n      checkTransformPropRefer(key, 'el.transition');\n    }\n    // Do not clone, animator will perform that clone.\n    transFromProps[key] = elVal;\n  }\n}\nfunction prepareTransformAllPropsFinal(el, elOption, allProps) {\n  for (var i = 0; i < LEGACY_TRANSFORM_PROPS.length; i++) {\n    var legacyName = LEGACY_TRANSFORM_PROPS[i];\n    var xyName = LEGACY_TRANSFORM_PROPS_MAP[legacyName];\n    var legacyArr = elOption[legacyName];\n    if (legacyArr) {\n      allProps[xyName[0]] = legacyArr[0];\n      allProps[xyName[1]] = legacyArr[1];\n    }\n  }\n  for (var i = 0; i < TRANSFORMABLE_PROPS.length; i++) {\n    var key = TRANSFORMABLE_PROPS[i];\n    if (elOption[key] != null) {\n      allProps[key] = elOption[key];\n    }\n  }\n}\nfunction prepareStyleTransitionFrom(fromEl, elOption, styleOpt, transFromProps) {\n  if (!styleOpt) {\n    return;\n  }\n  var fromElStyle = fromEl.style;\n  var transFromStyleProps;\n  if (fromElStyle) {\n    var styleTransition = styleOpt.transition;\n    var elTransition = elOption.transition;\n    if (styleTransition && !isTransitionAll(styleTransition)) {\n      var transitionKeys = normalizeToArray(styleTransition);\n      !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n      for (var i = 0; i < transitionKeys.length; i++) {\n        var key = transitionKeys[i];\n        var elVal = fromElStyle[key];\n        // Do not clone, see `checkNonStyleTansitionRefer`.\n        transFromStyleProps[key] = elVal;\n      }\n    } else if (fromEl.getAnimationStyleProps && (isTransitionAll(elTransition) || isTransitionAll(styleTransition) || indexOf(elTransition, 'style') >= 0)) {\n      var animationProps = fromEl.getAnimationStyleProps();\n      var animationStyleProps = animationProps ? animationProps.style : null;\n      if (animationStyleProps) {\n        !transFromStyleProps && (transFromStyleProps = transFromProps.style = {});\n        var styleKeys = keys(styleOpt);\n        for (var i = 0; i < styleKeys.length; i++) {\n          var key = styleKeys[i];\n          if (animationStyleProps[key]) {\n            var elVal = fromElStyle[key];\n            transFromStyleProps[key] = elVal;\n          }\n        }\n      }\n    }\n  }\n}\nfunction isNonStyleTransitionEnabled(optVal, elVal) {\n  // The same as `checkNonStyleTansitionRefer`.\n  return !isArrayLike(optVal) ? optVal != null && isFinite(optVal) : optVal !== elVal;\n}\nvar checkTransformPropRefer;\nif (process.env.NODE_ENV !== 'production') {\n  checkTransformPropRefer = function (key, usedIn) {\n    if (!hasOwn(TRANSFORM_PROPS_MAP, key)) {\n      warn('Prop `' + key + '` is not a permitted in `' + usedIn + '`. ' + 'Only `' + keys(TRANSFORM_PROPS_MAP).join('`, `') + '` are permitted.');\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { separateMorph, combineMorph, morphPath, isCombineMorphing } from 'zrender/lib/tool/morphPath.js';\nimport { Path } from '../util/graphic.js';\nimport { defaults, isArray } from 'zrender/lib/core/util.js';\nimport { getAnimationConfig } from './basicTransition.js';\nimport { clonePath } from 'zrender/lib/tool/path.js';\nfunction isMultiple(elements) {\n  return isArray(elements[0]);\n}\nfunction prepareMorphBatches(one, many) {\n  var batches = [];\n  var batchCount = one.length;\n  for (var i = 0; i < batchCount; i++) {\n    batches.push({\n      one: one[i],\n      many: []\n    });\n  }\n  for (var i = 0; i < many.length; i++) {\n    var len = many[i].length;\n    var k = void 0;\n    for (k = 0; k < len; k++) {\n      batches[k % batchCount].many.push(many[i][k]);\n    }\n  }\n  var off = 0;\n  // If one has more paths than each one of many. average them.\n  for (var i = batchCount - 1; i >= 0; i--) {\n    if (!batches[i].many.length) {\n      var moveFrom = batches[off].many;\n      if (moveFrom.length <= 1) {\n        // Not enough\n        // Start from the first one.\n        if (off) {\n          off = 0;\n        } else {\n          return batches;\n        }\n      }\n      var len = moveFrom.length;\n      var mid = Math.ceil(len / 2);\n      batches[i].many = moveFrom.slice(mid, len);\n      batches[off].many = moveFrom.slice(0, mid);\n      off++;\n    }\n  }\n  return batches;\n}\nvar pathDividers = {\n  clone: function (params) {\n    var ret = [];\n    // Fitting the alpha\n    var approxOpacity = 1 - Math.pow(1 - params.path.style.opacity, 1 / params.count);\n    for (var i = 0; i < params.count; i++) {\n      var cloned = clonePath(params.path);\n      cloned.setStyle('opacity', approxOpacity);\n      ret.push(cloned);\n    }\n    return ret;\n  },\n  // Use the default divider\n  split: null\n};\nexport function applyMorphAnimation(from, to, divideShape, seriesModel, dataIndex, animateOtherProps) {\n  if (!from.length || !to.length) {\n    return;\n  }\n  var updateAnimationCfg = getAnimationConfig('update', seriesModel, dataIndex);\n  if (!(updateAnimationCfg && updateAnimationCfg.duration > 0)) {\n    return;\n  }\n  var animationDelay = seriesModel.getModel('universalTransition').get('delay');\n  var animationCfg = Object.assign({\n    // Need to setToFinal so the further calculation based on the style can be correct.\n    // Like emphasis color.\n    setToFinal: true\n  }, updateAnimationCfg);\n  var many;\n  var one;\n  if (isMultiple(from)) {\n    // manyToOne\n    many = from;\n    one = to;\n  }\n  if (isMultiple(to)) {\n    // oneToMany\n    many = to;\n    one = from;\n  }\n  function morphOneBatch(batch, fromIsMany, animateIndex, animateCount, forceManyOne) {\n    var batchMany = batch.many;\n    var batchOne = batch.one;\n    if (batchMany.length === 1 && !forceManyOne) {\n      // Is one to one\n      var batchFrom = fromIsMany ? batchMany[0] : batchOne;\n      var batchTo = fromIsMany ? batchOne : batchMany[0];\n      if (isCombineMorphing(batchFrom)) {\n        // Keep doing combine animation.\n        morphOneBatch({\n          many: [batchFrom],\n          one: batchTo\n        }, true, animateIndex, animateCount, true);\n      } else {\n        var individualAnimationCfg = animationDelay ? defaults({\n          delay: animationDelay(animateIndex, animateCount)\n        }, animationCfg) : animationCfg;\n        morphPath(batchFrom, batchTo, individualAnimationCfg);\n        animateOtherProps(batchFrom, batchTo, batchFrom, batchTo, individualAnimationCfg);\n      }\n    } else {\n      var separateAnimationCfg = defaults({\n        dividePath: pathDividers[divideShape],\n        individualDelay: animationDelay && function (idx, count, fromPath, toPath) {\n          return animationDelay(idx + animateIndex, animateCount);\n        }\n      }, animationCfg);\n      var _a = fromIsMany ? combineMorph(batchMany, batchOne, separateAnimationCfg) : separateMorph(batchOne, batchMany, separateAnimationCfg),\n        fromIndividuals = _a.fromIndividuals,\n        toIndividuals = _a.toIndividuals;\n      var count = fromIndividuals.length;\n      for (var k = 0; k < count; k++) {\n        var individualAnimationCfg = animationDelay ? defaults({\n          delay: animationDelay(k, count)\n        }, animationCfg) : animationCfg;\n        animateOtherProps(fromIndividuals[k], toIndividuals[k], fromIsMany ? batchMany[k] : batch.one, fromIsMany ? batch.one : batchMany[k], individualAnimationCfg);\n      }\n    }\n  }\n  var fromIsMany = many ? many === from\n  // Is one to one. If the path number not match. also needs do merge and separate morphing.\n  : from.length > to.length;\n  var morphBatches = many ? prepareMorphBatches(one, many) : prepareMorphBatches(fromIsMany ? to : from, [fromIsMany ? from : to]);\n  var animateCount = 0;\n  for (var i = 0; i < morphBatches.length; i++) {\n    animateCount += morphBatches[i].many.length;\n  }\n  var animateIndex = 0;\n  for (var i = 0; i < morphBatches.length; i++) {\n    morphOneBatch(morphBatches[i], fromIsMany, animateIndex, animateCount);\n    animateIndex += morphBatches[i].many.length;\n  }\n}\nexport function getPathList(elements) {\n  if (!elements) {\n    return [];\n  }\n  if (isArray(elements)) {\n    var pathList_1 = [];\n    for (var i = 0; i < elements.length; i++) {\n      pathList_1.push(getPathList(elements[i]));\n    }\n    return pathList_1;\n  }\n  var pathList = [];\n  elements.traverse(function (el) {\n    if (el instanceof Path && !el.disableMorphing && !el.invisible && !el.ignore) {\n      pathList.push(el);\n    }\n  });\n  return pathList;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Universal transitions that can animate between any shapes(series) and any properties in any amounts.\nimport { SERIES_UNIVERSAL_TRANSITION_PROP } from '../model/Series.js';\nimport { createHashMap, each, map, filter, isArray, extend } from 'zrender/lib/core/util.js';\nimport { applyMorphAnimation, getPathList } from './morphTransitionHelper.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { initProps } from '../util/graphic.js';\nimport DataDiffer from '../data/DataDiffer.js';\nimport { makeInner, normalizeToArray } from '../util/model.js';\nimport { warn } from '../util/log.js';\nimport { getAnimationConfig, getOldStyle } from './basicTransition.js';\nimport Displayable from 'zrender/lib/graphic/Displayable.js';\nvar DATA_COUNT_THRESHOLD = 1e4;\nvar TRANSITION_NONE = 0;\nvar TRANSITION_P2C = 1;\nvar TRANSITION_C2P = 2;\n;\nvar getUniversalTransitionGlobalStore = makeInner();\nfunction getDimension(data, visualDimension) {\n  var dimensions = data.dimensions;\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = data.getDimensionInfo(dimensions[i]);\n    if (dimInfo && dimInfo.otherDims[visualDimension] === 0) {\n      return dimensions[i];\n    }\n  }\n}\n// get value by dimension. (only get value of itemGroupId or childGroupId, so convert it to string)\nfunction getValueByDimension(data, dataIndex, dimension) {\n  var dimInfo = data.getDimensionInfo(dimension);\n  var dimOrdinalMeta = dimInfo && dimInfo.ordinalMeta;\n  if (dimInfo) {\n    var value = data.get(dimInfo.name, dataIndex);\n    if (dimOrdinalMeta) {\n      return dimOrdinalMeta.categories[value] || value + '';\n    }\n    return value + '';\n  }\n}\nfunction getGroupId(data, dataIndex, dataGroupId, isChild) {\n  // try to get groupId from encode\n  var visualDimension = isChild ? 'itemChildGroupId' : 'itemGroupId';\n  var groupIdDim = getDimension(data, visualDimension);\n  if (groupIdDim) {\n    var groupId = getValueByDimension(data, dataIndex, groupIdDim);\n    return groupId;\n  }\n  // try to get groupId from raw data item\n  var rawDataItem = data.getRawDataItem(dataIndex);\n  var property = isChild ? 'childGroupId' : 'groupId';\n  if (rawDataItem && rawDataItem[property]) {\n    return rawDataItem[property] + '';\n  }\n  // fallback\n  if (isChild) {\n    return;\n  }\n  // try to use series.dataGroupId as groupId, otherwise use dataItem's id as groupId\n  return dataGroupId || data.getId(dataIndex);\n}\n// flatten all data items from different serieses into one arrary\nfunction flattenDataDiffItems(list) {\n  var items = [];\n  each(list, function (seriesInfo) {\n    var data = seriesInfo.data;\n    var dataGroupId = seriesInfo.dataGroupId;\n    if (data.count() > DATA_COUNT_THRESHOLD) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('Universal transition is disabled on large data > 10k.');\n      }\n      return;\n    }\n    var indices = data.getIndices();\n    for (var dataIndex = 0; dataIndex < indices.length; dataIndex++) {\n      items.push({\n        data: data,\n        groupId: getGroupId(data, dataIndex, dataGroupId, false),\n        childGroupId: getGroupId(data, dataIndex, dataGroupId, true),\n        divide: seriesInfo.divide,\n        dataIndex: dataIndex\n      });\n    }\n  });\n  return items;\n}\nfunction fadeInElement(newEl, newSeries, newIndex) {\n  newEl.traverse(function (el) {\n    if (el instanceof Path) {\n      // TODO use fade in animation for target element.\n      initProps(el, {\n        style: {\n          opacity: 0\n        }\n      }, newSeries, {\n        dataIndex: newIndex,\n        isFrom: true\n      });\n    }\n  });\n}\nfunction removeEl(el) {\n  if (el.parent) {\n    // Bake parent transform to element.\n    // So it can still have proper transform to transition after it's removed.\n    var computedTransform = el.getComputedTransform();\n    el.setLocalTransform(computedTransform);\n    el.parent.remove(el);\n  }\n}\nfunction stopAnimation(el) {\n  el.stopAnimation();\n  if (el.isGroup) {\n    el.traverse(function (child) {\n      child.stopAnimation();\n    });\n  }\n}\nfunction animateElementStyles(el, dataIndex, seriesModel) {\n  var animationConfig = getAnimationConfig('update', seriesModel, dataIndex);\n  animationConfig && el.traverse(function (child) {\n    if (child instanceof Displayable) {\n      var oldStyle = getOldStyle(child);\n      if (oldStyle) {\n        child.animateFrom({\n          style: oldStyle\n        }, animationConfig);\n      }\n    }\n  });\n}\nfunction isAllIdSame(oldDiffItems, newDiffItems) {\n  var len = oldDiffItems.length;\n  if (len !== newDiffItems.length) {\n    return false;\n  }\n  for (var i = 0; i < len; i++) {\n    var oldItem = oldDiffItems[i];\n    var newItem = newDiffItems[i];\n    if (oldItem.data.getId(oldItem.dataIndex) !== newItem.data.getId(newItem.dataIndex)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction transitionBetween(oldList, newList, api) {\n  var oldDiffItems = flattenDataDiffItems(oldList);\n  var newDiffItems = flattenDataDiffItems(newList);\n  function updateMorphingPathProps(from, to, rawFrom, rawTo, animationCfg) {\n    if (rawFrom || from) {\n      to.animateFrom({\n        style: rawFrom && rawFrom !== from\n        // dividingMethod like clone may override the style(opacity)\n        // So extend it to raw style.\n        ? extend(extend({}, rawFrom.style), from.style) : from.style\n      }, animationCfg);\n    }\n  }\n  var hasMorphAnimation = false;\n  /**\n   * With groupId and childGroupId, we can build parent-child relationships between dataItems.\n   * However, we should mind the parent-child \"direction\" between old and new options.\n   *\n   * For example, suppose we have two dataItems from two series.data:\n   *\n   * dataA: [                          dataB: [\n   *   {                                 {\n   *     value: 5,                         value: 3,\n   *     groupId: 'creatures',             groupId: 'animals',\n   *     childGroupId: 'animals'           childGroupId: 'dogs'\n   *   },                                },\n   *   ...                               ...\n   * ]                                 ]\n   *\n   * where dataA is belong to optionA and dataB is belong to optionB.\n   *\n   * When we `setOption(optionB)` from optionA, we choose childGroupId of dataItemA and groupId of\n   * dataItemB as keys so the two keys are matched (both are 'animals'), then universalTransition\n   * will work. This derection is \"parent -> child\".\n   *\n   * If we `setOption(optionA)` from optionB, we also choose groupId of dataItemB and childGroupId\n   * of dataItemA as keys and universalTransition will work. This derection is \"child -> parent\".\n   *\n   * If there is no childGroupId specified, which means no multiLevelDrillDown/Up is needed and no\n   * parent-child relationship exists. This direction is \"none\".\n   *\n   * So we need to know whether to use groupId or childGroupId as the key when we call the keyGetter\n   * functions. Thus, we need to decide the direction first.\n   *\n   * The rule is:\n   *\n   * if (all childGroupIds in oldDiffItems and all groupIds in newDiffItems have common value) {\n   *   direction = 'parent -> child';\n   * } else if (all groupIds in oldDiffItems and all childGroupIds in newDiffItems have common value) {\n   *   direction = 'child -> parent';\n   * } else {\n   *   direction = 'none';\n   * }\n   */\n  var direction = TRANSITION_NONE;\n  // find all groupIds and childGroupIds from oldDiffItems\n  var oldGroupIds = createHashMap();\n  var oldChildGroupIds = createHashMap();\n  oldDiffItems.forEach(function (item) {\n    item.groupId && oldGroupIds.set(item.groupId, true);\n    item.childGroupId && oldChildGroupIds.set(item.childGroupId, true);\n  });\n  // traverse newDiffItems and decide the direction according to the rule\n  for (var i = 0; i < newDiffItems.length; i++) {\n    var newGroupId = newDiffItems[i].groupId;\n    if (oldChildGroupIds.get(newGroupId)) {\n      direction = TRANSITION_P2C;\n      break;\n    }\n    var newChildGroupId = newDiffItems[i].childGroupId;\n    if (newChildGroupId && oldGroupIds.get(newChildGroupId)) {\n      direction = TRANSITION_C2P;\n      break;\n    }\n  }\n  function createKeyGetter(isOld, onlyGetId) {\n    return function (diffItem) {\n      var data = diffItem.data;\n      var dataIndex = diffItem.dataIndex;\n      // TODO if specified dim\n      if (onlyGetId) {\n        return data.getId(dataIndex);\n      }\n      if (isOld) {\n        return direction === TRANSITION_P2C ? diffItem.childGroupId : diffItem.groupId;\n      } else {\n        return direction === TRANSITION_C2P ? diffItem.childGroupId : diffItem.groupId;\n      }\n    };\n  }\n  // Use id if it's very likely to be an one to one animation\n  // It's more robust than groupId\n  // TODO Check if key dimension is specified.\n  var useId = isAllIdSame(oldDiffItems, newDiffItems);\n  var isElementStillInChart = {};\n  if (!useId) {\n    // We may have different diff strategy with basicTransition if we use other dimension as key.\n    // If so, we can't simply check if oldEl is same with newEl. We need a map to check if oldEl is still being used in the new chart.\n    // We can't use the elements that already being morphed. Let it keep it's original basic transition.\n    for (var i = 0; i < newDiffItems.length; i++) {\n      var newItem = newDiffItems[i];\n      var el = newItem.data.getItemGraphicEl(newItem.dataIndex);\n      if (el) {\n        isElementStillInChart[el.id] = true;\n      }\n    }\n  }\n  function updateOneToOne(newIndex, oldIndex) {\n    var oldItem = oldDiffItems[oldIndex];\n    var newItem = newDiffItems[newIndex];\n    var newSeries = newItem.data.hostModel;\n    // TODO Mark this elements is morphed and don't morph them anymore\n    var oldEl = oldItem.data.getItemGraphicEl(oldItem.dataIndex);\n    var newEl = newItem.data.getItemGraphicEl(newItem.dataIndex);\n    // Can't handle same elements.\n    if (oldEl === newEl) {\n      newEl && animateElementStyles(newEl, newItem.dataIndex, newSeries);\n      return;\n    }\n    if (\n    // We can't use the elements that already being morphed\n    oldEl && isElementStillInChart[oldEl.id]) {\n      return;\n    }\n    if (newEl) {\n      // TODO: If keep animating the group in case\n      // some of the elements don't want to be morphed.\n      // TODO Label?\n      stopAnimation(newEl);\n      if (oldEl) {\n        stopAnimation(oldEl);\n        // If old element is doing leaving animation. stop it and remove it immediately.\n        removeEl(oldEl);\n        hasMorphAnimation = true;\n        applyMorphAnimation(getPathList(oldEl), getPathList(newEl), newItem.divide, newSeries, newIndex, updateMorphingPathProps);\n      } else {\n        fadeInElement(newEl, newSeries, newIndex);\n      }\n    }\n    // else keep oldEl leaving animation.\n  }\n\n  new DataDiffer(oldDiffItems, newDiffItems, createKeyGetter(true, useId), createKeyGetter(false, useId), null, 'multiple').update(updateOneToOne).updateManyToOne(function (newIndex, oldIndices) {\n    var newItem = newDiffItems[newIndex];\n    var newData = newItem.data;\n    var newSeries = newData.hostModel;\n    var newEl = newData.getItemGraphicEl(newItem.dataIndex);\n    var oldElsList = filter(map(oldIndices, function (idx) {\n      return oldDiffItems[idx].data.getItemGraphicEl(oldDiffItems[idx].dataIndex);\n    }), function (oldEl) {\n      return oldEl && oldEl !== newEl && !isElementStillInChart[oldEl.id];\n    });\n    if (newEl) {\n      stopAnimation(newEl);\n      if (oldElsList.length) {\n        // If old element is doing leaving animation. stop it and remove it immediately.\n        each(oldElsList, function (oldEl) {\n          stopAnimation(oldEl);\n          removeEl(oldEl);\n        });\n        hasMorphAnimation = true;\n        applyMorphAnimation(getPathList(oldElsList), getPathList(newEl), newItem.divide, newSeries, newIndex, updateMorphingPathProps);\n      } else {\n        fadeInElement(newEl, newSeries, newItem.dataIndex);\n      }\n    }\n    // else keep oldEl leaving animation.\n  }).updateOneToMany(function (newIndices, oldIndex) {\n    var oldItem = oldDiffItems[oldIndex];\n    var oldEl = oldItem.data.getItemGraphicEl(oldItem.dataIndex);\n    // We can't use the elements that already being morphed\n    if (oldEl && isElementStillInChart[oldEl.id]) {\n      return;\n    }\n    var newElsList = filter(map(newIndices, function (idx) {\n      return newDiffItems[idx].data.getItemGraphicEl(newDiffItems[idx].dataIndex);\n    }), function (el) {\n      return el && el !== oldEl;\n    });\n    var newSeris = newDiffItems[newIndices[0]].data.hostModel;\n    if (newElsList.length) {\n      each(newElsList, function (newEl) {\n        return stopAnimation(newEl);\n      });\n      if (oldEl) {\n        stopAnimation(oldEl);\n        // If old element is doing leaving animation. stop it and remove it immediately.\n        removeEl(oldEl);\n        hasMorphAnimation = true;\n        applyMorphAnimation(getPathList(oldEl), getPathList(newElsList), oldItem.divide,\n        // Use divide on old.\n        newSeris, newIndices[0], updateMorphingPathProps);\n      } else {\n        each(newElsList, function (newEl) {\n          return fadeInElement(newEl, newSeris, newIndices[0]);\n        });\n      }\n    }\n    // else keep oldEl leaving animation.\n  }).updateManyToMany(function (newIndices, oldIndices) {\n    // If two data are same and both have groupId.\n    // Normally they should be diff by id.\n    new DataDiffer(oldIndices, newIndices, function (rawIdx) {\n      return oldDiffItems[rawIdx].data.getId(oldDiffItems[rawIdx].dataIndex);\n    }, function (rawIdx) {\n      return newDiffItems[rawIdx].data.getId(newDiffItems[rawIdx].dataIndex);\n    }).update(function (newIndex, oldIndex) {\n      // Use the original index\n      updateOneToOne(newIndices[newIndex], oldIndices[oldIndex]);\n    }).execute();\n  }).execute();\n  if (hasMorphAnimation) {\n    each(newList, function (_a) {\n      var data = _a.data;\n      var seriesModel = data.hostModel;\n      var view = seriesModel && api.getViewOfSeriesModel(seriesModel);\n      var animationCfg = getAnimationConfig('update', seriesModel, 0); // use 0 index.\n      if (view && seriesModel.isAnimationEnabled() && animationCfg && animationCfg.duration > 0) {\n        view.group.traverse(function (el) {\n          if (el instanceof Path && !el.animators.length) {\n            // We can't accept there still exists element that has no animation\n            // if universalTransition is enabled\n            el.animateFrom({\n              style: {\n                opacity: 0\n              }\n            }, animationCfg);\n          }\n        });\n      }\n    });\n  }\n}\nfunction getSeriesTransitionKey(series) {\n  var seriesKey = series.getModel('universalTransition').get('seriesKey');\n  if (!seriesKey) {\n    // Use series id by default.\n    return series.id;\n  }\n  return seriesKey;\n}\nfunction convertArraySeriesKeyToString(seriesKey) {\n  if (isArray(seriesKey)) {\n    // Order independent.\n    return seriesKey.sort().join(',');\n  }\n  return seriesKey;\n}\nfunction getDivideShapeFromData(data) {\n  if (data.hostModel) {\n    return data.hostModel.getModel('universalTransition').get('divideShape');\n  }\n}\nfunction findTransitionSeriesBatches(globalStore, params) {\n  var updateBatches = createHashMap();\n  var oldDataMap = createHashMap();\n  // Map that only store key in array seriesKey.\n  // Which is used to query the old data when transition from one to multiple series.\n  var oldDataMapForSplit = createHashMap();\n  each(globalStore.oldSeries, function (series, idx) {\n    var oldDataGroupId = globalStore.oldDataGroupIds[idx];\n    var oldData = globalStore.oldData[idx];\n    var transitionKey = getSeriesTransitionKey(series);\n    var transitionKeyStr = convertArraySeriesKeyToString(transitionKey);\n    oldDataMap.set(transitionKeyStr, {\n      dataGroupId: oldDataGroupId,\n      data: oldData\n    });\n    if (isArray(transitionKey)) {\n      // Same key can't in different array seriesKey.\n      each(transitionKey, function (key) {\n        oldDataMapForSplit.set(key, {\n          key: transitionKeyStr,\n          dataGroupId: oldDataGroupId,\n          data: oldData\n        });\n      });\n    }\n  });\n  function checkTransitionSeriesKeyDuplicated(transitionKeyStr) {\n    if (updateBatches.get(transitionKeyStr)) {\n      warn(\"Duplicated seriesKey in universalTransition \" + transitionKeyStr);\n    }\n  }\n  each(params.updatedSeries, function (series) {\n    if (series.isUniversalTransitionEnabled() && series.isAnimationEnabled()) {\n      var newDataGroupId = series.get('dataGroupId');\n      var newData = series.getData();\n      var transitionKey = getSeriesTransitionKey(series);\n      var transitionKeyStr = convertArraySeriesKeyToString(transitionKey);\n      // Only transition between series with same id.\n      var oldData = oldDataMap.get(transitionKeyStr);\n      // string transition key is the best match.\n      if (oldData) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkTransitionSeriesKeyDuplicated(transitionKeyStr);\n        }\n        // TODO check if data is same?\n        updateBatches.set(transitionKeyStr, {\n          oldSeries: [{\n            dataGroupId: oldData.dataGroupId,\n            divide: getDivideShapeFromData(oldData.data),\n            data: oldData.data\n          }],\n          newSeries: [{\n            dataGroupId: newDataGroupId,\n            divide: getDivideShapeFromData(newData),\n            data: newData\n          }]\n        });\n      } else {\n        // Transition from multiple series.\n        // e.g. 'female', 'male' -> ['female', 'male']\n        if (isArray(transitionKey)) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkTransitionSeriesKeyDuplicated(transitionKeyStr);\n          }\n          var oldSeries_1 = [];\n          each(transitionKey, function (key) {\n            var oldData = oldDataMap.get(key);\n            if (oldData.data) {\n              oldSeries_1.push({\n                dataGroupId: oldData.dataGroupId,\n                divide: getDivideShapeFromData(oldData.data),\n                data: oldData.data\n              });\n            }\n          });\n          if (oldSeries_1.length) {\n            updateBatches.set(transitionKeyStr, {\n              oldSeries: oldSeries_1,\n              newSeries: [{\n                dataGroupId: newDataGroupId,\n                data: newData,\n                divide: getDivideShapeFromData(newData)\n              }]\n            });\n          }\n        } else {\n          // Try transition to multiple series.\n          // e.g. ['female', 'male'] -> 'female', 'male'\n          var oldData_1 = oldDataMapForSplit.get(transitionKey);\n          if (oldData_1) {\n            var batch = updateBatches.get(oldData_1.key);\n            if (!batch) {\n              batch = {\n                oldSeries: [{\n                  dataGroupId: oldData_1.dataGroupId,\n                  data: oldData_1.data,\n                  divide: getDivideShapeFromData(oldData_1.data)\n                }],\n                newSeries: []\n              };\n              updateBatches.set(oldData_1.key, batch);\n            }\n            batch.newSeries.push({\n              dataGroupId: newDataGroupId,\n              data: newData,\n              divide: getDivideShapeFromData(newData)\n            });\n          }\n        }\n      }\n    }\n  });\n  return updateBatches;\n}\nfunction querySeries(series, finder) {\n  for (var i = 0; i < series.length; i++) {\n    var found = finder.seriesIndex != null && finder.seriesIndex === series[i].seriesIndex || finder.seriesId != null && finder.seriesId === series[i].id;\n    if (found) {\n      return i;\n    }\n  }\n}\nfunction transitionSeriesFromOpt(transitionOpt, globalStore, params, api) {\n  var from = [];\n  var to = [];\n  each(normalizeToArray(transitionOpt.from), function (finder) {\n    var idx = querySeries(globalStore.oldSeries, finder);\n    if (idx >= 0) {\n      from.push({\n        dataGroupId: globalStore.oldDataGroupIds[idx],\n        data: globalStore.oldData[idx],\n        // TODO can specify divideShape in transition.\n        divide: getDivideShapeFromData(globalStore.oldData[idx]),\n        groupIdDim: finder.dimension\n      });\n    }\n  });\n  each(normalizeToArray(transitionOpt.to), function (finder) {\n    var idx = querySeries(params.updatedSeries, finder);\n    if (idx >= 0) {\n      var data = params.updatedSeries[idx].getData();\n      to.push({\n        dataGroupId: globalStore.oldDataGroupIds[idx],\n        data: data,\n        divide: getDivideShapeFromData(data),\n        groupIdDim: finder.dimension\n      });\n    }\n  });\n  if (from.length > 0 && to.length > 0) {\n    transitionBetween(from, to, api);\n  }\n}\nexport function installUniversalTransition(registers) {\n  registers.registerUpdateLifecycle('series:beforeupdate', function (ecMOdel, api, params) {\n    each(normalizeToArray(params.seriesTransition), function (transOpt) {\n      each(normalizeToArray(transOpt.to), function (finder) {\n        var series = params.updatedSeries;\n        for (var i = 0; i < series.length; i++) {\n          if (finder.seriesIndex != null && finder.seriesIndex === series[i].seriesIndex || finder.seriesId != null && finder.seriesId === series[i].id) {\n            series[i][SERIES_UNIVERSAL_TRANSITION_PROP] = true;\n          }\n        }\n      });\n    });\n  });\n  registers.registerUpdateLifecycle('series:transition', function (ecModel, api, params) {\n    // TODO api provide an namespace that can save stuff per instance\n    var globalStore = getUniversalTransitionGlobalStore(api);\n    // TODO multiple to multiple series.\n    if (globalStore.oldSeries && params.updatedSeries && params.optionChanged) {\n      // TODO transitionOpt was used in an old implementation and can be removed now\n      // Use give transition config if its' give;\n      var transitionOpt = params.seriesTransition;\n      if (transitionOpt) {\n        each(normalizeToArray(transitionOpt), function (opt) {\n          transitionSeriesFromOpt(opt, globalStore, params, api);\n        });\n      } else {\n        // Else guess from series based on transition series key.\n        var updateBatches_1 = findTransitionSeriesBatches(globalStore, params);\n        each(updateBatches_1.keys(), function (key) {\n          var batch = updateBatches_1.get(key);\n          transitionBetween(batch.oldSeries, batch.newSeries, api);\n        });\n      }\n      // Reset\n      each(params.updatedSeries, function (series) {\n        // Reset;\n        if (series[SERIES_UNIVERSAL_TRANSITION_PROP]) {\n          series[SERIES_UNIVERSAL_TRANSITION_PROP] = false;\n        }\n      });\n    }\n    // Save all series of current update. Not only the updated one.\n    var allSeries = ecModel.getSeries();\n    var savedSeries = globalStore.oldSeries = [];\n    var savedDataGroupIds = globalStore.oldDataGroupIds = [];\n    var savedData = globalStore.oldData = [];\n    for (var i = 0; i < allSeries.length; i++) {\n      var data = allSeries[i].getData();\n      // Only save the data that can have transition.\n      // Avoid large data costing too much extra memory\n      if (data.count() < DATA_COUNT_THRESHOLD) {\n        savedSeries.push(allSeries[i]);\n        savedDataGroupIds.push(allSeries[i].get('dataGroupId'));\n        savedData.push(data);\n      }\n    }\n  });\n}"],"names":["getCenterCoord","view","point","pointToProjected","pointToData","updateCenterAndZoom","payload","zoomLimit","api","previousZoom","getZoom","center","getCenter","zoom","projectedToPoint","dataToPoint","dx","dy","setCenter","zoomMin","min","zoomMax","max","Infinity","Math","scaleX","scaleY","fixX","originX","x","fixY","originY","y","updateTransform","setZoom","transitionStore","makeInner","getAnimationConfig","animationType","animatableModel","dataIndex","extraOpts","extraDelayParams","animationPayload","ecModel","updatePayload","getUpdatePayload","animation","animationEnabled","isAnimationEnabled","isUpdate","duration","easing","delay","retrieve2","getShallow","isFunction","config","animateOrSetProps","el","props","cb","during","removeOpt","isFrom","isObject","isRemove","stopAnimation","animationConfig","getAnimationDelayParams","animationDelay","animationEasing","animateConfig","done","force","setToFinal","scope","animateFrom","animateTo","attr","updateProps","initProps","isElementRemoved","__zr","i","animators","length","animator","removeElement","fadeOutDisplayable","removeTextContent","removeTextGuideLine","style","opacity","removeElementWithFadeOut","doRemove","parent","remove","isGroup","traverse","disp","saveOldStyle","oldStyle","getOldStyle","getStateToRestore","KEYFRAME_EXCLUDE_KEYS","stopPreviousKeyframeAnimationAndRestore","applyKeyframeAnimation","animationOpts","isArray","each","singleAnimationOpts","keyframes","stateToRestore","ELEMENT_ANIMATABLE_PROPS","targetPropName","sort","a","b","percent","kf","kfValues","propKeys","keys","filter","key","indexOf","animate","loop","targetName","stopTracks","savedTarget","whenWithKeys","start","LEGACY_TRANSFORM_PROPS_MAP","position","scale","origin","LEGACY_TRANSFORM_PROPS","reduce","TRANSFORMABLE_PROPS","obj","join","transitionInnerStore","getElementAnimationConfig","elOption","parentModel","animationProp","userDuring","bind","duringCall","extend","applyUpdateTransition","opts","isInit","clearStyle","hasAnimation","store","styleOpt","transFromProps","propsToSet","prepareTransformAllPropsFinal","prepareShapeOrExtraAllPropsFinal","prepareTransformTransitionFrom","prepareShapeOrExtraTransitionFrom","prepareStyleTransitionFrom","applyPropsDirectly","applyMiscProps","enterFromProps_1","propName","prop","enterFrom","applyPropsTransition","updateLeaveTo","dirty","markRedraw","leaveToProps","leaveTo","applyLeaveTransition","onRemove","parent_1","isTransitionAll","transition","allPropsFinal","useStyle","changeTarget","setStyle","model","hasOwn","silent","ignore","Displayable","invisible","Path","autoBatch","tmpDuringScope","transitionDuringAPI","setTransform","val","this","getTransform","setShape","shape","dirtyShape","getShape","dirtyStyle","getStyle","setExtra","extra","getExtra","latestUserDuring","scopeUserDuring","mainAttr","fromEl","attrOpt","transFromPropsInAttr","elPropsInAttr","attrTransition","transitionKeys","normalizeToArray","elVal","elPropsInAttrKeys","isNonStyleTransitionEnabled","allProps","allPropsInAttr","keysInAttr","cloneValue","process","legacyName","xyName","legacyArr","transFromStyleProps","fromElStyle","styleTransition","elTransition","getAnimationStyleProps","animationProps","animationStyleProps","styleKeys","optVal","isArrayLike","isFinite","isMultiple","elements","prepareMorphBatches","one","many","batches","batchCount","push","len","k","off","moveFrom","mid","ceil","slice","pathDividers","clone","params","ret","approxOpacity","pow","path","count","cloned","clonePath","split","applyMorphAnimation","from","to","divideShape","seriesModel","animateOtherProps","updateAnimationCfg","getModel","get","animationCfg","Object","assign","fromIsMany","morphBatches","animateCount","animateIndex","morphOneBatch","batch","forceManyOne","batchMany","batchOne","separateAnimationCfg","defaults","dividePath","individualDelay","idx","fromPath","toPath","_a","combineMorph","separateMorph","fromIndividuals","toIndividuals","individualAnimationCfg","batchFrom","batchTo","isCombineMorphing","morphPath","getPathList","pathList_1","pathList","disableMorphing","DATA_COUNT_THRESHOLD","TRANSITION_NONE","TRANSITION_P2C","TRANSITION_C2P","getUniversalTransitionGlobalStore","getDimension","data","visualDimension","dimensions","dimInfo","getDimensionInfo","otherDims","getValueByDimension","dimension","dimOrdinalMeta","ordinalMeta","value","name","categories","getGroupId","dataGroupId","isChild","groupIdDim","groupId","rawDataItem","getRawDataItem","property","getId","flattenDataDiffItems","list","items","seriesInfo","indices","getIndices","childGroupId","divide","fadeInElement","newEl","newSeries","newIndex","removeEl","computedTransform","getComputedTransform","setLocalTransform","child","animateElementStyles","isAllIdSame","oldDiffItems","newDiffItems","oldItem","newItem","transitionBetween","oldList","newList","updateMorphingPathProps","rawFrom","rawTo","hasMorphAnimation","direction","oldGroupIds","createHashMap","oldChildGroupIds","forEach","item","set","newGroupId","newChildGroupId","createKeyGetter","isOld","onlyGetId","diffItem","useId","isElementStillInChart","getItemGraphicEl","id","updateOneToOne","oldIndex","hostModel","oldEl","DataDiffer","update","updateManyToOne","oldIndices","newData","oldElsList","map","updateOneToMany","newIndices","newElsList","newSeris","updateManyToMany","rawIdx","execute","getViewOfSeriesModel","group","getSeriesTransitionKey","series","seriesKey","convertArraySeriesKeyToString","getDivideShapeFromData","findTransitionSeriesBatches","globalStore","updateBatches","oldDataMap","oldDataMapForSplit","oldSeries","oldDataGroupId","oldDataGroupIds","oldData","transitionKey","transitionKeyStr","updatedSeries","isUniversalTransitionEnabled","newDataGroupId","getData","oldSeries_1","oldData_1","querySeries","finder","found","seriesIndex","seriesId","transitionSeriesFromOpt","transitionOpt","installUniversalTransition","registers","registerUpdateLifecycle","ecMOdel","seriesTransition","transOpt","SERIES_UNIVERSAL_TRANSITION_PROP","optionChanged","opt","updateBatches_1","allSeries","getSeries","savedSeries","savedDataGroupIds","savedData"],"sourceRoot":""}