{"version":3,"file":"static/client/js/chunk-vendors-bc050c32.7f21ecfb.js","mappings":"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","sources":["webpack://d1/./node_modules/dayjs/dayjs.min.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/cartesian3DLayout.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/evaluateBarSparseness.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/bar3DLayout.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/Bar3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/Bar3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/bar3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/GLViewHelper.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/sdfSprite.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/PointsMesh.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/PointsBuilder.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/createList.js","webpack://d1/./node_modules/echarts-gl/lib/chart/common/formatTooltip.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/FlowGLSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/Line2D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/vectorFieldParticle.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/VectorFieldParticleSurface.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/FlowGLView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/flowGL.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/createGraphFromNodeEdge.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/GraphGLSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/forceAtlas2.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/ForceAtlas2GPU.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/forceAtlas2Worker.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/ForceAtlas2.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/GraphGLView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/graphGL.js","webpack://d1/./node_modules/echarts-gl/lib/chart/line3D/Line3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/line3D/Line3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/line3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/line3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/lines3DLayout.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/Lines3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/shader/trail2.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/TrailMesh2.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/Lines3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/lines3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/linesGL/LinesGLSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/linesGL/LinesGLView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/linesGL/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/linesGL.js","webpack://d1/./node_modules/echarts-gl/lib/chart/map3D/Map3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/map3D/Map3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/map3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/map3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/polygons3D/Polygons3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/polygons3D/Polygons3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/polygons3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/polygons3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatter3D/Scatter3DSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatter3D/Scatter3DView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatter3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatter3D.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatterGL/ScatterGLSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatterGL/ScatterGLView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatterGL/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/scatterGL.js","webpack://d1/./node_modules/echarts-gl/lib/chart/surface/SurfaceSeries.js","webpack://d1/./node_modules/echarts-gl/lib/chart/surface/SurfaceView.js","webpack://d1/./node_modules/echarts-gl/lib/chart/surface/install.js","webpack://d1/./node_modules/echarts-gl/lib/chart/surface.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/Geo3DBuilder.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/LabelsBuilder.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/SceneHelper.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/componentLightMixin.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/componentPostEffectMixin.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/componentShadingMixin.js","webpack://d1/./node_modules/echarts-gl/lib/component/common/componentViewControlMixin.js","webpack://d1/./node_modules/echarts-gl/lib/component/geo3D.js","webpack://d1/./node_modules/echarts-gl/lib/component/geo3D/Geo3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/geo3D/Geo3DView.js","webpack://d1/./node_modules/echarts-gl/lib/component/geo3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/component/globe/GlobeModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/globe/atmosphere.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/component/globe/GlobeView.js","webpack://d1/./node_modules/echarts-gl/lib/coord/globe/Globe.js","webpack://d1/./node_modules/echarts-gl/lib/coord/globeCreator.js","webpack://d1/./node_modules/echarts-gl/lib/component/globe/install.js","webpack://d1/./node_modules/echarts-gl/lib/component/globe.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/Grid3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/Grid3DFace.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/Grid3DAxis.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/Grid3DView.js","webpack://d1/./node_modules/echarts-gl/lib/coord/grid3D/Cartesian3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/grid3D/Axis3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/grid3DCreator.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/Axis3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/axis3DDefault.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/createAxis3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/component/grid3D.js","webpack://d1/./node_modules/echarts-gl/lib/component/mapbox3D/Mapbox3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/mapbox3D/Mapbox3DLayer.js","webpack://d1/./node_modules/echarts-gl/lib/component/mapbox3D/Mapbox3DView.js","webpack://d1/./node_modules/echarts-gl/lib/coord/mapbox3D/Mapbox3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/mapbox3DCreator.js","webpack://d1/./node_modules/echarts-gl/lib/component/mapbox3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/component/mapbox3D.js","webpack://d1/./node_modules/echarts-gl/lib/component/maptalks3D/Maptalks3DModel.js","webpack://d1/./node_modules/echarts-gl/lib/component/maptalks3D/Maptalks3DLayer.js","webpack://d1/./node_modules/echarts-gl/lib/component/maptalks3D/Maptalks3DView.js","webpack://d1/./node_modules/echarts-gl/lib/coord/maptalks3D/Maptalks3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/maptalks3DCreator.js","webpack://d1/./node_modules/echarts-gl/lib/component/maptalks3D/install.js","webpack://d1/./node_modules/echarts-gl/lib/component/maptalks3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/geo3D/Geo3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/geo3DCreator.js","webpack://d1/./node_modules/echarts-gl/lib/coord/geo3D/geo3DModelMixin.js","webpack://d1/./node_modules/echarts-gl/lib/coord/mapServiceCommon/MapService3D.js","webpack://d1/./node_modules/echarts-gl/lib/coord/mapServiceCommon/createMapService3DCreator.js","webpack://d1/./node_modules/echarts-gl/lib/core/LayerGL.js","webpack://d1/./node_modules/echarts-gl/lib/core/ViewGL.js"],"sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","import * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\n\nfunction ifCrossZero(extent) {\n  var min = extent[0];\n  var max = extent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n\n;\n\nfunction cartesian3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData(); // var barOnPlane = seriesModel.get('onGridPlane');\n\n  var barSize = seriesModel.get('barSize');\n\n  if (barSize == null) {\n    var size = coordSys.size;\n    var barWidth;\n    var barDepth;\n    var xAxis = coordSys.getAxis('x');\n    var yAxis = coordSys.getAxis('y');\n\n    if (xAxis.type === 'category') {\n      barWidth = xAxis.getBandWidth() * 0.7;\n    } else {\n      // PENDING\n      barWidth = Math.round(size[0] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    if (yAxis.type === 'category') {\n      barDepth = yAxis.getBandWidth() * 0.7;\n    } else {\n      barDepth = Math.round(size[1] / Math.sqrt(data.count())) * 0.6;\n    }\n\n    barSize = [barWidth, barDepth];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var zAxisExtent = coordSys.getAxis('z').scale.getExtent();\n  var ifZAxisCrossZero = ifCrossZero(zAxisExtent);\n  var dims = ['x', 'y', 'z'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n  var isStacked = isDimensionStacked(data, dims[2]);\n  var valueDim = isStacked ? data.getCalculationInfo('stackResultDimension') : dims[2];\n  data.each(dims, function (x, y, z, idx) {\n    // TODO zAxis is inversed\n    // TODO On different plane.\n    var stackedValue = data.get(valueDim, idx);\n    var baseValue = isStacked ? stackedValue - z : ifZAxisCrossZero ? 0 : zAxisExtent[0];\n    var start = coordSys.dataToPoint([x, y, baseValue]);\n    var end = coordSys.dataToPoint([x, y, stackedValue]);\n    var height = vec3.dist(start, end); // PENDING When zAxis is not cross zero.\n\n    var dir = [0, end[1] < start[1] ? -1 : 1, 0];\n\n    if (Math.abs(height) === 0) {\n      // TODO\n      height = 0.1;\n    }\n\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nexport default cartesian3DLayout;","export default function (data, dimX, dimY) {\n  var xExtent = data.getDataExtent(dimX);\n  var yExtent = data.getDataExtent(dimY); // TODO Handle one data situation\n\n  var xSpan = xExtent[1] - xExtent[0] || xExtent[0];\n  var ySpan = yExtent[1] - yExtent[0] || yExtent[0];\n  var dimSize = 50;\n  var tmp = new Uint8Array(dimSize * dimSize);\n\n  for (var i = 0; i < data.count(); i++) {\n    var x = data.get(dimX, i);\n    var y = data.get(dimY, i);\n    var xIdx = Math.floor((x - xExtent[0]) / xSpan * (dimSize - 1));\n    var yIdx = Math.floor((y - yExtent[0]) / ySpan * (dimSize - 1));\n    var idx = yIdx * dimSize + xIdx;\n    tmp[idx] = tmp[idx] || 1;\n  }\n\n  var filledCount = 0;\n\n  for (var i = 0; i < tmp.length; i++) {\n    if (tmp[i]) {\n      filledCount++;\n    }\n  }\n\n  return filledCount / tmp.length;\n}\n;","import * as echarts from 'echarts/lib/echarts';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport cartesian3DLayout from './cartesian3DLayout';\nimport evaluateBarSparseness from './evaluateBarSparseness';\nvar vec3 = glmatrix.vec3;\nvar isDimensionStacked = echarts.helper.dataStack.isDimensionStacked;\n\nfunction globeLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var barSize = seriesModel.get('barSize');\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n\n  if (barSize == null) {\n    var perimeter = coordSys.radius * Math.PI;\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [perimeter / Math.sqrt(data.count() / fillRatio), perimeter / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0]; // TODO Stacked with minHeight.\n\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var dir = vec3.sub([], end, start);\n    vec3.normalize(dir, dir);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', Vector3.UP.array);\n}\n\nfunction geo3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n  var dims = ['lng', 'lat', 'alt'].map(function (coordDimName) {\n    return seriesModel.coordDimToDataDim(coordDimName)[0];\n  });\n\n  if (barSize == null) {\n    var size = Math.min(coordSys.size[0], coordSys.size[2]);\n    var fillRatio = evaluateBarSparseness(data, dims[0], dims[1]);\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else if (!echarts.util.isArray(barSize)) {\n    barSize = [barSize, barSize];\n  }\n\n  var dir = [0, 1, 0];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : coordSys.altitudeAxis.scale.getExtent()[0];\n    var height = Math.max(coordSys.altitudeAxis.dataToCoord(val), barMinHeight);\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nfunction mapService3DLayout(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var dimLng = seriesModel.coordDimToDataDim('lng')[0];\n  var dimLat = seriesModel.coordDimToDataDim('lat')[0];\n  var dimAlt = seriesModel.coordDimToDataDim('alt')[0];\n  var barSize = seriesModel.get('barSize');\n  var barMinHeight = seriesModel.get('minHeight') || 0;\n\n  if (barSize == null) {\n    var xExtent = data.getDataExtent(dimLng);\n    var yExtent = data.getDataExtent(dimLat);\n    var corner0 = coordSys.dataToPoint([xExtent[0], yExtent[0]]);\n    var corner1 = coordSys.dataToPoint([xExtent[1], yExtent[1]]);\n    var size = Math.min(Math.abs(corner0[0] - corner1[0]), Math.abs(corner0[1] - corner1[1])) || 1;\n    var fillRatio = evaluateBarSparseness(data, dimLng, dimLat); // PENDING, data density\n\n    barSize = [size / Math.sqrt(data.count() / fillRatio), size / Math.sqrt(data.count() / fillRatio)];\n  } else {\n    if (!echarts.util.isArray(barSize)) {\n      barSize = [barSize, barSize];\n    }\n\n    barSize[0] /= coordSys.getScale() / 16;\n    barSize[1] /= coordSys.getScale() / 16;\n  }\n\n  var dir = [0, 0, 1];\n  var dims = [dimLng, dimLat, dimAlt];\n  var valueDim = getValueDimension(data, dims);\n  data.each(dims, function (lng, lat, val, idx) {\n    var stackedValue = data.get(valueDim.dimension, idx);\n    var baseValue = valueDim.isStacked ? stackedValue - val : 0;\n    var start = coordSys.dataToPoint([lng, lat, baseValue]);\n    var end = coordSys.dataToPoint([lng, lat, stackedValue]);\n    var height = Math.max(end[2] - start[2], barMinHeight);\n    var size = [barSize[0], height, barSize[1]];\n    data.setItemLayout(idx, [start, dir, size]);\n  });\n  data.setLayout('orient', [1, 0, 0]);\n}\n\nfunction getValueDimension(data, dataDims) {\n  var isStacked = isDimensionStacked(data, dataDims[2]);\n  return {\n    dimension: isStacked ? data.getCalculationInfo('stackResultDimension') : dataDims[2],\n    isStacked: isStacked\n  };\n}\n\nexport default function registerBarLayout(registers) {\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('bar3D', function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var coordSysType = coordSys && coordSys.type;\n\n      if (coordSysType === 'globe') {\n        globeLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'cartesian3D') {\n        cartesian3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'geo3D') {\n        geo3DLayout(seriesModel, coordSys);\n      } else if (coordSysType === 'mapbox3D' || coordSysType === 'maptalks3D') {\n        mapService3DLayout(seriesModel, coordSys);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!coordSys) {\n            throw new Error('bar3D doesn\\'t have coordinate system.');\n          } else {\n            throw new Error('bar3D doesn\\'t support coordinate system ' + coordSys.type);\n          }\n        }\n      }\n    });\n  });\n}","import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar Bar3DSeries = echarts.SeriesModel.extend({\n  type: 'series.bar3D',\n  dependencies: ['globe'],\n  visualStyleAccessPathvisu: 'itemStyle',\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n\n    if (text == null) {\n      text = this.getData().get('z', dataIndex);\n    }\n\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    globeIndex: 0,\n    grid3DIndex: 0,\n    zlevel: -10,\n    // bevelSize, 0 has no bevel\n    bevelSize: 0,\n    // higher is smoother\n    bevelSmoothness: 2,\n    // Bar width and depth\n    // barSize: [1, 1],\n    // On grid plane when coordinateSystem is cartesian3D\n    onGridPlane: 'xy',\n    // Shading of globe\n    shading: 'color',\n    minHeight: 0,\n    itemStyle: {\n      opacity: 1\n    },\n    label: {\n      show: false,\n      distance: 2,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});\necharts.util.merge(Bar3DSeries.prototype, componentShadingMixin);\nexport default Bar3DSeries;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport BarsGeometry from '../../util/geometry/Bars3DGeometry';\nimport LabelsBuilder from '../../component/common/LabelsBuilder';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\nexport default echarts.ChartView.extend({\n  type: 'bar3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._api = api;\n    this._labelsBuilder = new LabelsBuilder(256, 256, api);\n    var self = this;\n\n    this._labelsBuilder.getLabelPosition = function (dataIndex, position, distance) {\n      if (self._data) {\n        var layout = self._data.getItemLayout(dataIndex);\n\n        var start = layout[0];\n        var dir = layout[1];\n        var height = layout[2][1];\n        return vec3.scaleAndAdd([], start, dir, distance + height);\n      } else {\n        return [0, 0];\n      }\n    }; // Give a large render order.\n\n\n    this._labelsBuilder.getMesh().renderOrder = 100;\n  },\n  render: function (seriesModel, ecModel, api) {\n    // Swap barMesh\n    var tmp = this._prevBarMesh;\n    this._prevBarMesh = this._barMesh;\n    this._barMesh = tmp;\n\n    if (!this._barMesh) {\n      this._barMesh = new graphicGL.Mesh({\n        geometry: new BarsGeometry(),\n        shadowDepthMaterial: new graphicGL.Material({\n          shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.sm.depth.vertex'), graphicGL.Shader.source('ecgl.sm.depth.fragment'))\n        }),\n        // Only cartesian3D enable culling\n        // FIXME Performance\n        culling: seriesModel.coordinateSystem.type === 'cartesian3D',\n        // Render after axes\n        renderOrder: 10,\n        // Render normal in normal pass\n        renderNormal: true\n      });\n    }\n\n    this.groupGL.remove(this._prevBarMesh);\n    this.groupGL.add(this._barMesh);\n    this.groupGL.add(this._labelsBuilder.getMesh());\n    var coordSys = seriesModel.coordinateSystem;\n\n    this._doRender(seriesModel, api);\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._barMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    this._data = seriesModel.getData();\n\n    this._labelsBuilder.updateData(this._data);\n\n    this._labelsBuilder.updateLabels();\n\n    this._updateAnimation(seriesModel);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevNormal', 'normal']], this._prevBarMesh, this._barMesh, seriesModel);\n  },\n  _doRender: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var shading = seriesModel.get('shading');\n    var enableNormal = shading !== 'color';\n    var self = this;\n    var barMesh = this._barMesh;\n    var shadingPrefix = 'ecgl.' + shading;\n\n    if (!barMesh.material || barMesh.material.shader.name !== shadingPrefix) {\n      barMesh.material = graphicGL.createMaterial(shadingPrefix, ['VERTEX_COLOR']);\n    }\n\n    graphicGL.setMaterialFromModel(shading, barMesh.material, seriesModel, api);\n    barMesh.geometry.enableNormal = enableNormal;\n    barMesh.geometry.resetOffset(); // Bevel settings\n\n    var bevelSize = seriesModel.get('bevelSize');\n    var bevelSegments = seriesModel.get('bevelSmoothness');\n    barMesh.geometry.bevelSegments = bevelSegments;\n    barMesh.geometry.bevelSize = bevelSize;\n    var colorArr = [];\n    var vertexColors = new Float32Array(data.count() * 4);\n    var colorOffset = 0;\n    var barCount = 0;\n    var hasTransparent = false;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        return;\n      }\n\n      var color = getItemVisualColor(data, idx);\n      var opacity = getItemVisualOpacity(data, idx);\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      graphicGL.parseColor(color, colorArr);\n      colorArr[3] *= opacity;\n      vertexColors[colorOffset++] = colorArr[0];\n      vertexColors[colorOffset++] = colorArr[1];\n      vertexColors[colorOffset++] = colorArr[2];\n      vertexColors[colorOffset++] = colorArr[3];\n\n      if (colorArr[3] > 0) {\n        barCount++;\n\n        if (colorArr[3] < 0.99) {\n          hasTransparent = true;\n        }\n      }\n    });\n    barMesh.geometry.setBarCount(barCount);\n    var orient = data.getLayout('orient'); // Map of dataIndex and barIndex.\n\n    var barIndexOfData = this._barIndexOfData = new Int32Array(data.count());\n    var barCount = 0;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        barIndexOfData[idx] = -1;\n        return;\n      }\n\n      var layout = data.getItemLayout(idx);\n      var start = layout[0];\n      var dir = layout[1];\n      var size = layout[2];\n      var idx4 = idx * 4;\n      colorArr[0] = vertexColors[idx4++];\n      colorArr[1] = vertexColors[idx4++];\n      colorArr[2] = vertexColors[idx4++];\n      colorArr[3] = vertexColors[idx4++];\n\n      if (colorArr[3] > 0) {\n        self._barMesh.geometry.addBar(start, dir, orient, size, colorArr, idx);\n\n        barIndexOfData[idx] = barCount++;\n      }\n    });\n    barMesh.geometry.dirty();\n    barMesh.geometry.updateBoundingBox();\n    var material = barMesh.material;\n    material.transparent = hasTransparent;\n    material.depthMask = !hasTransparent;\n    barMesh.geometry.sortTriangles = hasTransparent;\n\n    this._initHandler(seriesModel, api);\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var barMesh = this._barMesh;\n    var isCartesian3D = seriesModel.coordinateSystem.type === 'cartesian3D';\n    barMesh.seriesIndex = seriesModel.seriesIndex;\n    var lastDataIndex = -1;\n    barMesh.off('mousemove');\n    barMesh.off('mouseout');\n    barMesh.on('mousemove', function (e) {\n      var dataIndex = barMesh.geometry.getDataIndexOfVertex(e.triangle[0]);\n\n      if (dataIndex !== lastDataIndex) {\n        this._downplay(lastDataIndex);\n\n        this._highlight(dataIndex);\n\n        this._labelsBuilder.updateLabels([dataIndex]);\n\n        if (isCartesian3D) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: [data.get('x', dataIndex), data.get('y', dataIndex), data.get('z', dataIndex, true)]\n          });\n        }\n      }\n\n      lastDataIndex = dataIndex;\n      barMesh.dataIndex = dataIndex;\n    }, this);\n    barMesh.on('mouseout', function (e) {\n      this._downplay(lastDataIndex);\n\n      this._labelsBuilder.updateLabels();\n\n      lastDataIndex = -1;\n      barMesh.dataIndex = -1;\n\n      if (isCartesian3D) {\n        api.dispatchAction({\n          type: 'grid3DHideAxisPointer'\n        });\n      }\n    }, this);\n  },\n  _highlight: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var barIndex = this._barIndexOfData[dataIndex];\n\n    if (barIndex < 0) {\n      return;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var emphasisItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n    var emphasisColor = emphasisItemStyleModel.get('color');\n    var emphasisOpacity = emphasisItemStyleModel.get('opacity');\n\n    if (emphasisColor == null) {\n      var color = getItemVisualColor(data, dataIndex);\n      emphasisColor = echarts.color.lift(color, -0.4);\n    }\n\n    if (emphasisOpacity == null) {\n      emphasisOpacity = getItemVisualOpacity(data, dataIndex);\n    }\n\n    var colorArr = graphicGL.parseColor(emphasisColor);\n    colorArr[3] *= emphasisOpacity;\n\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n\n    this._api.getZr().refresh();\n  },\n  _downplay: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var barIndex = this._barIndexOfData[dataIndex];\n\n    if (barIndex < 0) {\n      return;\n    }\n\n    var color = getItemVisualColor(data, dataIndex);\n    var opacity = getItemVisualOpacity(data, dataIndex);\n    var colorArr = graphicGL.parseColor(color);\n    colorArr[3] *= opacity;\n\n    this._barMesh.geometry.setColor(barIndex, colorArr);\n\n    this._api.getZr().refresh();\n  },\n  highlight: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function (status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var self = this;\n\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        status === 'highlight' ? this._highlight(dataIdx) : this._downplay(dataIdx);\n      }, this);\n    } else {\n      data.each(function (dataIdx) {\n        status === 'highlight' ? self._highlight(dataIdx) : self._downplay(dataIdx);\n      });\n    }\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this._labelsBuilder.dispose();\n\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport registerBarLayout from './bar3DLayout';\nimport Bar3DSeries from './Bar3DSeries';\nimport Bar3DView from './Bar3DView';\nexport function install(registers) {\n  registers.registerChartView(Bar3DView);\n  registers.registerSeriesModel(Bar3DSeries);\n  registerBarLayout(registers);\n  registers.registerProcessor(function (ecModel, api) {\n    ecModel.eachSeriesByType('bar3d', function (seriesModel) {\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        return data.hasValue(idx);\n      });\n    });\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './bar3D/install';\nuse(install);","import * as matrix from 'zrender/lib/core/matrix';\nimport * as vector from 'zrender/lib/core/vector';\n\nfunction GLViewHelper(viewGL) {\n  this.viewGL = viewGL;\n}\n\nGLViewHelper.prototype.reset = function (seriesModel, api) {\n  this._updateCamera(api.getWidth(), api.getHeight(), api.getDevicePixelRatio());\n\n  this._viewTransform = matrix.create();\n  this.updateTransform(seriesModel, api);\n};\n\nGLViewHelper.prototype.updateTransform = function (seriesModel, api) {\n  var coordinateSystem = seriesModel.coordinateSystem;\n\n  if (coordinateSystem.getRoamTransform) {\n    matrix.invert(this._viewTransform, coordinateSystem.getRoamTransform());\n\n    this._setCameraTransform(this._viewTransform);\n\n    api.getZr().refresh();\n  }\n}; // Reimplement the dataToPoint of coordinate system.\n// Remove the effect of pan/zoom transform\n\n\nGLViewHelper.prototype.dataToPoint = function (coordSys, data, pt) {\n  pt = coordSys.dataToPoint(data, null, pt);\n  var viewTransform = this._viewTransform;\n\n  if (viewTransform) {\n    vector.applyTransform(pt, pt, viewTransform);\n  }\n};\n/**\n * Remove transform info in point.\n */\n\n\nGLViewHelper.prototype.removeTransformInPoint = function (pt) {\n  if (this._viewTransform) {\n    vector.applyTransform(pt, pt, this._viewTransform);\n  }\n\n  return pt;\n};\n/**\n * Return number\n */\n\n\nGLViewHelper.prototype.getZoom = function () {\n  if (this._viewTransform) {\n    var m = this._viewTransform;\n    return 1 / Math.max(Math.sqrt(m[0] * m[0] + m[1] * m[1]), Math.sqrt(m[2] * m[2] + m[3] * m[3]));\n  }\n\n  return 1;\n};\n\nGLViewHelper.prototype._setCameraTransform = function (m) {\n  var camera = this.viewGL.camera;\n  camera.position.set(m[4], m[5], 0);\n  camera.scale.set(Math.sqrt(m[0] * m[0] + m[1] * m[1]), Math.sqrt(m[2] * m[2] + m[3] * m[3]), 1);\n};\n\nGLViewHelper.prototype._updateCamera = function (width, height, dpr) {\n  // TODO, left, top, right, bottom\n  this.viewGL.setViewport(0, 0, width, height, dpr);\n  var camera = this.viewGL.camera;\n  camera.left = camera.top = 0;\n  camera.bottom = height;\n  camera.right = width;\n  camera.near = 0;\n  camera.far = 100;\n};\n\nexport default GLViewHelper;","export default \"@export ecgl.sdfSprite.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform float elapsedTime : 0;\\n\\nattribute vec3 position : POSITION;\\n\\n#ifdef VERTEX_SIZE\\nattribute float size;\\n#else\\nuniform float u_Size;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_FillColor: COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nattribute float prevSize;\\nuniform float percent : 1.0;\\n#endif\\n\\n\\n#ifdef POSITIONTEXTURE_ENABLED\\nuniform sampler2D positionTexture;\\n#endif\\n\\nvarying float v_Size;\\n\\nvoid main()\\n{\\n\\n#ifdef POSITIONTEXTURE_ENABLED\\n gl_Position = worldViewProjection * vec4(texture2D(positionTexture, position.xy).xy, -10.0, 1.0);\\n#else\\n\\n #ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n #else\\n vec3 pos = position;\\n #endif\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n#endif\\n\\n#ifdef VERTEX_SIZE\\n#ifdef VERTEX_ANIMATION\\n v_Size = mix(prevSize, size, percent);\\n#else\\n v_Size = size;\\n#endif\\n#else\\n v_Size = u_Size;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_FillColor;\\n #endif\\n\\n gl_PointSize = v_Size;\\n}\\n\\n@end\\n\\n@export ecgl.sdfSprite.fragment\\n\\nuniform vec4 color: [1, 1, 1, 1];\\nuniform vec4 strokeColor: [1, 1, 1, 1];\\nuniform float smoothing: 0.07;\\n\\nuniform float lineWidth: 0.0;\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\nvarying float v_Size;\\n\\nuniform sampler2D sprite;\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n gl_FragColor = color;\\n\\n vec4 _strokeColor = strokeColor;\\n\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n #endif\\n\\n#ifdef SPRITE_ENABLED\\n float d = texture2D(sprite, gl_PointCoord).r;\\n gl_FragColor.a *= smoothstep(0.5 - smoothing, 0.5 + smoothing, d);\\n\\n if (lineWidth > 0.0) {\\n float sLineWidth = lineWidth / 2.0;\\n\\n float outlineMaxValue0 = 0.5 + sLineWidth;\\n float outlineMaxValue1 = 0.5 + sLineWidth + smoothing;\\n float outlineMinValue0 = 0.5 - sLineWidth - smoothing;\\n float outlineMinValue1 = 0.5 - sLineWidth;\\n\\n if (d <= outlineMaxValue1 && d >= outlineMinValue0) {\\n float a = _strokeColor.a;\\n if (d <= outlineMinValue1) {\\n a = a * smoothstep(outlineMinValue0, outlineMinValue1, d);\\n }\\n else {\\n a = a * smoothstep(outlineMaxValue1, outlineMaxValue0, d);\\n }\\n gl_FragColor.rgb = mix(gl_FragColor.rgb * gl_FragColor.a, _strokeColor.rgb, a);\\n gl_FragColor.a = gl_FragColor.a * (1.0 - a) + a;\\n }\\n }\\n#endif\\n\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(gl_FragColor);\\n#endif\\n}\\n@end\";","import graphicGL from '../../util/graphicGL';\nimport verticesSortMixin from '../../util/geometry/verticesSortMixin';\nimport * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec4 = glmatrix.vec4;\nimport sdfSpriteGLSL from './sdfSprite.glsl.js';\ngraphicGL.Shader.import(sdfSpriteGLSL);\nvar PointsMesh = graphicGL.Mesh.extend(function () {\n  var geometry = new graphicGL.Geometry({\n    dynamic: true,\n    attributes: {\n      color: new graphicGL.Geometry.Attribute('color', 'float', 4, 'COLOR'),\n      position: new graphicGL.Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      size: new graphicGL.Geometry.Attribute('size', 'float', 1),\n      prevPosition: new graphicGL.Geometry.Attribute('prevPosition', 'float', 3),\n      prevSize: new graphicGL.Geometry.Attribute('prevSize', 'float', 1)\n    }\n  });\n  Object.assign(geometry, verticesSortMixin);\n  var material = new graphicGL.Material({\n    shader: graphicGL.createShader('ecgl.sdfSprite'),\n    transparent: true,\n    depthMask: false\n  });\n  material.enableTexture('sprite');\n  material.define('both', 'VERTEX_COLOR');\n  material.define('both', 'VERTEX_SIZE');\n  var sdfTexture = new graphicGL.Texture2D({\n    image: document.createElement('canvas'),\n    flipY: false\n  });\n  material.set('sprite', sdfTexture); // Custom pick methods.\n\n  geometry.pick = this._pick.bind(this);\n  return {\n    geometry: geometry,\n    material: material,\n    mode: graphicGL.Mesh.POINTS,\n    sizeScale: 1\n  };\n}, {\n  _pick: function (x, y, renderer, camera, renderable, out) {\n    var positionNDC = this._positionNDC;\n\n    if (!positionNDC) {\n      return;\n    }\n\n    var viewport = renderer.viewport;\n    var ndcScaleX = 2 / viewport.width;\n    var ndcScaleY = 2 / viewport.height; // From near to far. indices have been sorted.\n\n    for (var i = this.geometry.vertexCount - 1; i >= 0; i--) {\n      var idx;\n\n      if (!this.geometry.indices) {\n        idx = i;\n      } else {\n        idx = this.geometry.indices[i];\n      }\n\n      var cx = positionNDC[idx * 2];\n      var cy = positionNDC[idx * 2 + 1];\n      var size = this.geometry.attributes.size.get(idx) / this.sizeScale;\n      var halfSize = size / 2;\n\n      if (x > cx - halfSize * ndcScaleX && x < cx + halfSize * ndcScaleX && y > cy - halfSize * ndcScaleY && y < cy + halfSize * ndcScaleY) {\n        var point = new graphicGL.Vector3();\n        var pointWorld = new graphicGL.Vector3();\n        this.geometry.attributes.position.get(idx, point.array);\n        graphicGL.Vector3.transformMat4(pointWorld, point, this.worldTransform);\n        out.push({\n          vertexIndex: idx,\n          point: point,\n          pointWorld: pointWorld,\n          target: this,\n          distance: pointWorld.distance(camera.getWorldPosition())\n        });\n      }\n    }\n  },\n  updateNDCPosition: function (worldViewProjection, is2D, api) {\n    var positionNDC = this._positionNDC;\n    var geometry = this.geometry;\n\n    if (!positionNDC || positionNDC.length / 2 !== geometry.vertexCount) {\n      positionNDC = this._positionNDC = new Float32Array(geometry.vertexCount * 2);\n    }\n\n    var pos = vec4.create();\n\n    for (var i = 0; i < geometry.vertexCount; i++) {\n      geometry.attributes.position.get(i, pos);\n      pos[3] = 1;\n      vec4.transformMat4(pos, pos, worldViewProjection.array);\n      vec4.scale(pos, pos, 1 / pos[3]);\n      positionNDC[i * 2] = pos[0];\n      positionNDC[i * 2 + 1] = pos[1];\n    }\n  }\n});\nexport default PointsMesh;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport spriteUtil from '../../util/sprite';\nimport PointsMesh from './PointsMesh';\nimport LabelsBuilder from '../../component/common/LabelsBuilder';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { getVisualColor, getVisualOpacity } from '../../util/visual';\nvar SDF_RANGE = 20;\nvar Z_2D = -10;\n\nfunction isSymbolSizeSame(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n} // TODO gl_PointSize has max value.\n\n\nfunction PointsBuilder(is2D, api) {\n  this.rootNode = new graphicGL.Node();\n  /**\n   * @type {boolean}\n   */\n\n  this.is2D = is2D;\n  this._labelsBuilder = new LabelsBuilder(256, 256, api); // Give a large render order.\n\n  this._labelsBuilder.getMesh().renderOrder = 100;\n  this.rootNode.add(this._labelsBuilder.getMesh());\n  this._api = api;\n  this._spriteImageCanvas = document.createElement('canvas');\n  this._startDataIndex = 0;\n  this._endDataIndex = 0;\n  this._sizeScale = 1;\n}\n\nPointsBuilder.prototype = {\n  constructor: PointsBuilder,\n\n  /**\n   * If highlight on over\n   */\n  highlightOnMouseover: true,\n  update: function (seriesModel, ecModel, api, start, end) {\n    // Swap barMesh\n    var tmp = this._prevMesh;\n    this._prevMesh = this._mesh;\n    this._mesh = tmp;\n    var data = seriesModel.getData();\n\n    if (start == null) {\n      start = 0;\n    }\n\n    if (end == null) {\n      end = data.count();\n    }\n\n    this._startDataIndex = start;\n    this._endDataIndex = end - 1;\n\n    if (!this._mesh) {\n      var material = this._prevMesh && this._prevMesh.material;\n      this._mesh = new PointsMesh({\n        // Render after axes\n        renderOrder: 10,\n        // FIXME\n        frustumCulling: false\n      });\n\n      if (material) {\n        this._mesh.material = material;\n      }\n    }\n\n    var material = this._mesh.material;\n    var geometry = this._mesh.geometry;\n    var attributes = geometry.attributes;\n    this.rootNode.remove(this._prevMesh);\n    this.rootNode.add(this._mesh);\n\n    this._setPositionTextureToMesh(this._mesh, this._positionTexture);\n\n    var symbolInfo = this._getSymbolInfo(seriesModel, start, end);\n\n    var dpr = api.getDevicePixelRatio(); // TODO image symbol\n\n    var itemStyle = seriesModel.getModel('itemStyle').getItemStyle();\n    var largeMode = seriesModel.get('large');\n    var pointSizeScale = 1;\n\n    if (symbolInfo.maxSize > 2) {\n      pointSizeScale = this._updateSymbolSprite(seriesModel, itemStyle, symbolInfo, dpr);\n      material.enableTexture('sprite');\n    } else {\n      material.disableTexture('sprite');\n    }\n\n    attributes.position.init(end - start);\n    var rgbaArr = [];\n\n    if (largeMode) {\n      material.undefine('VERTEX_SIZE');\n      material.undefine('VERTEX_COLOR');\n      var color = getVisualColor(data);\n      var opacity = getVisualOpacity(data);\n      graphicGL.parseColor(color, rgbaArr);\n      rgbaArr[3] *= opacity;\n      material.set({\n        color: rgbaArr,\n        'u_Size': symbolInfo.maxSize * this._sizeScale\n      });\n    } else {\n      material.set({\n        color: [1, 1, 1, 1]\n      });\n      material.define('VERTEX_SIZE');\n      material.define('VERTEX_COLOR');\n      attributes.size.init(end - start);\n      attributes.color.init(end - start);\n      this._originalOpacity = new Float32Array(end - start);\n    }\n\n    var points = data.getLayout('points');\n    var positionArr = attributes.position.value;\n    var hasTransparentPoint = false;\n\n    for (var i = 0; i < end - start; i++) {\n      var i3 = i * 3;\n      var i2 = i * 2;\n\n      if (this.is2D) {\n        positionArr[i3] = points[i2];\n        positionArr[i3 + 1] = points[i2 + 1];\n        positionArr[i3 + 2] = Z_2D;\n      } else {\n        positionArr[i3] = points[i3];\n        positionArr[i3 + 1] = points[i3 + 1];\n        positionArr[i3 + 2] = points[i3 + 2];\n      }\n\n      if (!largeMode) {\n        var color = getItemVisualColor(data, i);\n        var opacity = getItemVisualOpacity(data, i);\n        graphicGL.parseColor(color, rgbaArr);\n        rgbaArr[3] *= opacity;\n        attributes.color.set(i, rgbaArr);\n\n        if (rgbaArr[3] < 0.99) {\n          hasTransparentPoint = true;\n        }\n\n        var symbolSize = data.getItemVisual(i, 'symbolSize');\n        symbolSize = symbolSize instanceof Array ? Math.max(symbolSize[0], symbolSize[1]) : symbolSize; // NaN pointSize may have strange result.\n\n        if (isNaN(symbolSize)) {\n          symbolSize = 0;\n        } // Scale point size because canvas has margin.\n\n\n        attributes.size.value[i] = symbolSize * pointSizeScale * this._sizeScale; // Save the original opacity for recover from fadeIn.\n\n        this._originalOpacity[i] = rgbaArr[3];\n      }\n    }\n\n    this._mesh.sizeScale = pointSizeScale;\n    geometry.updateBoundingBox();\n    geometry.dirty(); // Update material.\n\n    this._updateMaterial(seriesModel, itemStyle);\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n      material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    if (!largeMode) {\n      this._updateLabelBuilder(seriesModel, start, end);\n    }\n\n    this._updateHandler(seriesModel, ecModel, api);\n\n    this._updateAnimation(seriesModel);\n\n    this._api = api;\n  },\n  getPointsMesh: function () {\n    return this._mesh;\n  },\n  updateLabels: function (highlightDataIndices) {\n    this._labelsBuilder.updateLabels(highlightDataIndices);\n  },\n  hideLabels: function () {\n    this.rootNode.remove(this._labelsBuilder.getMesh());\n  },\n  showLabels: function () {\n    this.rootNode.add(this._labelsBuilder.getMesh());\n  },\n  dispose: function () {\n    this._labelsBuilder.dispose();\n  },\n  _updateSymbolSprite: function (seriesModel, itemStyle, symbolInfo, dpr) {\n    symbolInfo.maxSize = Math.min(symbolInfo.maxSize * 2, 200);\n    var symbolSize = [];\n\n    if (symbolInfo.aspect > 1) {\n      symbolSize[0] = symbolInfo.maxSize;\n      symbolSize[1] = symbolInfo.maxSize / symbolInfo.aspect;\n    } else {\n      symbolSize[1] = symbolInfo.maxSize;\n      symbolSize[0] = symbolInfo.maxSize * symbolInfo.aspect;\n    } // In case invalid data.\n\n\n    symbolSize[0] = symbolSize[0] || 1;\n    symbolSize[1] = symbolSize[1] || 1;\n\n    if (this._symbolType !== symbolInfo.type || !isSymbolSizeSame(this._symbolSize, symbolSize) || this._lineWidth !== itemStyle.lineWidth) {\n      spriteUtil.createSymbolSprite(symbolInfo.type, symbolSize, {\n        fill: '#fff',\n        lineWidth: itemStyle.lineWidth,\n        stroke: 'transparent',\n        shadowColor: 'transparent',\n        minMargin: Math.min(symbolSize[0] / 2, 10)\n      }, this._spriteImageCanvas);\n      spriteUtil.createSDFFromCanvas(this._spriteImageCanvas, Math.min(this._spriteImageCanvas.width, 32), SDF_RANGE, this._mesh.material.get('sprite').image);\n      this._symbolType = symbolInfo.type;\n      this._symbolSize = symbolSize;\n      this._lineWidth = itemStyle.lineWidth;\n    }\n\n    return this._spriteImageCanvas.width / symbolInfo.maxSize * dpr;\n  },\n  _updateMaterial: function (seriesModel, itemStyle) {\n    var blendFunc = seriesModel.get('blendMode') === 'lighter' ? graphicGL.additiveBlend : null;\n    var material = this._mesh.material;\n    material.blend = blendFunc;\n    material.set('lineWidth', itemStyle.lineWidth / SDF_RANGE);\n    var strokeColor = graphicGL.parseColor(itemStyle.stroke);\n    material.set('strokeColor', strokeColor); // Because of symbol texture, we always needs it be transparent.\n\n    material.transparent = true;\n    material.depthMask = false;\n    material.depthTest = !this.is2D;\n    material.sortVertices = !this.is2D;\n  },\n  _updateLabelBuilder: function (seriesModel, start, end) {\n    var data = seriesModel.getData();\n    var geometry = this._mesh.geometry;\n    var positionArr = geometry.attributes.position.value;\n    var start = this._startDataIndex;\n    var pointSizeScale = this._mesh.sizeScale;\n\n    this._labelsBuilder.updateData(data, start, end);\n\n    this._labelsBuilder.getLabelPosition = function (dataIndex, positionDesc, distance) {\n      var idx3 = (dataIndex - start) * 3;\n      return [positionArr[idx3], positionArr[idx3 + 1], positionArr[idx3 + 2]];\n    };\n\n    this._labelsBuilder.getLabelDistance = function (dataIndex, positionDesc, distance) {\n      var size = geometry.attributes.size.get(dataIndex - start) / pointSizeScale;\n      return size / 2 + distance;\n    };\n\n    this._labelsBuilder.updateLabels();\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevSize', 'size']], this._prevMesh, this._mesh, seriesModel);\n  },\n  _updateHandler: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pointsMesh = this._mesh;\n    var self = this;\n    var lastDataIndex = -1;\n    var isCartesian3D = seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian3D';\n    var grid3DModel;\n\n    if (isCartesian3D) {\n      grid3DModel = seriesModel.coordinateSystem.model;\n    }\n\n    pointsMesh.seriesIndex = seriesModel.seriesIndex;\n    pointsMesh.off('mousemove');\n    pointsMesh.off('mouseout');\n    pointsMesh.on('mousemove', function (e) {\n      var dataIndex = e.vertexIndex + self._startDataIndex;\n\n      if (dataIndex !== lastDataIndex) {\n        if (this.highlightOnMouseover) {\n          this.downplay(data, lastDataIndex);\n          this.highlight(data, dataIndex);\n\n          this._labelsBuilder.updateLabels([dataIndex]);\n        }\n\n        if (isCartesian3D) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: [data.get(seriesModel.coordDimToDataDim('x')[0], dataIndex), data.get(seriesModel.coordDimToDataDim('y')[0], dataIndex), data.get(seriesModel.coordDimToDataDim('z')[0], dataIndex)],\n            grid3DIndex: grid3DModel.componentIndex\n          });\n        }\n      }\n\n      pointsMesh.dataIndex = dataIndex;\n      lastDataIndex = dataIndex;\n    }, this);\n    pointsMesh.on('mouseout', function (e) {\n      var dataIndex = e.vertexIndex + self._startDataIndex;\n\n      if (this.highlightOnMouseover) {\n        this.downplay(data, dataIndex);\n\n        this._labelsBuilder.updateLabels();\n      }\n\n      lastDataIndex = -1;\n      pointsMesh.dataIndex = -1;\n\n      if (isCartesian3D) {\n        api.dispatchAction({\n          type: 'grid3DHideAxisPointer',\n          grid3DIndex: grid3DModel.componentIndex\n        });\n      }\n    }, this);\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    if (!this._mesh) {\n      return;\n    }\n\n    var positionArr = this._mesh.geometry.attributes.position.value;\n    var points = data.getLayout('points');\n\n    if (this.is2D) {\n      for (var i = 0; i < points.length / 2; i++) {\n        var i3 = i * 3;\n        var i2 = i * 2;\n        positionArr[i3] = points[i2];\n        positionArr[i3 + 1] = points[i2 + 1];\n        positionArr[i3 + 2] = Z_2D;\n      }\n    } else {\n      for (var i = 0; i < points.length; i++) {\n        positionArr[i] = points[i];\n      }\n    }\n\n    this._mesh.geometry.dirty();\n\n    api.getZr().refresh();\n  },\n  updateView: function (camera) {\n    if (!this._mesh) {\n      return;\n    }\n\n    var worldViewProjection = new Matrix4();\n    Matrix4.mul(worldViewProjection, camera.viewMatrix, this._mesh.worldTransform);\n    Matrix4.mul(worldViewProjection, camera.projectionMatrix, worldViewProjection);\n\n    this._mesh.updateNDCPosition(worldViewProjection, this.is2D, this._api);\n  },\n  highlight: function (data, dataIndex) {\n    if (dataIndex > this._endDataIndex || dataIndex < this._startDataIndex) {\n      return;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var emphasisItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n    var emphasisColor = emphasisItemStyleModel.get('color');\n    var emphasisOpacity = emphasisItemStyleModel.get('opacity');\n\n    if (emphasisColor == null) {\n      var color = getItemVisualColor(data, dataIndex);\n      emphasisColor = echarts.color.lift(color, -0.4);\n    }\n\n    if (emphasisOpacity == null) {\n      emphasisOpacity = getItemVisualOpacity(data, dataIndex);\n    }\n\n    var colorArr = graphicGL.parseColor(emphasisColor);\n    colorArr[3] *= emphasisOpacity;\n\n    this._mesh.geometry.attributes.color.set(dataIndex - this._startDataIndex, colorArr);\n\n    this._mesh.geometry.dirtyAttribute('color');\n\n    this._api.getZr().refresh();\n  },\n  downplay: function (data, dataIndex) {\n    if (dataIndex > this._endDataIndex || dataIndex < this._startDataIndex) {\n      return;\n    }\n\n    var color = getItemVisualColor(data, dataIndex);\n    var opacity = getItemVisualOpacity(data, dataIndex);\n    var colorArr = graphicGL.parseColor(color);\n    colorArr[3] *= opacity;\n\n    this._mesh.geometry.attributes.color.set(dataIndex - this._startDataIndex, colorArr);\n\n    this._mesh.geometry.dirtyAttribute('color');\n\n    this._api.getZr().refresh();\n  },\n  fadeOutAll: function (fadeOutPercent) {\n    if (this._originalOpacity) {\n      var geo = this._mesh.geometry;\n\n      for (var i = 0; i < geo.vertexCount; i++) {\n        var fadeOutOpacity = this._originalOpacity[i] * fadeOutPercent;\n        geo.attributes.color.value[i * 4 + 3] = fadeOutOpacity;\n      }\n\n      geo.dirtyAttribute('color');\n\n      this._api.getZr().refresh();\n    }\n  },\n  fadeInAll: function () {\n    this.fadeOutAll(1);\n  },\n  setPositionTexture: function (texture) {\n    if (this._mesh) {\n      this._setPositionTextureToMesh(this._mesh, texture);\n    }\n\n    this._positionTexture = texture;\n  },\n  removePositionTexture: function () {\n    this._positionTexture = null;\n\n    if (this._mesh) {\n      this._setPositionTextureToMesh(this._mesh, null);\n    }\n  },\n  setSizeScale: function (sizeScale) {\n    if (sizeScale !== this._sizeScale) {\n      if (this._mesh) {\n        var originalSize = this._mesh.material.get('u_Size');\n\n        this._mesh.material.set('u_Size', originalSize / this._sizeScale * sizeScale);\n\n        var attributes = this._mesh.geometry.attributes;\n\n        if (attributes.size.value) {\n          for (var i = 0; i < attributes.size.value.length; i++) {\n            attributes.size.value[i] = attributes.size.value[i] / this._sizeScale * sizeScale;\n          }\n        }\n      }\n\n      this._sizeScale = sizeScale;\n    }\n  },\n  _setPositionTextureToMesh: function (mesh, texture) {\n    if (texture) {\n      mesh.material.set('positionTexture', texture);\n    }\n\n    mesh.material[texture ? 'enableTexture' : 'disableTexture']('positionTexture');\n  },\n  _getSymbolInfo: function (seriesModel, start, end) {\n    if (seriesModel.get('large')) {\n      var symbolSize = retrieve.firstNotNull(seriesModel.get('symbolSize'), 1);\n      var maxSymbolSize;\n      var symbolAspect;\n\n      if (symbolSize instanceof Array) {\n        maxSymbolSize = Math.max(symbolSize[0], symbolSize[1]);\n        symbolAspect = symbolSize[0] / symbolSize[1];\n      } else {\n        maxSymbolSize = symbolSize;\n        symbolAspect = 1;\n      }\n\n      return {\n        maxSize: symbolSize,\n        type: seriesModel.get('symbol'),\n        aspect: symbolAspect\n      };\n    }\n\n    var data = seriesModel.getData();\n    var symbolAspect;\n    var differentSymbolAspect = false;\n    var symbolType = data.getItemVisual(0, 'symbol') || 'circle';\n    var differentSymbolType = false;\n    var maxSymbolSize = 0;\n\n    for (var idx = start; idx < end; idx++) {\n      var symbolSize = data.getItemVisual(idx, 'symbolSize');\n      var currentSymbolType = data.getItemVisual(idx, 'symbol');\n      var currentSymbolAspect;\n\n      if (!(symbolSize instanceof Array)) {\n        // Ignore NaN value.\n        if (isNaN(symbolSize)) {\n          continue;\n        }\n\n        currentSymbolAspect = 1;\n        maxSymbolSize = Math.max(symbolSize, maxSymbolSize);\n      } else {\n        currentSymbolAspect = symbolSize[0] / symbolSize[1];\n        maxSymbolSize = Math.max(Math.max(symbolSize[0], symbolSize[1]), maxSymbolSize);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (symbolAspect != null && Math.abs(currentSymbolAspect - symbolAspect) > 0.05) {\n          differentSymbolAspect = true;\n        }\n\n        if (currentSymbolType !== symbolType) {\n          differentSymbolType = true;\n        }\n      }\n\n      symbolType = currentSymbolType;\n      symbolAspect = currentSymbolAspect;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (differentSymbolAspect) {\n        console.warn('Different symbol width / height ratio will be ignored.');\n      }\n\n      if (differentSymbolType) {\n        console.warn('Different symbol type will be ignored.');\n      }\n    }\n\n    return {\n      maxSize: maxSymbolSize,\n      type: symbolType,\n      aspect: symbolAspect\n    };\n  }\n};\nexport default PointsBuilder;","import * as echarts from 'echarts/lib/echarts';\nexport default function (seriesModel, dims, source) {\n  source = source || seriesModel.getSource();\n  var coordSysDimensions = dims || echarts.getCoordinateSystemDimensions(seriesModel.get('coordinateSystem')) || ['x', 'y', 'z'];\n  var dimensions = echarts.helper.createDimensions(source, {\n    dimensionsDefine: source.dimensionsDefine || seriesModel.get('dimensions'),\n    encodeDefine: source.encodeDefine || seriesModel.get('encode'),\n    coordDimensions: coordSysDimensions.map(function (dim) {\n      var axis3DModel = seriesModel.getReferringComponents(dim + 'Axis3D').models[0];\n      return {\n        type: axis3DModel && axis3DModel.get('type') === 'category' ? 'ordinal' : 'float',\n        name: dim // Find stackable dimension. Which will represent value.\n        // stackable: dim === 'z'\n\n      };\n    })\n  });\n\n  if (seriesModel.get('coordinateSystem') === 'cartesian3D') {\n    dimensions.forEach(function (dimInfo) {\n      if (coordSysDimensions.indexOf(dimInfo.coordDim) >= 0) {\n        var axis3DModel = seriesModel.getReferringComponents(dimInfo.coordDim + 'Axis3D').models[0];\n\n        if (axis3DModel && axis3DModel.get('type') === 'category') {\n          dimInfo.ordinalMeta = axis3DModel.getOrdinalMeta();\n        }\n      }\n    });\n  }\n\n  var stackCalculationInfo = echarts.helper.dataStack.enableDataStack( // Only support 'z' and `byIndex` now.\n  seriesModel, dimensions, {\n    byIndex: true,\n    stackedCoordDimension: 'z'\n  });\n  var data = new echarts.List(dimensions, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  data.initData(source);\n  return data;\n}","import * as echarts from 'echarts/lib/echarts';\nimport { getItemVisualColor } from '../../util/visual';\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  echarts.util.each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nexport default function (seriesModel, dataIndex, multipleSeries) {\n  function formatArrayValue(value) {\n    var vertially = true;\n    var result = [];\n    var tooltipDims = otherDimToDataDim(data, 'tooltip');\n    tooltipDims.length ? echarts.util.each(tooltipDims, function (dimIdx) {\n      setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n    }) // By default, all dims is used on tooltip.\n    : echarts.util.each(value, setEachItem);\n\n    function setEachItem(val, dimIdx) {\n      var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n      if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n        return;\n      }\n\n      var dimType = dimInfo.type;\n      var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : echarts.format.formatTime('yyyy/MM/dd hh:mm:ss', val) : echarts.format.addCommas(val));\n      valStr && result.push(echarts.format.encodeHTML(valStr));\n    }\n\n    return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n  }\n\n  var data = seriesModel.getData();\n  var value = seriesModel.getRawValue(dataIndex);\n  var formattedValue = echarts.util.isArray(value) ? formatArrayValue(value) : echarts.format.encodeHTML(echarts.format.addCommas(value));\n  var name = data.getName(dataIndex);\n  var color = getItemVisualColor(data, dataIndex);\n\n  if (echarts.util.isObject(color) && color.colorStops) {\n    color = (color.colorStops[0] || {}).color;\n  }\n\n  color = color || 'transparent';\n  var colorEl = echarts.format.getTooltipMarker(color);\n  var seriesName = seriesModel.name; // FIXME\n\n  if (seriesName === '\\0-') {\n    // Not show '-'\n    seriesName = '';\n  }\n\n  seriesName = seriesName ? echarts.format.encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n  return !multipleSeries ? seriesName + colorEl + (name ? echarts.format.encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n}\n;","import * as echarts from 'echarts/lib/echarts';\nexport default echarts.SeriesModel.extend({\n  type: 'series.flowGL',\n  dependencies: ['geo', 'grid', 'bmap'],\n  visualStyleAccessPath: 'itemStyle',\n  getInitialData: function (option, ecModel) {\n    var coordType = this.get('coordinateSystem'); // TODO hotfix for the bug in echarts that get coord dimensions is undefined.\n\n    var coordSysDimensions = coordType === 'geo' ? ['lng', 'lat'] : echarts.getCoordinateSystemDimensions(coordType) || ['x', 'y'];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (coordSysDimensions.length > 2) {\n        throw new Error('flowGL can only be used on 2d coordinate systems.');\n      }\n    }\n\n    coordSysDimensions.push('vx', 'vy');\n    var dimensions = echarts.helper.createDimensions(this.getSource(), {\n      coordDimensions: coordSysDimensions,\n      encodeDefine: this.get('encode'),\n      dimensionsDefine: this.get('dimensions')\n    });\n    var data = new echarts.List(dimensions, this);\n    data.initData(this.getSource());\n    return data;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 10,\n    supersampling: 1,\n    // 128x128 particles\n    particleType: 'point',\n    particleDensity: 128,\n    particleSize: 1,\n    particleSpeed: 1,\n    particleTrail: 2,\n    colorTexture: null,\n    gridWidth: 'auto',\n    gridHeight: 'auto',\n    itemStyle: {\n      color: '#fff',\n      opacity: 0.8\n    }\n  }\n});","/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\n/**\n * @constructor\n * @alias module:echarts-gl/chart/flowGL/Line2D\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    dynamic: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setLineCount: function (nLine) {\n    var attributes = this.attributes;\n    var nVertex = 4 * nLine;\n    var nTriangle = 2 * nLine;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n    }\n\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  addLine: function (p) {\n    var vertexOffset = this._vertexOffset;\n    this.attributes.position.set(vertexOffset, [p[0], p[1], 1]);\n    this.attributes.position.set(vertexOffset + 1, [p[0], p[1], -1]);\n    this.attributes.position.set(vertexOffset + 2, [p[0], p[1], 2]);\n    this.attributes.position.set(vertexOffset + 3, [p[0], p[1], -2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset, vertexOffset + 1, vertexOffset + 2]);\n    this.setTriangleIndices(this._faceOffset++, [vertexOffset + 1, vertexOffset + 2, vertexOffset + 3]);\n    this._vertexOffset += 4;\n  }\n});\nexport default LinesGeometry;","export default \"@export ecgl.vfParticle.particle.fragment\\n\\nuniform sampler2D particleTexture;\\nuniform sampler2D spawnTexture;\\nuniform sampler2D velocityTexture;\\n\\nuniform float deltaTime;\\nuniform float elapsedTime;\\n\\nuniform float speedScaling : 1.0;\\n\\nuniform vec2 textureSize;\\nuniform vec4 region : [0, 0, 1, 1];\\nuniform float firstFrameTime;\\n\\nvarying vec2 v_Texcoord;\\n\\n\\nvoid main()\\n{\\n vec4 p = texture2D(particleTexture, v_Texcoord);\\n bool spawn = false;\\n if (p.w <= 0.0) {\\n p = texture2D(spawnTexture, fract(v_Texcoord + elapsedTime / 10.0));\\n p.w -= firstFrameTime;\\n spawn = true;\\n }\\n vec2 v = texture2D(velocityTexture, fract(p.xy * region.zw + region.xy)).xy;\\n v = (v - 0.5) * 2.0;\\n p.z = length(v);\\n p.xy += v * deltaTime / 10.0 * speedScaling;\\n p.w -= deltaTime;\\n\\n if (spawn || p.xy != fract(p.xy)) {\\n p.z = 0.0;\\n }\\n p.xy = fract(p.xy);\\n\\n gl_FragColor = p;\\n}\\n@end\\n\\n@export ecgl.vfParticle.renderPoints.vertex\\n\\n#define PI 3.1415926\\n\\nattribute vec2 texcoord : TEXCOORD_0;\\n\\nuniform sampler2D particleTexture;\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nuniform float size : 1.0;\\n\\nvarying float v_Mag;\\nvarying vec2 v_Uv;\\n\\nvoid main()\\n{\\n vec4 p = texture2D(particleTexture, texcoord);\\n\\n if (p.w > 0.0 && p.z > 1e-5) {\\n gl_Position = worldViewProjection * vec4(p.xy * 2.0 - 1.0, 0.0, 1.0);\\n }\\n else {\\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\\n }\\n\\n v_Mag = p.z;\\n v_Uv = p.xy;\\n\\n gl_PointSize = size;\\n}\\n\\n@end\\n\\n@export ecgl.vfParticle.renderPoints.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\nuniform sampler2D gradientTexture;\\nuniform sampler2D colorTexture;\\nuniform sampler2D spriteTexture;\\n\\nvarying float v_Mag;\\nvarying vec2 v_Uv;\\n\\nvoid main()\\n{\\n gl_FragColor = color;\\n#ifdef SPRITETEXTURE_ENABLED\\n gl_FragColor *= texture2D(spriteTexture, gl_PointCoord);\\n if (color.a == 0.0) {\\n discard;\\n }\\n#endif\\n#ifdef GRADIENTTEXTURE_ENABLED\\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\\n#endif\\n#ifdef COLORTEXTURE_ENABLED\\n gl_FragColor *= texture2D(colorTexture, v_Uv);\\n#endif\\n}\\n\\n@end\\n\\n@export ecgl.vfParticle.renderLines.vertex\\n\\n#define PI 3.1415926\\n\\nattribute vec3 position : POSITION;\\n\\nuniform sampler2D particleTexture;\\nuniform sampler2D prevParticleTexture;\\n\\nuniform float size : 1.0;\\nuniform vec4 vp: VIEWPORT;\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nvarying float v_Mag;\\nvarying vec2 v_Uv;\\n\\n@import clay.util.rand\\n\\nvoid main()\\n{\\n vec4 p = texture2D(particleTexture, position.xy);\\n vec4 p2 = texture2D(prevParticleTexture, position.xy);\\n\\n p.xy = p.xy * 2.0 - 1.0;\\n p2.xy = p2.xy * 2.0 - 1.0;\\n\\n if (p.w > 0.0 && p.z > 1e-5) {\\n vec2 dir = normalize(p.xy - p2.xy);\\n vec2 norm = vec2(dir.y / vp.z, -dir.x / vp.w) * sign(position.z) * size;\\n if (abs(position.z) == 2.0) {\\n gl_Position = vec4(p.xy + norm, 0.0, 1.0);\\n v_Uv = p.xy;\\n v_Mag = p.z;\\n }\\n else {\\n gl_Position = vec4(p2.xy + norm, 0.0, 1.0);\\n v_Mag = p2.z;\\n v_Uv = p2.xy;\\n }\\n gl_Position = worldViewProjection * gl_Position;\\n }\\n else {\\n gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);\\n }\\n}\\n\\n@end\\n\\n@export ecgl.vfParticle.renderLines.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\nuniform sampler2D gradientTexture;\\nuniform sampler2D colorTexture;\\n\\nvarying float v_Mag;\\nvarying vec2 v_Uv;\\n\\nvoid main()\\n{\\n gl_FragColor = color;\\n #ifdef GRADIENTTEXTURE_ENABLED\\n gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));\\n#endif\\n#ifdef COLORTEXTURE_ENABLED\\n gl_FragColor *= texture2D(colorTexture, v_Uv);\\n#endif\\n}\\n\\n@end\\n\";","import Pass from 'claygl/src/compositor/Pass';\nimport Geometry from 'claygl/src/Geometry';\nimport Mesh from 'claygl/src/Mesh';\nimport Material from 'claygl/src/Material';\nimport Shader from 'claygl/src/Shader';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport OrthoCamera from 'claygl/src/camera/Orthographic';\nimport PlaneGeometry from 'claygl/src/geometry/Plane';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Line2DGeometry from './Line2D'; // import TemporalSS from '../../effect/TemporalSuperSampling';\n\nimport vectorFieldParticleGLSL from './vectorFieldParticle.glsl.js';\nShader['import'](vectorFieldParticleGLSL);\n\nfunction createSpriteCanvas(size) {\n  var canvas = document.createElement('canvas');\n  canvas.width = canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#fff';\n  ctx.arc(size / 2, size / 2, size / 2, 0, Math.PI * 2);\n  ctx.fill();\n  return canvas;\n} // import spriteUtil from '../../util/sprite';\n\n\nvar VectorFieldParticleSurface = function () {\n  /**\n   * @type {number}\n   */\n  this.motionBlurFactor = 0.99;\n  /**\n   * Vector field lookup image\n   * @type {clay.Texture2D}\n   */\n\n  this.vectorFieldTexture = new Texture2D({\n    type: Texture.FLOAT,\n    // minFilter: Texture.NEAREST,\n    // magFilter: Texture.NEAREST,\n    flipY: false\n  });\n  /**\n   * Particle life range\n   * @type {Array.<number>}\n   */\n\n  this.particleLife = [5, 20];\n  this._particleType = 'point';\n  /**\n   * @type {number}\n   */\n\n  this._particleSize = 1;\n  /**\n   * @type {Array.<number>}\n   */\n\n  this.particleColor = [1, 1, 1, 1];\n  /**\n   * @type {number}\n   */\n\n  this.particleSpeedScaling = 1.0;\n  /**\n   * @type {clay.Texture2D}\n   */\n\n  this._thisFrameTexture = null;\n  this._particlePass = null;\n  this._spawnTexture = null;\n  this._particleTexture0 = null;\n  this._particleTexture1 = null;\n  this._particlePointsMesh = null;\n  this._surfaceFrameBuffer = null;\n  this._elapsedTime = 0.0;\n  this._scene = null;\n  this._camera = null;\n  this._lastFrameTexture = null; // this._temporalSS = new TemporalSS(50);\n  // this._antialising = false;\n\n  this._supersampling = 1;\n  this._downsampleTextures = [];\n  this._width = 512;\n  this._height = 512;\n  this.init();\n};\n\nVectorFieldParticleSurface.prototype = {\n  constructor: VectorFieldParticleSurface,\n  init: function () {\n    var parameters = {\n      type: Texture.FLOAT,\n      minFilter: Texture.NEAREST,\n      magFilter: Texture.NEAREST,\n      useMipmap: false\n    };\n    this._spawnTexture = new Texture2D(parameters);\n    this._particleTexture0 = new Texture2D(parameters);\n    this._particleTexture1 = new Texture2D(parameters);\n    this._frameBuffer = new FrameBuffer({\n      depthBuffer: false\n    });\n    this._particlePass = new Pass({\n      fragment: Shader.source('ecgl.vfParticle.particle.fragment')\n    });\n\n    this._particlePass.setUniform('velocityTexture', this.vectorFieldTexture);\n\n    this._particlePass.setUniform('spawnTexture', this._spawnTexture);\n\n    this._downsamplePass = new Pass({\n      fragment: Shader.source('clay.compositor.downsample')\n    });\n    var particlePointsMesh = new Mesh({\n      // Render after last frame full quad\n      renderOrder: 10,\n      material: new Material({\n        shader: new Shader(Shader.source('ecgl.vfParticle.renderPoints.vertex'), Shader.source('ecgl.vfParticle.renderPoints.fragment'))\n      }),\n      mode: Mesh.POINTS,\n      geometry: new Geometry({\n        dynamic: true,\n        mainAttribute: 'texcoord0'\n      })\n    });\n    var particleLinesMesh = new Mesh({\n      // Render after last frame full quad\n      renderOrder: 10,\n      material: new Material({\n        shader: new Shader(Shader.source('ecgl.vfParticle.renderLines.vertex'), Shader.source('ecgl.vfParticle.renderLines.fragment'))\n      }),\n      geometry: new Line2DGeometry(),\n      culling: false\n    });\n    var lastFrameFullQuad = new Mesh({\n      material: new Material({\n        shader: new Shader(Shader.source('ecgl.color.vertex'), Shader.source('ecgl.color.fragment')) // DO NOT BLEND Blend will multiply alpha\n        // transparent: true\n\n      }),\n      geometry: new PlaneGeometry()\n    });\n    lastFrameFullQuad.material.enableTexture('diffuseMap');\n    this._particlePointsMesh = particlePointsMesh;\n    this._particleLinesMesh = particleLinesMesh;\n    this._lastFrameFullQuadMesh = lastFrameFullQuad;\n    this._camera = new OrthoCamera();\n    this._thisFrameTexture = new Texture2D();\n    this._lastFrameTexture = new Texture2D();\n  },\n  setParticleDensity: function (width, height) {\n    var nVertex = width * height;\n    var spawnTextureData = new Float32Array(nVertex * 4);\n    var off = 0;\n    var lifeRange = this.particleLife;\n\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++, off++) {\n        // x position, range [0 - 1]\n        spawnTextureData[off * 4] = Math.random(); // y position, range [0 - 1]\n\n        spawnTextureData[off * 4 + 1] = Math.random(); // Some property\n\n        spawnTextureData[off * 4 + 2] = Math.random();\n        var life = (lifeRange[1] - lifeRange[0]) * Math.random() + lifeRange[0]; // Particle life\n\n        spawnTextureData[off * 4 + 3] = life;\n      }\n    }\n\n    if (this._particleType === 'line') {\n      this._setLineGeometry(width, height);\n    } else {\n      this._setPointsGeometry(width, height);\n    }\n\n    this._spawnTexture.width = width;\n    this._spawnTexture.height = height;\n    this._spawnTexture.pixels = spawnTextureData;\n    this._particleTexture0.width = this._particleTexture1.width = width;\n    this._particleTexture0.height = this._particleTexture1.height = height;\n\n    this._particlePass.setUniform('textureSize', [width, height]);\n  },\n  _setPointsGeometry: function (width, height) {\n    var nVertex = width * height;\n    var geometry = this._particlePointsMesh.geometry;\n    var attributes = geometry.attributes;\n    attributes.texcoord0.init(nVertex);\n    var off = 0;\n\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++, off++) {\n        attributes.texcoord0.value[off * 2] = i / width;\n        attributes.texcoord0.value[off * 2 + 1] = j / height;\n      }\n    }\n\n    geometry.dirty();\n  },\n  _setLineGeometry: function (width, height) {\n    var nLine = width * height;\n\n    var geometry = this._getParticleMesh().geometry;\n\n    geometry.setLineCount(nLine);\n    geometry.resetOffset();\n\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++) {\n        geometry.addLine([i / width, j / height]);\n      }\n    }\n\n    geometry.dirty();\n  },\n  _getParticleMesh: function () {\n    return this._particleType === 'line' ? this._particleLinesMesh : this._particlePointsMesh;\n  },\n  update: function (renderer, api, deltaTime, firstFrame) {\n    var particleMesh = this._getParticleMesh();\n\n    var frameBuffer = this._frameBuffer;\n    var particlePass = this._particlePass;\n\n    if (firstFrame) {\n      this._updateDownsampleTextures(renderer, api);\n    }\n\n    particleMesh.material.set('size', this._particleSize * this._supersampling);\n    particleMesh.material.set('color', this.particleColor);\n    particlePass.setUniform('speedScaling', this.particleSpeedScaling);\n    frameBuffer.attach(this._particleTexture1);\n    particlePass.setUniform('firstFrameTime', firstFrame ? (this.particleLife[1] + this.particleLife[0]) / 2 : 0);\n    particlePass.setUniform('particleTexture', this._particleTexture0);\n    particlePass.setUniform('deltaTime', deltaTime);\n    particlePass.setUniform('elapsedTime', this._elapsedTime);\n    particlePass.render(renderer, frameBuffer);\n    particleMesh.material.set('particleTexture', this._particleTexture1);\n    particleMesh.material.set('prevParticleTexture', this._particleTexture0);\n    frameBuffer.attach(this._thisFrameTexture);\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    var lastFrameFullQuad = this._lastFrameFullQuadMesh;\n    lastFrameFullQuad.material.set('diffuseMap', this._lastFrameTexture);\n    lastFrameFullQuad.material.set('color', [1, 1, 1, this.motionBlurFactor]);\n\n    this._camera.update(true);\n\n    renderer.renderPass([lastFrameFullQuad, particleMesh], this._camera);\n    frameBuffer.unbind(renderer);\n\n    this._downsample(renderer);\n\n    this._swapTexture();\n\n    this._elapsedTime += deltaTime;\n  },\n  _downsample: function (renderer) {\n    var downsampleTextures = this._downsampleTextures;\n\n    if (downsampleTextures.length === 0) {\n      return;\n    }\n\n    var current = 0;\n    var sourceTexture = this._thisFrameTexture;\n    var targetTexture = downsampleTextures[current];\n\n    while (targetTexture) {\n      this._frameBuffer.attach(targetTexture);\n\n      this._downsamplePass.setUniform('texture', sourceTexture);\n\n      this._downsamplePass.setUniform('textureSize', [sourceTexture.width, sourceTexture.height]);\n\n      this._downsamplePass.render(renderer, this._frameBuffer);\n\n      sourceTexture = targetTexture;\n      targetTexture = downsampleTextures[++current];\n    }\n  },\n  getSurfaceTexture: function () {\n    var downsampleTextures = this._downsampleTextures;\n    return downsampleTextures.length > 0 ? downsampleTextures[downsampleTextures.length - 1] : this._lastFrameTexture;\n  },\n  setRegion: function (region) {\n    this._particlePass.setUniform('region', region);\n  },\n  resize: function (width, height) {\n    this._lastFrameTexture.width = width * this._supersampling;\n    this._lastFrameTexture.height = height * this._supersampling;\n    this._thisFrameTexture.width = width * this._supersampling;\n    this._thisFrameTexture.height = height * this._supersampling;\n    this._width = width;\n    this._height = height;\n  },\n  setParticleSize: function (size) {\n    var particleMesh = this._getParticleMesh();\n\n    if (size <= 2) {\n      particleMesh.material.disableTexture('spriteTexture');\n      particleMesh.material.transparent = false;\n      return;\n    }\n\n    if (!this._spriteTexture) {\n      this._spriteTexture = new Texture2D();\n    }\n\n    if (!this._spriteTexture.image || this._spriteTexture.image.width !== size) {\n      this._spriteTexture.image = createSpriteCanvas(size);\n\n      this._spriteTexture.dirty();\n    }\n\n    particleMesh.material.transparent = true;\n    particleMesh.material.enableTexture('spriteTexture');\n    particleMesh.material.set('spriteTexture', this._spriteTexture);\n    this._particleSize = size;\n  },\n  setGradientTexture: function (gradientTexture) {\n    var material = this._getParticleMesh().material;\n\n    material[gradientTexture ? 'enableTexture' : 'disableTexture']('gradientTexture');\n    material.setUniform('gradientTexture', gradientTexture);\n  },\n  setColorTextureImage: function (colorTextureImg, api) {\n    var material = this._getParticleMesh().material;\n\n    material.setTextureImage('colorTexture', colorTextureImg, api, {\n      flipY: true\n    });\n  },\n  setParticleType: function (type) {\n    this._particleType = type;\n  },\n  clearFrame: function (renderer) {\n    var frameBuffer = this._frameBuffer;\n    frameBuffer.attach(this._lastFrameTexture);\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    frameBuffer.unbind(renderer);\n  },\n  setSupersampling: function (supersampling) {\n    this._supersampling = supersampling;\n    this.resize(this._width, this._height);\n  },\n  _updateDownsampleTextures: function (renderer, api) {\n    var downsampleTextures = this._downsampleTextures;\n    var upScale = Math.max(Math.floor(Math.log(this._supersampling / api.getDevicePixelRatio()) / Math.log(2)), 0);\n    var scale = 2;\n    var width = this._width * this._supersampling;\n    var height = this._height * this._supersampling;\n\n    for (var i = 0; i < upScale; i++) {\n      downsampleTextures[i] = downsampleTextures[i] || new Texture2D();\n      downsampleTextures[i].width = width / scale;\n      downsampleTextures[i].height = height / scale;\n      scale *= 2;\n    }\n\n    for (; i < downsampleTextures.length; i++) {\n      downsampleTextures[i].dispose(renderer);\n    }\n\n    downsampleTextures.length = upScale;\n  },\n  _swapTexture: function () {\n    var tmp = this._particleTexture0;\n    this._particleTexture0 = this._particleTexture1;\n    this._particleTexture1 = tmp;\n    var tmp = this._thisFrameTexture;\n    this._thisFrameTexture = this._lastFrameTexture;\n    this._lastFrameTexture = tmp;\n  },\n  dispose: function (renderer) {\n    renderer.disposeFrameBuffer(this._frameBuffer); // Dispose textures\n\n    renderer.disposeTexture(this.vectorFieldTexture);\n    renderer.disposeTexture(this._spawnTexture);\n    renderer.disposeTexture(this._particleTexture0);\n    renderer.disposeTexture(this._particleTexture1);\n    renderer.disposeTexture(this._thisFrameTexture);\n    renderer.disposeTexture(this._lastFrameTexture);\n    renderer.disposeGeometry(this._particleLinesMesh.geometry);\n    renderer.disposeGeometry(this._particlePointsMesh.geometry);\n    renderer.disposeGeometry(this._lastFrameFullQuadMesh.geometry);\n\n    if (this._spriteTexture) {\n      renderer.disposeTexture(this._spriteTexture);\n    }\n\n    this._particlePass.dispose(renderer);\n\n    this._downsamplePass.dispose(renderer);\n\n    this._downsampleTextures.forEach(function (texture) {\n      texture.dispose(renderer);\n    });\n  }\n};\nexport default VectorFieldParticleSurface;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport ViewGL from '../../core/ViewGL';\nimport VectorFieldParticleSurface from './VectorFieldParticleSurface'; // TODO 百度地图不是 linear 的\n\nexport default echarts.ChartView.extend({\n  type: 'flowGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.viewGL = new ViewGL('orthographic');\n    this.groupGL = new graphicGL.Node();\n    this.viewGL.add(this.groupGL);\n    this._particleSurface = new VectorFieldParticleSurface();\n    var planeMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.color.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.color.fragment')\n        }),\n        // Must enable blending and multiply alpha.\n        // Or premultipliedAlpha will let the alpha useless.\n        transparent: true\n      })\n    });\n    planeMesh.material.enableTexture('diffuseMap');\n    this.groupGL.add(planeMesh);\n    this._planeMesh = planeMesh;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var particleSurface = this._particleSurface; // Set particleType before set others.\n\n    particleSurface.setParticleType(seriesModel.get('particleType'));\n    particleSurface.setSupersampling(seriesModel.get('supersampling'));\n\n    this._updateData(seriesModel, api);\n\n    this._updateCamera(api.getWidth(), api.getHeight(), api.getDevicePixelRatio());\n\n    var particleDensity = retrieve.firstNotNull(seriesModel.get('particleDensity'), 128);\n    particleSurface.setParticleDensity(particleDensity, particleDensity);\n    var planeMesh = this._planeMesh;\n    var time = +new Date();\n    var self = this;\n    var firstFrame = true;\n    planeMesh.__percent = 0;\n    planeMesh.stopAnimation();\n    planeMesh.animate('', {\n      loop: true\n    }).when(100000, {\n      __percent: 1\n    }).during(function () {\n      var timeNow = +new Date();\n      var dTime = Math.min(timeNow - time, 20);\n      time = time + dTime;\n\n      if (self._renderer) {\n        particleSurface.update(self._renderer, api, dTime / 1000, firstFrame);\n        planeMesh.material.set('diffuseMap', particleSurface.getSurfaceTexture()); // planeMesh.material.set('diffuseMap', self._particleSurface.vectorFieldTexture);\n      }\n\n      firstFrame = false;\n    }).start();\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var color = graphicGL.parseColor(itemStyleModel.get('color'));\n    color[3] *= retrieve.firstNotNull(itemStyleModel.get('opacity'), 1);\n    planeMesh.material.set('color', color);\n    particleSurface.setColorTextureImage(seriesModel.get('colorTexture'), api);\n    particleSurface.setParticleSize(seriesModel.get('particleSize'));\n    particleSurface.particleSpeedScaling = seriesModel.get('particleSpeed');\n    particleSurface.motionBlurFactor = 1.0 - Math.pow(0.1, seriesModel.get('particleTrail'));\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    this._updateData(seriesModel, api);\n  },\n  afterRender: function (globeModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n    this._renderer = renderer;\n  },\n  _updateData: function (seriesModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var dims = coordSys.dimensions.map(function (coordDim) {\n      return seriesModel.coordDimToDataDim(coordDim)[0];\n    });\n    var data = seriesModel.getData();\n    var xExtent = data.getDataExtent(dims[0]);\n    var yExtent = data.getDataExtent(dims[1]);\n    var gridWidth = seriesModel.get('gridWidth');\n    var gridHeight = seriesModel.get('gridHeight');\n\n    if (gridWidth == null || gridWidth === 'auto') {\n      // TODO not accurate.\n      var aspect = (xExtent[1] - xExtent[0]) / (yExtent[1] - yExtent[0]);\n      gridWidth = Math.round(Math.sqrt(aspect * data.count()));\n    }\n\n    if (gridHeight == null || gridHeight === 'auto') {\n      gridHeight = Math.ceil(data.count() / gridWidth);\n    }\n\n    var vectorFieldTexture = this._particleSurface.vectorFieldTexture; // Half Float needs Uint16Array\n\n    var pixels = vectorFieldTexture.pixels;\n\n    if (!pixels || pixels.length !== gridHeight * gridWidth * 4) {\n      pixels = vectorFieldTexture.pixels = new Float32Array(gridWidth * gridHeight * 4);\n    } else {\n      for (var i = 0; i < pixels.length; i++) {\n        pixels[i] = 0;\n      }\n    }\n\n    var maxMag = 0;\n    var minMag = Infinity;\n    var points = new Float32Array(data.count() * 2);\n    var offset = 0;\n    var bbox = [[Infinity, Infinity], [-Infinity, -Infinity]];\n    data.each([dims[0], dims[1], 'vx', 'vy'], function (x, y, vx, vy) {\n      var pt = coordSys.dataToPoint([x, y]);\n      points[offset++] = pt[0];\n      points[offset++] = pt[1];\n      bbox[0][0] = Math.min(pt[0], bbox[0][0]);\n      bbox[0][1] = Math.min(pt[1], bbox[0][1]);\n      bbox[1][0] = Math.max(pt[0], bbox[1][0]);\n      bbox[1][1] = Math.max(pt[1], bbox[1][1]);\n      var mag = Math.sqrt(vx * vx + vy * vy);\n      maxMag = Math.max(maxMag, mag);\n      minMag = Math.min(minMag, mag);\n    });\n    data.each(['vx', 'vy'], function (vx, vy, i) {\n      var xPix = Math.round((points[i * 2] - bbox[0][0]) / (bbox[1][0] - bbox[0][0]) * (gridWidth - 1));\n      var yPix = gridHeight - 1 - Math.round((points[i * 2 + 1] - bbox[0][1]) / (bbox[1][1] - bbox[0][1]) * (gridHeight - 1));\n      var idx = (yPix * gridWidth + xPix) * 4;\n      pixels[idx] = vx / maxMag * 0.5 + 0.5;\n      pixels[idx + 1] = vy / maxMag * 0.5 + 0.5;\n      pixels[idx + 3] = 1;\n    });\n    vectorFieldTexture.width = gridWidth;\n    vectorFieldTexture.height = gridHeight;\n\n    if (seriesModel.get('coordinateSystem') === 'bmap') {\n      this._fillEmptyPixels(vectorFieldTexture);\n    }\n\n    vectorFieldTexture.dirty();\n\n    this._updatePlanePosition(bbox[0], bbox[1], seriesModel, api);\n\n    this._updateGradientTexture(data.getVisual('visualMeta'), [minMag, maxMag]);\n  },\n  // PENDING Use grid mesh ? or delaunay triangulation?\n  _fillEmptyPixels: function (texture) {\n    var pixels = texture.pixels;\n    var width = texture.width;\n    var height = texture.height;\n\n    function fetchPixel(x, y, rg) {\n      x = Math.max(Math.min(x, width - 1), 0);\n      y = Math.max(Math.min(y, height - 1), 0);\n      var idx = (y * (width - 1) + x) * 4;\n\n      if (pixels[idx + 3] === 0) {\n        return false;\n      }\n\n      rg[0] = pixels[idx];\n      rg[1] = pixels[idx + 1];\n      return true;\n    }\n\n    function addPixel(a, b, out) {\n      out[0] = a[0] + b[0];\n      out[1] = a[1] + b[1];\n    }\n\n    var center = [],\n        left = [],\n        right = [],\n        top = [],\n        bottom = [];\n    var weight = 0;\n\n    for (var y = 0; y < height; y++) {\n      for (var x = 0; x < width; x++) {\n        var idx = (y * (width - 1) + x) * 4;\n\n        if (pixels[idx + 3] === 0) {\n          weight = center[0] = center[1] = 0;\n\n          if (fetchPixel(x - 1, y, left)) {\n            weight++;\n            addPixel(left, center, center);\n          }\n\n          if (fetchPixel(x + 1, y, right)) {\n            weight++;\n            addPixel(right, center, center);\n          }\n\n          if (fetchPixel(x, y - 1, top)) {\n            weight++;\n            addPixel(top, center, center);\n          }\n\n          if (fetchPixel(x, y + 1, bottom)) {\n            weight++;\n            addPixel(bottom, center, center);\n          }\n\n          center[0] /= weight;\n          center[1] /= weight; // PENDING If overwrite. bilinear interpolation.\n\n          pixels[idx] = center[0];\n          pixels[idx + 1] = center[1];\n        }\n\n        pixels[idx + 3] = 1;\n      }\n    }\n  },\n  _updateGradientTexture: function (visualMeta, magExtent) {\n    if (!visualMeta || !visualMeta.length) {\n      this._particleSurface.setGradientTexture(null);\n\n      return;\n    } // TODO Different dimensions\n\n\n    this._gradientTexture = this._gradientTexture || new graphicGL.Texture2D({\n      image: document.createElement('canvas')\n    });\n    var gradientTexture = this._gradientTexture;\n    var canvas = gradientTexture.image;\n    canvas.width = 200;\n    canvas.height = 1;\n    var ctx = canvas.getContext('2d');\n    var gradient = ctx.createLinearGradient(0, 0.5, canvas.width, 0.5);\n    visualMeta[0].stops.forEach(function (stop) {\n      var offset;\n\n      if (magExtent[1] === magExtent[0]) {\n        offset = 0;\n      } else {\n        offset = stop.value / magExtent[1];\n        offset = Math.min(Math.max(offset, 0), 1);\n      }\n\n      gradient.addColorStop(offset, stop.color);\n    });\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    gradientTexture.dirty();\n\n    this._particleSurface.setGradientTexture(this._gradientTexture);\n  },\n  _updatePlanePosition: function (leftTop, rightBottom, seriesModel, api) {\n    var limitedResult = this._limitInViewportAndFullFill(leftTop, rightBottom, seriesModel, api);\n\n    leftTop = limitedResult.leftTop;\n    rightBottom = limitedResult.rightBottom;\n\n    this._particleSurface.setRegion(limitedResult.region);\n\n    this._planeMesh.position.set((leftTop[0] + rightBottom[0]) / 2, api.getHeight() - (leftTop[1] + rightBottom[1]) / 2, 0);\n\n    var width = rightBottom[0] - leftTop[0];\n    var height = rightBottom[1] - leftTop[1];\n\n    this._planeMesh.scale.set(width / 2, height / 2, 1);\n\n    this._particleSurface.resize(Math.max(Math.min(width, 2048), 1), Math.max(Math.min(height, 2048), 1));\n\n    if (this._renderer) {\n      this._particleSurface.clearFrame(this._renderer);\n    }\n  },\n  _limitInViewportAndFullFill: function (leftTop, rightBottom, seriesModel, api) {\n    var newLeftTop = [Math.max(leftTop[0], 0), Math.max(leftTop[1], 0)];\n    var newRightBottom = [Math.min(rightBottom[0], api.getWidth()), Math.min(rightBottom[1], api.getHeight())]; // Tiliing in lng orientation.\n\n    if (seriesModel.get('coordinateSystem') === 'bmap') {\n      var lngRange = seriesModel.getData().getDataExtent(seriesModel.coordDimToDataDim('lng')[0]); // PENDING, consider grid density\n\n      var isContinuous = Math.floor(lngRange[1] - lngRange[0]) >= 359;\n\n      if (isContinuous) {\n        if (newLeftTop[0] > 0) {\n          newLeftTop[0] = 0;\n        }\n\n        if (newRightBottom[0] < api.getWidth()) {\n          newRightBottom[0] = api.getWidth();\n        }\n      }\n    }\n\n    var width = rightBottom[0] - leftTop[0];\n    var height = rightBottom[1] - leftTop[1];\n    var newWidth = newRightBottom[0] - newLeftTop[0];\n    var newHeight = newRightBottom[1] - newLeftTop[1];\n    var region = [(newLeftTop[0] - leftTop[0]) / width, 1.0 - newHeight / height - (newLeftTop[1] - leftTop[1]) / height, newWidth / width, newHeight / height];\n    return {\n      leftTop: newLeftTop,\n      rightBottom: newRightBottom,\n      region: region\n    };\n  },\n  _updateCamera: function (width, height, dpr) {\n    this.viewGL.setViewport(0, 0, width, height, dpr);\n    var camera = this.viewGL.camera; // FIXME  bottom can't be larger than top\n\n    camera.left = camera.bottom = 0;\n    camera.top = height;\n    camera.right = width;\n    camera.near = 0;\n    camera.far = 100;\n    camera.position.z = 10;\n  },\n  remove: function () {\n    this._planeMesh.stopAnimation();\n\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    if (this._renderer) {\n      this._particleSurface.dispose(this._renderer);\n    }\n\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport FlowGLSeries from './FlowGLSeries';\nimport FlowGLView from './FlowGLView';\nexport function install(registers) {\n  registers.registerChartView(FlowGLView);\n  registers.registerSeriesModel(FlowGLSeries);\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './flowGL/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport Graph from 'echarts/lib/data/Graph';\nimport linkList from 'echarts/lib/data/helper/linkList';\nimport retrieve from '../../util/retrieve';\nexport default function (nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(retrieve.firstNotNull( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(retrieve.firstNotNull(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var nodeData; // FIXME, support more coordinate systems.\n\n  var dimensionNames = echarts.helper.createDimensions(nodes, {\n    coordDimensions: ['value']\n  });\n  nodeData = new echarts.List(dimensionNames, hostModel);\n  nodeData.initData(nodes);\n  var edgeData = new echarts.List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n;","import * as echarts from 'echarts/lib/echarts';\nimport createGraphFromNodeEdge from './createGraphFromNodeEdge';\nimport formatUtil from '../../util/format';\nvar GraphSeries = echarts.SeriesModel.extend({\n  type: 'series.graphGL',\n  visualStyleAccessPath: 'itemStyle',\n  hasSymbolVisual: true,\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n\n    this._updateCategoriesData();\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n\n    if (text == null) {\n      var data = this.getData();\n      var lastDim = data.dimensions[data.dimensions.length - 1];\n      text = data.get(lastDim, dataIndex);\n    }\n\n    return text;\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        const categoriesModels = self._categoriesModels;\n        const categoryIdx = model.getShallow('category');\n        const categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      }); // TODO Inherit resolveParentPath by default in Model#getModel?\n\n      const oldGetModel = ecModel.getModel([]).getModel;\n\n      function newGetModel(path, parentModel) {\n        const model = oldGetModel.call(this, path, parentModel);\n        model.resolveParentPath = resolveParentPath;\n        return model;\n      }\n\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.resolveParentPath = resolveParentPath;\n        model.getModel = newGetModel;\n        return model;\n      });\n\n      function resolveParentPath(pathArr) {\n        if (pathArr && (pathArr[0] === 'label' || pathArr[1] === 'label')) {\n          const newPathArr = pathArr.slice();\n\n          if (pathArr[0] === 'label') {\n            newPathArr[0] = 'edgeLabel';\n          } else if (pathArr[1] === 'label') {\n            newPathArr[1] = 'edgeLabel';\n          }\n\n          return newPathArr;\n        }\n\n        return pathArr;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = echarts.format.encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + echarts.format.encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = (this.option.categories || []).map(function (category) {\n      // Data must has value\n      return category.value != null ? category : Object.assign({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new echarts.List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setView: function (payload) {\n    if (payload.zoom != null) {\n      this.option.zoom = payload.zoom;\n    }\n\n    if (payload.offset != null) {\n      this.option.offset = payload.offset;\n    }\n  },\n  setNodePosition: function (points) {\n    for (var i = 0; i < points.length / 2; i++) {\n      var x = points[i * 2];\n      var y = points[i * 2 + 1];\n      var opt = this.getData().getRawDataItem(i);\n      opt.x = x;\n      opt.y = y;\n    }\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 10,\n    z: 2,\n    legendHoverLink: true,\n    // Only support forceAtlas2\n    layout: 'forceAtlas2',\n    // Configuration of force directed layout\n    forceAtlas2: {\n      initLayout: null,\n      GPU: true,\n      steps: 1,\n      // barnesHutOptimize\n      // Maxp layout steps.\n      maxSteps: 1000,\n      repulsionByDegree: true,\n      linLogMode: false,\n      strongGravityMode: false,\n      gravity: 1.0,\n      // scaling: 1.0,\n      edgeWeightInfluence: 1.0,\n      // Edge weight range.\n      edgeWeight: [1, 4],\n      // Node weight range.\n      nodeWeight: [1, 4],\n      // jitterTolerence: 0.1,\n      preventOverlap: false,\n      gravityCenter: null\n    },\n    focusNodeAdjacency: true,\n    focusNodeAdjacencyOn: 'mouseover',\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 5,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      show: false,\n      formatter: '{b}',\n      position: 'right',\n      distance: 5,\n      textStyle: {\n        fontSize: 14\n      }\n    },\n    itemStyle: {},\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      opacity: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animation: false\n  }\n});\nexport default GraphSeries;","export default \"@export ecgl.forceAtlas2.updateNodeRepulsion\\n\\n#define NODE_COUNT 0\\n\\nuniform sampler2D positionTex;\\n\\nuniform vec2 textureSize;\\nuniform float gravity;\\nuniform float scaling;\\nuniform vec2 gravityCenter;\\n\\nuniform bool strongGravityMode;\\nuniform bool preventOverlap;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main() {\\n\\n vec4 n0 = texture2D(positionTex, v_Texcoord);\\n\\n vec2 force = vec2(0.0);\\n for (int i = 0; i < NODE_COUNT; i++) {\\n vec2 uv = vec2(\\n mod(float(i), textureSize.x) / (textureSize.x - 1.0),\\n floor(float(i) / textureSize.x) / (textureSize.y - 1.0)\\n );\\n vec4 n1 = texture2D(positionTex, uv);\\n\\n vec2 dir = n0.xy - n1.xy;\\n float d2 = dot(dir, dir);\\n\\n if (d2 > 0.0) {\\n float factor = 0.0;\\n if (preventOverlap) {\\n float d = sqrt(d2);\\n d = d - n0.w - n1.w;\\n if (d > 0.0) {\\n factor = scaling * n0.z * n1.z / (d * d);\\n }\\n else if (d < 0.0) {\\n factor = scaling * 100.0 * n0.z * n1.z;\\n }\\n }\\n else {\\n factor = scaling * n0.z * n1.z / d2;\\n }\\n force += dir * factor;\\n }\\n }\\n\\n vec2 dir = gravityCenter - n0.xy;\\n float d = 1.0;\\n if (!strongGravityMode) {\\n d = length(dir);\\n }\\n\\n force += dir * n0.z * gravity / (d + 1.0);\\n\\n gl_FragColor = vec4(force, 0.0, 1.0);\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.updateEdgeAttraction.vertex\\n\\nattribute vec2 node1;\\nattribute vec2 node2;\\nattribute float weight;\\n\\nuniform sampler2D positionTex;\\nuniform float edgeWeightInfluence;\\nuniform bool preventOverlap;\\nuniform bool linLogMode;\\n\\nuniform vec2 windowSize: WINDOW_SIZE;\\n\\nvarying vec2 v_Force;\\n\\nvoid main() {\\n\\n vec4 n0 = texture2D(positionTex, node1);\\n vec4 n1 = texture2D(positionTex, node2);\\n\\n vec2 dir = n1.xy - n0.xy;\\n float d = length(dir);\\n float w;\\n if (edgeWeightInfluence == 0.0) {\\n w = 1.0;\\n }\\n else if (edgeWeightInfluence == 1.0) {\\n w = weight;\\n }\\n else {\\n w = pow(weight, edgeWeightInfluence);\\n }\\n vec2 offset = vec2(1.0 / windowSize.x, 1.0 / windowSize.y);\\n vec2 scale = vec2((windowSize.x - 1.0) / windowSize.x, (windowSize.y - 1.0) / windowSize.y);\\n vec2 pos = node1 * scale * 2.0 - 1.0;\\n gl_Position = vec4(pos + offset, 0.0, 1.0);\\n gl_PointSize = 1.0;\\n\\n float factor;\\n if (preventOverlap) {\\n d = d - n1.w - n0.w;\\n }\\n if (d <= 0.0) {\\n v_Force = vec2(0.0);\\n return;\\n }\\n\\n if (linLogMode) {\\n factor = w * log(d) / d;\\n }\\n else {\\n factor = w;\\n }\\n v_Force = dir * factor;\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.updateEdgeAttraction.fragment\\n\\nvarying vec2 v_Force;\\n\\nvoid main() {\\n gl_FragColor = vec4(v_Force, 0.0, 0.0);\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.calcWeightedSum.vertex\\n\\nattribute vec2 node;\\n\\nvarying vec2 v_NodeUv;\\n\\nvoid main() {\\n\\n v_NodeUv = node;\\n gl_Position = vec4(0.0, 0.0, 0.0, 1.0);\\n gl_PointSize = 1.0;\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.calcWeightedSum.fragment\\n\\nvarying vec2 v_NodeUv;\\n\\nuniform sampler2D positionTex;\\nuniform sampler2D forceTex;\\nuniform sampler2D forcePrevTex;\\n\\nvoid main() {\\n vec2 force = texture2D(forceTex, v_NodeUv).rg;\\n vec2 forcePrev = texture2D(forcePrevTex, v_NodeUv).rg;\\n\\n float mass = texture2D(positionTex, v_NodeUv).z;\\n float swing = length(force - forcePrev) * mass;\\n float traction = length(force + forcePrev) * 0.5 * mass;\\n\\n gl_FragColor = vec4(swing, traction, 0.0, 0.0);\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.calcGlobalSpeed\\n\\nuniform sampler2D globalSpeedPrevTex;\\nuniform sampler2D weightedSumTex;\\nuniform float jitterTolerence;\\n\\nvoid main() {\\n vec2 weightedSum = texture2D(weightedSumTex, vec2(0.5)).xy;\\n float prevGlobalSpeed = texture2D(globalSpeedPrevTex, vec2(0.5)).x;\\n float globalSpeed = jitterTolerence * jitterTolerence\\n * weightedSum.y / weightedSum.x;\\n if (prevGlobalSpeed > 0.0) {\\n globalSpeed = min(globalSpeed / prevGlobalSpeed, 1.5) * prevGlobalSpeed;\\n }\\n gl_FragColor = vec4(globalSpeed, 0.0, 0.0, 1.0);\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.updatePosition\\n\\nuniform sampler2D forceTex;\\nuniform sampler2D forcePrevTex;\\nuniform sampler2D positionTex;\\nuniform sampler2D globalSpeedTex;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main() {\\n vec2 force = texture2D(forceTex, v_Texcoord).xy;\\n vec2 forcePrev = texture2D(forcePrevTex, v_Texcoord).xy;\\n vec4 node = texture2D(positionTex, v_Texcoord);\\n\\n float globalSpeed = texture2D(globalSpeedTex, vec2(0.5)).r;\\n float swing = length(force - forcePrev);\\n float speed = 0.1 * globalSpeed / (0.1 + globalSpeed * sqrt(swing));\\n\\n float df = length(force);\\n if (df > 0.0) {\\n speed = min(df * speed, 10.0) / df;\\n\\n gl_FragColor = vec4(node.xy + speed * force, node.zw);\\n }\\n else {\\n gl_FragColor = node;\\n }\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.edges.vertex\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec2 node;\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n\\nuniform sampler2D positionTex;\\n\\nvoid main()\\n{\\n gl_Position = worldViewProjection * vec4(\\n texture2D(positionTex, node).xy, -10.0, 1.0\\n );\\n v_Color = a_Color;\\n}\\n@end\\n\\n@export ecgl.forceAtlas2.edges.fragment\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\nvarying vec4 v_Color;\\nvoid main() {\\n gl_FragColor = color * v_Color;\\n}\\n@end\";","import graphicGL from '../../util/graphicGL';\nimport Pass from 'claygl/src/compositor/Pass';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport forceAtlas2Code from './forceAtlas2.glsl.js';\ngraphicGL.Shader.import(forceAtlas2Code);\nvar defaultConfigs = {\n  repulsionByDegree: true,\n  linLogMode: false,\n  strongGravityMode: false,\n  gravity: 1.0,\n  scaling: 1.0,\n  edgeWeightInfluence: 1.0,\n  jitterTolerence: 0.1,\n  preventOverlap: false,\n  dissuadeHubs: false,\n  gravityCenter: null\n};\n\nfunction ForceAtlas2GPU(options) {\n  var textureOpt = {\n    type: graphicGL.Texture.FLOAT,\n    minFilter: graphicGL.Texture.NEAREST,\n    magFilter: graphicGL.Texture.NEAREST\n  };\n  this._positionSourceTex = new graphicGL.Texture2D(textureOpt);\n  this._positionSourceTex.flipY = false;\n  this._positionTex = new graphicGL.Texture2D(textureOpt);\n  this._positionPrevTex = new graphicGL.Texture2D(textureOpt);\n  this._forceTex = new graphicGL.Texture2D(textureOpt);\n  this._forcePrevTex = new graphicGL.Texture2D(textureOpt);\n  this._weightedSumTex = new graphicGL.Texture2D(textureOpt);\n  this._weightedSumTex.width = this._weightedSumTex.height = 1;\n  this._globalSpeedTex = new graphicGL.Texture2D(textureOpt);\n  this._globalSpeedPrevTex = new graphicGL.Texture2D(textureOpt);\n  this._globalSpeedTex.width = this._globalSpeedTex.height = 1;\n  this._globalSpeedPrevTex.width = this._globalSpeedPrevTex.height = 1;\n  this._nodeRepulsionPass = new Pass({\n    fragment: graphicGL.Shader.source('ecgl.forceAtlas2.updateNodeRepulsion')\n  });\n  this._positionPass = new Pass({\n    fragment: graphicGL.Shader.source('ecgl.forceAtlas2.updatePosition')\n  });\n  this._globalSpeedPass = new Pass({\n    fragment: graphicGL.Shader.source('ecgl.forceAtlas2.calcGlobalSpeed')\n  });\n  this._copyPass = new Pass({\n    fragment: graphicGL.Shader.source('clay.compositor.output')\n  });\n\n  var additiveBlend = function (gl) {\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ONE);\n  };\n\n  this._edgeForceMesh = new graphicGL.Mesh({\n    geometry: new graphicGL.Geometry({\n      attributes: {\n        node1: new graphicGL.Geometry.Attribute('node1', 'float', 2),\n        node2: new graphicGL.Geometry.Attribute('node2', 'float', 2),\n        weight: new graphicGL.Geometry.Attribute('weight', 'float', 1)\n      },\n      dynamic: true,\n      mainAttribute: 'node1'\n    }),\n    material: new graphicGL.Material({\n      transparent: true,\n      shader: graphicGL.createShader('ecgl.forceAtlas2.updateEdgeAttraction'),\n      blend: additiveBlend,\n      depthMask: false,\n      depthText: false\n    }),\n    mode: graphicGL.Mesh.POINTS\n  });\n  this._weightedSumMesh = new graphicGL.Mesh({\n    geometry: new graphicGL.Geometry({\n      attributes: {\n        node: new graphicGL.Geometry.Attribute('node', 'float', 2)\n      },\n      dynamic: true,\n      mainAttribute: 'node'\n    }),\n    material: new graphicGL.Material({\n      transparent: true,\n      shader: graphicGL.createShader('ecgl.forceAtlas2.calcWeightedSum'),\n      blend: additiveBlend,\n      depthMask: false,\n      depthText: false\n    }),\n    mode: graphicGL.Mesh.POINTS\n  });\n  this._framebuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._dummyCamera = new graphicGL.OrthographicCamera({\n    left: -1,\n    right: 1,\n    top: 1,\n    bottom: -1,\n    near: 0,\n    far: 100\n  });\n  this._globalSpeed = 0;\n}\n\nForceAtlas2GPU.prototype.updateOption = function (options) {\n  // Default config\n  for (var name in defaultConfigs) {\n    this[name] = defaultConfigs[name];\n  } // Config according to data scale\n\n\n  var nNodes = this._nodes.length;\n\n  if (nNodes > 50000) {\n    this.jitterTolerence = 10;\n  } else if (nNodes > 5000) {\n    this.jitterTolerence = 1;\n  } else {\n    this.jitterTolerence = 0.1;\n  }\n\n  if (nNodes > 100) {\n    this.scaling = 2.0;\n  } else {\n    this.scaling = 10.0;\n  } // this.edgeWeightInfluence = 1;\n  // this.gravity = 1;\n  // this.strongGravityMode = false;\n\n\n  if (options) {\n    for (var name in defaultConfigs) {\n      if (options[name] != null) {\n        this[name] = options[name];\n      }\n    }\n  }\n\n  if (this.repulsionByDegree) {\n    var positionBuffer = this._positionSourceTex.pixels;\n\n    for (var i = 0; i < this._nodes.length; i++) {\n      positionBuffer[i * 4 + 2] = (this._nodes[i].degree || 0) + 1;\n    }\n  }\n};\n\nForceAtlas2GPU.prototype._updateGravityCenter = function (options) {\n  var nodes = this._nodes;\n  var edges = this._edges;\n\n  if (!this.gravityCenter) {\n    var min = [Infinity, Infinity];\n    var max = [-Infinity, -Infinity];\n\n    for (var i = 0; i < nodes.length; i++) {\n      min[0] = Math.min(nodes[i].x, min[0]);\n      min[1] = Math.min(nodes[i].y, min[1]);\n      max[0] = Math.max(nodes[i].x, max[0]);\n      max[1] = Math.max(nodes[i].y, max[1]);\n    }\n\n    this._gravityCenter = [(min[0] + max[0]) * 0.5, (min[1] + max[1]) * 0.5];\n  } else {\n    this._gravityCenter = this.gravityCenter;\n  } // Update inDegree, outDegree\n\n\n  for (var i = 0; i < edges.length; i++) {\n    var node1 = edges[i].node1;\n    var node2 = edges[i].node2;\n    nodes[node1].degree = (nodes[node1].degree || 0) + 1;\n    nodes[node2].degree = (nodes[node2].degree || 0) + 1;\n  }\n};\n/**\n * @param {Array.<Object>} [{ x, y, mass }] nodes\n * @param {Array.<Object>} [{ node1, node2, weight }] edges\n */\n\n\nForceAtlas2GPU.prototype.initData = function (nodes, edges) {\n  this._nodes = nodes;\n  this._edges = edges;\n\n  this._updateGravityCenter();\n\n  var textureWidth = Math.ceil(Math.sqrt(nodes.length));\n  var textureHeight = textureWidth;\n  var positionBuffer = new Float32Array(textureWidth * textureHeight * 4);\n\n  this._resize(textureWidth, textureHeight);\n\n  var offset = 0;\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    positionBuffer[offset++] = node.x || 0;\n    positionBuffer[offset++] = node.y || 0;\n    positionBuffer[offset++] = node.mass || 1;\n    positionBuffer[offset++] = node.size || 1;\n  }\n\n  this._positionSourceTex.pixels = positionBuffer;\n  var edgeGeometry = this._edgeForceMesh.geometry;\n  var edgeLen = edges.length;\n  edgeGeometry.attributes.node1.init(edgeLen * 2);\n  edgeGeometry.attributes.node2.init(edgeLen * 2);\n  edgeGeometry.attributes.weight.init(edgeLen * 2);\n  var uv = [];\n\n  for (var i = 0; i < edges.length; i++) {\n    var attributes = edgeGeometry.attributes;\n    var weight = edges[i].weight;\n\n    if (weight == null) {\n      weight = 1;\n    } // Two way.\n\n\n    attributes.node1.set(i, this.getNodeUV(edges[i].node1, uv));\n    attributes.node2.set(i, this.getNodeUV(edges[i].node2, uv));\n    attributes.weight.set(i, weight);\n    attributes.node1.set(i + edgeLen, this.getNodeUV(edges[i].node2, uv));\n    attributes.node2.set(i + edgeLen, this.getNodeUV(edges[i].node1, uv));\n    attributes.weight.set(i + edgeLen, weight);\n  }\n\n  var weigtedSumGeo = this._weightedSumMesh.geometry;\n  weigtedSumGeo.attributes.node.init(nodes.length);\n\n  for (var i = 0; i < nodes.length; i++) {\n    weigtedSumGeo.attributes.node.set(i, this.getNodeUV(i, uv));\n  }\n\n  edgeGeometry.dirty();\n  weigtedSumGeo.dirty();\n\n  this._nodeRepulsionPass.material.define('fragment', 'NODE_COUNT', nodes.length);\n\n  this._nodeRepulsionPass.material.setUniform('textureSize', [textureWidth, textureHeight]);\n\n  this._inited = false;\n  this._frame = 0;\n};\n\nForceAtlas2GPU.prototype.getNodes = function () {\n  return this._nodes;\n};\n\nForceAtlas2GPU.prototype.getEdges = function () {\n  return this._edges;\n};\n\nForceAtlas2GPU.prototype.step = function (renderer) {\n  if (!this._inited) {\n    this._initFromSource(renderer);\n\n    this._inited = true;\n  }\n\n  this._frame++;\n\n  this._framebuffer.attach(this._forceTex);\n\n  this._framebuffer.bind(renderer);\n\n  var nodeRepulsionPass = this._nodeRepulsionPass; // Calc node repulsion, gravity\n\n  nodeRepulsionPass.setUniform('strongGravityMode', this.strongGravityMode);\n  nodeRepulsionPass.setUniform('gravity', this.gravity);\n  nodeRepulsionPass.setUniform('gravityCenter', this._gravityCenter);\n  nodeRepulsionPass.setUniform('scaling', this.scaling);\n  nodeRepulsionPass.setUniform('preventOverlap', this.preventOverlap);\n  nodeRepulsionPass.setUniform('positionTex', this._positionPrevTex);\n  nodeRepulsionPass.render(renderer); // Calc edge attraction force\n\n  var edgeForceMesh = this._edgeForceMesh;\n  edgeForceMesh.material.set('linLogMode', this.linLogMode);\n  edgeForceMesh.material.set('edgeWeightInfluence', this.edgeWeightInfluence);\n  edgeForceMesh.material.set('preventOverlap', this.preventOverlap);\n  edgeForceMesh.material.set('positionTex', this._positionPrevTex);\n  renderer.gl.enable(renderer.gl.BLEND);\n  renderer.renderPass([edgeForceMesh], this._dummyCamera); // Calc weighted sum.\n\n  this._framebuffer.attach(this._weightedSumTex);\n\n  renderer.gl.clearColor(0, 0, 0, 0);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n  renderer.gl.enable(renderer.gl.BLEND);\n  var weightedSumMesh = this._weightedSumMesh;\n  weightedSumMesh.material.set('positionTex', this._positionPrevTex);\n  weightedSumMesh.material.set('forceTex', this._forceTex);\n  weightedSumMesh.material.set('forcePrevTex', this._forcePrevTex);\n  renderer.renderPass([weightedSumMesh], this._dummyCamera); // Calc global speed.\n\n  this._framebuffer.attach(this._globalSpeedTex);\n\n  var globalSpeedPass = this._globalSpeedPass;\n  globalSpeedPass.setUniform('globalSpeedPrevTex', this._globalSpeedPrevTex);\n  globalSpeedPass.setUniform('weightedSumTex', this._weightedSumTex);\n  globalSpeedPass.setUniform('jitterTolerence', this.jitterTolerence);\n  renderer.gl.disable(renderer.gl.BLEND);\n  globalSpeedPass.render(renderer); // Update position.\n\n  var positionPass = this._positionPass;\n\n  this._framebuffer.attach(this._positionTex);\n\n  positionPass.setUniform('globalSpeedTex', this._globalSpeedTex);\n  positionPass.setUniform('positionTex', this._positionPrevTex);\n  positionPass.setUniform('forceTex', this._forceTex);\n  positionPass.setUniform('forcePrevTex', this._forcePrevTex);\n  positionPass.render(renderer);\n\n  this._framebuffer.unbind(renderer);\n\n  this._swapTexture();\n};\n\nForceAtlas2GPU.prototype.update = function (renderer, steps, cb) {\n  if (steps == null) {\n    steps = 1;\n  }\n\n  steps = Math.max(steps, 1);\n\n  for (var i = 0; i < steps; i++) {\n    this.step(renderer);\n  }\n\n  cb && cb();\n};\n\nForceAtlas2GPU.prototype.getNodePositionTexture = function () {\n  return this._inited // Texture already been swapped.\n  ? this._positionPrevTex : this._positionSourceTex;\n};\n\nForceAtlas2GPU.prototype.getNodeUV = function (nodeIndex, uv) {\n  uv = uv || [];\n  var textureWidth = this._positionTex.width;\n  var textureHeight = this._positionTex.height;\n  uv[0] = nodeIndex % textureWidth / (textureWidth - 1);\n  uv[1] = Math.floor(nodeIndex / textureWidth) / (textureHeight - 1) || 0;\n  return uv;\n};\n\nForceAtlas2GPU.prototype.getNodePosition = function (renderer, out) {\n  var positionArr = this._positionArr;\n  var width = this._positionTex.width;\n  var height = this._positionTex.height;\n  var size = width * height;\n\n  if (!positionArr || positionArr.length !== size * 4) {\n    positionArr = this._positionArr = new Float32Array(size * 4);\n  }\n\n  this._framebuffer.bind(renderer);\n\n  this._framebuffer.attach(this._positionPrevTex);\n\n  renderer.gl.readPixels(0, 0, width, height, renderer.gl.RGBA, renderer.gl.FLOAT, positionArr);\n\n  this._framebuffer.unbind(renderer);\n\n  if (!out) {\n    out = new Float32Array(this._nodes.length * 2);\n  }\n\n  for (var i = 0; i < this._nodes.length; i++) {\n    out[i * 2] = positionArr[i * 4];\n    out[i * 2 + 1] = positionArr[i * 4 + 1];\n  }\n\n  return out;\n};\n\nForceAtlas2GPU.prototype.getTextureData = function (renderer, textureName) {\n  var tex = this['_' + textureName + 'Tex'];\n  var width = tex.width;\n  var height = tex.height;\n\n  this._framebuffer.bind(renderer);\n\n  this._framebuffer.attach(tex);\n\n  var arr = new Float32Array(width * height * 4);\n  renderer.gl.readPixels(0, 0, width, height, renderer.gl.RGBA, renderer.gl.FLOAT, arr);\n\n  this._framebuffer.unbind(renderer);\n\n  return arr;\n};\n\nForceAtlas2GPU.prototype.getTextureSize = function () {\n  return {\n    width: this._positionTex.width,\n    height: this._positionTex.height\n  };\n};\n\nForceAtlas2GPU.prototype.isFinished = function (maxSteps) {\n  return this._frame > maxSteps;\n};\n\nForceAtlas2GPU.prototype._swapTexture = function () {\n  var tmp = this._positionPrevTex;\n  this._positionPrevTex = this._positionTex;\n  this._positionTex = tmp;\n  var tmp = this._forcePrevTex;\n  this._forcePrevTex = this._forceTex;\n  this._forceTex = tmp;\n  var tmp = this._globalSpeedPrevTex;\n  this._globalSpeedPrevTex = this._globalSpeedTex;\n  this._globalSpeedTex = tmp;\n};\n\nForceAtlas2GPU.prototype._initFromSource = function (renderer) {\n  this._framebuffer.attach(this._positionPrevTex);\n\n  this._framebuffer.bind(renderer);\n\n  this._copyPass.setUniform('texture', this._positionSourceTex);\n\n  this._copyPass.render(renderer);\n\n  renderer.gl.clearColor(0, 0, 0, 0);\n\n  this._framebuffer.attach(this._forcePrevTex);\n\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n\n  this._framebuffer.attach(this._globalSpeedPrevTex);\n\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n\n  this._framebuffer.unbind(renderer);\n};\n\nForceAtlas2GPU.prototype._resize = function (width, height) {\n  ['_positionSourceTex', '_positionTex', '_positionPrevTex', '_forceTex', '_forcePrevTex'].forEach(function (texName) {\n    this[texName].width = width;\n    this[texName].height = height;\n    this[texName].dirty();\n  }, this);\n};\n\nForceAtlas2GPU.prototype.dispose = function (renderer) {\n  this._framebuffer.dispose(renderer);\n\n  this._copyPass.dispose(renderer);\n\n  this._nodeRepulsionPass.dispose(renderer);\n\n  this._positionPass.dispose(renderer);\n\n  this._globalSpeedPass.dispose(renderer);\n\n  this._edgeForceMesh.geometry.dispose(renderer);\n\n  this._weightedSumMesh.geometry.dispose(renderer);\n\n  this._positionSourceTex.dispose(renderer);\n\n  this._positionTex.dispose(renderer);\n\n  this._positionPrevTex.dispose(renderer);\n\n  this._forceTex.dispose(renderer);\n\n  this._forcePrevTex.dispose(renderer);\n\n  this._weightedSumTex.dispose(renderer);\n\n  this._globalSpeedTex.dispose(renderer);\n\n  this._globalSpeedPrevTex.dispose(renderer);\n};\n\nexport default ForceAtlas2GPU;","/****************************\n * Vector2 math functions\n ***************************/\nfunction forceAtlas2Worker() {\n  var vec2 = {\n    create: function () {\n      return new Float32Array(2);\n    },\n    dist: function (a, b) {\n      var x = b[0] - a[0];\n      var y = b[1] - a[1];\n      return Math.sqrt(x * x + y * y);\n    },\n    len: function (a) {\n      var x = a[0];\n      var y = a[1];\n      return Math.sqrt(x * x + y * y);\n    },\n    scaleAndAdd: function (out, a, b, scale) {\n      out[0] = a[0] + b[0] * scale;\n      out[1] = a[1] + b[1] * scale;\n      return out;\n    },\n    scale: function (out, a, b) {\n      out[0] = a[0] * b;\n      out[1] = a[1] * b;\n      return out;\n    },\n    add: function (out, a, b) {\n      out[0] = a[0] + b[0];\n      out[1] = a[1] + b[1];\n      return out;\n    },\n    sub: function (out, a, b) {\n      out[0] = a[0] - b[0];\n      out[1] = a[1] - b[1];\n      return out;\n    },\n    normalize: function (out, a) {\n      var x = a[0];\n      var y = a[1];\n      var len = x * x + y * y;\n\n      if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n      }\n\n      return out;\n    },\n    negate: function (out, a) {\n      out[0] = -a[0];\n      out[1] = -a[1];\n      return out;\n    },\n    copy: function (out, a) {\n      out[0] = a[0];\n      out[1] = a[1];\n      return out;\n    },\n    set: function (out, x, y) {\n      out[0] = x;\n      out[1] = y;\n      return out;\n    }\n  };\n  /****************************\n   * Class: Region\n   ***************************/\n\n  function Region() {\n    this.subRegions = [];\n    this.nSubRegions = 0;\n    this.node = null;\n    this.mass = 0;\n    this.centerOfMass = null;\n    this.bbox = new Float32Array(4);\n    this.size = 0;\n  }\n\n  var regionProto = Region.prototype; // Reset before update\n\n  regionProto.beforeUpdate = function () {\n    for (var i = 0; i < this.nSubRegions; i++) {\n      this.subRegions[i].beforeUpdate();\n    }\n\n    this.mass = 0;\n\n    if (this.centerOfMass) {\n      this.centerOfMass[0] = 0;\n      this.centerOfMass[1] = 0;\n    }\n\n    this.nSubRegions = 0;\n    this.node = null;\n  }; // Clear after update\n\n\n  regionProto.afterUpdate = function () {\n    this.subRegions.length = this.nSubRegions;\n\n    for (var i = 0; i < this.nSubRegions; i++) {\n      this.subRegions[i].afterUpdate();\n    }\n  };\n\n  regionProto.addNode = function (node) {\n    if (this.nSubRegions === 0) {\n      if (this.node == null) {\n        this.node = node;\n        return;\n      } // Already have node, subdivide self.\n      else {\n          this._addNodeToSubRegion(this.node);\n\n          this.node = null;\n        }\n    }\n\n    this._addNodeToSubRegion(node);\n\n    this._updateCenterOfMass(node);\n  };\n\n  regionProto.findSubRegion = function (x, y) {\n    for (var i = 0; i < this.nSubRegions; i++) {\n      var region = this.subRegions[i];\n\n      if (region.contain(x, y)) {\n        return region;\n      }\n    }\n  };\n\n  regionProto.contain = function (x, y) {\n    return this.bbox[0] <= x && this.bbox[2] >= x && this.bbox[1] <= y && this.bbox[3] >= y;\n  };\n\n  regionProto.setBBox = function (minX, minY, maxX, maxY) {\n    // Min\n    this.bbox[0] = minX;\n    this.bbox[1] = minY; // Max\n\n    this.bbox[2] = maxX;\n    this.bbox[3] = maxY;\n    this.size = (maxX - minX + maxY - minY) / 2;\n  };\n\n  regionProto._newSubRegion = function () {\n    var subRegion = this.subRegions[this.nSubRegions];\n\n    if (!subRegion) {\n      subRegion = new Region();\n      this.subRegions[this.nSubRegions] = subRegion;\n    }\n\n    this.nSubRegions++;\n    return subRegion;\n  };\n\n  regionProto._addNodeToSubRegion = function (node) {\n    var subRegion = this.findSubRegion(node.position[0], node.position[1]);\n    var bbox = this.bbox;\n\n    if (!subRegion) {\n      var cx = (bbox[0] + bbox[2]) / 2;\n      var cy = (bbox[1] + bbox[3]) / 2;\n      var w = (bbox[2] - bbox[0]) / 2;\n      var h = (bbox[3] - bbox[1]) / 2;\n      var xi = node.position[0] >= cx ? 1 : 0;\n      var yi = node.position[1] >= cy ? 1 : 0;\n\n      var subRegion = this._newSubRegion(); // Min\n\n\n      subRegion.setBBox( // Min\n      xi * w + bbox[0], yi * h + bbox[1], // Max\n      (xi + 1) * w + bbox[0], (yi + 1) * h + bbox[1]);\n    }\n\n    subRegion.addNode(node);\n  };\n\n  regionProto._updateCenterOfMass = function (node) {\n    // Incrementally update\n    if (this.centerOfMass == null) {\n      this.centerOfMass = new Float32Array(2);\n    }\n\n    var x = this.centerOfMass[0] * this.mass;\n    var y = this.centerOfMass[1] * this.mass;\n    x += node.position[0] * node.mass;\n    y += node.position[1] * node.mass;\n    this.mass += node.mass;\n    this.centerOfMass[0] = x / this.mass;\n    this.centerOfMass[1] = y / this.mass;\n  };\n  /****************************\n   * Class: Graph Node\n   ***************************/\n\n\n  function GraphNode() {\n    this.position = new Float32Array(2);\n    this.force = vec2.create();\n    this.forcePrev = vec2.create(); // If repulsionByDegree is true\n    //  mass = inDegree + outDegree + 1\n    // Else\n    //  mass is manually set\n\n    this.mass = 1;\n    this.inDegree = 0;\n    this.outDegree = 0; // Optional\n    // this.size = 1;\n  }\n  /****************************\n   * Class: Graph Edge\n   ***************************/\n\n\n  function GraphEdge(source, target) {\n    this.source = source;\n    this.target = target;\n    this.weight = 1;\n  }\n  /****************************\n   * Class: ForceStlas2\n   ***************************/\n\n\n  function ForceAtlas2() {\n    //-------------\n    // Configs\n    // If auto settings is true\n    //  barnesHutOptimize,\n    //  barnesHutTheta,\n    //  scaling,\n    //  jitterTolerence\n    // Will be set by the system automatically\n    //  preventOverlap will be set false\n    //  if node size is not given\n    this.autoSettings = true; // Barnes Hut\n    // http://arborjs.org/docs/barnes-hut\n\n    this.barnesHutOptimize = true;\n    this.barnesHutTheta = 1.5; // Force Atlas2 Configs\n\n    this.repulsionByDegree = true;\n    this.linLogMode = false;\n    this.strongGravityMode = false;\n    this.gravity = 1.0;\n    this.scaling = 1.0;\n    this.edgeWeightInfluence = 1.0;\n    this.jitterTolerence = 0.1; // TODO\n\n    this.preventOverlap = false;\n    this.dissuadeHubs = false; //\n\n    this.rootRegion = new Region();\n    this.rootRegion.centerOfMass = vec2.create();\n    this.nodes = [];\n    this.edges = [];\n    this.bbox = new Float32Array(4);\n    this.gravityCenter = null;\n    this._massArr = null;\n    this._swingingArr = null;\n    this._sizeArr = null;\n    this._globalSpeed = 0;\n  }\n\n  var forceAtlas2Proto = ForceAtlas2.prototype;\n\n  forceAtlas2Proto.initNodes = function (positionArr, massArr, sizeArr) {\n    var nNodes = massArr.length;\n    this.nodes.length = 0;\n    var haveSize = typeof sizeArr != 'undefined';\n\n    for (var i = 0; i < nNodes; i++) {\n      var node = new GraphNode();\n      node.position[0] = positionArr[i * 2];\n      node.position[1] = positionArr[i * 2 + 1];\n      node.mass = massArr[i];\n\n      if (haveSize) {\n        node.size = sizeArr[i];\n      }\n\n      this.nodes.push(node);\n    }\n\n    this._massArr = massArr;\n    this._swingingArr = new Float32Array(nNodes);\n\n    if (haveSize) {\n      this._sizeArr = sizeArr;\n    }\n  };\n\n  forceAtlas2Proto.initEdges = function (edgeArr, edgeWeightArr) {\n    var nEdges = edgeArr.length / 2;\n    this.edges.length = 0;\n\n    for (var i = 0; i < nEdges; i++) {\n      var sIdx = edgeArr[i * 2];\n      var tIdx = edgeArr[i * 2 + 1];\n      var sNode = this.nodes[sIdx];\n      var tNode = this.nodes[tIdx];\n\n      if (!sNode || !tNode) {\n        console.error('Node not exists, try initNodes before initEdges');\n        return;\n      }\n\n      sNode.outDegree++;\n      tNode.inDegree++;\n      var edge = new GraphEdge(sNode, tNode);\n\n      if (edgeWeightArr) {\n        edge.weight = edgeWeightArr[i];\n      }\n\n      this.edges.push(edge);\n    }\n  };\n\n  forceAtlas2Proto.updateSettings = function () {\n    if (this.repulsionByDegree) {\n      for (var i = 0; i < this.nodes.length; i++) {\n        var node = this.nodes[i];\n        node.mass = node.inDegree + node.outDegree + 1;\n      }\n    } else {\n      for (var i = 0; i < this.nodes.length; i++) {\n        var node = this.nodes[i];\n        node.mass = this._massArr[i];\n      }\n    }\n  };\n\n  forceAtlas2Proto.update = function () {\n    var nNodes = this.nodes.length;\n    this.updateSettings();\n    this.updateBBox(); // Update region\n\n    if (this.barnesHutOptimize) {\n      this.rootRegion.setBBox(this.bbox[0], this.bbox[1], this.bbox[2], this.bbox[3]);\n      this.rootRegion.beforeUpdate();\n\n      for (var i = 0; i < nNodes; i++) {\n        this.rootRegion.addNode(this.nodes[i]);\n      }\n\n      this.rootRegion.afterUpdate();\n    } // Reset forces\n\n\n    for (var i = 0; i < nNodes; i++) {\n      var node = this.nodes[i];\n      vec2.copy(node.forcePrev, node.force);\n      vec2.set(node.force, 0, 0);\n    } // Compute forces\n    // Repulsion\n\n\n    for (var i = 0; i < nNodes; i++) {\n      var na = this.nodes[i];\n\n      if (this.barnesHutOptimize) {\n        this.applyRegionToNodeRepulsion(this.rootRegion, na);\n      } else {\n        for (var j = i + 1; j < nNodes; j++) {\n          var nb = this.nodes[j];\n          this.applyNodeToNodeRepulsion(na, nb, false);\n        }\n      } // Gravity\n\n\n      if (this.gravity > 0) {\n        if (this.strongGravityMode) {\n          this.applyNodeStrongGravity(na);\n        } else {\n          this.applyNodeGravity(na);\n        }\n      }\n    } // Attraction\n\n\n    for (var i = 0; i < this.edges.length; i++) {\n      this.applyEdgeAttraction(this.edges[i]);\n    } // Handle swinging\n\n\n    var swingWeightedSum = 0;\n    var tractionWeightedSum = 0;\n    var tmp = vec2.create();\n\n    for (var i = 0; i < nNodes; i++) {\n      var node = this.nodes[i];\n      var swing = vec2.dist(node.force, node.forcePrev);\n      swingWeightedSum += swing * node.mass;\n      vec2.add(tmp, node.force, node.forcePrev);\n      var traction = vec2.len(tmp) * 0.5;\n      tractionWeightedSum += traction * node.mass; // Save the value for using later\n\n      this._swingingArr[i] = swing;\n    }\n\n    var globalSpeed = this.jitterTolerence * this.jitterTolerence * tractionWeightedSum / swingWeightedSum; // NB: During our tests we observed that an excessive rise of the global speed could have a negative impact.\n    // That’s why we limited the increase of global speed s(t)(G) to 50% of the previous step s(t−1)(G).\n\n    if (this._globalSpeed > 0) {\n      globalSpeed = Math.min(globalSpeed / this._globalSpeed, 1.5) * this._globalSpeed;\n    }\n\n    this._globalSpeed = globalSpeed; // Apply forces\n\n    for (var i = 0; i < nNodes; i++) {\n      var node = this.nodes[i];\n      var swing = this._swingingArr[i];\n      var speed = 0.1 * globalSpeed / (1 + globalSpeed * Math.sqrt(swing)); // Additional constraint to prevent local speed gets too high\n\n      var df = vec2.len(node.force);\n\n      if (df > 0) {\n        speed = Math.min(df * speed, 10) / df;\n        vec2.scaleAndAdd(node.position, node.position, node.force, speed);\n      }\n    }\n  };\n\n  forceAtlas2Proto.applyRegionToNodeRepulsion = function () {\n    var v = vec2.create();\n    return function applyRegionToNodeRepulsion(region, node) {\n      if (region.node) {\n        // Region is a leaf\n        this.applyNodeToNodeRepulsion(region.node, node, true);\n      } else {\n        vec2.sub(v, node.position, region.centerOfMass);\n        var d2 = v[0] * v[0] + v[1] * v[1];\n\n        if (d2 > this.barnesHutTheta * region.size * region.size) {\n          var factor = this.scaling * node.mass * region.mass / d2;\n          vec2.scaleAndAdd(node.force, node.force, v, factor);\n        } else {\n          for (var i = 0; i < region.nSubRegions; i++) {\n            this.applyRegionToNodeRepulsion(region.subRegions[i], node);\n          }\n        }\n      }\n    };\n  }();\n\n  forceAtlas2Proto.applyNodeToNodeRepulsion = function () {\n    var v = vec2.create();\n    return function applyNodeToNodeRepulsion(na, nb, oneWay) {\n      if (na == nb) {\n        return;\n      }\n\n      vec2.sub(v, na.position, nb.position);\n      var d2 = v[0] * v[0] + v[1] * v[1]; // PENDING\n\n      if (d2 === 0) {\n        return;\n      }\n\n      var factor;\n\n      if (this.preventOverlap) {\n        var d = Math.sqrt(d2);\n        d = d - na.size - nb.size;\n\n        if (d > 0) {\n          factor = this.scaling * na.mass * nb.mass / (d * d);\n        } else if (d < 0) {\n          // A stronger repulsion if overlap\n          factor = this.scaling * 100 * na.mass * nb.mass;\n        } else {\n          // No repulsion\n          return;\n        }\n      } else {\n        // Divide factor by an extra `d` to normalize the `v`\n        factor = this.scaling * na.mass * nb.mass / d2;\n      }\n\n      vec2.scaleAndAdd(na.force, na.force, v, factor);\n      vec2.scaleAndAdd(nb.force, nb.force, v, -factor);\n    };\n  }();\n\n  forceAtlas2Proto.applyEdgeAttraction = function () {\n    var v = vec2.create();\n    return function applyEdgeAttraction(edge) {\n      var na = edge.source;\n      var nb = edge.target;\n      vec2.sub(v, na.position, nb.position);\n      var d = vec2.len(v);\n      var w;\n\n      if (this.edgeWeightInfluence === 0) {\n        w = 1;\n      } else if (this.edgeWeightInfluence === 1) {\n        w = edge.weight;\n      } else {\n        w = Math.pow(edge.weight, this.edgeWeightInfluence);\n      }\n\n      var factor;\n\n      if (this.preventOverlap) {\n        d = d - na.size - nb.size;\n\n        if (d <= 0) {\n          // No attraction\n          return;\n        }\n      }\n\n      if (this.linLogMode) {\n        // Divide factor by an extra `d` to normalize the `v`\n        factor = -w * Math.log(d + 1) / (d + 1);\n      } else {\n        factor = -w;\n      }\n\n      vec2.scaleAndAdd(na.force, na.force, v, factor);\n      vec2.scaleAndAdd(nb.force, nb.force, v, -factor);\n    };\n  }();\n\n  forceAtlas2Proto.applyNodeGravity = function () {\n    var v = vec2.create();\n    return function (node) {\n      vec2.sub(v, this.gravityCenter, node.position);\n      var d = vec2.len(v);\n      vec2.scaleAndAdd(node.force, node.force, v, this.gravity * node.mass / (d + 1));\n    };\n  }();\n\n  forceAtlas2Proto.applyNodeStrongGravity = function () {\n    var v = vec2.create();\n    return function (node) {\n      vec2.sub(v, this.gravityCenter, node.position);\n      vec2.scaleAndAdd(node.force, node.force, v, this.gravity * node.mass);\n    };\n  }();\n\n  forceAtlas2Proto.updateBBox = function () {\n    var minX = Infinity;\n    var minY = Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      var pos = this.nodes[i].position;\n      minX = Math.min(minX, pos[0]);\n      minY = Math.min(minY, pos[1]);\n      maxX = Math.max(maxX, pos[0]);\n      maxY = Math.max(maxY, pos[1]);\n    }\n\n    this.bbox[0] = minX;\n    this.bbox[1] = minY;\n    this.bbox[2] = maxX;\n    this.bbox[3] = maxY;\n  };\n\n  forceAtlas2Proto.getGlobalSpeed = function () {\n    return this._globalSpeed;\n  };\n  /****************************\n   * Main process\n   ***************************/\n\n\n  var forceAtlas2 = null;\n\n  self.onmessage = function (e) {\n    switch (e.data.cmd) {\n      case 'init':\n        forceAtlas2 = new ForceAtlas2();\n        forceAtlas2.initNodes(e.data.nodesPosition, e.data.nodesMass, e.data.nodesSize);\n        forceAtlas2.initEdges(e.data.edges, e.data.edgesWeight);\n        break;\n\n      case 'updateConfig':\n        if (forceAtlas2) {\n          for (var name in e.data.config) {\n            forceAtlas2[name] = e.data.config[name];\n          }\n        }\n\n        break;\n\n      case 'update':\n        var steps = e.data.steps;\n\n        if (forceAtlas2) {\n          for (var i = 0; i < steps; i++) {\n            forceAtlas2.update();\n          }\n\n          var nNodes = forceAtlas2.nodes.length;\n          var positionArr = new Float32Array(nNodes * 2); // Callback\n\n          for (var i = 0; i < nNodes; i++) {\n            var node = forceAtlas2.nodes[i];\n            positionArr[i * 2] = node.position[0];\n            positionArr[i * 2 + 1] = node.position[1];\n          }\n\n          self.postMessage({\n            buffer: positionArr.buffer,\n            globalSpeed: forceAtlas2.getGlobalSpeed()\n          }, [positionArr.buffer]);\n        } else {\n          // Not initialzied yet\n          var emptyArr = new Float32Array(); // Post transfer object\n\n          self.postMessage({\n            buffer: emptyArr.buffer,\n            globalSpeed: forceAtlas2.getGlobalSpeed()\n          }, [emptyArr.buffer]);\n        }\n\n        break;\n    }\n  };\n}\n\nexport default forceAtlas2Worker;","import Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport workerFunc from './forceAtlas2Worker.js';\nvar workerUrl = workerFunc.toString();\nworkerUrl = workerUrl.slice(workerUrl.indexOf('{') + 1, workerUrl.lastIndexOf('}'));\nvar defaultConfigs = {\n  barnesHutOptimize: true,\n  barnesHutTheta: 1.5,\n  repulsionByDegree: true,\n  linLogMode: false,\n  strongGravityMode: false,\n  gravity: 1.0,\n  scaling: 1.0,\n  edgeWeightInfluence: 1.0,\n  jitterTolerence: 0.1,\n  preventOverlap: false,\n  dissuadeHubs: false,\n  gravityCenter: null\n};\n\nvar ForceAtlas2 = function (options) {\n  for (var name in defaultConfigs) {\n    this[name] = defaultConfigs[name];\n  }\n\n  if (options) {\n    for (var name in options) {\n      this[name] = options[name];\n    }\n  }\n\n  this._nodes = [];\n  this._edges = [];\n  this._disposed = false;\n  this._positionTex = new Texture2D({\n    type: Texture.FLOAT,\n    flipY: false,\n    minFilter: Texture.NEAREST,\n    magFilter: Texture.NEAREST\n  });\n};\n\nForceAtlas2.prototype.initData = function (nodes, edges) {\n  var bb = new Blob([workerUrl]);\n  var blobURL = window.URL.createObjectURL(bb);\n  this._worker = new Worker(blobURL);\n  this._worker.onmessage = this._$onupdate.bind(this);\n  this._nodes = nodes;\n  this._edges = edges;\n  this._frame = 0;\n  var nNodes = nodes.length;\n  var nEdges = edges.length;\n  var positionArr = new Float32Array(nNodes * 2);\n  var massArr = new Float32Array(nNodes);\n  var sizeArr = new Float32Array(nNodes);\n  var edgeArr = new Float32Array(nEdges * 2);\n  var edgeWeightArr = new Float32Array(nEdges);\n\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    positionArr[i * 2] = node.x;\n    positionArr[i * 2 + 1] = node.y;\n    massArr[i] = node.mass == null ? 1 : node.mass;\n    sizeArr[i] = node.size == null ? 1 : node.size;\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var edge = edges[i];\n    var source = edge.node1;\n    var target = edge.node2;\n    edgeArr[i * 2] = source;\n    edgeArr[i * 2 + 1] = target;\n    edgeWeightArr[i] = edge.weight == null ? 1 : edge.weight;\n  }\n\n  var textureWidth = Math.ceil(Math.sqrt(nodes.length));\n  var textureHeight = textureWidth;\n  var pixels = new Float32Array(textureWidth * textureHeight * 4);\n  var positionTex = this._positionTex;\n  positionTex.width = textureWidth;\n  positionTex.height = textureHeight;\n  positionTex.pixels = pixels;\n\n  this._worker.postMessage({\n    cmd: 'init',\n    nodesPosition: positionArr,\n    nodesMass: massArr,\n    nodesSize: sizeArr,\n    edges: edgeArr,\n    edgesWeight: edgeWeightArr\n  });\n\n  this._globalSpeed = Infinity;\n};\n\nForceAtlas2.prototype.updateOption = function (options) {\n  var config = {}; // Default config\n\n  for (var name in defaultConfigs) {\n    config[name] = defaultConfigs[name];\n  }\n\n  var nodes = this._nodes;\n  var edges = this._edges; // Config according to data scale\n\n  var nNodes = nodes.length;\n\n  if (nNodes > 50000) {\n    config.jitterTolerence = 10;\n  } else if (nNodes > 5000) {\n    config.jitterTolerence = 1;\n  } else {\n    config.jitterTolerence = 0.1;\n  }\n\n  if (nNodes > 100) {\n    config.scaling = 2.0;\n  } else {\n    config.scaling = 10.0;\n  }\n\n  if (nNodes > 1000) {\n    config.barnesHutOptimize = true;\n  } else {\n    config.barnesHutOptimize = false;\n  }\n\n  if (options) {\n    for (var name in defaultConfigs) {\n      if (options[name] != null) {\n        config[name] = options[name];\n      }\n    }\n  }\n\n  if (!config.gravityCenter) {\n    var min = [Infinity, Infinity];\n    var max = [-Infinity, -Infinity];\n\n    for (var i = 0; i < nodes.length; i++) {\n      min[0] = Math.min(nodes[i].x, min[0]);\n      min[1] = Math.min(nodes[i].y, min[1]);\n      max[0] = Math.max(nodes[i].x, max[0]);\n      max[1] = Math.max(nodes[i].y, max[1]);\n    }\n\n    config.gravityCenter = [(min[0] + max[0]) * 0.5, (min[1] + max[1]) * 0.5];\n  } // Update inDegree, outDegree\n\n\n  for (var i = 0; i < edges.length; i++) {\n    var node1 = edges[i].node1;\n    var node2 = edges[i].node2;\n    nodes[node1].degree = (nodes[node1].degree || 0) + 1;\n    nodes[node2].degree = (nodes[node2].degree || 0) + 1;\n  }\n\n  if (this._worker) {\n    this._worker.postMessage({\n      cmd: 'updateConfig',\n      config: config\n    });\n  }\n}; // Steps per call, to keep sync with rendering\n\n\nForceAtlas2.prototype.update = function (renderer, steps, cb) {\n  if (steps == null) {\n    steps = 1;\n  }\n\n  steps = Math.max(steps, 1);\n  this._frame += steps;\n  this._onupdate = cb;\n\n  if (this._worker) {\n    this._worker.postMessage({\n      cmd: 'update',\n      steps: Math.round(steps)\n    });\n  }\n};\n\nForceAtlas2.prototype._$onupdate = function (e) {\n  // Incase the worker keep postMessage of last frame after it is disposed\n  if (this._disposed) {\n    return;\n  }\n\n  var positionArr = new Float32Array(e.data.buffer);\n  this._globalSpeed = e.data.globalSpeed;\n  this._positionArr = positionArr;\n\n  this._updateTexture(positionArr);\n\n  this._onupdate && this._onupdate();\n};\n\nForceAtlas2.prototype.getNodePositionTexture = function () {\n  return this._positionTex;\n};\n\nForceAtlas2.prototype.getNodeUV = function (nodeIndex, uv) {\n  uv = uv || [];\n  var textureWidth = this._positionTex.width;\n  var textureHeight = this._positionTex.height;\n  uv[0] = nodeIndex % textureWidth / (textureWidth - 1);\n  uv[1] = Math.floor(nodeIndex / textureWidth) / (textureHeight - 1);\n  return uv;\n};\n\nForceAtlas2.prototype.getNodes = function () {\n  return this._nodes;\n};\n\nForceAtlas2.prototype.getEdges = function () {\n  return this._edges;\n};\n\nForceAtlas2.prototype.isFinished = function (maxSteps) {\n  return this._frame > maxSteps;\n};\n\nForceAtlas2.prototype.getNodePosition = function (renderer, out) {\n  if (!out) {\n    out = new Float32Array(this._nodes.length * 2);\n  }\n\n  if (this._positionArr) {\n    for (var i = 0; i < this._positionArr.length; i++) {\n      out[i] = this._positionArr[i];\n    }\n  }\n\n  return out;\n};\n\nForceAtlas2.prototype._updateTexture = function (positionArr) {\n  var pixels = this._positionTex.pixels;\n  var offset = 0;\n\n  for (var i = 0; i < positionArr.length;) {\n    pixels[offset++] = positionArr[i++];\n    pixels[offset++] = positionArr[i++];\n    pixels[offset++] = 1;\n    pixels[offset++] = 1;\n  }\n\n  this._positionTex.dirty();\n};\n\nForceAtlas2.prototype.dispose = function (renderer) {\n  this._disposed = true;\n  this._worker = null;\n};\n\nexport default ForceAtlas2;","import * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nimport Lines2DGeometry from '../../util/geometry/Lines2D';\nimport retrieve from '../../util/retrieve';\nimport ForceAtlas2GPU from './ForceAtlas2GPU';\nimport ForceAtlas2 from './ForceAtlas2';\nimport requestAnimationFrame from 'zrender/lib/animation/requestAnimationFrame';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec2 = glmatrix.vec2;\nimport Roam2DControl from '../../util/Roam2DControl';\nimport PointsBuilder from '../common/PointsBuilder';\nimport lines2DGLSL from '../../util/shader/lines2D.glsl.js';\ngraphicGL.Shader.import(lines2DGLSL);\nvar globalLayoutId = 1;\nexport default echarts.ChartView.extend({\n  type: 'graphGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this.viewGL = new ViewGL('orthographic');\n    this.viewGL.camera.left = this.viewGL.camera.right = 0;\n    this.viewGL.add(this.groupGL);\n    this._pointsBuilder = new PointsBuilder(true, api); // Mesh used during force directed layout.\n\n    this._forceEdgesMesh = new graphicGL.Mesh({\n      material: new graphicGL.Material({\n        shader: graphicGL.createShader('ecgl.forceAtlas2.edges'),\n        transparent: true,\n        depthMask: false,\n        depthTest: false\n      }),\n      $ignorePicking: true,\n      geometry: new graphicGL.Geometry({\n        attributes: {\n          node: new graphicGL.Geometry.Attribute('node', 'float', 2),\n          color: new graphicGL.Geometry.Attribute('color', 'float', 4, 'COLOR')\n        },\n        dynamic: true,\n        mainAttribute: 'node'\n      }),\n      renderOrder: -1,\n      mode: graphicGL.Mesh.LINES\n    }); // Mesh used after force directed layout.\n\n    this._edgesMesh = new graphicGL.Mesh({\n      material: new graphicGL.Material({\n        shader: graphicGL.createShader('ecgl.meshLines2D'),\n        transparent: true,\n        depthMask: false,\n        depthTest: false\n      }),\n      $ignorePicking: true,\n      geometry: new Lines2DGeometry({\n        useNativeLine: false,\n        dynamic: true\n      }),\n      renderOrder: -1,\n      culling: false\n    });\n    this._layoutId = 0;\n    this._control = new Roam2DControl({\n      zr: api.getZr(),\n      viewGL: this.viewGL\n    });\n\n    this._control.setTarget(this.groupGL);\n\n    this._control.init();\n\n    this._clickHandler = this._clickHandler.bind(this);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.add(this._pointsBuilder.rootNode);\n    this._model = seriesModel;\n    this._api = api;\n\n    this._initLayout(seriesModel, ecModel, api);\n\n    this._pointsBuilder.update(seriesModel, ecModel, api);\n\n    if (!(this._forceLayoutInstance instanceof ForceAtlas2GPU)) {\n      this.groupGL.remove(this._forceEdgesMesh);\n    }\n\n    this._updateCamera(seriesModel, api);\n\n    this._control.off('update');\n\n    this._control.on('update', function () {\n      api.dispatchAction({\n        type: 'graphGLRoam',\n        seriesId: seriesModel.id,\n        zoom: this._control.getZoom(),\n        offset: this._control.getOffset()\n      });\n\n      this._pointsBuilder.updateView(this.viewGL.camera);\n    }, this);\n\n    this._control.setZoom(retrieve.firstNotNull(seriesModel.get('zoom'), 1));\n\n    this._control.setOffset(seriesModel.get('offset') || [0, 0]);\n\n    var mesh = this._pointsBuilder.getPointsMesh();\n\n    mesh.off('mousemove', this._mousemoveHandler);\n    mesh.off('mouseout', this._mouseOutHandler, this);\n    api.getZr().off('click', this._clickHandler);\n    this._pointsBuilder.highlightOnMouseover = true;\n\n    if (seriesModel.get('focusNodeAdjacency')) {\n      var focusNodeAdjacencyOn = seriesModel.get('focusNodeAdjacencyOn');\n\n      if (focusNodeAdjacencyOn === 'click') {\n        // Remove default emphasis effect\n        api.getZr().on('click', this._clickHandler);\n      } else if (focusNodeAdjacencyOn === 'mouseover') {\n        mesh.on('mousemove', this._mousemoveHandler, this);\n        mesh.on('mouseout', this._mouseOutHandler, this);\n        this._pointsBuilder.highlightOnMouseover = false;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Unkown focusNodeAdjacencyOn value \\s' + focusNodeAdjacencyOn);\n        }\n      }\n    } // Reset\n\n\n    this._lastMouseOverDataIndex = -1;\n  },\n  _clickHandler: function (e) {\n    if (this._layouting) {\n      return;\n    }\n\n    var dataIndex = this._pointsBuilder.getPointsMesh().dataIndex;\n\n    if (dataIndex >= 0) {\n      this._api.dispatchAction({\n        type: 'graphGLFocusNodeAdjacency',\n        seriesId: this._model.id,\n        dataIndex: dataIndex\n      });\n    } else {\n      this._api.dispatchAction({\n        type: 'graphGLUnfocusNodeAdjacency',\n        seriesId: this._model.id\n      });\n    }\n  },\n  _mousemoveHandler: function (e) {\n    if (this._layouting) {\n      return;\n    }\n\n    var dataIndex = this._pointsBuilder.getPointsMesh().dataIndex;\n\n    if (dataIndex >= 0) {\n      if (dataIndex !== this._lastMouseOverDataIndex) {\n        this._api.dispatchAction({\n          type: 'graphGLFocusNodeAdjacency',\n          seriesId: this._model.id,\n          dataIndex: dataIndex\n        });\n      }\n    } else {\n      this._mouseOutHandler(e);\n    }\n\n    this._lastMouseOverDataIndex = dataIndex;\n  },\n  _mouseOutHandler: function (e) {\n    if (this._layouting) {\n      return;\n    }\n\n    this._api.dispatchAction({\n      type: 'graphGLUnfocusNodeAdjacency',\n      seriesId: this._model.id\n    });\n\n    this._lastMouseOverDataIndex = -1;\n  },\n  _updateForceEdgesGeometry: function (edges, seriesModel) {\n    var geometry = this._forceEdgesMesh.geometry;\n    var edgeData = seriesModel.getEdgeData();\n    var offset = 0;\n    var layoutInstance = this._forceLayoutInstance;\n    var vertexCount = edgeData.count() * 2;\n    geometry.attributes.node.init(vertexCount);\n    geometry.attributes.color.init(vertexCount);\n    edgeData.each(function (idx) {\n      var edge = edges[idx];\n      geometry.attributes.node.set(offset, layoutInstance.getNodeUV(edge.node1));\n      geometry.attributes.node.set(offset + 1, layoutInstance.getNodeUV(edge.node2));\n      var color = getItemVisualColor(edgeData, edge.dataIndex);\n      var colorArr = graphicGL.parseColor(color);\n      colorArr[3] *= retrieve.firstNotNull(getItemVisualOpacity(edgeData, edge.dataIndex), 1);\n      geometry.attributes.color.set(offset, colorArr);\n      geometry.attributes.color.set(offset + 1, colorArr);\n      offset += 2;\n    });\n    geometry.dirty();\n  },\n  _updateMeshLinesGeometry: function () {\n    var edgeData = this._model.getEdgeData();\n\n    var geometry = this._edgesMesh.geometry;\n\n    var edgeData = this._model.getEdgeData();\n\n    var points = this._model.getData().getLayout('points');\n\n    geometry.resetOffset();\n    geometry.setVertexCount(edgeData.count() * geometry.getLineVertexCount());\n    geometry.setTriangleCount(edgeData.count() * geometry.getLineTriangleCount());\n    var p0 = [];\n    var p1 = [];\n    var lineWidthQuery = ['lineStyle', 'width'];\n    this._originalEdgeColors = new Float32Array(edgeData.count() * 4);\n    this._edgeIndicesMap = new Float32Array(edgeData.count());\n    edgeData.each(function (idx) {\n      var edge = edgeData.graph.getEdgeByIndex(idx);\n      var idx1 = edge.node1.dataIndex * 2;\n      var idx2 = edge.node2.dataIndex * 2;\n      p0[0] = points[idx1];\n      p0[1] = points[idx1 + 1];\n      p1[0] = points[idx2];\n      p1[1] = points[idx2 + 1];\n      var color = getItemVisualColor(edgeData, edge.dataIndex);\n      var colorArr = graphicGL.parseColor(color);\n      colorArr[3] *= retrieve.firstNotNull(getItemVisualOpacity(edgeData, edge.dataIndex), 1);\n      var itemModel = edgeData.getItemModel(edge.dataIndex);\n\n      var lineWidth = retrieve.firstNotNull(itemModel.get(lineWidthQuery), 1) * this._api.getDevicePixelRatio();\n\n      geometry.addLine(p0, p1, colorArr, lineWidth);\n\n      for (var k = 0; k < 4; k++) {\n        this._originalEdgeColors[edge.dataIndex * 4 + k] = colorArr[k];\n      }\n\n      this._edgeIndicesMap[edge.dataIndex] = idx;\n    }, this);\n    geometry.dirty();\n  },\n  _updateForceNodesGeometry: function (nodeData) {\n    var pointsMesh = this._pointsBuilder.getPointsMesh();\n\n    var pos = [];\n\n    for (var i = 0; i < nodeData.count(); i++) {\n      this._forceLayoutInstance.getNodeUV(i, pos);\n\n      pointsMesh.geometry.attributes.position.set(i, pos);\n    }\n\n    pointsMesh.geometry.dirty('position');\n  },\n  _initLayout: function (seriesModel, ecModel, api) {\n    var layout = seriesModel.get('layout');\n    var graph = seriesModel.getGraph();\n    var boxLayoutOption = seriesModel.getBoxLayoutParams();\n    var viewport = getLayoutRect(boxLayoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    if (layout === 'force') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Currently only forceAtlas2 layout supported.');\n      }\n\n      layout = 'forceAtlas2';\n    } // Stop previous layout\n\n\n    this.stopLayout(seriesModel, ecModel, api, {\n      beforeLayout: true\n    });\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData();\n\n    if (layout === 'forceAtlas2') {\n      var layoutModel = seriesModel.getModel('forceAtlas2');\n      var layoutInstance = this._forceLayoutInstance;\n      var nodes = [];\n      var edges = [];\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value');\n      var edgeWeightRange = retrieve.firstNotNull(layoutModel.get('edgeWeight'), 1.0);\n      var nodeWeightRange = retrieve.firstNotNull(layoutModel.get('nodeWeight'), 1.0);\n\n      if (typeof edgeWeightRange === 'number') {\n        edgeWeightRange = [edgeWeightRange, edgeWeightRange];\n      }\n\n      if (typeof nodeWeightRange === 'number') {\n        nodeWeightRange = [nodeWeightRange, nodeWeightRange];\n      }\n\n      var offset = 0;\n      var nodesIndicesMap = {};\n      var layoutPoints = new Float32Array(nodeData.count() * 2);\n      graph.eachNode(function (node) {\n        var dataIndex = node.dataIndex;\n        var value = nodeData.get('value', dataIndex);\n        var x;\n        var y;\n\n        if (nodeData.hasItemOption) {\n          var itemModel = nodeData.getItemModel(dataIndex);\n          x = itemModel.get('x');\n          y = itemModel.get('y');\n        }\n\n        if (x == null) {\n          // Random in rectangle\n          x = viewport.x + Math.random() * viewport.width;\n          y = viewport.y + Math.random() * viewport.height;\n        }\n\n        layoutPoints[offset * 2] = x;\n        layoutPoints[offset * 2 + 1] = y;\n        nodesIndicesMap[node.id] = offset++;\n        var mass = echarts.number.linearMap(value, nodeDataExtent, nodeWeightRange);\n\n        if (isNaN(mass)) {\n          if (!isNaN(nodeWeightRange[0])) {\n            mass = nodeWeightRange[0];\n          } else {\n            mass = 1;\n          }\n        }\n\n        nodes.push({\n          x: x,\n          y: y,\n          mass: mass,\n          size: nodeData.getItemVisual(dataIndex, 'symbolSize')\n        });\n      });\n      nodeData.setLayout('points', layoutPoints);\n      graph.eachEdge(function (edge) {\n        var dataIndex = edge.dataIndex;\n        var value = nodeData.get('value', dataIndex);\n        var weight = echarts.number.linearMap(value, edgeDataExtent, edgeWeightRange);\n\n        if (isNaN(weight)) {\n          if (!isNaN(edgeWeightRange[0])) {\n            weight = edgeWeightRange[0];\n          } else {\n            weight = 1;\n          }\n        }\n\n        edges.push({\n          node1: nodesIndicesMap[edge.node1.id],\n          node2: nodesIndicesMap[edge.node2.id],\n          weight: weight,\n          dataIndex: dataIndex\n        });\n      });\n\n      if (!layoutInstance) {\n        var isGPU = layoutModel.get('GPU');\n\n        if (this._forceLayoutInstance) {\n          if (isGPU && !(this._forceLayoutInstance instanceof ForceAtlas2GPU) || !isGPU && !(this._forceLayoutInstance instanceof ForceAtlas2)) {\n            // Mark to dispose\n            this._forceLayoutInstanceToDispose = this._forceLayoutInstance;\n          }\n        }\n\n        layoutInstance = this._forceLayoutInstance = isGPU ? new ForceAtlas2GPU() : new ForceAtlas2();\n      }\n\n      layoutInstance.initData(nodes, edges);\n      layoutInstance.updateOption(layoutModel.option); // Update lines geometry after first layout;\n\n      this._updateForceEdgesGeometry(layoutInstance.getEdges(), seriesModel);\n\n      this._updatePositionTexture();\n\n      api.dispatchAction({\n        type: 'graphGLStartLayout',\n        from: this.uid\n      });\n    } else {\n      var layoutPoints = new Float32Array(nodeData.count() * 2);\n      var offset = 0;\n      graph.eachNode(function (node) {\n        var dataIndex = node.dataIndex;\n        var x;\n        var y;\n\n        if (nodeData.hasItemOption) {\n          var itemModel = nodeData.getItemModel(dataIndex);\n          x = itemModel.get('x');\n          y = itemModel.get('y');\n        }\n\n        layoutPoints[offset++] = x;\n        layoutPoints[offset++] = y;\n      });\n      nodeData.setLayout('points', layoutPoints);\n\n      this._updateAfterLayout(seriesModel, ecModel, api);\n    }\n  },\n  _updatePositionTexture: function () {\n    var positionTex = this._forceLayoutInstance.getNodePositionTexture();\n\n    this._pointsBuilder.setPositionTexture(positionTex);\n\n    this._forceEdgesMesh.material.set('positionTex', positionTex);\n  },\n  startLayout: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from != null && payload.from !== this.uid) {\n      return;\n    }\n\n    var viewGL = this.viewGL;\n    var api = this._api;\n    var layoutInstance = this._forceLayoutInstance;\n\n    var data = this._model.getData();\n\n    var layoutModel = this._model.getModel('forceAtlas2');\n\n    if (!layoutInstance) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('None layout don\\'t have startLayout action');\n      }\n\n      return;\n    }\n\n    this.groupGL.remove(this._edgesMesh);\n    this.groupGL.add(this._forceEdgesMesh);\n\n    if (!this._forceLayoutInstance) {\n      return;\n    }\n\n    this._updateForceNodesGeometry(seriesModel.getData());\n\n    this._pointsBuilder.hideLabels();\n\n    var self = this;\n    var layoutId = this._layoutId = globalLayoutId++;\n    var maxSteps = layoutModel.getShallow('maxSteps');\n    var steps = layoutModel.getShallow('steps');\n    var stepsCount = 0;\n    var syncStepCount = Math.max(steps * 2, 20);\n\n    var doLayout = function (layoutId) {\n      if (layoutId !== self._layoutId) {\n        return;\n      }\n\n      if (layoutInstance.isFinished(maxSteps)) {\n        api.dispatchAction({\n          type: 'graphGLStopLayout',\n          from: self.uid\n        });\n        api.dispatchAction({\n          type: 'graphGLFinishLayout',\n          points: data.getLayout('points'),\n          from: self.uid\n        });\n        return;\n      }\n\n      layoutInstance.update(viewGL.layer.renderer, steps, function () {\n        self._updatePositionTexture(); // PENDING Performance.\n\n\n        stepsCount += steps; // Sync posiiton every 20 steps.\n\n        if (stepsCount >= syncStepCount) {\n          self._syncNodePosition(seriesModel);\n\n          stepsCount = 0;\n        } // Position texture will been swapped. set every time.\n\n\n        api.getZr().refresh();\n        requestAnimationFrame(function () {\n          doLayout(layoutId);\n        });\n      });\n    };\n\n    requestAnimationFrame(function () {\n      if (self._forceLayoutInstanceToDispose) {\n        self._forceLayoutInstanceToDispose.dispose(viewGL.layer.renderer);\n\n        self._forceLayoutInstanceToDispose = null;\n      }\n\n      doLayout(layoutId);\n    });\n    this._layouting = true;\n  },\n  stopLayout: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from != null && payload.from !== this.uid) {\n      return;\n    }\n\n    this._layoutId = 0;\n    this.groupGL.remove(this._forceEdgesMesh);\n    this.groupGL.add(this._edgesMesh);\n\n    if (!this._forceLayoutInstance) {\n      return;\n    }\n\n    if (!this.viewGL.layer) {\n      return;\n    }\n\n    if (!(payload && payload.beforeLayout)) {\n      this._syncNodePosition(seriesModel);\n\n      this._updateAfterLayout(seriesModel, ecModel, api);\n    }\n\n    this._api.getZr().refresh();\n\n    this._layouting = false;\n  },\n  _syncNodePosition: function (seriesModel) {\n    var points = this._forceLayoutInstance.getNodePosition(this.viewGL.layer.renderer);\n\n    seriesModel.getData().setLayout('points', points);\n    seriesModel.setNodePosition(points);\n  },\n  _updateAfterLayout: function (seriesModel, ecModel, api) {\n    this._updateMeshLinesGeometry();\n\n    this._pointsBuilder.removePositionTexture();\n\n    this._pointsBuilder.updateLayout(seriesModel, ecModel, api);\n\n    this._pointsBuilder.updateView(this.viewGL.camera);\n\n    this._pointsBuilder.updateLabels();\n\n    this._pointsBuilder.showLabels();\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    this._downplayAll();\n\n    var dataIndex = payload.dataIndex;\n    var graph = data.graph;\n    var focusNodes = [];\n    var node = graph.getNodeByIndex(dataIndex);\n    focusNodes.push(node);\n    node.edges.forEach(function (edge) {\n      if (edge.dataIndex < 0) {\n        return;\n      }\n\n      edge.node1 !== node && focusNodes.push(edge.node1);\n      edge.node2 !== node && focusNodes.push(edge.node2);\n    }, this);\n\n    this._pointsBuilder.fadeOutAll(0.05);\n\n    this._fadeOutEdgesAll(0.05);\n\n    focusNodes.forEach(function (node) {\n      this._pointsBuilder.highlight(data, node.dataIndex);\n    }, this);\n\n    this._pointsBuilder.updateLabels(focusNodes.map(function (node) {\n      return node.dataIndex;\n    }));\n\n    var focusEdges = [];\n    node.edges.forEach(function (edge) {\n      if (edge.dataIndex >= 0) {\n        this._highlightEdge(edge.dataIndex);\n\n        focusEdges.push(edge);\n      }\n    }, this);\n    this._focusNodes = focusNodes;\n    this._focusEdges = focusEdges;\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    this._downplayAll();\n\n    this._pointsBuilder.fadeInAll();\n\n    this._fadeInEdgesAll();\n\n    this._pointsBuilder.updateLabels();\n  },\n  _highlightEdge: function (dataIndex) {\n    var itemModel = this._model.getEdgeData().getItemModel(dataIndex);\n\n    var emphasisColor = graphicGL.parseColor(itemModel.get('emphasis.lineStyle.color') || itemModel.get('lineStyle.color'));\n    var emphasisOpacity = retrieve.firstNotNull(itemModel.get('emphasis.lineStyle.opacity'), itemModel.get('lineStyle.opacity'), 1);\n    emphasisColor[3] *= emphasisOpacity;\n\n    this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[dataIndex], emphasisColor);\n  },\n  _downplayAll: function () {\n    if (this._focusNodes) {\n      this._focusNodes.forEach(function (node) {\n        this._pointsBuilder.downplay(this._model.getData(), node.dataIndex);\n      }, this);\n    }\n\n    if (this._focusEdges) {\n      this._focusEdges.forEach(function (edge) {\n        this._downplayEdge(edge.dataIndex);\n      }, this);\n    }\n  },\n  _downplayEdge: function (dataIndex) {\n    var color = this._getColor(dataIndex, []);\n\n    this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[dataIndex], color);\n  },\n  _setEdgeFade: function () {\n    var color = [];\n    return function (dataIndex, percent) {\n      this._getColor(dataIndex, color);\n\n      color[3] *= percent;\n\n      this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[dataIndex], color);\n    };\n  }(),\n  _getColor: function (dataIndex, out) {\n    for (var i = 0; i < 4; i++) {\n      out[i] = this._originalEdgeColors[dataIndex * 4 + i];\n    }\n\n    return out;\n  },\n  _fadeOutEdgesAll: function (percent) {\n    var graph = this._model.getData().graph;\n\n    graph.eachEdge(function (edge) {\n      this._setEdgeFade(edge.dataIndex, percent);\n    }, this);\n  },\n  _fadeInEdgesAll: function () {\n    this._fadeOutEdgesAll(1);\n  },\n  _updateCamera: function (seriesModel, api) {\n    this.viewGL.setViewport(0, 0, api.getWidth(), api.getHeight(), api.getDevicePixelRatio());\n    var camera = this.viewGL.camera;\n    var nodeData = seriesModel.getData();\n    var points = nodeData.getLayout('points');\n    var min = vec2.create(Infinity, Infinity);\n    var max = vec2.create(-Infinity, -Infinity);\n    var pt = [];\n\n    for (var i = 0; i < points.length;) {\n      pt[0] = points[i++];\n      pt[1] = points[i++];\n      vec2.min(min, min, pt);\n      vec2.max(max, max, pt);\n    }\n\n    var cy = (max[1] + min[1]) / 2;\n    var cx = (max[0] + min[0]) / 2; // Only fit the camera when graph is not in the center.\n    // PENDING\n\n    if (cx > camera.left && cx < camera.right && cy < camera.bottom && cy > camera.top) {\n      return;\n    } // Scale a bit\n\n\n    var width = Math.max(max[0] - min[0], 10); // Keep aspect\n\n    var height = width / api.getWidth() * api.getHeight();\n    width *= 1.4;\n    height *= 1.4;\n    min[0] -= width * 0.2;\n    camera.left = min[0];\n    camera.top = cy - height / 2;\n    camera.bottom = cy + height / 2;\n    camera.right = width + min[0];\n    camera.near = 0;\n    camera.far = 100;\n  },\n  dispose: function () {\n    var renderer = this.viewGL.layer.renderer;\n\n    if (this._forceLayoutInstance) {\n      this._forceLayoutInstance.dispose(renderer);\n    }\n\n    this.groupGL.removeAll(); // Stop layout.\n\n    this._layoutId = -1;\n\n    this._pointsBuilder.dispose();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n\n    this._control.dispose();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport * as echarts from 'echarts/lib/echarts';\nimport GraphGLSeries from './GraphGLSeries';\nimport GraphGLView from './GraphGLView';\n\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nexport function install(registers) {\n  registers.registerChartView(GraphGLView);\n  registers.registerSeriesModel(GraphGLSeries);\n  registers.registerVisual(function (ecModel) {\n    const paletteScope = {};\n    ecModel.eachSeriesByType('graphGL', function (seriesModel) {\n      var categoriesData = seriesModel.getCategoriesData();\n      var data = seriesModel.getData();\n      var categoryNameIdxMap = {};\n      categoriesData.each(function (idx) {\n        var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n        categoryNameIdxMap['ec-' + name] = idx;\n        var itemModel = categoriesData.getItemModel(idx);\n        var style = itemModel.getModel('itemStyle').getItemStyle();\n\n        if (!style.fill) {\n          // Get color from palette.\n          style.fill = seriesModel.getColorFromPalette(name, paletteScope);\n        }\n\n        categoriesData.setItemVisual(idx, 'style', style);\n        var symbolVisualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\n\n        for (let i = 0; i < symbolVisualList.length; i++) {\n          var symbolVisual = itemModel.getShallow(symbolVisualList[i], true);\n\n          if (symbolVisual != null) {\n            categoriesData.setItemVisual(idx, symbolVisualList[i], symbolVisual);\n          }\n        }\n      }); // Assign category color to visual\n\n      if (categoriesData.count()) {\n        data.each(function (idx) {\n          var model = data.getItemModel(idx);\n          let categoryIdx = model.getShallow('category');\n\n          if (categoryIdx != null) {\n            if (typeof categoryIdx === 'string') {\n              categoryIdx = categoryNameIdxMap['ec-' + categoryIdx];\n            }\n\n            var categoryStyle = categoriesData.getItemVisual(categoryIdx, 'style');\n            var style = data.ensureUniqueItemVisual(idx, 'style');\n            echarts.util.extend(style, categoryStyle);\n            var visualList = ['symbol', 'symbolSize', 'symbolKeepAspect'];\n\n            for (let i = 0; i < visualList.length; i++) {\n              data.setItemVisual(idx, visualList[i], categoriesData.getItemVisual(categoryIdx, visualList[i]));\n            }\n          }\n        });\n      }\n    });\n  });\n  registers.registerVisual(function (ecModel) {\n    ecModel.eachSeriesByType('graphGL', function (seriesModel) {\n      var graph = seriesModel.getGraph();\n      var edgeData = seriesModel.getEdgeData();\n      var symbolType = normalize(seriesModel.get('edgeSymbol'));\n      var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n      edgeData.setVisual('drawType', 'stroke'); // var colorQuery = ['lineStyle', 'color'];\n      // var opacityQuery = ['lineStyle', 'opacity'];\n\n      edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n      edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n      edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n      edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n      edgeData.setVisual('style', seriesModel.getModel('lineStyle').getLineStyle());\n      edgeData.each(function (idx) {\n        var itemModel = edgeData.getItemModel(idx);\n        var edge = graph.getEdgeByIndex(idx);\n        var symbolType = normalize(itemModel.getShallow('symbol', true));\n        var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n        var style = itemModel.getModel('lineStyle').getLineStyle();\n        var existsStyle = edgeData.ensureUniqueItemVisual(idx, 'style');\n        echarts.util.extend(existsStyle, style);\n\n        switch (existsStyle.stroke) {\n          case 'source':\n            {\n              var nodeStyle = edge.node1.getVisual('style');\n              existsStyle.stroke = nodeStyle && nodeStyle.fill;\n              break;\n            }\n\n          case 'target':\n            {\n              var nodeStyle = edge.node2.getVisual('style');\n              existsStyle.stroke = nodeStyle && nodeStyle.fill;\n              break;\n            }\n        }\n\n        symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n        symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n        symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n        symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      });\n    });\n  });\n  registers.registerAction({\n    type: 'graphGLRoam',\n    event: 'graphglroam',\n    update: 'series.graphGL:roam'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n\n  function noop() {}\n\n  registers.registerAction({\n    type: 'graphGLStartLayout',\n    event: 'graphgllayoutstarted',\n    update: 'series.graphGL:startLayout'\n  }, noop);\n  registers.registerAction({\n    type: 'graphGLStopLayout',\n    event: 'graphgllayoutstopped',\n    update: 'series.graphGL:stopLayout'\n  }, noop);\n  registers.registerAction({\n    type: 'graphGLFocusNodeAdjacency',\n    event: 'graphGLFocusNodeAdjacency',\n    update: 'series.graphGL:focusNodeAdjacency'\n  }, noop);\n  registers.registerAction({\n    type: 'graphGLUnfocusNodeAdjacency',\n    event: 'graphGLUnfocusNodeAdjacency',\n    update: 'series.graphGL:unfocusNodeAdjacency'\n  }, noop);\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './graphGL/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar Line3DSeries = echarts.SeriesModel.extend({\n  type: 'series.line3D',\n  dependencies: ['grid3D'],\n  visualStyleAccessPath: 'lineStyle',\n  visualDrawType: 'stroke',\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    lineStyle: {\n      width: 2\n    },\n    animationDurationUpdate: 500\n  }\n});\nexport default Line3DSeries;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport * as lineContain from 'zrender/lib/contain/line';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport lines3DGLSL from '../../util/shader/lines3D.glsl.js';\nvar vec3 = glmatrix.vec3;\ngraphicGL.Shader.import(lines3DGLSL);\nexport default echarts.ChartView.extend({\n  type: 'line3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._api = api;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var tmp = this._prevLine3DMesh;\n    this._prevLine3DMesh = this._line3DMesh;\n    this._line3DMesh = tmp;\n\n    if (!this._line3DMesh) {\n      this._line3DMesh = new graphicGL.Mesh({\n        geometry: new Lines3DGeometry({\n          useNativeLine: false,\n          sortTriangles: true\n        }),\n        material: new graphicGL.Material({\n          shader: graphicGL.createShader('ecgl.meshLines3D')\n        }),\n        // Render after axes\n        renderOrder: 10\n      });\n      this._line3DMesh.geometry.pick = this._pick.bind(this);\n    }\n\n    this.groupGL.remove(this._prevLine3DMesh);\n    this.groupGL.add(this._line3DMesh);\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL); // TODO\n\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._line3DMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    this._doRender(seriesModel, api);\n\n    this._data = seriesModel.getData();\n    this._camera = coordSys.viewGL.camera;\n    this.updateCamera();\n\n    this._updateAnimation(seriesModel);\n  },\n  updateCamera: function () {\n    this._updateNDCPosition();\n  },\n  _doRender: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var lineMesh = this._line3DMesh;\n    lineMesh.geometry.resetOffset();\n    var points = data.getLayout('points');\n    var colorArr = [];\n    var vertexColors = new Float32Array(points.length / 3 * 4);\n    var colorOffset = 0;\n    var hasTransparent = false;\n    data.each(function (idx) {\n      var color = getItemVisualColor(data, idx);\n      var opacity = getItemVisualOpacity(data, idx);\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      graphicGL.parseColor(color, colorArr);\n      colorArr[3] *= opacity;\n      vertexColors[colorOffset++] = colorArr[0];\n      vertexColors[colorOffset++] = colorArr[1];\n      vertexColors[colorOffset++] = colorArr[2];\n      vertexColors[colorOffset++] = colorArr[3];\n\n      if (colorArr[3] < 0.99) {\n        hasTransparent = true;\n      }\n    });\n    lineMesh.geometry.setVertexCount(lineMesh.geometry.getPolylineVertexCount(points));\n    lineMesh.geometry.setTriangleCount(lineMesh.geometry.getPolylineTriangleCount(points));\n    lineMesh.geometry.addPolyline(points, vertexColors, retrieve.firstNotNull(seriesModel.get('lineStyle.width'), 1));\n    lineMesh.geometry.dirty();\n    lineMesh.geometry.updateBoundingBox();\n    var material = lineMesh.material;\n    material.transparent = hasTransparent;\n    material.depthMask = !hasTransparent;\n    var debugWireframeModel = seriesModel.getModel('debug.wireframe');\n\n    if (debugWireframeModel.get('show')) {\n      lineMesh.geometry.createAttribute('barycentric', 'float', 3);\n      lineMesh.geometry.generateBarycentric();\n      lineMesh.material.set('both', 'WIREFRAME_TRIANGLE');\n      lineMesh.material.set('wireframeLineColor', graphicGL.parseColor(debugWireframeModel.get('lineStyle.color') || 'rgba(0,0,0,0.5)'));\n      lineMesh.material.set('wireframeLineWidth', retrieve.firstNotNull(debugWireframeModel.get('lineStyle.width'), 1));\n    } else {\n      lineMesh.material.set('both', 'WIREFRAME_TRIANGLE');\n    }\n\n    this._points = points;\n\n    this._initHandler(seriesModel, api);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevPositionPrev', 'positionPrev'], ['prevPositionNext', 'positionNext']], this._prevLine3DMesh, this._line3DMesh, seriesModel);\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var lineMesh = this._line3DMesh;\n    var lastDataIndex = -1;\n    lineMesh.seriesIndex = seriesModel.seriesIndex;\n    lineMesh.off('mousemove');\n    lineMesh.off('mouseout');\n    lineMesh.on('mousemove', function (e) {\n      var value = coordSys.pointToData(e.point.array);\n      var dataIndex = data.indicesOfNearest('x', value[0])[0];\n\n      if (dataIndex !== lastDataIndex) {\n        // this._downplay(lastDataIndex);\n        // this._highlight(dataIndex);\n        api.dispatchAction({\n          type: 'grid3DShowAxisPointer',\n          value: [data.get('x', dataIndex), data.get('y', dataIndex), data.get('z', dataIndex)]\n        });\n        lineMesh.dataIndex = dataIndex;\n      }\n\n      lastDataIndex = dataIndex;\n    }, this);\n    lineMesh.on('mouseout', function (e) {\n      // this._downplay(lastDataIndex);\n      lastDataIndex = -1;\n      lineMesh.dataIndex = -1;\n      api.dispatchAction({\n        type: 'grid3DHideAxisPointer'\n      });\n    }, this);\n  },\n  // _highlight: function (dataIndex) {\n  //     var data = this._data;\n  //     if (!data) {\n  //         return;\n  //     }\n  // },\n  // _downplay: function (dataIndex) {\n  //     var data = this._data;\n  //     if (!data) {\n  //         return;\n  //     }\n  // },\n  _updateNDCPosition: function () {\n    var worldViewProjection = new Matrix4();\n    var camera = this._camera;\n    Matrix4.multiply(worldViewProjection, camera.projectionMatrix, camera.viewMatrix);\n    var positionNDC = this._positionNDC;\n    var points = this._points;\n    var nPoints = points.length / 3;\n\n    if (!positionNDC || positionNDC.length / 2 !== nPoints) {\n      positionNDC = this._positionNDC = new Float32Array(nPoints * 2);\n    }\n\n    var pos = [];\n\n    for (var i = 0; i < nPoints; i++) {\n      var i3 = i * 3;\n      var i2 = i * 2;\n      pos[0] = points[i3];\n      pos[1] = points[i3 + 1];\n      pos[2] = points[i3 + 2];\n      pos[3] = 1;\n      vec3.transformMat4(pos, pos, worldViewProjection.array);\n      positionNDC[i2] = pos[0] / pos[3];\n      positionNDC[i2 + 1] = pos[1] / pos[3];\n    }\n  },\n  _pick: function (x, y, renderer, camera, renderable, out) {\n    var positionNDC = this._positionNDC;\n    var seriesModel = this._data.hostModel;\n    var lineWidth = seriesModel.get('lineStyle.width');\n    var dataIndex = -1;\n    var width = renderer.viewport.width;\n    var height = renderer.viewport.height;\n    var halfWidth = width * 0.5;\n    var halfHeight = height * 0.5;\n    x = (x + 1) * halfWidth;\n    y = (y + 1) * halfHeight;\n\n    for (var i = 1; i < positionNDC.length / 2; i++) {\n      var x0 = (positionNDC[(i - 1) * 2] + 1) * halfWidth;\n      var y0 = (positionNDC[(i - 1) * 2 + 1] + 1) * halfHeight;\n      var x1 = (positionNDC[i * 2] + 1) * halfWidth;\n      var y1 = (positionNDC[i * 2 + 1] + 1) * halfHeight;\n\n      if (lineContain.containStroke(x0, y0, x1, y1, lineWidth, x, y)) {\n        var dist0 = (x0 - x) * (x0 - x) + (y0 - y) * (y0 - y);\n        var dist1 = (x1 - x) * (x1 - x) + (y1 - y) * (y1 - y); // Nearest point.\n\n        dataIndex = dist0 < dist1 ? i - 1 : i;\n      }\n    }\n\n    if (dataIndex >= 0) {\n      var i3 = dataIndex * 3;\n      var point = new Vector3(this._points[i3], this._points[i3 + 1], this._points[i3 + 2]);\n      out.push({\n        dataIndex: dataIndex,\n        point: point,\n        pointWorld: point.clone(),\n        target: this._line3DMesh,\n        distance: this._camera.getWorldPosition().dist(point)\n      });\n    }\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Line3DSeries from './Line3DSeries';\nimport Line3DView from './Line3DView';\nexport function install(registers) {\n  registers.registerChartView(Line3DView);\n  registers.registerSeriesModel(Line3DSeries);\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('line3D', function (seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n\n      if (coordSys) {\n        if (coordSys.type !== 'cartesian3D') {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error('line3D needs cartesian3D coordinateSystem');\n          }\n\n          return;\n        }\n\n        var points = new Float32Array(data.count() * 3);\n        var item = [];\n        var out = [];\n        var coordDims = coordSys.dimensions;\n        var dims = coordDims.map(function (coordDim) {\n          return seriesModel.coordDimToDataDim(coordDim)[0];\n        });\n\n        if (coordSys) {\n          data.each(dims, function (x, y, z, idx) {\n            item[0] = x;\n            item[1] = y;\n            item[2] = z;\n            coordSys.dataToPoint(item, out);\n            points[idx * 3] = out[0];\n            points[idx * 3 + 1] = out[1];\n            points[idx * 3 + 2] = out[2];\n          });\n        }\n\n        data.setLayout('points', points);\n      }\n    });\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './line3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar vec2 = glmatrix.vec2;\nvar normalize = vec3.normalize;\nvar cross = vec3.cross;\nvar sub = vec3.sub;\nvar add = vec3.add;\nvar create = vec3.create;\nvar normal = create();\nvar tangent = create();\nvar bitangent = create();\nvar halfVector = create();\nvar coord0 = [];\nvar coord1 = [];\n\nfunction getCubicPointsOnGlobe(coords, coordSys) {\n  vec2.copy(coord0, coords[0]);\n  vec2.copy(coord1, coords[1]);\n  var pts = [];\n  var p0 = pts[0] = create();\n  var p1 = pts[1] = create();\n  var p2 = pts[2] = create();\n  var p3 = pts[3] = create();\n  coordSys.dataToPoint(coord0, p0);\n  coordSys.dataToPoint(coord1, p3); // Get p1\n\n  normalize(normal, p0); // TODO p0-p3 is parallel with normal\n\n  sub(tangent, p3, p0);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p1 is half vector of p0 and tangent on p0\n\n  add(p1, normal, tangent);\n  normalize(p1, p1); // Get p2\n\n  normalize(normal, p3);\n  sub(tangent, p0, p3);\n  normalize(tangent, tangent);\n  cross(bitangent, tangent, normal);\n  normalize(bitangent, bitangent);\n  cross(tangent, normal, bitangent); // p2 is half vector of p3 and tangent on p3\n\n  add(p2, normal, tangent);\n  normalize(p2, p2); // Project distance of p0 on halfVector\n\n  add(halfVector, p0, p3);\n  normalize(halfVector, halfVector);\n  var projDist = vec3.dot(p0, halfVector); // Angle of halfVector and p1\n\n  var cosTheta = vec3.dot(halfVector, p1);\n  var len = (Math.max(vec3.len(p0), vec3.len(p3)) - projDist) / cosTheta * 2;\n  vec3.scaleAndAdd(p1, p0, p1, len);\n  vec3.scaleAndAdd(p2, p3, p2, len);\n  return pts;\n}\n\nfunction getCubicPointsOnPlane(coords, coordSys, up) {\n  var pts = [];\n  var p0 = pts[0] = vec3.create();\n  var p1 = pts[1] = vec3.create();\n  var p2 = pts[2] = vec3.create();\n  var p3 = pts[3] = vec3.create();\n  coordSys.dataToPoint(coords[0], p0);\n  coordSys.dataToPoint(coords[1], p3);\n  var len = vec3.dist(p0, p3);\n  vec3.lerp(p1, p0, p3, 0.3);\n  vec3.lerp(p2, p0, p3, 0.3);\n  vec3.scaleAndAdd(p1, p1, up, Math.min(len * 0.1, 10));\n  vec3.scaleAndAdd(p2, p2, up, Math.min(len * 0.1, 10));\n  return pts;\n}\n\nfunction getPolylinePoints(coords, coordSys) {\n  var pts = new Float32Array(coords.length * 3);\n  var off = 0;\n  var pt = [];\n\n  for (var i = 0; i < coords.length; i++) {\n    coordSys.dataToPoint(coords[i], pt);\n    pts[off++] = pt[0];\n    pts[off++] = pt[1];\n    pts[off++] = pt[2];\n  }\n\n  return pts;\n}\n\nfunction prepareCoords(data) {\n  var coordsList = [];\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords', true);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\n      }\n    }\n\n    coordsList.push(coords);\n  });\n  return {\n    coordsList: coordsList\n  };\n}\n\nfunction layoutGlobe(seriesModel, coordSys) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  var res = prepareCoords(data);\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var getPointsMethod = isPolyline ? getPolylinePoints : getCubicPointsOnGlobe;\n    data.setItemLayout(idx, getPointsMethod(coords, coordSys));\n  });\n}\n\nfunction layoutOnPlane(seriesModel, coordSys, normal) {\n  var data = seriesModel.getData();\n  var isPolyline = seriesModel.get('polyline');\n  var res = prepareCoords(data);\n  data.setLayout('lineType', isPolyline ? 'polyline' : 'cubicBezier');\n  data.each(function (idx) {\n    var coords = res.coordsList[idx];\n    var pts = isPolyline ? getPolylinePoints(coords, coordSys) : getCubicPointsOnPlane(coords, coordSys, normal);\n    data.setItemLayout(idx, pts);\n  });\n}\n\nexport default function lines3DLayout(ecModel, api) {\n  ecModel.eachSeriesByType('lines3D', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'globe') {\n      layoutGlobe(seriesModel, coordSys);\n    } else if (coordSys.type === 'geo3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 1, 0]);\n    } else if (coordSys.type === 'mapbox3D' || coordSys.type === 'maptalks3D') {\n      layoutOnPlane(seriesModel, coordSys, [0, 0, 1]);\n    }\n  });\n}\n;","import * as echarts from 'echarts/lib/echarts';\nexport default echarts.SeriesModel.extend({\n  type: 'series.lines3D',\n  dependencies: ['globe'],\n  visualStyleAccessPath: 'lineStyle',\n  visualDrawType: 'stroke',\n  getInitialData: function (option, ecModel) {\n    var lineData = new echarts.List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  defaultOption: {\n    coordinateSystem: 'globe',\n    globeIndex: 0,\n    geo3DIndex: 0,\n    zlevel: -10,\n    polyline: false,\n    effect: {\n      show: false,\n      period: 4,\n      // Trail width\n      trailWidth: 4,\n      trailLength: 0.2,\n      spotIntensity: 6\n    },\n    silent: true,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    lineStyle: {\n      width: 1,\n      opacity: 0.5 // color\n\n    }\n  }\n});","export default \"@export ecgl.trail2.vertex\\nattribute vec3 position: POSITION;\\nattribute vec3 positionPrev;\\nattribute vec3 positionNext;\\nattribute float offset;\\nattribute float dist;\\nattribute float distAll;\\nattribute float start;\\n\\nattribute vec4 a_Color : COLOR;\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\nuniform float near : NEAR;\\n\\nuniform float speed : 0;\\nuniform float trailLength: 0.3;\\nuniform float time;\\nuniform float period: 1000;\\n\\nuniform float spotSize: 1;\\n\\nvarying vec4 v_Color;\\nvarying float v_Percent;\\nvarying float v_SpotPercent;\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n@import ecgl.lines3D.clipNear\\n\\nvoid main()\\n{\\n @import ecgl.lines3D.expandLine\\n\\n gl_Position = currProj;\\n\\n v_Color = a_Color;\\n\\n @import ecgl.common.wireframe.vertexMain\\n\\n#ifdef CONSTANT_SPEED\\n float t = mod((speed * time + start) / distAll, 1. + trailLength) - trailLength;\\n#else\\n float t = mod((time + start) / period, 1. + trailLength) - trailLength;\\n#endif\\n\\n float trailLen = distAll * trailLength;\\n\\n v_Percent = (dist - t * distAll) / trailLen;\\n\\n v_SpotPercent = spotSize / distAll;\\n\\n }\\n@end\\n\\n\\n@export ecgl.trail2.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\nuniform float spotIntensity: 5;\\n\\nvarying vec4 v_Color;\\nvarying float v_Percent;\\nvarying float v_SpotPercent;\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n if (v_Percent > 1.0 || v_Percent < 0.0) {\\n discard;\\n }\\n\\n float fade = v_Percent;\\n\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color * v_Color);\\n#else\\n gl_FragColor = color * v_Color;\\n#endif\\n\\n @import ecgl.common.wireframe.fragmentMain\\n\\n if (v_Percent > (1.0 - v_SpotPercent)) {\\n gl_FragColor.rgb *= spotIntensity;\\n }\\n\\n gl_FragColor.a *= fade;\\n}\\n\\n@end\";","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport trail2GLSL from './shader/trail2.glsl.js';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\n\nfunction sign(a) {\n  return a > 0 ? 1 : -1;\n}\n\ngraphicGL.Shader.import(trail2GLSL);\nexport default graphicGL.Mesh.extend(function () {\n  var material = new graphicGL.Material({\n    shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.trail2.vertex'), graphicGL.Shader.source('ecgl.trail2.fragment')),\n    transparent: true,\n    depthMask: false\n  });\n  var geometry = new Lines3DGeometry({\n    dynamic: true\n  });\n  geometry.createAttribute('dist', 'float', 1);\n  geometry.createAttribute('distAll', 'float', 1);\n  geometry.createAttribute('start', 'float', 1);\n  return {\n    geometry: geometry,\n    material: material,\n    culling: false,\n    $ignorePicking: true\n  };\n}, {\n  updateData: function (data, api, lines3DGeometry) {\n    var seriesModel = data.hostModel;\n    var geometry = this.geometry;\n    var effectModel = seriesModel.getModel('effect');\n    var size = effectModel.get('trailWidth') * api.getDevicePixelRatio();\n    var trailLength = effectModel.get('trailLength');\n    var speed = seriesModel.get('effect.constantSpeed');\n    var period = seriesModel.get('effect.period') * 1000;\n    var useConstantSpeed = speed != null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!this.getScene()) {\n        console.error('TrailMesh must been add to scene before updateData');\n      }\n    }\n\n    useConstantSpeed ? this.material.set('speed', speed / 1000) : this.material.set('period', period);\n    this.material[useConstantSpeed ? 'define' : 'undefine']('vertex', 'CONSTANT_SPEED');\n    var isPolyline = seriesModel.get('polyline');\n    geometry.trailLength = trailLength;\n    this.material.set('trailLength', trailLength);\n    geometry.resetOffset();\n    ['position', 'positionPrev', 'positionNext'].forEach(function (attrName) {\n      geometry.attributes[attrName].value = lines3DGeometry.attributes[attrName].value;\n    });\n    var extraAttrs = ['dist', 'distAll', 'start', 'offset', 'color'];\n    extraAttrs.forEach(function (attrName) {\n      geometry.attributes[attrName].init(geometry.vertexCount);\n    });\n    geometry.indices = lines3DGeometry.indices;\n    var colorArr = [];\n    var effectColor = effectModel.get('trailColor');\n    var effectOpacity = effectModel.get('trailOpacity');\n    var hasEffectColor = effectColor != null;\n    var hasEffectOpacity = effectOpacity != null;\n    this.updateWorldTransform();\n    var xScale = this.worldTransform.x.len();\n    var yScale = this.worldTransform.y.len();\n    var zScale = this.worldTransform.z.len();\n    var vertexOffset = 0;\n    var maxDistance = 0;\n    data.each(function (idx) {\n      var pts = data.getItemLayout(idx);\n      var opacity = hasEffectOpacity ? effectOpacity : getItemVisualOpacity(data, idx);\n      var color = getItemVisualColor(data, idx);\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      colorArr = graphicGL.parseColor(hasEffectColor ? effectColor : color, colorArr);\n      colorArr[3] *= opacity;\n      var vertexCount = isPolyline ? lines3DGeometry.getPolylineVertexCount(pts) : lines3DGeometry.getCubicCurveVertexCount(pts[0], pts[1], pts[2], pts[3]);\n      var dist = 0;\n      var pos = [];\n      var posPrev = [];\n\n      for (var i = vertexOffset; i < vertexOffset + vertexCount; i++) {\n        geometry.attributes.position.get(i, pos);\n        pos[0] *= xScale;\n        pos[1] *= yScale;\n        pos[2] *= zScale;\n\n        if (i > vertexOffset) {\n          dist += vec3.dist(pos, posPrev);\n        }\n\n        geometry.attributes.dist.set(i, dist);\n        vec3.copy(posPrev, pos);\n      }\n\n      maxDistance = Math.max(maxDistance, dist);\n      var randomStart = Math.random() * (useConstantSpeed ? dist : period);\n\n      for (var i = vertexOffset; i < vertexOffset + vertexCount; i++) {\n        geometry.attributes.distAll.set(i, dist);\n        geometry.attributes.start.set(i, randomStart);\n        geometry.attributes.offset.set(i, sign(lines3DGeometry.attributes.offset.get(i)) * size / 2);\n        geometry.attributes.color.set(i, colorArr);\n      }\n\n      vertexOffset += vertexCount;\n    });\n    this.material.set('spotSize', maxDistance * 0.1 * trailLength);\n    this.material.set('spotIntensity', effectModel.get('spotIntensity'));\n    geometry.dirty();\n  },\n  setAnimationTime: function (time) {\n    this.material.set('time', time);\n  }\n});","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport LinesGeometry from '../../util/geometry/Lines3D'; // import TrailMesh from './TrailMesh';\n\nimport TrailMesh2 from './TrailMesh2';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport lines3DGLSL from '../../util/shader/lines3D.glsl.js';\ngraphicGL.Shader.import(lines3DGLSL);\n\nfunction getCoordSysSize(coordSys) {\n  if (coordSys.radius != null) {\n    return coordSys.radius;\n  }\n\n  if (coordSys.size != null) {\n    return Math.max(coordSys.size[0], coordSys.size[1], coordSys.size[2]);\n  } else {\n    return 100;\n  }\n}\n\nexport default echarts.ChartView.extend({\n  type: 'lines3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._meshLinesMaterial = new graphicGL.Material({\n      shader: graphicGL.createShader('ecgl.meshLines3D'),\n      transparent: true,\n      depthMask: false\n    });\n    this._linesMesh = new graphicGL.Mesh({\n      geometry: new LinesGeometry(),\n      material: this._meshLinesMaterial,\n      $ignorePicking: true\n    }); // this._trailMesh = new TrailMesh();\n\n    this._trailMesh = new TrailMesh2();\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.add(this._linesMesh);\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n\n    if (coordSys && coordSys.viewGL) {\n      var viewGL = coordSys.viewGL;\n      viewGL.add(this.groupGL);\n\n      this._updateLines(seriesModel, ecModel, api);\n\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._linesMesh.material[methodName]('fragment', 'SRGB_DECODE');\n\n      this._trailMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    var trailMesh = this._trailMesh;\n    trailMesh.stopAnimation();\n\n    if (seriesModel.get('effect.show')) {\n      this.groupGL.add(trailMesh);\n      trailMesh.updateData(data, api, this._linesMesh.geometry);\n      trailMesh.__time = trailMesh.__time || 0;\n      var time = 3600 * 1000; // 1hour\n\n      this._curveEffectsAnimator = trailMesh.animate('', {\n        loop: true\n      }).when(time, {\n        __time: time\n      }).during(function () {\n        trailMesh.setAnimationTime(trailMesh.__time);\n      }).start();\n    } else {\n      this.groupGL.remove(trailMesh);\n      this._curveEffectsAnimator = null;\n    }\n\n    this._linesMesh.material.blend = this._trailMesh.material.blend = seriesModel.get('blendMode') === 'lighter' ? graphicGL.additiveBlend : null;\n  },\n  pauseEffect: function () {\n    if (this._curveEffectsAnimator) {\n      this._curveEffectsAnimator.pause();\n    }\n  },\n  resumeEffect: function () {\n    if (this._curveEffectsAnimator) {\n      this._curveEffectsAnimator.resume();\n    }\n  },\n  toggleEffect: function () {\n    var animator = this._curveEffectsAnimator;\n\n    if (animator) {\n      animator.isPaused() ? animator.resume() : animator.pause();\n    }\n  },\n  _updateLines: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var geometry = this._linesMesh.geometry;\n    var isPolyline = seriesModel.get('polyline');\n    geometry.expandLine = true;\n    var size = getCoordSysSize(coordSys);\n    geometry.segmentScale = size / 20;\n    var lineWidthQueryPath = 'lineStyle.width'.split('.');\n    var dpr = api.getDevicePixelRatio();\n    var maxLineWidth = 0;\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var lineWidth = itemModel.get(lineWidthQueryPath);\n\n      if (lineWidth == null) {\n        lineWidth = 1;\n      }\n\n      data.setItemVisual(idx, 'lineWidth', lineWidth);\n      maxLineWidth = Math.max(lineWidth, maxLineWidth);\n    }); // Must set useNativeLine before calling any other methods\n\n    geometry.useNativeLine = false;\n    var nVertex = 0;\n    var nTriangle = 0;\n    data.each(function (idx) {\n      var pts = data.getItemLayout(idx);\n\n      if (isPolyline) {\n        nVertex += geometry.getPolylineVertexCount(pts);\n        nTriangle += geometry.getPolylineTriangleCount(pts);\n      } else {\n        nVertex += geometry.getCubicCurveVertexCount(pts[0], pts[1], pts[2], pts[3]);\n        nTriangle += geometry.getCubicCurveTriangleCount(pts[0], pts[1], pts[2], pts[3]);\n      }\n    });\n    geometry.setVertexCount(nVertex);\n    geometry.setTriangleCount(nTriangle);\n    geometry.resetOffset();\n    var colorArr = [];\n    data.each(function (idx) {\n      var pts = data.getItemLayout(idx);\n      var color = getItemVisualColor(data, idx);\n      var opacity = getItemVisualOpacity(data, idx);\n      var lineWidth = data.getItemVisual(idx, 'lineWidth') * dpr;\n\n      if (opacity == null) {\n        opacity = 1;\n      }\n\n      colorArr = graphicGL.parseColor(color, colorArr);\n      colorArr[3] *= opacity;\n\n      if (isPolyline) {\n        geometry.addPolyline(pts, colorArr, lineWidth);\n      } else {\n        geometry.addCubicCurve(pts[0], pts[1], pts[2], pts[3], colorArr, lineWidth);\n      }\n    });\n    geometry.dirty();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport lines3DLayout from './lines3DLayout';\nimport Lines3DSeries from './Lines3DSeries';\nimport Lines3DView from './Lines3DView';\nexport function install(registers) {\n  registers.registerChartView(Lines3DView);\n  registers.registerSeriesModel(Lines3DSeries);\n  registers.registerLayout(lines3DLayout);\n  registers.registerAction({\n    type: 'lines3DPauseEffect',\n    event: 'lines3deffectpaused',\n    update: 'series.lines3D:pauseEffect'\n  }, function () {});\n  registers.registerAction({\n    type: 'lines3DResumeEffect',\n    event: 'lines3deffectresumed',\n    update: 'series.lines3D:resumeEffect'\n  }, function () {});\n  registers.registerAction({\n    type: 'lines3DToggleEffect',\n    event: 'lines3deffectchanged',\n    update: 'series.lines3D:toggleEffect'\n  }, function () {});\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './lines3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport { concatArray } from 'zrender/lib/core/util';\nvar LinesGLSeries = echarts.SeriesModel.extend({\n  type: 'series.linesGL',\n  dependencies: ['grid', 'geo'],\n  visualStyleAccessPath: 'lineStyle',\n  visualDrawType: 'stroke',\n  streamEnabled: true,\n  init: function (option) {\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesGLSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesGLSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function (params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function (idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(coords instanceof Array && coords.length > 0 && coords[0] instanceof Array)) {\n        throw new Error('Invalid coords ' + JSON.stringify(coords) + '. Lines must have 2d coords array in data item.');\n      }\n    }\n\n    return coords;\n  },\n  getLineCoordsCount: function (idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function (idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function (data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Array(len);\n      var coordsStorage = new Float64Array(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {\n            if (process.env.NODE_ENV !== 'production') {\n              throw new Error('Invalid data format.');\n            }\n          }\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new echarts.List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 10,\n    progressive: 1e4,\n    progressiveThreshold: 5e4,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    lineStyle: {\n      opacity: 0.8\n    },\n    postEffect: {\n      enable: false,\n      colorCorrection: {\n        exposure: 0,\n        brightness: 0,\n        contrast: 1,\n        saturation: 1,\n        enable: true\n      }\n    }\n  }\n});\nexport default LinesGLSeries;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nimport Lines2DGeometry from '../../util/geometry/Lines2D';\nimport GLViewHelper from '../common/GLViewHelper';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport retrieve from '../../util/retrieve';\nexport default echarts.ChartView.extend({\n  type: 'linesGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this.viewGL = new ViewGL('orthographic');\n    this.viewGL.add(this.groupGL);\n    this._glViewHelper = new GLViewHelper(this.viewGL);\n    this._nativeLinesShader = graphicGL.createShader('ecgl.lines3D');\n    this._meshLinesShader = graphicGL.createShader('ecgl.meshLines3D');\n    this._linesMeshes = [];\n    this._currentStep = 0;\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    var linesMesh = this._linesMeshes[0];\n\n    if (!linesMesh) {\n      linesMesh = this._linesMeshes[0] = this._createLinesMesh(seriesModel);\n    }\n\n    this._linesMeshes.length = 1;\n    this.groupGL.add(linesMesh);\n\n    this._updateLinesMesh(seriesModel, linesMesh, 0, seriesModel.getData().count());\n\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    this._currentStep = 0;\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var linesMesh = this._linesMeshes[this._currentStep];\n\n    if (!linesMesh) {\n      linesMesh = this._createLinesMesh(seriesModel);\n      this._linesMeshes[this._currentStep] = linesMesh;\n    }\n\n    this._updateLinesMesh(seriesModel, linesMesh, params.start, params.end);\n\n    this.groupGL.add(linesMesh);\n    api.getZr().refresh();\n    this._currentStep++;\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    if (seriesModel.coordinateSystem.getRoamTransform) {\n      this._glViewHelper.updateTransform(seriesModel, api);\n    }\n  },\n  _createLinesMesh: function (seriesModel) {\n    var linesMesh = new graphicGL.Mesh({\n      $ignorePicking: true,\n      material: new graphicGL.Material({\n        shader: graphicGL.createShader('ecgl.lines3D'),\n        transparent: true,\n        depthMask: false,\n        depthTest: false\n      }),\n      geometry: new Lines2DGeometry({\n        segmentScale: 10,\n        useNativeLine: true,\n        dynamic: false\n      }),\n      mode: graphicGL.Mesh.LINES,\n      culling: false\n    });\n    return linesMesh;\n  },\n  _updateLinesMesh: function (seriesModel, linesMesh, start, end) {\n    var data = seriesModel.getData();\n    linesMesh.material.blend = seriesModel.get('blendMode') === 'lighter' ? graphicGL.additiveBlend : null;\n    var curveness = seriesModel.get('lineStyle.curveness') || 0;\n    var isPolyline = seriesModel.get('polyline');\n    var geometry = linesMesh.geometry;\n    var coordSys = seriesModel.coordinateSystem;\n    var lineWidth = retrieve.firstNotNull(seriesModel.get('lineStyle.width'), 1);\n\n    if (lineWidth > 1) {\n      if (linesMesh.material.shader !== this._meshLinesShader) {\n        linesMesh.material.attachShader(this._meshLinesShader);\n      }\n\n      linesMesh.mode = graphicGL.Mesh.TRIANGLES;\n    } else {\n      if (linesMesh.material.shader !== this._nativeLinesShader) {\n        linesMesh.material.attachShader(this._nativeLinesShader);\n      }\n\n      linesMesh.mode = graphicGL.Mesh.LINES;\n    }\n\n    start = start || 0;\n    end = end || data.count();\n    geometry.resetOffset();\n    var vertexCount = 0;\n    var triangleCount = 0;\n    var p0 = [];\n    var p1 = [];\n    var p2 = [];\n    var p3 = [];\n    var lineCoords = [];\n    var t = 0.3;\n    var t2 = 0.7;\n\n    function updateBezierControlPoints() {\n      p1[0] = p0[0] * t2 + p3[0] * t - (p0[1] - p3[1]) * curveness;\n      p1[1] = p0[1] * t2 + p3[1] * t - (p3[0] - p0[0]) * curveness;\n      p2[0] = p0[0] * t + p3[0] * t2 - (p0[1] - p3[1]) * curveness;\n      p2[1] = p0[1] * t + p3[1] * t2 - (p3[0] - p0[0]) * curveness;\n    }\n\n    if (isPolyline || curveness !== 0) {\n      for (var idx = start; idx < end; idx++) {\n        if (isPolyline) {\n          var count = seriesModel.getLineCoordsCount(idx);\n          vertexCount += geometry.getPolylineVertexCount(count);\n          triangleCount += geometry.getPolylineTriangleCount(count);\n        } else {\n          seriesModel.getLineCoords(idx, lineCoords);\n\n          this._glViewHelper.dataToPoint(coordSys, lineCoords[0], p0);\n\n          this._glViewHelper.dataToPoint(coordSys, lineCoords[1], p3);\n\n          updateBezierControlPoints();\n          vertexCount += geometry.getCubicCurveVertexCount(p0, p1, p2, p3);\n          triangleCount += geometry.getCubicCurveTriangleCount(p0, p1, p2, p3);\n        }\n      }\n    } else {\n      var lineCount = end - start;\n      vertexCount += lineCount * geometry.getLineVertexCount();\n      triangleCount += lineCount * geometry.getLineVertexCount();\n    }\n\n    geometry.setVertexCount(vertexCount);\n    geometry.setTriangleCount(triangleCount);\n    var dataIndex = start;\n    var colorArr = [];\n\n    for (var idx = start; idx < end; idx++) {\n      graphicGL.parseColor(getItemVisualColor(data, dataIndex), colorArr);\n      var opacity = retrieve.firstNotNull(getItemVisualOpacity(data, dataIndex), 1);\n      colorArr[3] *= opacity;\n      var count = seriesModel.getLineCoords(idx, lineCoords);\n\n      for (var k = 0; k < count; k++) {\n        this._glViewHelper.dataToPoint(coordSys, lineCoords[k], lineCoords[k]);\n      }\n\n      if (isPolyline) {\n        geometry.addPolyline(lineCoords, colorArr, lineWidth, 0, count);\n      } else if (curveness !== 0) {\n        p0 = lineCoords[0];\n        p3 = lineCoords[1];\n        updateBezierControlPoints();\n        geometry.addCubicCurve(p0, p1, p2, p3, colorArr, lineWidth);\n      } else {\n        geometry.addPolyline(lineCoords, colorArr, lineWidth, 0, 2);\n      }\n\n      dataIndex++;\n    }\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport LinesGLSeries from './LinesGLSeries';\nimport LinesGLView from './LinesGLView';\nexport function install(registers) {\n  registers.registerChartView(LinesGLView);\n  registers.registerSeriesModel(LinesGLSeries);\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './linesGL/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../../component/common/componentViewControlMixin';\nimport componentPostEffectMixin from '../../component/common/componentPostEffectMixin';\nimport componentLightMixin from '../../component/common/componentLightMixin';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport geo3DModelMixin from '../../coord/geo3D/geo3DModelMixin';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport geo3DCreator from '../../coord/geo3DCreator';\n\nfunction transformPolygon(mapbox3DCoordSys, poly) {\n  var newPoly = [];\n\n  for (var k = 0; k < poly.length; k++) {\n    newPoly.push(mapbox3DCoordSys.dataToPoint(poly[k]));\n  }\n\n  return newPoly;\n}\n\nvar Map3DSeries = echarts.SeriesModel.extend({\n  type: 'series.map3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  visualStyleAccessPath: 'itemStyle',\n  optionUpdated: function (newOpt) {\n    newOpt = newOpt || {};\n    var coordSysType = this.get('coordinateSystem');\n\n    if (coordSysType == null || coordSysType === 'geo3D') {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var propsNeedToCheck = ['left', 'top', 'width', 'height', 'boxWidth', 'boxDepth', 'boxHeight', 'light', 'viewControl', 'postEffect', 'temporalSuperSampling', 'environment', 'groundPlane'];\n      var ignoredProperties = [];\n      propsNeedToCheck.forEach(function (propName) {\n        if (newOpt[propName] != null) {\n          ignoredProperties.push(propName);\n        }\n      });\n\n      if (ignoredProperties.length) {\n        console.warn('Property %s in map3D series will be ignored if coordinate system is %s', ignoredProperties.join(', '), coordSysType);\n      }\n    }\n\n    if (this.get('groundPlane.show')) {\n      // Force disable groundPlane if map3D has other coordinate systems.\n      this.option.groundPlane.show = false;\n    } // Reset geo.\n\n\n    this._geo = null;\n  },\n  getInitialData: function (option) {\n    option.data = this.getFilledRegions(option.data, option.map);\n    var dimensions = echarts.helper.createDimensions(option.data, {\n      coordDimensions: ['value']\n    });\n    var list = new echarts.List(dimensions, this);\n    list.initData(option.data);\n    var regionModelMap = {};\n    list.each(function (idx) {\n      var name = list.getName(idx);\n      var itemModel = list.getItemModel(idx);\n      regionModelMap[name] = itemModel;\n    });\n    this._regionModelMap = regionModelMap;\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  getRegionModel: function (idx) {\n    var name = this.getData().getName(idx);\n    return this._regionModelMap[name] || new echarts.Model(null, this);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var name = this.getData().getName(idx);\n\n    if (coordSys.transform) {\n      var region = coordSys.getRegion(name);\n      return region ? region.geometries : [];\n    } else {\n      if (!this._geo) {\n        this._geo = geo3DCreator.createGeo3D(this);\n      }\n\n      var region = this._geo.getRegion(name);\n\n      var ret = [];\n\n      for (var k = 0; k < region.geometries.length; k++) {\n        var geo = region.geometries[k];\n        var interiors = [];\n        var exterior = transformPolygon(coordSys, geo.exterior);\n\n        if (interiors && interiors.length) {\n          for (var m = 0; m < geo.interiors.length; m++) {\n            interiors.push(transformPolygon(coordSys, interiors[m]));\n          }\n        }\n\n        ret.push({\n          interiors: interiors,\n          exterior: exterior\n        });\n      }\n\n      return ret;\n    }\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status);\n\n    if (text == null) {\n      text = this.getData().getName(dataIndex);\n    }\n\n    return text;\n  },\n  defaultOption: {\n    // Support geo3D, mapbox, maptalks3D\n    coordinateSystem: 'geo3D',\n    // itemStyle: {},\n    // height,\n    // label: {}\n    data: null\n  }\n});\necharts.util.merge(Map3DSeries.prototype, geo3DModelMixin);\necharts.util.merge(Map3DSeries.prototype, componentViewControlMixin);\necharts.util.merge(Map3DSeries.prototype, componentPostEffectMixin);\necharts.util.merge(Map3DSeries.prototype, componentLightMixin);\necharts.util.merge(Map3DSeries.prototype, componentShadingMixin);\nexport default Map3DSeries;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport OrbitControl from '../../util/OrbitControl';\nimport SceneHelper from '../../component/common/SceneHelper';\nimport Geo3DBuilder from '../../component/common/Geo3DBuilder';\nexport default echarts.ChartView.extend({\n  type: 'map3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this._geo3DBuilder = new Geo3DBuilder(api);\n    this.groupGL = new graphicGL.Node();\n  },\n  render: function (map3DModel, ecModel, api) {\n    var coordSys = map3DModel.coordinateSystem;\n\n    if (!coordSys || !coordSys.viewGL) {\n      return;\n    }\n\n    this.groupGL.add(this._geo3DBuilder.rootNode);\n    coordSys.viewGL.add(this.groupGL);\n    var geo3D;\n\n    if (coordSys.type === 'geo3D') {\n      geo3D = coordSys;\n\n      if (!this._sceneHelper) {\n        this._sceneHelper = new SceneHelper();\n\n        this._sceneHelper.initLight(this.groupGL);\n      }\n\n      this._sceneHelper.setScene(coordSys.viewGL.scene);\n\n      this._sceneHelper.updateLight(map3DModel); // Set post effect\n\n\n      coordSys.viewGL.setPostEffect(map3DModel.getModel('postEffect'), api);\n      coordSys.viewGL.setTemporalSuperSampling(map3DModel.getModel('temporalSuperSampling'));\n      var control = this._control;\n\n      if (!control) {\n        control = this._control = new OrbitControl({\n          zr: api.getZr()\n        });\n\n        this._control.init();\n      }\n\n      var viewControlModel = map3DModel.getModel('viewControl');\n      control.setViewGL(coordSys.viewGL);\n      control.setFromViewControlModel(viewControlModel, 0);\n      control.off('update');\n      control.on('update', function () {\n        api.dispatchAction({\n          type: 'map3DChangeCamera',\n          alpha: control.getAlpha(),\n          beta: control.getBeta(),\n          distance: control.getDistance(),\n          from: this.uid,\n          map3DId: map3DModel.id\n        });\n      });\n      this._geo3DBuilder.extrudeY = true;\n    } else {\n      if (this._control) {\n        this._control.dispose();\n\n        this._control = null;\n      }\n\n      if (this._sceneHelper) {\n        this._sceneHelper.dispose();\n\n        this._sceneHelper = null;\n      }\n\n      geo3D = map3DModel.getData().getLayout('geo3D');\n      this._geo3DBuilder.extrudeY = false;\n    }\n\n    this._geo3DBuilder.update(map3DModel, ecModel, api, 0, map3DModel.getData().count()); // Must update after geo3D.viewGL.setPostEffect to determine linear space\n\n\n    var srgbDefineMethod = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n    this._geo3DBuilder.rootNode.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material[srgbDefineMethod]('fragment', 'SRGB_DECODE');\n      }\n    });\n  },\n  afterRender: function (map3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n    var coordSys = map3DModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'geo3D') {\n      this._sceneHelper.updateAmbientCubemap(renderer, map3DModel, api);\n\n      this._sceneHelper.updateSkybox(renderer, map3DModel, api);\n    }\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._control.dispose();\n\n    this._geo3DBuilder.dispose();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Map3DSeries from './Map3DSeries';\nimport Map3DView from './Map3DView';\nimport { install as installGeo3D } from '../../component/geo3D/install';\nexport function install(registers) {\n  // Depends on geo3d\n  installGeo3D(registers);\n  registers.registerChartView(Map3DView);\n  registers.registerSeriesModel(Map3DSeries);\n  registers.registerAction({\n    type: 'map3DChangeCamera',\n    event: 'map3dcamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './map3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\n\nfunction transformPolygon(coordSys, poly) {\n  var ret = [];\n\n  for (var i = 0; i < poly.length; i++) {\n    ret.push(coordSys.dataToPoint(poly[i]));\n  }\n\n  return ret;\n}\n\nvar Polygons3DSeries = echarts.SeriesModel.extend({\n  type: 'series.polygons3D',\n  getRegionModel: function (idx) {\n    return this.getData().getItemModel(idx);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var coordSys = this.coordinateSystem;\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n\n    if (!itemModel.get('multiPolygon')) {\n      coords = [coords];\n    } // TODO Validate\n\n\n    var out = [];\n\n    for (var i = 0; i < coords.length; i++) {\n      // TODO Convert here ?\n      var interiors = [];\n\n      for (var k = 1; k < coords[i].length; k++) {\n        interiors.push(transformPolygon(coordSys, coords[i][k]));\n      }\n\n      out.push({\n        exterior: transformPolygon(coordSys, coords[i][0]),\n        interiors: interiors\n      });\n    }\n\n    return out;\n  },\n  getInitialData: function (option) {\n    var polygonsData = new echarts.List(['value'], this);\n    polygonsData.hasItemOption = false;\n    polygonsData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        polygonsData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return polygonsData;\n  },\n  defaultOption: {\n    show: true,\n    data: null,\n    multiPolygon: false,\n    progressiveThreshold: 1e3,\n    progressive: 1e3,\n    zlevel: -10,\n    label: {\n      show: false,\n      // Distance in 3d space.\n      distance: 2,\n      textStyle: {\n        fontSize: 20,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 4\n      }\n    },\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 0,\n      borderColor: '#333'\n    },\n    emphasis: {\n      itemStyle: {\n        color: '#639fc0'\n      },\n      label: {\n        show: true\n      }\n    }\n  }\n});\necharts.util.merge(Polygons3DSeries.prototype, componentShadingMixin);\nexport default Polygons3DSeries;","import * as echarts from 'echarts/lib/echarts';\nimport Geo3DBuilder from '../../component/common/Geo3DBuilder';\nimport graphicGL from '../../util/graphicGL';\nexport default echarts.ChartView.extend({\n  type: 'polygons3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._geo3DBuilderList = [];\n    this._currentStep = 0;\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n    }\n\n    var geo3DBuilder = this._geo3DBuilderList[0];\n\n    if (!geo3DBuilder) {\n      geo3DBuilder = new Geo3DBuilder(api);\n      geo3DBuilder.extrudeY = coordSys.type !== 'mapbox3D' && coordSys.type !== 'maptalks3D';\n      this._geo3DBuilderList[0] = geo3DBuilder;\n    }\n\n    this._updateShaderDefines(coordSys, geo3DBuilder);\n\n    geo3DBuilder.update(seriesModel, ecModel, api);\n    this._geo3DBuilderList.length = 1;\n    this.groupGL.add(geo3DBuilder.rootNode);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n    }\n\n    this._currentStep = 0;\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    var geo3DBuilder = this._geo3DBuilderList[this._currentStep];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!geo3DBuilder) {\n      geo3DBuilder = new Geo3DBuilder(api);\n      geo3DBuilder.extrudeY = coordSys.type !== 'mapbox3D' && coordSys.type !== 'maptalks3D';\n      this._geo3DBuilderList[this._currentStep] = geo3DBuilder;\n    }\n\n    geo3DBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    this.groupGL.add(geo3DBuilder.rootNode);\n\n    this._updateShaderDefines(coordSys, geo3DBuilder);\n\n    this._currentStep++;\n  },\n  _updateShaderDefines: function (coordSys, geo3DBuilder) {\n    var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n    geo3DBuilder.rootNode.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material[methodName]('fragment', 'SRGB_DECODE'); // FIXME\n\n        if (coordSys.type === 'mapbox3D' || coordSys.type === 'maptalks3D') {\n          mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n          mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n        }\n      }\n    });\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._geo3DBuilderList.forEach(function (geo3DBuilder) {\n      geo3DBuilder.dispose();\n    });\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Polygons3DSeries from './Polygons3DSeries';\nimport Polygons3DView from './Polygons3DView';\nexport function install(registers) {\n  registers.registerChartView(Polygons3DView);\n  registers.registerSeriesModel(Polygons3DSeries);\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './polygons3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport formatUtil from '../../util/format';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nexport default echarts.SeriesModel.extend({\n  type: 'series.scatter3D',\n  dependencies: ['globe', 'grid3D', 'geo3D'],\n  visualStyleAccessPath: 'itemStyle',\n  hasSymbolVisual: true,\n  getInitialData: function (option, ecModel) {\n    return createList(this);\n  },\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n    var text = formatUtil.getFormattedLabel(this, dataIndex, status, dataType, dimIndex);\n\n    if (text == null) {\n      var data = this.getData();\n      var lastDim = data.dimensions[data.dimensions.length - 1];\n      text = data.get(lastDim, dataIndex);\n    }\n\n    return text;\n  },\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    progressive: 1e5,\n    progressiveThreshold: 1e5,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    globeIndex: 0,\n    symbol: 'circle',\n    symbolSize: 10,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    label: {\n      show: false,\n      position: 'right',\n      // Screen space distance\n      distance: 5,\n      textStyle: {\n        fontSize: 14,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 3\n      }\n    },\n    itemStyle: {\n      opacity: 0.8\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    },\n    animationDurationUpdate: 500\n  }\n});","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport format from '../../util/format';\nimport PointsBuilder from '../common/PointsBuilder';\nexport default echarts.ChartView.extend({\n  type: 'scatter3D',\n  hasSymbolVisual: true,\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n      var pointsBuilder = this._pointsBuilderList[0];\n\n      if (!pointsBuilder) {\n        pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(false, api);\n      }\n\n      this._pointsBuilderList.length = 1;\n      this.groupGL.add(pointsBuilder.rootNode);\n      pointsBuilder.update(seriesModel, ecModel, api);\n      pointsBuilder.updateView(coordSys.viewGL.camera);\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      this._camera = coordSys.viewGL.camera;\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Invalid coordinate system');\n      }\n    }\n\n    this.groupGL.removeAll();\n    this._currentStep = 0;\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    // TODO Sort transparency.\n    if (params.end <= params.start) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(false, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n\n    this.groupGL.add(pointsBuilder.rootNode);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    pointsBuilder.updateView(seriesModel.coordinateSystem.viewGL.camera);\n    this._currentStep++;\n  },\n  updateCamera: function () {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.updateView(this._camera);\n    }, this);\n  },\n  highlight: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('highlight', seriesModel, ecModel, api, payload);\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    this._toggleStatus('downplay', seriesModel, ecModel, api, payload);\n  },\n  _toggleStatus: function (status, seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = retrieve.queryDataIndex(data, payload);\n    var isHighlight = status === 'highlight';\n\n    if (dataIndex != null) {\n      echarts.util.each(format.normalizeToArray(dataIndex), function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      }, this);\n    } else {\n      // PENDING, OPTIMIZE\n      data.each(function (dataIdx) {\n        for (var i = 0; i < this._pointsBuilderList.length; i++) {\n          var pointsBuilder = this._pointsBuilderList[i];\n          isHighlight ? pointsBuilder.highlight(data, dataIdx) : pointsBuilder.downplay(data, dataIdx);\n        }\n      });\n    }\n  },\n  dispose: function () {\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n\n    this.groupGL.removeAll();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Scatter3DSeries from './Scatter3DSeries';\nimport Scatter3DView from './Scatter3DView';\nexport function install(registers) {\n  registers.registerChartView(Scatter3DView);\n  registers.registerSeriesModel(Scatter3DSeries);\n  registers.registerLayout({\n    seriesType: 'scatter3D',\n    reset: function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n\n      if (coordSys) {\n        var coordDims = coordSys.dimensions;\n\n        if (coordDims.length < 3) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error('scatter3D needs 3D coordinateSystem');\n          }\n\n          return;\n        }\n\n        var dims = coordDims.map(function (coordDim) {\n          return seriesModel.coordDimToDataDim(coordDim)[0];\n        });\n        var item = [];\n        var out = [];\n        return {\n          progress: function (params, data) {\n            var points = new Float32Array((params.end - params.start) * 3);\n\n            for (var idx = params.start; idx < params.end; idx++) {\n              var idx3 = (idx - params.start) * 3;\n              item[0] = data.get(dims[0], idx);\n              item[1] = data.get(dims[1], idx);\n              item[2] = data.get(dims[2], idx);\n              coordSys.dataToPoint(item, out);\n              points[idx3] = out[0];\n              points[idx3 + 1] = out[1];\n              points[idx3 + 2] = out[2];\n            }\n\n            data.setLayout('points', points);\n          }\n        };\n      }\n    }\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './scatter3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nexport default echarts.SeriesModel.extend({\n  type: 'series.scatterGL',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis'],\n  visualStyleAccessPath: 'itemStyle',\n  hasSymbolVisual: true,\n  getInitialData: function () {\n    return echarts.helper.createList(this);\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 10,\n    progressive: 1e5,\n    progressiveThreshold: 1e5,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    large: false,\n    symbol: 'circle',\n    symbolSize: 10,\n    // symbolSize scale when zooming.\n    zoomScale: 0,\n    // Support source-over, lighter\n    blendMode: 'source-over',\n    itemStyle: {\n      opacity: 0.8\n    },\n    postEffect: {\n      enable: false,\n      colorCorrection: {\n        exposure: 0,\n        brightness: 0,\n        contrast: 1,\n        saturation: 1,\n        enable: true\n      }\n    }\n  }\n});","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nimport PointsBuilder from '../common/PointsBuilder';\nimport GLViewHelper from '../common/GLViewHelper';\nexport default echarts.ChartView.extend({\n  type: 'scatterGL',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    this.viewGL = new ViewGL('orthographic');\n    this.viewGL.add(this.groupGL);\n    this._pointsBuilderList = [];\n    this._currentStep = 0;\n    this._sizeScale = 1;\n    this._glViewHelper = new GLViewHelper(this.viewGL);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    if (!seriesModel.getData().count()) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[0];\n\n    if (!pointsBuilder) {\n      pointsBuilder = this._pointsBuilderList[0] = new PointsBuilder(true, api);\n    }\n\n    this._pointsBuilderList.length = 1;\n    this.groupGL.add(pointsBuilder.rootNode);\n\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n\n    pointsBuilder.update(seriesModel, ecModel, api);\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalPrepareRender: function (seriesModel, ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._glViewHelper.reset(seriesModel, api);\n\n    this._currentStep = 0;\n    this.viewGL.setPostEffect(seriesModel.getModel('postEffect'), api);\n  },\n  incrementalRender: function (params, seriesModel, ecModel, api) {\n    if (params.end <= params.start) {\n      return;\n    }\n\n    var pointsBuilder = this._pointsBuilderList[this._currentStep];\n\n    if (!pointsBuilder) {\n      pointsBuilder = new PointsBuilder(true, api);\n      this._pointsBuilderList[this._currentStep] = pointsBuilder;\n    }\n\n    this.groupGL.add(pointsBuilder.rootNode);\n\n    this._removeTransformInPoints(seriesModel.getData().getLayout('points'));\n\n    pointsBuilder.setSizeScale(this._sizeScale);\n    pointsBuilder.update(seriesModel, ecModel, api, params.start, params.end);\n    api.getZr().refresh();\n    this._currentStep++;\n  },\n  updateTransform: function (seriesModel, ecModel, api) {\n    if (seriesModel.coordinateSystem.getRoamTransform) {\n      this._glViewHelper.updateTransform(seriesModel, api);\n\n      var zoom = this._glViewHelper.getZoom();\n\n      var sizeScale = Math.max((seriesModel.get('zoomScale') || 0) * (zoom - 1) + 1, 0);\n      this._sizeScale = sizeScale;\n\n      this._pointsBuilderList.forEach(function (pointsBuilder) {\n        pointsBuilder.setSizeScale(sizeScale);\n      });\n    }\n  },\n  _removeTransformInPoints: function (points) {\n    if (!points) {\n      return;\n    }\n\n    var pt = [];\n\n    for (var i = 0; i < points.length; i += 2) {\n      pt[0] = points[i];\n      pt[1] = points[i + 1];\n\n      this._glViewHelper.removeTransformInPoint(pt);\n\n      points[i] = pt[0];\n      points[i + 1] = pt[1];\n    }\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._pointsBuilderList.forEach(function (pointsBuilder) {\n      pointsBuilder.dispose();\n    });\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport ScatterGLSeries from './ScatterGLSeries';\nimport ScatterGLView from './ScatterGLView';\nexport function install(registers) {\n  registers.registerChartView(ScatterGLView);\n  registers.registerSeriesModel(ScatterGLSeries);\n  registers.registerLayout({\n    seriesType: 'scatterGL',\n    reset: function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var data = seriesModel.getData();\n      var progress;\n\n      if (coordSys) {\n        var dims = coordSys.dimensions.map(function (dim) {\n          return data.mapDimension(dim);\n        }).slice(0, 2);\n        var pt = [];\n\n        if (dims.length === 1) {\n          progress = function (params) {\n            var points = new Float32Array((params.end - params.start) * 2);\n\n            for (var idx = params.start; idx < params.end; idx++) {\n              var offset = (idx - params.start) * 2;\n              var x = data.get(dims[0], idx);\n              var pt = coordSys.dataToPoint(x);\n              points[offset] = pt[0];\n              points[offset + 1] = pt[1];\n            }\n\n            data.setLayout('points', points);\n          };\n        } else if (dims.length === 2) {\n          progress = function (params) {\n            var points = new Float32Array((params.end - params.start) * 2);\n\n            for (var idx = params.start; idx < params.end; idx++) {\n              var offset = (idx - params.start) * 2;\n              var x = data.get(dims[0], idx);\n              var y = data.get(dims[1], idx);\n              pt[0] = x;\n              pt[1] = y;\n              pt = coordSys.dataToPoint(pt);\n              points[offset] = pt[0];\n              points[offset + 1] = pt[1];\n            }\n\n            data.setLayout('points', points);\n          };\n        }\n      }\n\n      return {\n        progress: progress\n      };\n    }\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './scatterGL/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentShadingMixin from '../../component/common/componentShadingMixin';\nimport formatTooltip from '../common/formatTooltip';\nimport createList from '../common/createList';\nvar SurfaceSeries = echarts.SeriesModel.extend({\n  type: 'series.surface',\n  dependencies: ['globe', 'grid3D', 'geo3D'],\n  visualStyleAccessPath: 'itemStyle',\n  formatTooltip: function (dataIndex) {\n    return formatTooltip(this, dataIndex);\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data;\n\n    function validateDimension(dimOpts) {\n      return !(isNaN(dimOpts.min) || isNaN(dimOpts.max) || isNaN(dimOpts.step));\n    }\n\n    function getPrecision(dimOpts) {\n      var getPrecision = echarts.number.getPrecisionSafe;\n      return Math.max(getPrecision(dimOpts.min), getPrecision(dimOpts.max), getPrecision(dimOpts.step)) + 1;\n    }\n\n    if (!data) {\n      if (!option.parametric) {\n        // From surface equation\n        var equation = option.equation || {};\n        var xOpts = equation.x || {};\n        var yOpts = equation.y || {};\n        ['x', 'y'].forEach(function (dim) {\n          if (!validateDimension(equation[dim])) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('Invalid equation.%s', dim);\n            }\n\n            return;\n          }\n        });\n\n        if (typeof equation.z !== 'function') {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error('equation.z needs to be function');\n          }\n\n          return;\n        }\n\n        var xCount = Math.floor((xOpts.max + xOpts.step - xOpts.min) / xOpts.step);\n        var yCount = Math.floor((yOpts.max + yOpts.step - yOpts.min) / yOpts.step);\n        data = new Float32Array(xCount * yCount * 3);\n        var xPrecision = getPrecision(xOpts);\n        var yPrecision = getPrecision(yOpts);\n        var off = 0;\n\n        for (var j = 0; j < yCount; j++) {\n          for (var i = 0; i < xCount; i++) {\n            var x = i * xOpts.step + xOpts.min;\n            var y = j * yOpts.step + yOpts.min;\n            var x2 = echarts.number.round(Math.min(x, xOpts.max), xPrecision);\n            var y2 = echarts.number.round(Math.min(y, yOpts.max), yPrecision);\n            var z = equation.z(x2, y2);\n            data[off++] = x2;\n            data[off++] = y2;\n            data[off++] = z;\n          }\n        }\n      } else {\n        var parametricEquation = option.parametricEquation || {};\n        var uOpts = parametricEquation.u || {};\n        var vOpts = parametricEquation.v || {};\n        ['u', 'v'].forEach(function (dim) {\n          if (!validateDimension(parametricEquation[dim])) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('Invalid parametricEquation.%s', dim);\n            }\n\n            return;\n          }\n        });\n        ['x', 'y', 'z'].forEach(function (dim) {\n          if (typeof parametricEquation[dim] !== 'function') {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('parametricEquation.%s needs to be function', dim);\n            }\n\n            return;\n          }\n        });\n        var uCount = Math.floor((uOpts.max + uOpts.step - uOpts.min) / uOpts.step);\n        var vCount = Math.floor((vOpts.max + vOpts.step - vOpts.min) / vOpts.step);\n        data = new Float32Array(uCount * vCount * 5);\n        var uPrecision = getPrecision(uOpts);\n        var vPrecision = getPrecision(vOpts);\n        var off = 0;\n\n        for (var j = 0; j < vCount; j++) {\n          for (var i = 0; i < uCount; i++) {\n            var u = i * uOpts.step + uOpts.min;\n            var v = j * vOpts.step + vOpts.min;\n            var u2 = echarts.number.round(Math.min(u, uOpts.max), uPrecision);\n            var v2 = echarts.number.round(Math.min(v, vOpts.max), vPrecision);\n            var x = parametricEquation.x(u2, v2);\n            var y = parametricEquation.y(u2, v2);\n            var z = parametricEquation.z(u2, v2);\n            data[off++] = x;\n            data[off++] = y;\n            data[off++] = z;\n            data[off++] = u2;\n            data[off++] = v2;\n          }\n        }\n      }\n    }\n\n    var dims = ['x', 'y', 'z'];\n\n    if (option.parametric) {\n      dims.push('u', 'v');\n    } // PENDING getSource?\n\n\n    var list = createList(this, dims, data);\n    return list;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian3D',\n    zlevel: -10,\n    // Cartesian coordinate system\n    grid3DIndex: 0,\n    // Surface needs lambert shading to show the difference\n    shading: 'lambert',\n    // If parametric surface\n    parametric: false,\n    wireframe: {\n      show: true,\n      lineStyle: {\n        color: 'rgba(0,0,0,0.5)',\n        width: 1\n      }\n    },\n\n    /**\n     * Generate surface data from z = f(x, y) equation\n     */\n    equation: {\n      // [min, max, step]\n      x: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      y: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      z: null\n    },\n    parametricEquation: {\n      // [min, max, step]\n      u: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      v: {\n        min: -1,\n        max: 1,\n        step: 0.1\n      },\n      // [x, y, z] = f(x, y)\n      x: null,\n      y: null,\n      z: null\n    },\n    // Shape of give data\n    // It is an array to specify rows and columns.\n    // For example [30, 30]\n    dataShape: null,\n    itemStyle: {// Color\n    },\n    animationDurationUpdate: 500\n  }\n});\necharts.util.merge(SurfaceSeries.prototype, componentShadingMixin);\nexport default SurfaceSeries;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport trianglesSortMixin from '../../util/geometry/trianglesSortMixin';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\n\nfunction isPointsNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]) || isNaN(pt[2]);\n}\n\nexport default echarts.ChartView.extend({\n  type: 'surface',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n  },\n  render: function (seriesModel, ecModel, api) {\n    // Swap surfaceMesh\n    var tmp = this._prevSurfaceMesh;\n    this._prevSurfaceMesh = this._surfaceMesh;\n    this._surfaceMesh = tmp;\n\n    if (!this._surfaceMesh) {\n      this._surfaceMesh = this._createSurfaceMesh();\n    }\n\n    this.groupGL.remove(this._prevSurfaceMesh);\n    this.groupGL.add(this._surfaceMesh);\n    var coordSys = seriesModel.coordinateSystem;\n    var shading = seriesModel.get('shading');\n    var data = seriesModel.getData();\n    var shadingPrefix = 'ecgl.' + shading;\n\n    if (!this._surfaceMesh.material || this._surfaceMesh.material.shader.name !== shadingPrefix) {\n      this._surfaceMesh.material = graphicGL.createMaterial(shadingPrefix, ['VERTEX_COLOR', 'DOUBLE_SIDED']);\n    }\n\n    graphicGL.setMaterialFromModel(shading, this._surfaceMesh.material, seriesModel, api);\n\n    if (coordSys && coordSys.viewGL) {\n      coordSys.viewGL.add(this.groupGL);\n      var methodName = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n      this._surfaceMesh.material[methodName]('fragment', 'SRGB_DECODE');\n    }\n\n    var isParametric = seriesModel.get('parametric');\n    var dataShape = seriesModel.get('dataShape');\n\n    if (!dataShape) {\n      dataShape = this._getDataShape(data, isParametric);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (seriesModel.get('data')) {\n          console.warn('dataShape is not provided. Guess it is ', dataShape);\n        }\n      }\n    }\n\n    var wireframeModel = seriesModel.getModel('wireframe');\n    var wireframeLineWidth = wireframeModel.get('lineStyle.width');\n    var showWireframe = wireframeModel.get('show') && wireframeLineWidth > 0;\n\n    this._updateSurfaceMesh(this._surfaceMesh, seriesModel, dataShape, showWireframe);\n\n    var material = this._surfaceMesh.material;\n\n    if (showWireframe) {\n      material.define('WIREFRAME_QUAD');\n      material.set('wireframeLineWidth', wireframeLineWidth);\n      material.set('wireframeLineColor', graphicGL.parseColor(wireframeModel.get('lineStyle.color')));\n    } else {\n      material.undefine('WIREFRAME_QUAD');\n    }\n\n    this._initHandler(seriesModel, api);\n\n    this._updateAnimation(seriesModel);\n  },\n  _updateAnimation: function (seriesModel) {\n    graphicGL.updateVertexAnimation([['prevPosition', 'position'], ['prevNormal', 'normal']], this._prevSurfaceMesh, this._surfaceMesh, seriesModel);\n  },\n  _createSurfaceMesh: function () {\n    var mesh = new graphicGL.Mesh({\n      geometry: new graphicGL.Geometry({\n        dynamic: true,\n        sortTriangles: true\n      }),\n      shadowDepthMaterial: new graphicGL.Material({\n        shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.sm.depth.vertex'), graphicGL.Shader.source('ecgl.sm.depth.fragment'))\n      }),\n      culling: false,\n      // Render after axes\n      renderOrder: 10,\n      // Render normal in normal pass\n      renderNormal: true\n    });\n    mesh.geometry.createAttribute('barycentric', 'float', 4);\n    mesh.geometry.createAttribute('prevPosition', 'float', 3);\n    mesh.geometry.createAttribute('prevNormal', 'float', 3);\n    Object.assign(mesh.geometry, trianglesSortMixin);\n    return mesh;\n  },\n  _initHandler: function (seriesModel, api) {\n    var data = seriesModel.getData();\n    var surfaceMesh = this._surfaceMesh;\n    var coordSys = seriesModel.coordinateSystem;\n\n    function getNearestPointIdx(triangle, point) {\n      var nearestDist = Infinity;\n      var nearestIdx = -1;\n      var pos = [];\n\n      for (var i = 0; i < triangle.length; i++) {\n        surfaceMesh.geometry.attributes.position.get(triangle[i], pos);\n        var dist = vec3.dist(point.array, pos);\n\n        if (dist < nearestDist) {\n          nearestDist = dist;\n          nearestIdx = triangle[i];\n        }\n      }\n\n      return nearestIdx;\n    }\n\n    surfaceMesh.seriesIndex = seriesModel.seriesIndex;\n    var lastDataIndex = -1;\n    surfaceMesh.off('mousemove');\n    surfaceMesh.off('mouseout');\n    surfaceMesh.on('mousemove', function (e) {\n      var idx = getNearestPointIdx(e.triangle, e.point);\n\n      if (idx >= 0) {\n        var point = [];\n        surfaceMesh.geometry.attributes.position.get(idx, point);\n        var value = coordSys.pointToData(point);\n        var minDist = Infinity;\n        var dataIndex = -1;\n        var item = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          item[0] = data.get('x', i);\n          item[1] = data.get('y', i);\n          item[2] = data.get('z', i);\n          var dist = vec3.squaredDistance(item, value);\n\n          if (dist < minDist) {\n            dataIndex = i;\n            minDist = dist;\n          }\n        }\n\n        if (dataIndex !== lastDataIndex) {\n          api.dispatchAction({\n            type: 'grid3DShowAxisPointer',\n            value: value\n          });\n        }\n\n        lastDataIndex = dataIndex;\n        surfaceMesh.dataIndex = dataIndex;\n      } else {\n        surfaceMesh.dataIndex = -1;\n      }\n    }, this);\n    surfaceMesh.on('mouseout', function (e) {\n      lastDataIndex = -1;\n      surfaceMesh.dataIndex = -1;\n      api.dispatchAction({\n        type: 'grid3DHideAxisPointer'\n      });\n    }, this);\n  },\n  _updateSurfaceMesh: function (surfaceMesh, seriesModel, dataShape, showWireframe) {\n    var geometry = surfaceMesh.geometry;\n    var data = seriesModel.getData();\n    var pointsArr = data.getLayout('points');\n    var invalidDataCount = 0;\n    data.each(function (idx) {\n      if (!data.hasValue(idx)) {\n        invalidDataCount++;\n      }\n    });\n    var needsSplitQuad = invalidDataCount || showWireframe;\n    var positionAttr = geometry.attributes.position;\n    var normalAttr = geometry.attributes.normal;\n    var texcoordAttr = geometry.attributes.texcoord0;\n    var barycentricAttr = geometry.attributes.barycentric;\n    var colorAttr = geometry.attributes.color;\n    var row = dataShape[0];\n    var column = dataShape[1];\n    var shading = seriesModel.get('shading');\n    var needsNormal = shading !== 'color';\n\n    if (needsSplitQuad) {\n      // TODO, If needs remove the invalid points, or set color transparent.\n      var vertexCount = (row - 1) * (column - 1) * 4;\n      positionAttr.init(vertexCount);\n\n      if (showWireframe) {\n        barycentricAttr.init(vertexCount);\n      }\n    } else {\n      positionAttr.value = new Float32Array(pointsArr);\n    }\n\n    colorAttr.init(geometry.vertexCount);\n    texcoordAttr.init(geometry.vertexCount);\n    var quadToTriangle = [0, 3, 1, 1, 3, 2]; // 3----2\n    // 0----1\n    // Make sure pixels on 1---3 edge will not have channel 0.\n    // And pixels on four edges have at least one channel 0.\n\n    var quadBarycentric = [[1, 1, 0, 0], [0, 1, 0, 1], [1, 0, 0, 1], [1, 0, 1, 0]];\n    var indices = geometry.indices = new (geometry.vertexCount > 0xffff ? Uint32Array : Uint16Array)((row - 1) * (column - 1) * 6);\n\n    var getQuadIndices = function (i, j, out) {\n      out[1] = i * column + j;\n      out[0] = i * column + j + 1;\n      out[3] = (i + 1) * column + j + 1;\n      out[2] = (i + 1) * column + j;\n    };\n\n    var isTransparent = false;\n\n    if (needsSplitQuad) {\n      var quadIndices = [];\n      var pos = [];\n      var faceOffset = 0;\n\n      if (needsNormal) {\n        normalAttr.init(geometry.vertexCount);\n      } else {\n        normalAttr.value = null;\n      }\n\n      var pts = [[], [], []];\n      var v21 = [],\n          v32 = [];\n      var normal = vec3.create();\n\n      var getFromArray = function (arr, idx, out) {\n        var idx3 = idx * 3;\n        out[0] = arr[idx3];\n        out[1] = arr[idx3 + 1];\n        out[2] = arr[idx3 + 2];\n        return out;\n      };\n\n      var vertexNormals = new Float32Array(pointsArr.length);\n      var vertexColors = new Float32Array(pointsArr.length / 3 * 4);\n\n      for (var i = 0; i < data.count(); i++) {\n        if (data.hasValue(i)) {\n          var rgbaArr = graphicGL.parseColor(getItemVisualColor(data, i));\n          var opacity = getItemVisualOpacity(data, i);\n          opacity != null && (rgbaArr[3] *= opacity);\n\n          if (rgbaArr[3] < 0.99) {\n            isTransparent = true;\n          }\n\n          for (var k = 0; k < 4; k++) {\n            vertexColors[i * 4 + k] = rgbaArr[k];\n          }\n        }\n      }\n\n      var farPoints = [1e7, 1e7, 1e7];\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          var dataIndex = i * (column - 1) + j;\n          var vertexOffset = dataIndex * 4;\n          getQuadIndices(i, j, quadIndices);\n          var invisibleQuad = false;\n\n          for (var k = 0; k < 4; k++) {\n            getFromArray(pointsArr, quadIndices[k], pos);\n\n            if (isPointsNaN(pos)) {\n              // Quad is invisible if any point is NaN\n              invisibleQuad = true;\n            }\n          }\n\n          for (var k = 0; k < 4; k++) {\n            if (invisibleQuad) {\n              // Move point far away\n              positionAttr.set(vertexOffset + k, farPoints);\n            } else {\n              getFromArray(pointsArr, quadIndices[k], pos);\n              positionAttr.set(vertexOffset + k, pos);\n            }\n\n            if (showWireframe) {\n              barycentricAttr.set(vertexOffset + k, quadBarycentric[k]);\n            }\n          }\n\n          for (var k = 0; k < 6; k++) {\n            indices[faceOffset++] = quadToTriangle[k] + vertexOffset;\n          } // Vertex normals\n\n\n          if (needsNormal && !invisibleQuad) {\n            for (var k = 0; k < 2; k++) {\n              var k3 = k * 3;\n\n              for (var m = 0; m < 3; m++) {\n                var idx = quadIndices[quadToTriangle[k3] + m];\n                getFromArray(pointsArr, idx, pts[m]);\n              }\n\n              vec3.sub(v21, pts[0], pts[1]);\n              vec3.sub(v32, pts[1], pts[2]);\n              vec3.cross(normal, v21, v32); // Weighted by the triangle area\n\n              for (var m = 0; m < 3; m++) {\n                var idx3 = quadIndices[quadToTriangle[k3] + m] * 3;\n                vertexNormals[idx3] = vertexNormals[idx3] + normal[0];\n                vertexNormals[idx3 + 1] = vertexNormals[idx3 + 1] + normal[1];\n                vertexNormals[idx3 + 2] = vertexNormals[idx3 + 2] + normal[2];\n              }\n            }\n          }\n        }\n      }\n\n      if (needsNormal) {\n        for (var i = 0; i < vertexNormals.length / 3; i++) {\n          getFromArray(vertexNormals, i, normal);\n          vec3.normalize(normal, normal);\n          vertexNormals[i * 3] = normal[0];\n          vertexNormals[i * 3 + 1] = normal[1];\n          vertexNormals[i * 3 + 2] = normal[2];\n        }\n      } // Split normal and colors, write to the attributes.\n\n\n      var rgbaArr = [];\n      var uvArr = [];\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          var dataIndex = i * (column - 1) + j;\n          var vertexOffset = dataIndex * 4;\n          getQuadIndices(i, j, quadIndices);\n\n          for (var k = 0; k < 4; k++) {\n            for (var m = 0; m < 4; m++) {\n              rgbaArr[m] = vertexColors[quadIndices[k] * 4 + m];\n            }\n\n            colorAttr.set(vertexOffset + k, rgbaArr);\n\n            if (needsNormal) {\n              getFromArray(vertexNormals, quadIndices[k], normal);\n              normalAttr.set(vertexOffset + k, normal);\n            }\n\n            var idx = quadIndices[k];\n            uvArr[0] = idx % column / (column - 1);\n            uvArr[1] = Math.floor(idx / column) / (row - 1);\n            texcoordAttr.set(vertexOffset + k, uvArr);\n          }\n\n          dataIndex++;\n        }\n      }\n    } else {\n      var uvArr = [];\n\n      for (var i = 0; i < data.count(); i++) {\n        uvArr[0] = i % column / (column - 1);\n        uvArr[1] = Math.floor(i / column) / (row - 1);\n        var rgbaArr = graphicGL.parseColor(getItemVisualColor(data, i));\n        var opacity = getItemVisualOpacity(data, i);\n        opacity != null && (rgbaArr[3] *= opacity);\n\n        if (rgbaArr[3] < 0.99) {\n          isTransparent = true;\n        }\n\n        colorAttr.set(i, rgbaArr);\n        texcoordAttr.set(i, uvArr);\n      }\n\n      var quadIndices = []; // Triangles\n\n      var cursor = 0;\n\n      for (var i = 0; i < row - 1; i++) {\n        for (var j = 0; j < column - 1; j++) {\n          getQuadIndices(i, j, quadIndices);\n\n          for (var k = 0; k < 6; k++) {\n            indices[cursor++] = quadIndices[quadToTriangle[k]];\n          }\n        }\n      }\n\n      if (needsNormal) {\n        geometry.generateVertexNormals();\n      } else {\n        normalAttr.value = null;\n      }\n    }\n\n    if (surfaceMesh.material.get('normalMap')) {\n      geometry.generateTangents();\n    }\n\n    geometry.updateBoundingBox();\n    geometry.dirty();\n    surfaceMesh.material.transparent = isTransparent;\n    surfaceMesh.material.depthMask = !isTransparent;\n  },\n  _getDataShape: function (data, isParametric) {\n    var prevX = -Infinity;\n    var rowCount = 0;\n    var columnCount = 0;\n    var prevColumnCount = 0;\n    var mayInvalid = false;\n    var rowDim = isParametric ? 'u' : 'x';\n    var dataCount = data.count(); // Check data format\n\n    for (var i = 0; i < dataCount; i++) {\n      var x = data.get(rowDim, i);\n\n      if (x < prevX) {\n        if (prevColumnCount && prevColumnCount !== columnCount) {\n          if (process.env.NODE_ENV !== 'production') {\n            mayInvalid = true;\n          }\n        } // A new row.\n\n\n        prevColumnCount = columnCount;\n        columnCount = 0;\n        rowCount++;\n      }\n\n      prevX = x;\n      columnCount++;\n    }\n\n    if (!rowCount || columnCount === 1) {\n      mayInvalid = true;\n    }\n\n    if (!mayInvalid) {\n      return [rowCount + 1, columnCount];\n    }\n\n    var rows = Math.floor(Math.sqrt(dataCount));\n\n    while (rows > 0) {\n      if (Math.floor(dataCount / rows) === dataCount / rows) {\n        // Can be divided\n        return [rows, dataCount / rows];\n      }\n\n      rows--;\n    } // Bailout\n\n\n    rows = Math.floor(Math.sqrt(dataCount));\n    return [rows, rows];\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n  },\n  remove: function () {\n    this.groupGL.removeAll();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport SurfaceSeries from './SurfaceSeries';\nimport SurfaceView from './SurfaceView';\nexport function install(registers) {\n  registers.registerChartView(SurfaceView);\n  registers.registerSeriesModel(SurfaceSeries);\n  registers.registerLayout(function (ecModel, api) {\n    ecModel.eachSeriesByType('surface', function (surfaceModel) {\n      var cartesian = surfaceModel.coordinateSystem;\n\n      if (!cartesian || cartesian.type !== 'cartesian3D') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Surface chart only support cartesian3D coordinateSystem');\n        }\n      }\n\n      var data = surfaceModel.getData();\n      var points = new Float32Array(3 * data.count());\n      var nanPoint = [NaN, NaN, NaN];\n\n      if (cartesian && cartesian.type === 'cartesian3D') {\n        var coordDims = cartesian.dimensions;\n        var dims = coordDims.map(function (coordDim) {\n          return surfaceModel.coordDimToDataDim(coordDim)[0];\n        });\n        data.each(dims, function (x, y, z, idx) {\n          var pt;\n\n          if (!data.hasValue(idx)) {\n            pt = nanPoint;\n          } else {\n            pt = cartesian.dataToPoint([x, y, z]);\n          }\n\n          points[idx * 3] = pt[0];\n          points[idx * 3 + 1] = pt[1];\n          points[idx * 3 + 2] = pt[2];\n        });\n      }\n\n      data.setLayout('points', points);\n    });\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './surface/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport earcut from '../../util/earcut';\nimport LinesGeo from '../../util/geometry/Lines3D';\nimport retrieve from '../../util/retrieve';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nimport trianglesSortMixin from '../../util/geometry/trianglesSortMixin';\nimport LabelsBuilder from './LabelsBuilder';\nimport lines3DGLSL from '../../util/shader/lines3D.glsl.js';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nvar vec3 = glmatrix.vec3;\ngraphicGL.Shader.import(lines3DGLSL);\n\nfunction Geo3DBuilder(api) {\n  this.rootNode = new graphicGL.Node(); // Cache triangulation result\n\n  this._triangulationResults = {};\n  this._shadersMap = graphicGL.COMMON_SHADERS.filter(function (shaderName) {\n    return shaderName !== 'shadow';\n  }).reduce(function (obj, shaderName) {\n    obj[shaderName] = graphicGL.createShader('ecgl.' + shaderName);\n    return obj;\n  }, {});\n  this._linesShader = graphicGL.createShader('ecgl.meshLines3D');\n  var groundMaterials = {};\n  graphicGL.COMMON_SHADERS.forEach(function (shading) {\n    groundMaterials[shading] = new graphicGL.Material({\n      shader: graphicGL.createShader('ecgl.' + shading)\n    });\n  });\n  this._groundMaterials = groundMaterials;\n  this._groundMesh = new graphicGL.Mesh({\n    geometry: new graphicGL.PlaneGeometry({\n      dynamic: true\n    }),\n    castShadow: false,\n    renderNormal: true,\n    $ignorePicking: true\n  });\n\n  this._groundMesh.rotation.rotateX(-Math.PI / 2);\n\n  this._labelsBuilder = new LabelsBuilder(512, 512, api); // Give a large render order.\n\n  this._labelsBuilder.getMesh().renderOrder = 100;\n  this._labelsBuilder.getMesh().material.depthTest = false;\n  this.rootNode.add(this._labelsBuilder.getMesh());\n\n  this._initMeshes();\n\n  this._api = api;\n}\n\nGeo3DBuilder.prototype = {\n  constructor: Geo3DBuilder,\n  // Which dimension to extrude. Y or Z\n  extrudeY: true,\n  update: function (componentModel, ecModel, api, start, end) {\n    var data = componentModel.getData();\n\n    if (start == null) {\n      start = 0;\n    }\n\n    if (end == null) {\n      end = data.count();\n    }\n\n    this._startIndex = start;\n    this._endIndex = end - 1;\n\n    this._triangulation(componentModel, start, end);\n\n    var shader = this._getShader(componentModel.get('shading'));\n\n    this._prepareMesh(componentModel, shader, api, start, end);\n\n    this.rootNode.updateWorldTransform();\n\n    this._updateRegionMesh(componentModel, api, start, end);\n\n    var coordSys = componentModel.coordinateSystem; // PENDING\n\n    if (coordSys.type === 'geo3D') {\n      this._updateGroundPlane(componentModel, coordSys, api);\n    }\n\n    var self = this;\n\n    this._labelsBuilder.updateData(data, start, end);\n\n    this._labelsBuilder.getLabelPosition = function (dataIndex, positionDesc, distance) {\n      var name = data.getName(dataIndex);\n      var center;\n      var height = distance;\n\n      if (coordSys.type === 'geo3D') {\n        var region = coordSys.getRegion(name);\n\n        if (!region) {\n          return [NaN, NaN, NaN];\n        }\n\n        center = region.getCenter();\n        var pos = coordSys.dataToPoint([center[0], center[1], height]);\n        return pos;\n      } else {\n        var tmp = self._triangulationResults[dataIndex - self._startIndex];\n        var center = self.extrudeY ? [(tmp.max[0] + tmp.min[0]) / 2, tmp.max[1] + height, (tmp.max[2] + tmp.min[2]) / 2] : [(tmp.max[0] + tmp.min[0]) / 2, (tmp.max[1] + tmp.min[1]) / 2, tmp.max[2] + height];\n      }\n    };\n\n    this._data = data;\n\n    this._labelsBuilder.updateLabels();\n\n    this._updateDebugWireframe(componentModel); // Reset some state.\n\n\n    this._lastHoverDataIndex = 0;\n  },\n  _initMeshes: function () {\n    var self = this;\n\n    function createPolygonMesh() {\n      var mesh = new graphicGL.Mesh({\n        name: 'Polygon',\n        material: new graphicGL.Material({\n          shader: self._shadersMap.lambert\n        }),\n        geometry: new graphicGL.Geometry({\n          sortTriangles: true,\n          dynamic: true\n        }),\n        // TODO Disable culling\n        culling: false,\n        ignorePicking: true,\n        // Render normal in normal pass\n        renderNormal: true\n      });\n      Object.assign(mesh.geometry, trianglesSortMixin);\n      return mesh;\n    }\n\n    var polygonMesh = createPolygonMesh();\n    var linesMesh = new graphicGL.Mesh({\n      material: new graphicGL.Material({\n        shader: this._linesShader\n      }),\n      castShadow: false,\n      ignorePicking: true,\n      $ignorePicking: true,\n      geometry: new LinesGeo({\n        useNativeLine: false\n      })\n    });\n    this.rootNode.add(polygonMesh);\n    this.rootNode.add(linesMesh);\n    polygonMesh.material.define('both', 'VERTEX_COLOR');\n    polygonMesh.material.define('fragment', 'DOUBLE_SIDED');\n    this._polygonMesh = polygonMesh;\n    this._linesMesh = linesMesh;\n    this.rootNode.add(this._groundMesh);\n  },\n  _getShader: function (shading) {\n    var shader = this._shadersMap[shading];\n\n    if (!shader) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown shading ' + shading);\n      } // Default use lambert shader.\n\n\n      shader = this._shadersMap.lambert;\n    }\n\n    shader.__shading = shading;\n    return shader;\n  },\n  _prepareMesh: function (componentModel, shader, api, start, end) {\n    var polygonVertexCount = 0;\n    var polygonTriangleCount = 0;\n    var linesVertexCount = 0;\n    var linesTriangleCount = 0; // TODO Lines\n\n    for (var idx = start; idx < end; idx++) {\n      var polyInfo = this._getRegionPolygonInfo(idx);\n\n      var lineInfo = this._getRegionLinesInfo(idx, componentModel, this._linesMesh.geometry);\n\n      polygonVertexCount += polyInfo.vertexCount;\n      polygonTriangleCount += polyInfo.triangleCount;\n      linesVertexCount += lineInfo.vertexCount;\n      linesTriangleCount += lineInfo.triangleCount;\n    }\n\n    var polygonMesh = this._polygonMesh;\n    var polygonGeo = polygonMesh.geometry;\n    ['position', 'normal', 'texcoord0', 'color'].forEach(function (attrName) {\n      polygonGeo.attributes[attrName].init(polygonVertexCount);\n    });\n    polygonGeo.indices = polygonVertexCount > 0xffff ? new Uint32Array(polygonTriangleCount * 3) : new Uint16Array(polygonTriangleCount * 3);\n\n    if (polygonMesh.material.shader !== shader) {\n      polygonMesh.material.attachShader(shader, true);\n    }\n\n    graphicGL.setMaterialFromModel(shader.__shading, polygonMesh.material, componentModel, api);\n\n    if (linesVertexCount > 0) {\n      this._linesMesh.geometry.resetOffset();\n\n      this._linesMesh.geometry.setVertexCount(linesVertexCount);\n\n      this._linesMesh.geometry.setTriangleCount(linesTriangleCount);\n    } // Indexing data index from vertex index.\n\n\n    this._dataIndexOfVertex = new Uint32Array(polygonVertexCount); // Indexing vertex index range from data index\n\n    this._vertexRangeOfDataIndex = new Uint32Array((end - start) * 2);\n  },\n  _updateRegionMesh: function (componentModel, api, start, end) {\n    var data = componentModel.getData();\n    var vertexOffset = 0;\n    var triangleOffset = 0; // Materials configurations.\n\n    var hasTranparentRegion = false;\n    var polygonMesh = this._polygonMesh;\n    var linesMesh = this._linesMesh;\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      // Get bunch of visual properties.\n      var regionModel = componentModel.getRegionModel(dataIndex);\n      var itemStyleModel = regionModel.getModel('itemStyle');\n      var color = retrieve.firstNotNull(getItemVisualColor(data, dataIndex), itemStyleModel.get('color'), '#fff');\n      var opacity = retrieve.firstNotNull(getItemVisualOpacity(data, dataIndex), itemStyleModel.get('opacity'), 1);\n      var colorArr = graphicGL.parseColor(color);\n      var borderColorArr = graphicGL.parseColor(itemStyleModel.get('borderColor'));\n      colorArr[3] *= opacity;\n      borderColorArr[3] *= opacity;\n      var isTransparent = colorArr[3] < 0.99;\n      polygonMesh.material.set('color', [1, 1, 1, 1]);\n      hasTranparentRegion = hasTranparentRegion || isTransparent;\n      var regionHeight = retrieve.firstNotNull(regionModel.get('height', true), componentModel.get('regionHeight'));\n\n      var newOffsets = this._updatePolygonGeometry(componentModel, polygonMesh.geometry, dataIndex, regionHeight, vertexOffset, triangleOffset, colorArr);\n\n      for (var i = vertexOffset; i < newOffsets.vertexOffset; i++) {\n        this._dataIndexOfVertex[i] = dataIndex;\n      }\n\n      this._vertexRangeOfDataIndex[(dataIndex - start) * 2] = vertexOffset;\n      this._vertexRangeOfDataIndex[(dataIndex - start) * 2 + 1] = newOffsets.vertexOffset;\n      vertexOffset = newOffsets.vertexOffset;\n      triangleOffset = newOffsets.triangleOffset; // Update lines.\n\n      var lineWidth = itemStyleModel.get('borderWidth');\n      var hasLine = lineWidth > 0;\n\n      if (hasLine) {\n        lineWidth *= api.getDevicePixelRatio();\n\n        this._updateLinesGeometry(linesMesh.geometry, componentModel, dataIndex, regionHeight, lineWidth, componentModel.coordinateSystem.transform);\n      }\n\n      linesMesh.invisible = !hasLine;\n      linesMesh.material.set({\n        color: borderColorArr\n      });\n    }\n\n    var polygonMesh = this._polygonMesh;\n    polygonMesh.material.transparent = hasTranparentRegion;\n    polygonMesh.material.depthMask = !hasTranparentRegion;\n    polygonMesh.geometry.updateBoundingBox();\n    polygonMesh.frontFace = this.extrudeY ? graphicGL.Mesh.CCW : graphicGL.Mesh.CW; // Update tangents\n\n    if (polygonMesh.material.get('normalMap')) {\n      polygonMesh.geometry.generateTangents();\n    }\n\n    polygonMesh.seriesIndex = componentModel.seriesIndex;\n    polygonMesh.on('mousemove', this._onmousemove, this);\n    polygonMesh.on('mouseout', this._onmouseout, this);\n  },\n  _updateDebugWireframe: function (componentModel) {\n    var debugWireframeModel = componentModel.getModel('debug.wireframe'); // TODO Unshow\n\n    if (debugWireframeModel.get('show')) {\n      var color = graphicGL.parseColor(debugWireframeModel.get('lineStyle.color') || 'rgba(0,0,0,0.5)');\n      var width = retrieve.firstNotNull(debugWireframeModel.get('lineStyle.width'), 1); // TODO  Will cause highlight wrong\n\n      var mesh = this._polygonMesh;\n      mesh.geometry.generateBarycentric();\n      mesh.material.define('both', 'WIREFRAME_TRIANGLE');\n      mesh.material.set('wireframeLineColor', color);\n      mesh.material.set('wireframeLineWidth', width);\n    }\n  },\n  _onmousemove: function (e) {\n    var dataIndex = this._dataIndexOfVertex[e.triangle[0]];\n\n    if (dataIndex == null) {\n      dataIndex = -1;\n    }\n\n    if (dataIndex !== this._lastHoverDataIndex) {\n      this.downplay(this._lastHoverDataIndex);\n      this.highlight(dataIndex);\n\n      this._labelsBuilder.updateLabels([dataIndex]);\n    }\n\n    this._lastHoverDataIndex = dataIndex;\n    this._polygonMesh.dataIndex = dataIndex;\n  },\n  _onmouseout: function (e) {\n    if (e.target) {\n      this.downplay(this._lastHoverDataIndex);\n      this._lastHoverDataIndex = -1;\n      this._polygonMesh.dataIndex = -1;\n    }\n\n    this._labelsBuilder.updateLabels([]);\n  },\n  _updateGroundPlane: function (componentModel, geo3D, api) {\n    var groundModel = componentModel.getModel('groundPlane', componentModel);\n    this._groundMesh.invisible = !groundModel.get('show', true);\n\n    if (this._groundMesh.invisible) {\n      return;\n    }\n\n    var shading = componentModel.get('shading');\n    var material = this._groundMaterials[shading];\n\n    if (!material) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown shading ' + shading);\n      }\n\n      material = this._groundMaterials.lambert;\n    }\n\n    graphicGL.setMaterialFromModel(shading, material, groundModel, api);\n\n    if (material.get('normalMap')) {\n      this._groundMesh.geometry.generateTangents();\n    }\n\n    this._groundMesh.material = material;\n\n    this._groundMesh.material.set('color', graphicGL.parseColor(groundModel.get('color')));\n\n    this._groundMesh.scale.set(geo3D.size[0], geo3D.size[2], 1);\n  },\n  _triangulation: function (componentModel, start, end) {\n    this._triangulationResults = [];\n    var minAll = [Infinity, Infinity, Infinity];\n    var maxAll = [-Infinity, -Infinity, -Infinity];\n    var coordSys = componentModel.coordinateSystem;\n\n    for (var idx = start; idx < end; idx++) {\n      var polygons = [];\n      var polygonCoords = componentModel.getRegionPolygonCoords(idx);\n\n      for (var i = 0; i < polygonCoords.length; i++) {\n        var exterior = polygonCoords[i].exterior;\n        var interiors = polygonCoords[i].interiors;\n        var points = [];\n        var holes = [];\n\n        if (exterior.length < 3) {\n          continue;\n        }\n\n        var offset = 0;\n\n        for (var j = 0; j < exterior.length; j++) {\n          var p = exterior[j];\n          points[offset++] = p[0];\n          points[offset++] = p[1];\n        }\n\n        for (var j = 0; j < interiors.length; j++) {\n          if (interiors[j].length < 3) {\n            continue;\n          }\n\n          var startIdx = points.length / 2;\n\n          for (var k = 0; k < interiors[j].length; k++) {\n            var p = interiors[j][k];\n            points.push(p[0]);\n            points.push(p[1]);\n          }\n\n          holes.push(startIdx);\n        }\n\n        var triangles = earcut(points, holes);\n        var points3 = new Float64Array(points.length / 2 * 3);\n        var pos = [];\n        var min = [Infinity, Infinity, Infinity];\n        var max = [-Infinity, -Infinity, -Infinity];\n        var off3 = 0;\n\n        for (var j = 0; j < points.length;) {\n          vec3.set(pos, points[j++], 0, points[j++]);\n\n          if (coordSys && coordSys.transform) {\n            vec3.transformMat4(pos, pos, coordSys.transform);\n          }\n\n          vec3.min(min, min, pos);\n          vec3.max(max, max, pos);\n          points3[off3++] = pos[0];\n          points3[off3++] = pos[1];\n          points3[off3++] = pos[2];\n        }\n\n        vec3.min(minAll, minAll, min);\n        vec3.max(maxAll, maxAll, max);\n        polygons.push({\n          points: points3,\n          indices: triangles,\n          min: min,\n          max: max\n        });\n      }\n\n      this._triangulationResults.push(polygons);\n    }\n\n    this._geoBoundingBox = [minAll, maxAll];\n  },\n\n  /**\n   * Get region vertex and triangle count\n   */\n  _getRegionPolygonInfo: function (idx) {\n    var polygons = this._triangulationResults[idx - this._startIndex];\n    var sideVertexCount = 0;\n    var sideTriangleCount = 0;\n\n    for (var i = 0; i < polygons.length; i++) {\n      sideVertexCount += polygons[i].points.length / 3;\n      sideTriangleCount += polygons[i].indices.length / 3;\n    }\n\n    var vertexCount = sideVertexCount * 2 + sideVertexCount * 4;\n    var triangleCount = sideTriangleCount * 2 + sideVertexCount * 2;\n    return {\n      vertexCount: vertexCount,\n      triangleCount: triangleCount\n    };\n  },\n  _updatePolygonGeometry: function (componentModel, geometry, dataIndex, regionHeight, vertexOffset, triangleOffset, color) {\n    // FIXME\n    var projectUVOnGround = componentModel.get('projectUVOnGround');\n    var positionAttr = geometry.attributes.position;\n    var normalAttr = geometry.attributes.normal;\n    var texcoordAttr = geometry.attributes.texcoord0;\n    var colorAttr = geometry.attributes.color;\n    var polygons = this._triangulationResults[dataIndex - this._startIndex];\n    var hasColor = colorAttr.value && color;\n    var indices = geometry.indices;\n    var extrudeCoordIndex = this.extrudeY ? 1 : 2;\n    var sideCoordIndex = this.extrudeY ? 2 : 1;\n    var scale = [this.rootNode.worldTransform.x.len(), this.rootNode.worldTransform.y.len(), this.rootNode.worldTransform.z.len()];\n    var min = vec3.mul([], this._geoBoundingBox[0], scale);\n    var max = vec3.mul([], this._geoBoundingBox[1], scale);\n    var maxDimSize = Math.max(max[0] - min[0], max[2] - min[2]);\n\n    function addVertices(polygon, y, insideOffset) {\n      var points = polygon.points;\n      var pointsLen = points.length;\n      var currentPosition = [];\n      var uv = [];\n\n      for (var k = 0; k < pointsLen; k += 3) {\n        currentPosition[0] = points[k];\n        currentPosition[extrudeCoordIndex] = y;\n        currentPosition[sideCoordIndex] = points[k + 2];\n        uv[0] = (points[k] * scale[0] - min[0]) / maxDimSize;\n        uv[1] = (points[k + 2] * scale[sideCoordIndex] - min[2]) / maxDimSize;\n        positionAttr.set(vertexOffset, currentPosition);\n\n        if (hasColor) {\n          colorAttr.set(vertexOffset, color);\n        }\n\n        texcoordAttr.set(vertexOffset++, uv);\n      }\n    }\n\n    function buildTopBottom(polygon, y, insideOffset) {\n      var startVertexOffset = vertexOffset;\n      addVertices(polygon, y, insideOffset);\n      var len = polygon.indices.length;\n\n      for (var k = 0; k < len; k++) {\n        indices[triangleOffset * 3 + k] = polygon.indices[k] + startVertexOffset;\n      }\n\n      triangleOffset += polygon.indices.length / 3;\n    }\n\n    var normalTop = this.extrudeY ? [0, 1, 0] : [0, 0, 1];\n    var normalBottom = vec3.negate([], normalTop);\n\n    for (var p = 0; p < polygons.length; p++) {\n      var startVertexOffset = vertexOffset;\n      var polygon = polygons[p]; // BOTTOM\n\n      buildTopBottom(polygon, 0, 0); // TOP\n\n      buildTopBottom(polygon, regionHeight, 0);\n      var ringVertexCount = polygon.points.length / 3;\n\n      for (var v = 0; v < ringVertexCount; v++) {\n        normalAttr.set(startVertexOffset + v, normalBottom);\n        normalAttr.set(startVertexOffset + v + ringVertexCount, normalTop);\n      }\n\n      var quadToTriangle = [0, 3, 1, 1, 3, 2];\n      var quadPos = [[], [], [], []];\n      var a = [];\n      var b = [];\n      var normal = [];\n      var uv = [];\n      var len = 0;\n\n      for (var v = 0; v < ringVertexCount; v++) {\n        var next = (v + 1) % ringVertexCount;\n        var dx = (polygon.points[next * 3] - polygon.points[v * 3]) * scale[0];\n        var dy = (polygon.points[next * 3 + 2] - polygon.points[v * 3 + 2]) * scale[sideCoordIndex];\n        var sideLen = Math.sqrt(dx * dx + dy * dy); // 0----1\n        // 3----2\n\n        for (var k = 0; k < 4; k++) {\n          var isCurrent = k === 0 || k === 3;\n          var idx3 = (isCurrent ? v : next) * 3;\n          quadPos[k][0] = polygon.points[idx3];\n          quadPos[k][extrudeCoordIndex] = k > 1 ? regionHeight : 0;\n          quadPos[k][sideCoordIndex] = polygon.points[idx3 + 2];\n          positionAttr.set(vertexOffset + k, quadPos[k]);\n\n          if (projectUVOnGround) {\n            uv[0] = (polygon.points[idx3] * scale[0] - min[0]) / maxDimSize;\n            uv[1] = (polygon.points[idx3 + 2] * scale[sideCoordIndex] - min[sideCoordIndex]) / maxDimSize;\n          } else {\n            uv[0] = (isCurrent ? len : len + sideLen) / maxDimSize;\n            uv[1] = (quadPos[k][extrudeCoordIndex] * scale[extrudeCoordIndex] - min[extrudeCoordIndex]) / maxDimSize;\n          }\n\n          texcoordAttr.set(vertexOffset + k, uv);\n        }\n\n        vec3.sub(a, quadPos[1], quadPos[0]);\n        vec3.sub(b, quadPos[3], quadPos[0]);\n        vec3.cross(normal, a, b);\n        vec3.normalize(normal, normal);\n\n        for (var k = 0; k < 4; k++) {\n          normalAttr.set(vertexOffset + k, normal);\n\n          if (hasColor) {\n            colorAttr.set(vertexOffset + k, color);\n          }\n        }\n\n        for (var k = 0; k < 6; k++) {\n          indices[triangleOffset * 3 + k] = quadToTriangle[k] + vertexOffset;\n        }\n\n        vertexOffset += 4;\n        triangleOffset += 2;\n        len += sideLen;\n      }\n    }\n\n    geometry.dirty();\n    return {\n      vertexOffset: vertexOffset,\n      triangleOffset: triangleOffset\n    };\n  },\n  _getRegionLinesInfo: function (idx, componentModel, geometry) {\n    var vertexCount = 0;\n    var triangleCount = 0;\n    var regionModel = componentModel.getRegionModel(idx);\n    var itemStyleModel = regionModel.getModel('itemStyle');\n    var lineWidth = itemStyleModel.get('borderWidth');\n\n    if (lineWidth > 0) {\n      var polygonCoords = componentModel.getRegionPolygonCoords(idx);\n      polygonCoords.forEach(function (coords) {\n        var exterior = coords.exterior;\n        var interiors = coords.interiors;\n        vertexCount += geometry.getPolylineVertexCount(exterior);\n        triangleCount += geometry.getPolylineTriangleCount(exterior);\n\n        for (var i = 0; i < interiors.length; i++) {\n          vertexCount += geometry.getPolylineVertexCount(interiors[i]);\n          triangleCount += geometry.getPolylineTriangleCount(interiors[i]);\n        }\n      }, this);\n    }\n\n    return {\n      vertexCount: vertexCount,\n      triangleCount: triangleCount\n    };\n  },\n  _updateLinesGeometry: function (geometry, componentModel, dataIndex, regionHeight, lineWidth, transform) {\n    function convertToPoints3(polygon) {\n      var points = new Float64Array(polygon.length * 3);\n      var offset = 0;\n      var pos = [];\n\n      for (var i = 0; i < polygon.length; i++) {\n        pos[0] = polygon[i][0]; // Add a offset to avoid z-fighting\n\n        pos[1] = regionHeight + 0.1;\n        pos[2] = polygon[i][1];\n\n        if (transform) {\n          vec3.transformMat4(pos, pos, transform);\n        }\n\n        points[offset++] = pos[0];\n        points[offset++] = pos[1];\n        points[offset++] = pos[2];\n      }\n\n      return points;\n    }\n\n    var whiteColor = [1, 1, 1, 1];\n    var coords = componentModel.getRegionPolygonCoords(dataIndex);\n    coords.forEach(function (geo) {\n      var exterior = geo.exterior;\n      var interiors = geo.interiors;\n      geometry.addPolyline(convertToPoints3(exterior), whiteColor, lineWidth);\n\n      for (var i = 0; i < interiors.length; i++) {\n        geometry.addPolyline(convertToPoints3(interiors[i]), whiteColor, lineWidth);\n      }\n    });\n  },\n  highlight: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var emphasisItemStyleModel = itemModel.getModel(['emphasis', 'itemStyle']);\n    var emphasisColor = emphasisItemStyleModel.get('color');\n    var emphasisOpacity = retrieve.firstNotNull(emphasisItemStyleModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1);\n\n    if (emphasisColor == null) {\n      var color = getItemVisualColor(data, dataIndex);\n      emphasisColor = echarts.color.lift(color, -0.4);\n    }\n\n    if (emphasisOpacity == null) {\n      emphasisOpacity = getItemVisualOpacity(data, dataIndex);\n    }\n\n    var colorArr = graphicGL.parseColor(emphasisColor);\n    colorArr[3] *= emphasisOpacity;\n\n    this._setColorOfDataIndex(data, dataIndex, colorArr);\n  },\n  downplay: function (dataIndex) {\n    var data = this._data;\n\n    if (!data) {\n      return;\n    }\n\n    var itemStyleModel = data.getItemModel(dataIndex);\n    var color = retrieve.firstNotNull(getItemVisualColor(data, dataIndex), itemStyleModel.get(['itemStyle', 'color']), '#fff');\n    var opacity = retrieve.firstNotNull(getItemVisualOpacity(data, dataIndex), itemStyleModel.get(['itemStyle', 'opacity']), 1);\n    var colorArr = graphicGL.parseColor(color);\n    colorArr[3] *= opacity;\n\n    this._setColorOfDataIndex(data, dataIndex, colorArr);\n  },\n  dispose: function () {\n    this._labelsBuilder.dispose();\n  },\n  _setColorOfDataIndex: function (data, dataIndex, colorArr) {\n    if (dataIndex < this._startIndex && dataIndex > this._endIndex) {\n      return;\n    }\n\n    dataIndex -= this._startIndex;\n\n    for (var i = this._vertexRangeOfDataIndex[dataIndex * 2]; i < this._vertexRangeOfDataIndex[dataIndex * 2 + 1]; i++) {\n      this._polygonMesh.geometry.attributes.color.set(i, colorArr);\n    }\n\n    this._polygonMesh.geometry.dirty();\n\n    this._api.getZr().refresh();\n  }\n};\nexport default Geo3DBuilder;","import * as echarts from 'echarts/lib/echarts';\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport retrieve from '../../util/retrieve';\nimport { getItemVisualColor, getItemVisualOpacity } from '../../util/visual';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nvar LABEL_NORMAL_SHOW_BIT = 1;\nvar LABEL_EMPHASIS_SHOW_BIT = 2;\n\nfunction LabelsBuilder(width, height, api) {\n  this._labelsMesh = new LabelsMesh();\n  this._labelTextureSurface = new ZRTextureAtlasSurface({\n    width: 512,\n    height: 512,\n    devicePixelRatio: api.getDevicePixelRatio(),\n    onupdate: function () {\n      api.getZr().refresh();\n    }\n  });\n  this._api = api;\n\n  this._labelsMesh.material.set('textureAtlas', this._labelTextureSurface.getTexture());\n}\n\nLabelsBuilder.prototype.getLabelPosition = function (dataIndex, positionDesc, distance) {\n  return [0, 0, 0];\n};\n\nLabelsBuilder.prototype.getLabelDistance = function (dataIndex, positionDesc, distance) {\n  return 0;\n};\n\nLabelsBuilder.prototype.getMesh = function () {\n  return this._labelsMesh;\n};\n\nLabelsBuilder.prototype.updateData = function (data, start, end) {\n  if (start == null) {\n    start = 0;\n  }\n\n  if (end == null) {\n    end = data.count();\n  }\n\n  if (!this._labelsVisibilitiesBits || this._labelsVisibilitiesBits.length !== end - start) {\n    this._labelsVisibilitiesBits = new Uint8Array(end - start);\n  }\n\n  var normalLabelVisibilityQuery = ['label', 'show'];\n  var emphasisLabelVisibilityQuery = ['emphasis', 'label', 'show'];\n\n  for (var idx = start; idx < end; idx++) {\n    var itemModel = data.getItemModel(idx);\n    var normalVisibility = itemModel.get(normalLabelVisibilityQuery);\n    var emphasisVisibility = itemModel.get(emphasisLabelVisibilityQuery);\n\n    if (emphasisVisibility == null) {\n      emphasisVisibility = normalVisibility;\n    }\n\n    var bit = (normalVisibility ? LABEL_NORMAL_SHOW_BIT : 0) | (emphasisVisibility ? LABEL_EMPHASIS_SHOW_BIT : 0);\n    this._labelsVisibilitiesBits[idx - start] = bit;\n  }\n\n  this._start = start;\n  this._end = end;\n  this._data = data;\n};\n\nLabelsBuilder.prototype.updateLabels = function (highlightDataIndices) {\n  if (!this._data) {\n    return;\n  }\n\n  highlightDataIndices = highlightDataIndices || [];\n  var hasHighlightData = highlightDataIndices.length > 0;\n  var highlightDataIndicesMap = {};\n\n  for (var i = 0; i < highlightDataIndices.length; i++) {\n    highlightDataIndicesMap[highlightDataIndices[i]] = true;\n  }\n\n  this._labelsMesh.geometry.convertToDynamicArray(true);\n\n  this._labelTextureSurface.clear();\n\n  var normalLabelQuery = ['label'];\n  var emphasisLabelQuery = ['emphasis', 'label'];\n  var seriesModel = this._data.hostModel;\n  var data = this._data;\n  var seriesLabelModel = seriesModel.getModel(normalLabelQuery);\n  var seriesLabelEmphasisModel = seriesModel.getModel(emphasisLabelQuery, seriesLabelModel);\n  var textAlignMap = {\n    left: 'right',\n    right: 'left',\n    top: 'center',\n    bottom: 'center'\n  };\n  var textVerticalAlignMap = {\n    left: 'middle',\n    right: 'middle',\n    top: 'bottom',\n    bottom: 'top'\n  };\n\n  for (var dataIndex = this._start; dataIndex < this._end; dataIndex++) {\n    var isEmphasis = false;\n\n    if (hasHighlightData && highlightDataIndicesMap[dataIndex]) {\n      isEmphasis = true;\n    }\n\n    var ifShow = this._labelsVisibilitiesBits[dataIndex - this._start] & (isEmphasis ? LABEL_EMPHASIS_SHOW_BIT : LABEL_NORMAL_SHOW_BIT);\n\n    if (!ifShow) {\n      continue;\n    }\n\n    var itemModel = data.getItemModel(dataIndex);\n    var labelModel = itemModel.getModel(isEmphasis ? emphasisLabelQuery : normalLabelQuery, isEmphasis ? seriesLabelEmphasisModel : seriesLabelModel);\n    var distance = labelModel.get('distance') || 0;\n    var position = labelModel.get('position');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    var text = seriesModel.getFormattedLabel(dataIndex, isEmphasis ? 'emphasis' : 'normal');\n\n    if (text == null || text === '') {\n      return;\n    } // TODO Background.\n\n\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(labelModel, {\n        text: text,\n        fill: labelModel.get('color') || getItemVisualColor(data, dataIndex) || '#000',\n        align: 'left',\n        verticalAlign: 'top',\n        opacity: retrieve.firstNotNull(labelModel.get('opacity'), getItemVisualOpacity(data, dataIndex), 1)\n      })\n    });\n    var rect = textEl.getBoundingRect();\n    var lineHeight = 1.2;\n    rect.height *= lineHeight;\n\n    var coords = this._labelTextureSurface.add(textEl);\n\n    var textAlign = textAlignMap[position] || 'center';\n    var textVerticalAlign = textVerticalAlignMap[position] || 'bottom';\n\n    this._labelsMesh.geometry.addSprite(this.getLabelPosition(dataIndex, position, distance), [rect.width * dpr, rect.height * dpr], coords, textAlign, textVerticalAlign, this.getLabelDistance(dataIndex, position, distance) * dpr);\n  }\n\n  this._labelsMesh.material.set('uvScale', this._labelTextureSurface.getCoordsScale()); // var canvas = this._labelTextureSurface.getTexture().image;\n  // document.body.appendChild(canvas);\n  // canvas.style.cssText = 'position:absolute;z-index: 1000';\n  // Update image.\n\n\n  this._labelTextureSurface.getZr().refreshImmediately();\n\n  this._labelsMesh.geometry.convertToTypedArray();\n\n  this._labelsMesh.geometry.dirty();\n};\n\nLabelsBuilder.prototype.dispose = function () {\n  this._labelTextureSurface.dispose();\n};\n\nexport default LabelsBuilder;","import graphicGL from '../../util/graphicGL';\nimport Skybox from 'claygl/src/plugin/Skybox';\nimport * as echarts from 'echarts/lib/echarts';\n\nfunction SceneHelper() {}\n\nSceneHelper.prototype = {\n  constructor: SceneHelper,\n  setScene: function (scene) {\n    this._scene = scene;\n\n    if (this._skybox) {\n      this._skybox.attachScene(this._scene);\n    }\n  },\n  initLight: function (rootNode) {\n    this._lightRoot = rootNode;\n    /**\n     * @type {clay.light.Directional}\n     */\n\n    this.mainLight = new graphicGL.DirectionalLight({\n      shadowBias: 0.005\n    });\n    /**\n     * @type {clay.light.Ambient}\n     */\n\n    this.ambientLight = new graphicGL.AmbientLight();\n    rootNode.add(this.mainLight);\n    rootNode.add(this.ambientLight);\n  },\n  dispose: function () {\n    if (this._lightRoot) {\n      this._lightRoot.remove(this.mainLight);\n\n      this._lightRoot.remove(this.ambientLight);\n    }\n  },\n  updateLight: function (componentModel) {\n    var mainLight = this.mainLight;\n    var ambientLight = this.ambientLight;\n    var lightModel = componentModel.getModel('light');\n    var mainLightModel = lightModel.getModel('main');\n    var ambientLightModel = lightModel.getModel('ambient');\n    mainLight.intensity = mainLightModel.get('intensity');\n    ambientLight.intensity = ambientLightModel.get('intensity');\n    mainLight.color = graphicGL.parseColor(mainLightModel.get('color')).slice(0, 3);\n    ambientLight.color = graphicGL.parseColor(ambientLightModel.get('color')).slice(0, 3);\n    var alpha = mainLightModel.get('alpha') || 0;\n    var beta = mainLightModel.get('beta') || 0;\n    mainLight.position.setArray(graphicGL.directionFromAlphaBeta(alpha, beta));\n    mainLight.lookAt(graphicGL.Vector3.ZERO);\n    mainLight.castShadow = mainLightModel.get('shadow');\n    mainLight.shadowResolution = graphicGL.getShadowResolution(mainLightModel.get('shadowQuality'));\n  },\n  updateAmbientCubemap: function (renderer, componentModel, api) {\n    var ambientCubemapModel = componentModel.getModel('light.ambientCubemap');\n    var textureUrl = ambientCubemapModel.get('texture');\n\n    if (textureUrl) {\n      this._cubemapLightsCache = this._cubemapLightsCache || {};\n      var lights = this._cubemapLightsCache[textureUrl];\n\n      if (!lights) {\n        var self = this;\n        lights = this._cubemapLightsCache[textureUrl] = graphicGL.createAmbientCubemap(ambientCubemapModel.option, renderer, api, function () {\n          // Use prefitered cubemap\n          if (self._isSkyboxFromAmbientCubemap) {\n            self._skybox.setEnvironmentMap(lights.specular.cubemap);\n          }\n\n          api.getZr().refresh();\n        });\n      }\n\n      this._lightRoot.add(lights.diffuse);\n\n      this._lightRoot.add(lights.specular);\n\n      this._currentCubemapLights = lights;\n    } else if (this._currentCubemapLights) {\n      this._lightRoot.remove(this._currentCubemapLights.diffuse);\n\n      this._lightRoot.remove(this._currentCubemapLights.specular);\n\n      this._currentCubemapLights = null;\n    }\n  },\n  updateSkybox: function (renderer, componentModel, api) {\n    var environmentUrl = componentModel.get('environment');\n    var self = this;\n\n    function getSkybox() {\n      self._skybox = self._skybox || new Skybox();\n      return self._skybox;\n    }\n\n    var skybox = getSkybox();\n\n    if (environmentUrl && environmentUrl !== 'none') {\n      if (environmentUrl === 'auto') {\n        this._isSkyboxFromAmbientCubemap = true; // Use environment in ambient cubemap\n\n        if (this._currentCubemapLights) {\n          var cubemap = this._currentCubemapLights.specular.cubemap;\n          skybox.setEnvironmentMap(cubemap);\n\n          if (this._scene) {\n            skybox.attachScene(this._scene);\n          }\n\n          skybox.material.set('lod', 3);\n        } else if (this._skybox) {\n          this._skybox.detachScene();\n        }\n      } // Is gradient or color string\n      else if (typeof environmentUrl === 'object' && environmentUrl.colorStops || typeof environmentUrl === 'string' && echarts.color.parse(environmentUrl)) {\n          this._isSkyboxFromAmbientCubemap = false;\n          var texture = new graphicGL.Texture2D({\n            anisotropic: 8,\n            flipY: false\n          });\n          skybox.setEnvironmentMap(texture);\n          var canvas = texture.image = document.createElement('canvas');\n          canvas.width = canvas.height = 16;\n          var ctx = canvas.getContext('2d');\n          var rect = new echarts.graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: 16,\n              height: 16\n            },\n            style: {\n              fill: environmentUrl\n            }\n          });\n          echarts.innerDrawElementOnCanvas(ctx, rect);\n          skybox.attachScene(this._scene);\n        } else {\n          this._isSkyboxFromAmbientCubemap = false; // Panorama\n\n          var texture = graphicGL.loadTexture(environmentUrl, api, {\n            anisotropic: 8,\n            flipY: false\n          });\n          skybox.setEnvironmentMap(texture);\n          skybox.attachScene(this._scene);\n        }\n    } else {\n      if (this._skybox) {\n        this._skybox.detachScene(this._scene);\n      }\n\n      this._skybox = null;\n    }\n\n    var coordSys = componentModel.coordinateSystem;\n\n    if (this._skybox) {\n      if (coordSys && coordSys.viewGL && environmentUrl !== 'auto' && !(environmentUrl.match && environmentUrl.match(/.hdr$/))) {\n        var srgbDefineMethod = coordSys.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n        this._skybox.material[srgbDefineMethod]('fragment', 'SRGB_DECODE');\n      } else {\n        this._skybox.material.undefine('fragment', 'SRGB_DECODE');\n      } // var ambientCubemapUrl = environmentUrl === 'auto'\n      //     ? componentModel.get('light.ambientCubemap.texture')\n      //     : environmentUrl;\n\n    }\n  }\n};\nexport default SceneHelper;","export default {\n  defaultOption: {\n    // Light is available when material.shading is not color\n    light: {\n      // Main light\n      main: {\n        shadow: false,\n        // low, medium, high, ultra\n        shadowQuality: 'high',\n        color: '#fff',\n        intensity: 1,\n        alpha: 0,\n        beta: 0\n      },\n      ambient: {\n        color: '#fff',\n        intensity: 0.2\n      },\n      ambientCubemap: {\n        // Panorama environment texture,\n        // Support .hdr and commmon web formats.\n        texture: null,\n        // Available when texture is hdr.\n        exposure: 1,\n        // Intensity for diffuse term\n        diffuseIntensity: 0.5,\n        // Intensity for specular term, only available when shading is realastic\n        specularIntensity: 0.5\n      }\n    }\n  }\n};","export default {\n  defaultOption: {\n    // Post effect\n    postEffect: {\n      enable: false,\n      bloom: {\n        enable: true,\n        intensity: 0.1\n      },\n      depthOfField: {\n        enable: false,\n        focalRange: 20,\n        focalDistance: 50,\n        blurRadius: 10,\n        fstop: 2.8,\n        quality: 'medium'\n      },\n      screenSpaceAmbientOcclusion: {\n        enable: false,\n        radius: 2,\n        // low, medium, high, ultra\n        quality: 'medium',\n        intensity: 1\n      },\n      screenSpaceReflection: {\n        enable: false,\n        quality: 'medium',\n        maxRoughness: 0.8\n      },\n      colorCorrection: {\n        enable: true,\n        exposure: 0,\n        brightness: 0,\n        contrast: 1,\n        saturation: 1,\n        lookupTexture: ''\n      },\n      edge: {\n        enable: false\n      },\n      FXAA: {\n        enable: false\n      }\n    },\n    // Temporal super sampling when the picture is still.\n    temporalSuperSampling: {\n      // Only enabled when postEffect is enabled\n      enable: 'auto'\n    }\n  }\n};","export default {\n  defaultOption: {\n    shading: null,\n    realisticMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    lambertMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    colorMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      detailTexture: null\n    },\n    hatchingMaterial: {\n      textureTiling: 1,\n      textureOffset: 0,\n      paperColor: '#fff'\n    }\n  }\n};","export default {\n  defaultOption: {\n    viewControl: {\n      // perspective, orthographic.\n      // TODO Isometric\n      projection: 'perspective',\n      // If rotate on on init\n      autoRotate: false,\n      // cw or ccw\n      autoRotateDirection: 'cw',\n      // Degree per second\n      autoRotateSpeed: 10,\n      // Start rotating after still for a given time\n      // default is 3 seconds\n      autoRotateAfterStill: 3,\n      // Rotate, zoom damping.\n      damping: 0.8,\n      // Sensitivities for operations.\n      // Can be array to set x,y respectively\n      rotateSensitivity: 1,\n      zoomSensitivity: 1,\n      // Can be array to set x,y respectively\n      panSensitivity: 1,\n      // Which mouse button do rotate or pan\n      panMouseButton: 'middle',\n      rotateMouseButton: 'left',\n      // Distance to the target\n      // Only available when camera is perspective.\n      distance: 150,\n      // Min distance mouse can zoom in\n      minDistance: 40,\n      // Max distance mouse can zoom out\n      maxDistance: 400,\n      // Size of viewing volume.\n      // Only available when camera is orthographic\n      orthographicSize: 150,\n      maxOrthographicSize: 400,\n      minOrthographicSize: 20,\n      // Center view point\n      center: [0, 0, 0],\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 0,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 0,\n      minAlpha: -90,\n      maxAlpha: 90 // minBeta: -Infinity\n      // maxBeta: -Infinity\n\n    }\n  },\n  setView: function (opts) {\n    opts = opts || {};\n    this.option.viewControl = this.option.viewControl || {};\n\n    if (opts.alpha != null) {\n      this.option.viewControl.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      this.option.viewControl.beta = opts.beta;\n    }\n\n    if (opts.distance != null) {\n      this.option.viewControl.distance = opts.distance;\n    }\n\n    if (opts.center != null) {\n      this.option.viewControl.center = opts.center;\n    }\n  }\n};","import { use } from 'echarts/lib/echarts';\nimport { install } from './geo3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../common/componentViewControlMixin';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nimport componentShadingMixin from '../common/componentShadingMixin';\nimport geo3DModelMixin from '../../coord/geo3D/geo3DModelMixin';\nvar Geo3DModel = echarts.ComponentModel.extend({\n  type: 'geo3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  optionUpdated: function () {\n    var option = this.option;\n    option.regions = this.getFilledRegions(option.regions, option.map);\n    var dimensions = echarts.helper.createDimensions(option.data || [], {\n      coordDimensions: ['value'],\n      encodeDefine: this.get('encode'),\n      dimensionsDefine: this.get('dimensions')\n    });\n    var list = new echarts.List(dimensions, this);\n    list.initData(option.regions);\n    var regionModelMap = {};\n    list.each(function (idx) {\n      var name = list.getName(idx);\n      var itemModel = list.getItemModel(idx);\n      regionModelMap[name] = itemModel;\n    });\n    this._regionModelMap = regionModelMap;\n    this._data = list;\n  },\n  getData: function () {\n    return this._data;\n  },\n  getRegionModel: function (idx) {\n    var name = this.getData().getName(idx);\n    return this._regionModelMap[name] || new echarts.Model(null, this);\n  },\n  getRegionPolygonCoords: function (idx) {\n    var name = this.getData().getName(idx);\n    var region = this.coordinateSystem.getRegion(name);\n    return region ? region.geometries : [];\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status) {\n    var name = this._data.getName(dataIndex);\n\n    var regionModel = this.getRegionModel(dataIndex);\n    var formatter = regionModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n\n    if (formatter == null) {\n      formatter = regionModel.get(['label', 'formatter']);\n    }\n\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var serName = params.seriesName;\n      return formatter.replace('{a}', serName != null ? serName : '');\n    } else {\n      return name;\n    }\n  },\n  defaultOption: {\n    // itemStyle: {},\n    // height,\n    // label: {}\n    // realisticMaterial\n    regions: []\n  }\n});\necharts.util.merge(Geo3DModel.prototype, geo3DModelMixin);\necharts.util.merge(Geo3DModel.prototype, componentViewControlMixin);\necharts.util.merge(Geo3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Geo3DModel.prototype, componentLightMixin);\necharts.util.merge(Geo3DModel.prototype, componentShadingMixin);\nexport default Geo3DModel;","import Geo3DBuilder from '../common/Geo3DBuilder';\nimport * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport OrbitControl from '../../util/OrbitControl';\nimport SceneHelper from '../common/SceneHelper';\nexport default echarts.ComponentView.extend({\n  type: 'geo3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this._geo3DBuilder = new Geo3DBuilder(api);\n    this.groupGL = new graphicGL.Node();\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    this._control = new OrbitControl({\n      zr: api.getZr()\n    });\n\n    this._control.init();\n  },\n  render: function (geo3DModel, ecModel, api) {\n    this.groupGL.add(this._geo3DBuilder.rootNode);\n    var geo3D = geo3DModel.coordinateSystem;\n\n    if (!geo3D || !geo3D.viewGL) {\n      return;\n    } // Always have light.\n\n\n    geo3D.viewGL.add(this._lightRoot);\n\n    if (geo3DModel.get('show')) {\n      geo3D.viewGL.add(this.groupGL);\n    } else {\n      geo3D.viewGL.remove(this.groupGL);\n    }\n\n    var control = this._control;\n    control.setViewGL(geo3D.viewGL);\n    var viewControlModel = geo3DModel.getModel('viewControl');\n    control.setFromViewControlModel(viewControlModel, 0);\n\n    this._sceneHelper.setScene(geo3D.viewGL.scene);\n\n    this._sceneHelper.updateLight(geo3DModel); // Set post effect\n\n\n    geo3D.viewGL.setPostEffect(geo3DModel.getModel('postEffect'), api);\n    geo3D.viewGL.setTemporalSuperSampling(geo3DModel.getModel('temporalSuperSampling')); // Must update after geo3D.viewGL.setPostEffect\n\n    this._geo3DBuilder.update(geo3DModel, ecModel, api, 0, geo3DModel.getData().count());\n\n    var srgbDefineMethod = geo3D.viewGL.isLinearSpace() ? 'define' : 'undefine';\n\n    this._geo3DBuilder.rootNode.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material[srgbDefineMethod]('fragment', 'SRGB_DECODE');\n      }\n    });\n\n    control.off('update');\n    control.on('update', function () {\n      api.dispatchAction({\n        type: 'geo3DChangeCamera',\n        alpha: control.getAlpha(),\n        beta: control.getBeta(),\n        distance: control.getDistance(),\n        center: control.getCenter(),\n        from: this.uid,\n        geo3DId: geo3DModel.id\n      });\n    });\n    control.update();\n  },\n  afterRender: function (geo3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, geo3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, geo3DModel, api);\n  },\n  dispose: function () {\n    this._control.dispose();\n\n    this._geo3DBuilder.dispose();\n  }\n});","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Geo3DModel from './Geo3DModel';\nimport Geo3DView from './Geo3DView';\nimport geo3DCreator from '../../coord/geo3DCreator';\nexport function install(registers) {\n  registers.registerComponentModel(Geo3DModel);\n  registers.registerComponentView(Geo3DView);\n  registers.registerAction({\n    type: 'geo3DChangeCamera',\n    event: 'geo3dcamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'geo3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerCoordinateSystem('geo3D', geo3DCreator);\n}","import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../common/componentViewControlMixin';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nimport componentShadingMixin from '../common/componentShadingMixin';\n\nfunction defaultId(option, idx) {\n  option.id = option.id || option.name || idx + '';\n}\n\nvar GlobeModel = echarts.ComponentModel.extend({\n  type: 'globe',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  init: function () {\n    GlobeModel.superApply(this, 'init', arguments);\n    echarts.util.each(this.option.layers, function (layerOption, idx) {\n      echarts.util.merge(layerOption, this.defaultLayerOption);\n      defaultId(layerOption, idx);\n    }, this);\n  },\n  mergeOption: function (option) {\n    // TODO test\n    var oldLayers = this.option.layers;\n    this.option.layers = null;\n    GlobeModel.superApply(this, 'mergeOption', arguments);\n\n    function createLayerMap(layers) {\n      return echarts.util.reduce(layers, function (obj, layerOption, idx) {\n        defaultId(layerOption, idx);\n        obj[layerOption.id] = layerOption;\n        return obj;\n      }, {});\n    }\n\n    if (oldLayers && oldLayers.length) {\n      var newLayerMap = createLayerMap(option.layers);\n      var oldLayerMap = createLayerMap(oldLayers);\n\n      for (var id in newLayerMap) {\n        if (oldLayerMap[id]) {\n          echarts.util.merge(oldLayerMap[id], newLayerMap[id], true);\n        } else {\n          oldLayers.push(option.layers[id]);\n        }\n      } // Copy back\n\n\n      this.option.layers = oldLayers;\n    } // else overwrite\n    // Set default\n\n\n    echarts.util.each(this.option.layers, function (layerOption) {\n      echarts.util.merge(layerOption, this.defaultLayerOption);\n    }, this);\n  },\n  optionUpdated: function () {\n    this.updateDisplacementHash();\n  },\n  defaultLayerOption: {\n    show: true,\n    type: 'overlay'\n  },\n  defaultOption: {\n    show: true,\n    zlevel: -10,\n    // Layout used for viewport\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    environment: 'auto',\n    baseColor: '#fff',\n    // Base albedo texture\n    baseTexture: '',\n    // Height texture for bump mapping and vertex displacement\n    heightTexture: '',\n    // Texture for vertex displacement, default use heightTexture\n    displacementTexture: '',\n    // Scale of vertex displacement, available only if displacementTexture is set.\n    displacementScale: 0,\n    // Detail of displacement. 'low', 'medium', 'high', 'ultra'\n    displacementQuality: 'medium',\n    // Globe radius\n    globeRadius: 100,\n    // Globe outer radius. Which is max of altitude.\n    globeOuterRadius: 150,\n    // Shading of globe\n    shading: 'lambert',\n    // Extend light\n    light: {\n      // Main sun light\n      main: {\n        // Time, default it will use system time\n        time: ''\n      }\n    },\n    // atmosphere\n    atmosphere: {\n      show: false,\n      offset: 5,\n      color: '#ffffff',\n      glowPower: 6.0,\n      innerGlowPower: 2.0\n    },\n    // light\n    // postEffect\n    // temporalSuperSampling\n    viewControl: {\n      autoRotate: true,\n      panSensitivity: 0,\n      targetCoord: null\n    },\n    // {\n    //     show: true,\n    //     name: 'cloud',\n    //     type: 'overlay',\n    //     shading: 'lambert',\n    //     distance: 10,\n    //     texture: ''\n    // }\n    // {\n    //     type: 'blend',\n    //     blendTo: 'albedo'\n    //     blendType: 'source-over'\n    // }\n    layers: []\n  },\n  setDisplacementData: function (data, width, height) {\n    this.displacementData = data;\n    this.displacementWidth = width;\n    this.displacementHeight = height;\n  },\n  getDisplacementTexture: function () {\n    return this.get('displacementTexture') || this.get('heightTexture');\n  },\n  getDisplacemenScale: function () {\n    var displacementTexture = this.getDisplacementTexture();\n    var displacementScale = this.get('displacementScale');\n\n    if (!displacementTexture || displacementTexture === 'none') {\n      displacementScale = 0;\n    }\n\n    return displacementScale;\n  },\n  hasDisplacement: function () {\n    return this.getDisplacemenScale() > 0;\n  },\n  _displacementChanged: true,\n  _displacementScale: 0,\n  updateDisplacementHash: function () {\n    var displacementTexture = this.getDisplacementTexture();\n    var displacementScale = this.getDisplacemenScale();\n    this._displacementChanged = this._displacementTexture !== displacementTexture || this._displacementScale !== displacementScale;\n    this._displacementTexture = displacementTexture;\n    this._displacementScale = displacementScale;\n  },\n  isDisplacementChanged: function () {\n    return this._displacementChanged;\n  }\n});\necharts.util.merge(GlobeModel.prototype, componentViewControlMixin);\necharts.util.merge(GlobeModel.prototype, componentPostEffectMixin);\necharts.util.merge(GlobeModel.prototype, componentLightMixin);\necharts.util.merge(GlobeModel.prototype, componentShadingMixin);\nexport default GlobeModel;","export default \"@export ecgl.atmosphere.vertex\\nattribute vec3 position: POSITION;\\nattribute vec3 normal : NORMAL;\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 normalMatrix : WORLDINVERSETRANSPOSE;\\n\\nvarying vec3 v_Normal;\\n\\nvoid main() {\\n v_Normal = normalize((normalMatrix * vec4(normal, 0.0)).xyz);\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n@end\\n\\n\\n@export ecgl.atmosphere.fragment\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform float glowPower;\\nuniform vec3 glowColor;\\n\\nvarying vec3 v_Normal;\\n\\nvoid main() {\\n float intensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor = vec4(glowColor, intensity * intensity);\\n}\\n@end\";","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport OrbitControl from '../../util/OrbitControl';\nimport SceneHelper from '../common/SceneHelper';\nimport sunCalc from '../../util/sunCalc';\nimport retrieve from '../../util/retrieve';\nimport utilShaderCode from 'claygl/src/shader/source/util.glsl.js';\nimport atmosphereShaderCode from './atmosphere.glsl.js';\ngraphicGL.Shader['import'](utilShaderCode);\ngraphicGL.Shader['import'](atmosphereShaderCode);\nexport default echarts.ComponentView.extend({\n  type: 'globe',\n  __ecgl__: true,\n  _displacementScale: 0,\n  init: function (ecModel, api) {\n    this.groupGL = new graphicGL.Node();\n    /**\n     * @type {clay.geometry.Sphere}\n     * @private\n     */\n\n    this._sphereGeometry = new graphicGL.SphereGeometry({\n      widthSegments: 200,\n      heightSegments: 100,\n      dynamic: true\n    });\n    this._overlayGeometry = new graphicGL.SphereGeometry({\n      widthSegments: 80,\n      heightSegments: 40\n    });\n    /**\n     * @type {clay.geometry.Plane}\n     */\n\n    this._planeGeometry = new graphicGL.PlaneGeometry();\n    /**\n     * @type {clay.geometry.Mesh}\n     */\n\n    this._earthMesh = new graphicGL.Mesh({\n      renderNormal: true\n    });\n    /**\n     * @type {clay.geometry.Mesh}\n     */\n\n    this._atmosphereMesh = new graphicGL.Mesh();\n    this._atmosphereGeometry = new graphicGL.SphereGeometry({\n      widthSegments: 80,\n      heightSegments: 40\n    });\n    this._atmosphereMaterial = new graphicGL.Material({\n      shader: new graphicGL.Shader(graphicGL.Shader.source('ecgl.atmosphere.vertex'), graphicGL.Shader.source('ecgl.atmosphere.fragment')),\n      transparent: true\n    });\n    this._atmosphereMesh.geometry = this._atmosphereGeometry;\n    this._atmosphereMesh.material = this._atmosphereMaterial;\n    this._atmosphereMesh.frontFace = graphicGL.Mesh.CW;\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper();\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    this.groupGL.add(this._atmosphereMesh);\n    this.groupGL.add(this._earthMesh);\n    this._control = new OrbitControl({\n      zr: api.getZr()\n    });\n\n    this._control.init();\n\n    this._layerMeshes = {};\n  },\n  render: function (globeModel, ecModel, api) {\n    var coordSys = globeModel.coordinateSystem;\n    var shading = globeModel.get('shading'); // Always have light.\n\n    coordSys.viewGL.add(this._lightRoot);\n\n    if (globeModel.get('show')) {\n      // Add self to scene;\n      coordSys.viewGL.add(this.groupGL);\n    } else {\n      coordSys.viewGL.remove(this.groupGL);\n    }\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene); // Set post effect\n\n\n    coordSys.viewGL.setPostEffect(globeModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(globeModel.getModel('temporalSuperSampling'));\n    var earthMesh = this._earthMesh;\n    earthMesh.geometry = this._sphereGeometry;\n    var shadingPrefix = 'ecgl.' + shading;\n\n    if (!earthMesh.material || earthMesh.material.shader.name !== shadingPrefix) {\n      earthMesh.material = graphicGL.createMaterial(shadingPrefix);\n    }\n\n    graphicGL.setMaterialFromModel(shading, earthMesh.material, globeModel, api);\n    ['roughnessMap', 'metalnessMap', 'detailMap', 'normalMap'].forEach(function (texName) {\n      var texture = earthMesh.material.get(texName);\n\n      if (texture) {\n        texture.flipY = false;\n      }\n    });\n    earthMesh.material.set('color', graphicGL.parseColor(globeModel.get('baseColor'))); // shrink a little\n\n    var scale = coordSys.radius * 0.99;\n    earthMesh.scale.set(scale, scale, scale);\n\n    if (globeModel.get('atmosphere.show')) {\n      earthMesh.material.define('both', 'ATMOSPHERE_ENABLED');\n      this._atmosphereMesh.invisible = false;\n\n      this._atmosphereMaterial.setUniforms({\n        glowPower: globeModel.get('atmosphere.glowPower') || 6.0,\n        glowColor: globeModel.get('atmosphere.color') || '#ffffff'\n      });\n\n      earthMesh.material.setUniforms({\n        glowPower: globeModel.get('atmosphere.innerGlowPower') || 2.0,\n        glowColor: globeModel.get('atmosphere.color') || '#ffffff'\n      });\n      var offset = globeModel.get('atmosphere.offset') || 5;\n\n      this._atmosphereMesh.scale.set(scale + offset, scale + offset, scale + offset);\n    } else {\n      earthMesh.material.undefine('both', 'ATMOSPHERE_ENABLED');\n      this._atmosphereMesh.invisible = true;\n    }\n\n    var diffuseTexture = earthMesh.material.setTextureImage('diffuseMap', globeModel.get('baseTexture'), api, {\n      flipY: false,\n      anisotropic: 8\n    });\n\n    if (diffuseTexture && diffuseTexture.surface) {\n      diffuseTexture.surface.attachToMesh(earthMesh);\n    } // Update bump map\n\n\n    var bumpTexture = earthMesh.material.setTextureImage('bumpMap', globeModel.get('heightTexture'), api, {\n      flipY: false,\n      anisotropic: 8\n    });\n\n    if (bumpTexture && bumpTexture.surface) {\n      bumpTexture.surface.attachToMesh(earthMesh);\n    }\n\n    earthMesh.material[globeModel.get('postEffect.enable') ? 'define' : 'undefine']('fragment', 'SRGB_DECODE');\n\n    this._updateLight(globeModel, api);\n\n    this._displaceVertices(globeModel, api);\n\n    this._updateViewControl(globeModel, api);\n\n    this._updateLayers(globeModel, api);\n  },\n  afterRender: function (globeModel, ecModel, api, layerGL) {\n    // Create ambient cubemap after render because we need to know the renderer.\n    // TODO\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, globeModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, globeModel, api);\n  },\n  _updateLayers: function (globeModel, api) {\n    var coordSys = globeModel.coordinateSystem;\n    var layers = globeModel.get('layers');\n    var lastDistance = coordSys.radius;\n    var layerDiffuseTextures = [];\n    var layerDiffuseIntensity = [];\n    var layerEmissiveTextures = [];\n    var layerEmissionIntensity = [];\n    echarts.util.each(layers, function (layerOption) {\n      var layerModel = new echarts.Model(layerOption);\n      var layerType = layerModel.get('type');\n      var texture = graphicGL.loadTexture(layerModel.get('texture'), api, {\n        flipY: false,\n        anisotropic: 8\n      });\n\n      if (texture.surface) {\n        texture.surface.attachToMesh(this._earthMesh);\n      }\n\n      if (layerType === 'blend') {\n        var blendTo = layerModel.get('blendTo');\n        var intensity = retrieve.firstNotNull(layerModel.get('intensity'), 1.0);\n\n        if (blendTo === 'emission') {\n          layerEmissiveTextures.push(texture);\n          layerEmissionIntensity.push(intensity);\n        } else {\n          // Default is albedo\n          layerDiffuseTextures.push(texture);\n          layerDiffuseIntensity.push(intensity);\n        }\n      } else {\n        // Default use overlay\n        var id = layerModel.get('id');\n        var overlayMesh = this._layerMeshes[id];\n\n        if (!overlayMesh) {\n          overlayMesh = this._layerMeshes[id] = new graphicGL.Mesh({\n            geometry: this._overlayGeometry,\n            castShadow: false,\n            ignorePicking: true\n          });\n        }\n\n        var shading = layerModel.get('shading');\n\n        if (shading === 'lambert') {\n          overlayMesh.material = overlayMesh.__lambertMaterial || new graphicGL.Material({\n            autoUpdateTextureStatus: false,\n            shader: graphicGL.createShader('ecgl.lambert'),\n            transparent: true,\n            depthMask: false\n          });\n          overlayMesh.__lambertMaterial = overlayMesh.material;\n        } else {\n          // color\n          overlayMesh.material = overlayMesh.__colorMaterial || new graphicGL.Material({\n            autoUpdateTextureStatus: false,\n            shader: graphicGL.createShader('ecgl.color'),\n            transparent: true,\n            depthMask: false\n          });\n          overlayMesh.__colorMaterial = overlayMesh.material;\n        } // overlay should be transparent if texture is not loaded yet.\n\n\n        overlayMesh.material.enableTexture('diffuseMap');\n        var distance = layerModel.get('distance'); // Based on distance of last layer\n\n        var radius = lastDistance + (distance == null ? coordSys.radius / 100 : distance);\n        overlayMesh.scale.set(radius, radius, radius);\n        lastDistance = radius; // FIXME Exists blink.\n\n        var blankTexture = this._blankTexture || (this._blankTexture = graphicGL.createBlankTexture('rgba(255, 255, 255, 0)'));\n        overlayMesh.material.set('diffuseMap', blankTexture);\n        graphicGL.loadTexture(layerModel.get('texture'), api, {\n          flipY: false,\n          anisotropic: 8\n        }, function (texture) {\n          if (texture.surface) {\n            texture.surface.attachToMesh(overlayMesh);\n          }\n\n          overlayMesh.material.set('diffuseMap', texture);\n          api.getZr().refresh();\n        });\n        layerModel.get('show') ? this.groupGL.add(overlayMesh) : this.groupGL.remove(overlayMesh);\n      }\n    }, this);\n    var earthMaterial = this._earthMesh.material;\n    earthMaterial.define('fragment', 'LAYER_DIFFUSEMAP_COUNT', layerDiffuseTextures.length);\n    earthMaterial.define('fragment', 'LAYER_EMISSIVEMAP_COUNT', layerEmissiveTextures.length);\n    earthMaterial.set('layerDiffuseMap', layerDiffuseTextures);\n    earthMaterial.set('layerDiffuseIntensity', layerDiffuseIntensity);\n    earthMaterial.set('layerEmissiveMap', layerEmissiveTextures);\n    earthMaterial.set('layerEmissionIntensity', layerEmissionIntensity);\n    var debugWireframeModel = globeModel.getModel('debug.wireframe');\n\n    if (debugWireframeModel.get('show')) {\n      earthMaterial.define('both', 'WIREFRAME_TRIANGLE');\n      var color = graphicGL.parseColor(debugWireframeModel.get('lineStyle.color') || 'rgba(0,0,0,0.5)');\n      var width = retrieve.firstNotNull(debugWireframeModel.get('lineStyle.width'), 1);\n      earthMaterial.set('wireframeLineWidth', width);\n      earthMaterial.set('wireframeLineColor', color);\n    } else {\n      earthMaterial.undefine('both', 'WIREFRAME_TRIANGLE');\n    }\n  },\n  _updateViewControl: function (globeModel, api) {\n    var coordSys = globeModel.coordinateSystem; // Update camera\n\n    var viewControlModel = globeModel.getModel('viewControl');\n    var camera = coordSys.viewGL.camera;\n    var self = this;\n\n    function makeAction() {\n      return {\n        type: 'globeChangeCamera',\n        alpha: control.getAlpha(),\n        beta: control.getBeta(),\n        distance: control.getDistance() - coordSys.radius,\n        center: control.getCenter(),\n        from: self.uid,\n        globeId: globeModel.id\n      };\n    } // Update control\n\n\n    var control = this._control;\n    control.setViewGL(coordSys.viewGL);\n    var coord = viewControlModel.get('targetCoord');\n    var alpha, beta;\n\n    if (coord != null) {\n      beta = coord[0] + 90;\n      alpha = coord[1];\n    }\n\n    control.setFromViewControlModel(viewControlModel, {\n      baseDistance: coordSys.radius,\n      alpha: alpha,\n      beta: beta\n    });\n    control.off('update');\n    control.on('update', function () {\n      api.dispatchAction(makeAction());\n    });\n  },\n  _displaceVertices: function (globeModel, api) {\n    var displacementQuality = globeModel.get('displacementQuality');\n    var showDebugWireframe = globeModel.get('debug.wireframe.show');\n    var globe = globeModel.coordinateSystem;\n\n    if (!globeModel.isDisplacementChanged() && displacementQuality === this._displacementQuality && showDebugWireframe === this._showDebugWireframe) {\n      return;\n    }\n\n    this._displacementQuality = displacementQuality;\n    this._showDebugWireframe = showDebugWireframe;\n    var geometry = this._sphereGeometry;\n    var widthSegments = {\n      low: 100,\n      medium: 200,\n      high: 400,\n      ultra: 800\n    }[displacementQuality] || 200;\n    var heightSegments = widthSegments / 2;\n\n    if (geometry.widthSegments !== widthSegments || showDebugWireframe) {\n      geometry.widthSegments = widthSegments;\n      geometry.heightSegments = heightSegments;\n      geometry.build();\n    }\n\n    this._doDisplaceVertices(geometry, globe);\n\n    if (showDebugWireframe) {\n      geometry.generateBarycentric();\n    }\n  },\n  _doDisplaceVertices: function (geometry, globe) {\n    var positionArr = geometry.attributes.position.value;\n    var uvArr = geometry.attributes.texcoord0.value;\n    var originalPositionArr = geometry.__originalPosition;\n\n    if (!originalPositionArr || originalPositionArr.length !== positionArr.length) {\n      originalPositionArr = new Float32Array(positionArr.length);\n      originalPositionArr.set(positionArr);\n      geometry.__originalPosition = originalPositionArr;\n    }\n\n    var width = globe.displacementWidth;\n    var height = globe.displacementHeight;\n    var data = globe.displacementData;\n\n    for (var i = 0; i < geometry.vertexCount; i++) {\n      var i3 = i * 3;\n      var i2 = i * 2;\n      var x = originalPositionArr[i3 + 1];\n      var y = originalPositionArr[i3 + 2];\n      var z = originalPositionArr[i3 + 3];\n      var u = uvArr[i2++];\n      var v = uvArr[i2++];\n      var j = Math.round(u * (width - 1));\n      var k = Math.round(v * (height - 1));\n      var idx = k * width + j;\n      var scale = data ? data[idx] : 0;\n      positionArr[i3 + 1] = x + x * scale;\n      positionArr[i3 + 2] = y + y * scale;\n      positionArr[i3 + 3] = z + z * scale;\n    }\n\n    geometry.generateVertexNormals();\n    geometry.dirty();\n    geometry.updateBoundingBox();\n  },\n  _updateLight: function (globeModel, api) {\n    var earthMesh = this._earthMesh;\n\n    this._sceneHelper.updateLight(globeModel);\n\n    var mainLight = this._sceneHelper.mainLight; // Put sun in the right position\n\n    var time = globeModel.get('light.main.time') || new Date(); // http://en.wikipedia.org/wiki/Azimuth\n\n    var pos = sunCalc.getPosition(echarts.number.parseDate(time), 0, 0);\n    var r0 = Math.cos(pos.altitude); // FIXME How to calculate the y ?\n\n    mainLight.position.y = -r0 * Math.cos(pos.azimuth);\n    mainLight.position.x = Math.sin(pos.altitude);\n    mainLight.position.z = r0 * Math.sin(pos.azimuth);\n    mainLight.lookAt(earthMesh.getWorldPosition());\n  },\n  dispose: function (ecModel, api) {\n    this.groupGL.removeAll();\n\n    this._control.dispose();\n  }\n});","import glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\n\nfunction Globe(radius) {\n  this.radius = radius;\n  this.viewGL = null;\n  this.altitudeAxis; // Displacement data provided by texture.\n\n  this.displacementData = null;\n  this.displacementWidth;\n  this.displacementHeight;\n}\n\nGlobe.prototype = {\n  constructor: Globe,\n  dimensions: ['lng', 'lat', 'alt'],\n  type: 'globe',\n  containPoint: function () {},\n  setDisplacementData: function (data, width, height) {\n    this.displacementData = data;\n    this.displacementWidth = width;\n    this.displacementHeight = height;\n  },\n  _getDisplacementScale: function (lng, lat) {\n    var i = (lng + 180) / 360 * (this.displacementWidth - 1);\n    var j = (90 - lat) / 180 * (this.displacementHeight - 1); // NEAREST SAMPLING\n    // TODO Better bilinear sampling\n\n    var idx = Math.round(i) + Math.round(j) * this.displacementWidth;\n    return this.displacementData[idx];\n  },\n  dataToPoint: function (data, out) {\n    var lng = data[0];\n    var lat = data[1]; // Default have 0 altitude\n\n    var altVal = data[2] || 0;\n    var r = this.radius;\n\n    if (this.displacementData) {\n      r *= 1 + this._getDisplacementScale(lng, lat);\n    }\n\n    if (this.altitudeAxis) {\n      r += this.altitudeAxis.dataToCoord(altVal);\n    }\n\n    lng = lng * Math.PI / 180;\n    lat = lat * Math.PI / 180;\n    var r0 = Math.cos(lat) * r;\n    out = out || []; // PENDING\n\n    out[0] = -r0 * Math.cos(lng + Math.PI);\n    out[1] = Math.sin(lat) * r;\n    out[2] = r0 * Math.sin(lng + Math.PI);\n    return out;\n  },\n  pointToData: function (point, out) {\n    var x = point[0];\n    var y = point[1];\n    var z = point[2];\n    var len = vec3.len(point);\n    x /= len;\n    y /= len;\n    z /= len;\n    var theta = Math.asin(y);\n    var phi = Math.atan2(z, -x);\n\n    if (phi < 0) {\n      phi = Math.PI * 2 + phi;\n    }\n\n    var lat = theta * 180 / Math.PI;\n    var lng = phi * 180 / Math.PI - 180;\n    out = out || [];\n    out[0] = lng;\n    out[1] = lat;\n    out[2] = len - this.radius;\n\n    if (this.altitudeAxis) {\n      out[2] = this.altitudeAxis.coordToData(out[2]);\n    }\n\n    return out;\n  }\n};\nexport default Globe;","import Globe from './globe/Globe';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\nimport graphicGL from '../util/graphicGL';\n\nfunction getDisplacementData(img, displacementScale) {\n  var canvas = document.createElement('canvas');\n  var ctx = canvas.getContext('2d');\n  var width = img.width;\n  var height = img.height;\n  canvas.width = width;\n  canvas.height = height;\n  ctx.drawImage(img, 0, 0, width, height);\n  var rgbaArr = ctx.getImageData(0, 0, width, height).data;\n  var displacementArr = new Float32Array(rgbaArr.length / 4);\n\n  for (var i = 0; i < rgbaArr.length / 4; i++) {\n    var x = rgbaArr[i * 4];\n    displacementArr[i] = x / 255 * displacementScale;\n  }\n\n  return {\n    data: displacementArr,\n    width: width,\n    height: height\n  };\n}\n\nfunction resizeGlobe(globeModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = globeModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  this.radius = globeModel.get('globeRadius');\n  var outerRadius = globeModel.get('globeOuterRadius');\n\n  if (this.altitudeAxis) {\n    this.altitudeAxis.setExtent(0, outerRadius - this.radius);\n  }\n}\n\nfunction updateGlobe(ecModel, api) {\n  var altitudeDataExtent = [Infinity, -Infinity];\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    } // Get altitude data extent.\n\n\n    var data = seriesModel.getData();\n    var altDims = seriesModel.coordDimToDataDim('alt');\n    var altDim = altDims && altDims[0];\n\n    if (altDim) {\n      // TODO altitiude is in coords of lines.\n      var dataExtent = data.getDataExtent(altDim, true);\n      altitudeDataExtent[0] = Math.min(altitudeDataExtent[0], dataExtent[0]);\n      altitudeDataExtent[1] = Math.max(altitudeDataExtent[1], dataExtent[1]);\n    }\n  }, this); // Create altitude axis\n\n  if (altitudeDataExtent && isFinite(altitudeDataExtent[1] - altitudeDataExtent[0])) {\n    var scale = echarts.helper.createScale(altitudeDataExtent, {\n      type: 'value',\n      // PENDING\n      min: 'dataMin',\n      max: 'dataMax'\n    });\n    this.altitudeAxis = new echarts.Axis('altitude', scale); // Resize again\n\n    this.resize(this.model, api);\n  }\n}\n\nvar globeCreator = {\n  dimensions: Globe.prototype.dimensions,\n  create: function (ecModel, api) {\n    var globeList = [];\n    ecModel.eachComponent('globe', function (globeModel) {\n      // FIXME\n      globeModel.__viewGL = globeModel.__viewGL || new ViewGL();\n      var globe = new Globe();\n      globe.viewGL = globeModel.__viewGL;\n      globeModel.coordinateSystem = globe;\n      globe.model = globeModel;\n      globeList.push(globe); // Inject resize\n\n      globe.resize = resizeGlobe;\n      globe.resize(globeModel, api);\n      globe.update = updateGlobe;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'globe') {\n        var globeModel = seriesModel.getReferringComponents('globe').models[0];\n\n        if (!globeModel) {\n          globeModel = ecModel.getComponent('globe');\n        }\n\n        if (!globeModel) {\n          throw new Error('globe \"' + retrieve.firstNotNull(seriesModel.get('globe3DIndex'), seriesModel.get('globe3DId'), 0) + '\" not found');\n        }\n\n        var coordSys = globeModel.coordinateSystem;\n        seriesModel.coordinateSystem = coordSys;\n      }\n    });\n    ecModel.eachComponent('globe', function (globeModel, idx) {\n      var globe = globeModel.coordinateSystem; // Update displacement data\n\n      var displacementTextureValue = globeModel.getDisplacementTexture();\n      var displacementScale = globeModel.getDisplacemenScale();\n\n      if (globeModel.isDisplacementChanged()) {\n        if (globeModel.hasDisplacement()) {\n          var immediateLoaded = true;\n          graphicGL.loadTexture(displacementTextureValue, api, function (texture) {\n            var img = texture.image;\n            var displacementData = getDisplacementData(img, displacementScale);\n            globeModel.setDisplacementData(displacementData.data, displacementData.width, displacementData.height);\n\n            if (!immediateLoaded) {\n              // Update layouts\n              api.dispatchAction({\n                type: 'globeUpdateDisplacment'\n              });\n            }\n          });\n          immediateLoaded = false;\n        } else {\n          globe.setDisplacementData(null, 0, 0);\n        }\n\n        globe.setDisplacementData(globeModel.displacementData, globeModel.displacementWidth, globeModel.displacementHeight);\n      }\n    });\n    return globeList;\n  }\n};\nexport default globeCreator;","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport GlobeModel from './GlobeModel';\nimport GlobeView from './GlobeView';\nimport globeCreator from '../../coord/globeCreator';\nexport function install(registers) {\n  registers.registerComponentModel(GlobeModel);\n  registers.registerComponentView(GlobeView);\n  registers.registerCoordinateSystem('globe', globeCreator);\n  registers.registerAction({\n    type: 'globeChangeCamera',\n    event: 'globecamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'globe',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerAction({\n    type: 'globeUpdateDisplacment',\n    event: 'globedisplacementupdated',\n    update: 'update'\n  }, function (payload, ecModel) {// Noop\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './globe/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentViewControlMixin from '../common/componentViewControlMixin';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar Grid3DModel = echarts.ComponentModel.extend({\n  type: 'grid3D',\n  dependencies: ['xAxis3D', 'yAxis3D', 'zAxis3D'],\n  defaultOption: {\n    show: true,\n    zlevel: -10,\n    // Layout used for viewport\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    environment: 'auto',\n    // Dimension of grid3D\n    boxWidth: 100,\n    boxHeight: 100,\n    boxDepth: 100,\n    // Common axis options.\n    axisPointer: {\n      show: true,\n      lineStyle: {\n        color: 'rgba(0, 0, 0, 0.8)',\n        width: 1\n      },\n      label: {\n        show: true,\n        // (dimValue: number, value: Array) => string\n        formatter: null,\n        // TODO, Consider boxWidth\n        margin: 8,\n        // backgroundColor: '#ffbd67',\n        // borderColor: '#000',\n        // borderWidth: 0,\n        textStyle: {\n          fontSize: 14,\n          color: '#fff',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          padding: 3,\n          borderRadius: 3\n        }\n      }\n    },\n    axisLine: {\n      show: true,\n      lineStyle: {\n        color: '#333',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    axisTick: {\n      show: true,\n      inside: false,\n      length: 3,\n      lineStyle: {\n        width: 1\n      }\n    },\n    axisLabel: {\n      show: true,\n      inside: false,\n      rotate: 0,\n      margin: 8,\n      textStyle: {\n        fontSize: 12\n      }\n    },\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: ['#ccc'],\n        width: 1,\n        type: 'solid'\n      }\n    },\n    splitArea: {\n      show: false,\n      areaStyle: {\n        color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n      }\n    },\n    // Light options\n    light: {\n      main: {\n        // Alpha angle for top-down rotation\n        // Positive to rotate to top.\n        alpha: 30,\n        // beta angle for left-right rotation\n        // Positive to rotate to right.\n        beta: 40\n      },\n      ambient: {\n        intensity: 0.4\n      }\n    },\n    viewControl: {\n      // Small damping for precise control.\n      // damping: 0.1,\n      // Alpha angle for top-down rotation\n      // Positive to rotate to top.\n      alpha: 20,\n      // beta angle for left-right rotation\n      // Positive to rotate to right.\n      beta: 40,\n      autoRotate: false,\n      // Distance to the surface of grid3D.\n      distance: 200,\n      // Min distance to the surface of grid3D\n      minDistance: 40,\n      // Max distance to the surface of grid3D\n      maxDistance: 400\n    }\n  }\n});\necharts.util.merge(Grid3DModel.prototype, componentViewControlMixin);\necharts.util.merge(Grid3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Grid3DModel.prototype, componentLightMixin);\nexport default Grid3DModel;","import * as echarts from 'echarts/lib/echarts';\nimport graphicGL from '../../util/graphicGL';\nimport retrieve from '../../util/retrieve';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport QuadsGeometry from '../../util/geometry/Quads';\nvar firstNotNull = retrieve.firstNotNull;\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\n\nfunction updateFacePlane(node, plane, otherAxis, dir) {\n  var coord = [0, 0, 0];\n  var distance = dir < 0 ? otherAxis.getExtentMin() : otherAxis.getExtentMax();\n  coord[dimIndicesMap[otherAxis.dim]] = distance;\n  node.position.setArray(coord);\n  node.rotation.identity(); // Negative distance because on the opposite of normal direction.\n\n  plane.distance = -Math.abs(distance);\n  plane.normal.set(0, 0, 0);\n\n  if (otherAxis.dim === 'x') {\n    node.rotation.rotateY(dir * Math.PI / 2);\n    plane.normal.x = -dir;\n  } else if (otherAxis.dim === 'z') {\n    node.rotation.rotateX(-dir * Math.PI / 2);\n    plane.normal.y = -dir;\n  } else {\n    if (dir > 0) {\n      node.rotation.rotateY(Math.PI);\n    }\n\n    plane.normal.z = -dir;\n  }\n}\n\nfunction Grid3DFace(faceInfo, linesMaterial, quadsMaterial) {\n  this.rootNode = new graphicGL.Node();\n  var linesMesh = new graphicGL.Mesh({\n    geometry: new Lines3DGeometry({\n      useNativeLine: false\n    }),\n    material: linesMaterial,\n    castShadow: false,\n    ignorePicking: true,\n    $ignorePicking: true,\n    renderOrder: 1\n  });\n  var quadsMesh = new graphicGL.Mesh({\n    geometry: new QuadsGeometry(),\n    material: quadsMaterial,\n    castShadow: false,\n    culling: false,\n    ignorePicking: true,\n    $ignorePicking: true,\n    renderOrder: 0\n  }); // Quads are behind lines.\n\n  this.rootNode.add(quadsMesh);\n  this.rootNode.add(linesMesh);\n  this.faceInfo = faceInfo;\n  this.plane = new graphicGL.Plane();\n  this.linesMesh = linesMesh;\n  this.quadsMesh = quadsMesh;\n}\n\nGrid3DFace.prototype.update = function (grid3DModel, ecModel, api) {\n  var cartesian = grid3DModel.coordinateSystem;\n  var axes = [cartesian.getAxis(this.faceInfo[0]), cartesian.getAxis(this.faceInfo[1])];\n  var lineGeometry = this.linesMesh.geometry;\n  var quadsGeometry = this.quadsMesh.geometry;\n  lineGeometry.convertToDynamicArray(true);\n  quadsGeometry.convertToDynamicArray(true);\n\n  this._updateSplitLines(lineGeometry, axes, grid3DModel, api);\n\n  this._udpateSplitAreas(quadsGeometry, axes, grid3DModel, api);\n\n  lineGeometry.convertToTypedArray();\n  quadsGeometry.convertToTypedArray();\n  var otherAxis = cartesian.getAxis(this.faceInfo[2]);\n  updateFacePlane(this.rootNode, this.plane, otherAxis, this.faceInfo[3]);\n};\n\nGrid3DFace.prototype._updateSplitLines = function (geometry, axes, grid3DModel, api) {\n  var dpr = api.getDevicePixelRatio();\n  axes.forEach(function (axis, idx) {\n    var axisModel = axis.model;\n    var otherExtent = axes[1 - idx].getExtent();\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine', grid3DModel.getModel('splitLine')); // Render splitLines\n\n    if (splitLineModel.get('show')) {\n      var lineStyleModel = splitLineModel.getModel('lineStyle');\n      var lineColors = lineStyleModel.get('color');\n      var opacity = firstNotNull(lineStyleModel.get('opacity'), 1.0);\n      var lineWidth = firstNotNull(lineStyleModel.get('width'), 1.0);\n      lineColors = echarts.util.isArray(lineColors) ? lineColors : [lineColors];\n      var ticksCoords = axis.getTicksCoords({\n        tickModel: splitLineModel\n      });\n      var count = 0;\n\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var tickCoord = ticksCoords[i].coord;\n        var lineColor = graphicGL.parseColor(lineColors[count % lineColors.length]);\n        lineColor[3] *= opacity;\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0]; // 0 - x, 1 - y\n\n        p0[idx] = p1[idx] = tickCoord;\n        p0[1 - idx] = otherExtent[0];\n        p1[1 - idx] = otherExtent[1];\n        geometry.addLine(p0, p1, lineColor, lineWidth * dpr);\n        count++;\n      }\n    }\n  });\n};\n\nGrid3DFace.prototype._udpateSplitAreas = function (geometry, axes, grid3DModel, api) {\n  axes.forEach(function (axis, idx) {\n    var axisModel = axis.model;\n    var otherExtent = axes[1 - idx].getExtent();\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea', grid3DModel.getModel('splitArea')); // Render splitAreas\n\n    if (splitAreaModel.get('show')) {\n      var areaStyleModel = splitAreaModel.getModel('areaStyle');\n      var colors = areaStyleModel.get('color');\n      var opacity = firstNotNull(areaStyleModel.get('opacity'), 1.0);\n      colors = echarts.util.isArray(colors) ? colors : [colors];\n      var ticksCoords = axis.getTicksCoords({\n        tickModel: splitAreaModel,\n        clamp: true\n      });\n      var count = 0;\n      var prevP0 = [0, 0, 0];\n      var prevP1 = [0, 0, 0]; // 0 - x, 1 - y\n\n      for (var i = 0; i < ticksCoords.length; i++) {\n        var tickCoord = ticksCoords[i].coord;\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0]; // 0 - x, 1 - y\n\n        p0[idx] = p1[idx] = tickCoord;\n        p0[1 - idx] = otherExtent[0];\n        p1[1 - idx] = otherExtent[1];\n\n        if (i === 0) {\n          prevP0 = p0;\n          prevP1 = p1;\n          continue;\n        }\n\n        var color = graphicGL.parseColor(colors[count % colors.length]);\n        color[3] *= opacity;\n        geometry.addQuad([prevP0, p0, p1, prevP1], color);\n        prevP0 = p0;\n        prevP1 = p1;\n        count++;\n      }\n    }\n  });\n};\n\nexport default Grid3DFace;","import * as echarts from 'echarts/lib/echarts';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nimport graphicGL from '../../util/graphicGL';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport retrieve from '../../util/retrieve';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nvar firstNotNull = retrieve.firstNotNull;\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\n\nfunction Grid3DAxis(dim, linesMaterial) {\n  var linesMesh = new graphicGL.Mesh({\n    geometry: new Lines3DGeometry({\n      useNativeLine: false\n    }),\n    material: linesMaterial,\n    castShadow: false,\n    ignorePicking: true,\n    renderOrder: 2\n  });\n  var axisLabelsMesh = new LabelsMesh();\n  axisLabelsMesh.material.depthMask = false;\n  var rootNode = new graphicGL.Node();\n  rootNode.add(linesMesh);\n  rootNode.add(axisLabelsMesh);\n  this.rootNode = rootNode;\n  this.dim = dim;\n  this.linesMesh = linesMesh;\n  this.labelsMesh = axisLabelsMesh;\n  this.axisLineCoords = null;\n  this.labelElements = [];\n}\n\nvar otherDim = {\n  x: 'y',\n  y: 'x',\n  z: 'y'\n};\n\nGrid3DAxis.prototype.update = function (grid3DModel, axisLabelSurface, api) {\n  var cartesian = grid3DModel.coordinateSystem;\n  var axis = cartesian.getAxis(this.dim);\n  var linesGeo = this.linesMesh.geometry;\n  var labelsGeo = this.labelsMesh.geometry;\n  linesGeo.convertToDynamicArray(true);\n  labelsGeo.convertToDynamicArray(true);\n  var axisModel = axis.model;\n  var extent = axis.getExtent();\n  var dpr = api.getDevicePixelRatio();\n  var axisLineModel = axisModel.getModel('axisLine', grid3DModel.getModel('axisLine'));\n  var axisTickModel = axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));\n  var axisLabelModel = axisModel.getModel('axisLabel', grid3DModel.getModel('axisLabel'));\n  var axisLineColor = axisLineModel.get('lineStyle.color'); // Render axisLine\n\n  if (axisLineModel.get('show')) {\n    var axisLineStyleModel = axisLineModel.getModel('lineStyle');\n    var p0 = [0, 0, 0];\n    var p1 = [0, 0, 0];\n    var idx = dimIndicesMap[axis.dim];\n    p0[idx] = extent[0];\n    p1[idx] = extent[1]; // Save some useful info.\n\n    this.axisLineCoords = [p0, p1];\n    var color = graphicGL.parseColor(axisLineColor);\n    var lineWidth = firstNotNull(axisLineStyleModel.get('width'), 1.0);\n    var opacity = firstNotNull(axisLineStyleModel.get('opacity'), 1.0);\n    color[3] *= opacity;\n    linesGeo.addLine(p0, p1, color, lineWidth * dpr);\n  } // Render axis ticksCoords\n\n\n  if (axisTickModel.get('show')) {\n    var lineStyleModel = axisTickModel.getModel('lineStyle');\n    var lineColor = graphicGL.parseColor(firstNotNull(lineStyleModel.get('color'), axisLineColor));\n    var lineWidth = firstNotNull(lineStyleModel.get('width'), 1.0);\n    lineColor[3] *= firstNotNull(lineStyleModel.get('opacity'), 1.0);\n    var ticksCoords = axis.getTicksCoords();\n    var tickLength = axisTickModel.get('length');\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = ticksCoords[i].coord;\n      var p0 = [0, 0, 0];\n      var p1 = [0, 0, 0];\n      var idx = dimIndicesMap[axis.dim];\n      var otherIdx = dimIndicesMap[otherDim[axis.dim]]; // 0 : x, 1 : y\n\n      p0[idx] = p1[idx] = tickCoord;\n      p1[otherIdx] = tickLength;\n      linesGeo.addLine(p0, p1, lineColor, lineWidth * dpr);\n    }\n  }\n\n  this.labelElements = [];\n  var dpr = api.getDevicePixelRatio();\n\n  if (axisLabelModel.get('show')) {\n    var ticksCoords = axis.getTicksCoords();\n    var categoryData = axisModel.get('data');\n    var labelMargin = axisLabelModel.get('margin');\n    var labels = axis.getViewLabels();\n\n    for (var i = 0; i < labels.length; i++) {\n      var tickValue = labels[i].tickValue;\n      var formattedLabel = labels[i].formattedLabel;\n      var rawLabel = labels[i].rawLabel;\n      var tickCoord = axis.dataToCoord(tickValue);\n      var p = [0, 0, 0];\n      var idx = dimIndicesMap[axis.dim];\n      var otherIdx = dimIndicesMap[otherDim[axis.dim]]; // 0 : x, 1 : y\n\n      p[idx] = p[idx] = tickCoord;\n      p[otherIdx] = labelMargin;\n      var itemTextStyleModel = axisLabelModel;\n\n      if (categoryData && categoryData[tickValue] && categoryData[tickValue].textStyle) {\n        itemTextStyleModel = new echarts.Model(categoryData[tickValue].textStyle, axisLabelModel, axisModel.ecModel);\n      }\n\n      var textColor = firstNotNull(itemTextStyleModel.get('color'), axisLineColor);\n      var textEl = new echarts.graphic.Text({\n        style: createTextStyle(itemTextStyleModel, {\n          text: formattedLabel,\n          fill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n          // index of axis.data. So tick should not be exposed to user\n          // in category axis.\n          // (2) Compatible with previous version, which always returns labelStr.\n          // But in interval scale labelStr is like '223,445', which maked\n          // user repalce ','. So we modify it to return original val but remain\n          // it as 'string' to avoid error in replacing.\n          axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, i) : textColor,\n          verticalAlign: 'top',\n          align: 'left'\n        })\n      });\n      var coords = axisLabelSurface.add(textEl);\n      var rect = textEl.getBoundingRect();\n      labelsGeo.addSprite(p, [rect.width * dpr, rect.height * dpr], coords);\n      this.labelElements.push(textEl);\n    }\n  }\n\n  if (axisModel.get('name')) {\n    var nameTextStyleModel = axisModel.getModel('nameTextStyle');\n    var p = [0, 0, 0];\n    var idx = dimIndicesMap[axis.dim];\n    var otherIdx = dimIndicesMap[otherDim[axis.dim]];\n    var labelColor = firstNotNull(nameTextStyleModel.get('color'), axisLineColor);\n    var strokeColor = nameTextStyleModel.get('borderColor');\n    var lineWidth = nameTextStyleModel.get('borderWidth'); // TODO start and end\n\n    p[idx] = p[idx] = (extent[0] + extent[1]) / 2;\n    p[otherIdx] = axisModel.get('nameGap');\n    var textEl = new echarts.graphic.Text({\n      style: createTextStyle(nameTextStyleModel, {\n        text: axisModel.get('name'),\n        fill: labelColor,\n        stroke: strokeColor,\n        lineWidth: lineWidth\n      })\n    });\n    var coords = axisLabelSurface.add(textEl);\n    var rect = textEl.getBoundingRect();\n    labelsGeo.addSprite(p, [rect.width * dpr, rect.height * dpr], coords);\n    textEl.__idx = this.labelElements.length;\n    this.nameLabelElement = textEl;\n  }\n\n  this.labelsMesh.material.set('textureAtlas', axisLabelSurface.getTexture());\n  this.labelsMesh.material.set('uvScale', axisLabelSurface.getCoordsScale());\n  linesGeo.convertToTypedArray();\n  labelsGeo.convertToTypedArray();\n};\n\nGrid3DAxis.prototype.setSpriteAlign = function (textAlign, textVerticalAlign, api) {\n  var dpr = api.getDevicePixelRatio();\n  var labelGeo = this.labelsMesh.geometry;\n\n  for (var i = 0; i < this.labelElements.length; i++) {\n    var labelEl = this.labelElements[i];\n    var rect = labelEl.getBoundingRect();\n    labelGeo.setSpriteAlign(i, [rect.width * dpr, rect.height * dpr], textAlign, textVerticalAlign);\n  } // name label\n\n\n  var nameLabelEl = this.nameLabelElement;\n\n  if (nameLabelEl) {\n    var rect = nameLabelEl.getBoundingRect();\n    labelGeo.setSpriteAlign(nameLabelEl.__idx, [rect.width * dpr, rect.height * dpr], textAlign, textVerticalAlign);\n    labelGeo.dirty();\n  }\n\n  this.textAlign = textAlign;\n  this.textVerticalAlign = textVerticalAlign;\n};\n\nexport default Grid3DAxis;","// TODO orthographic camera\nimport * as echarts from 'echarts/lib/echarts';\nimport { createTextStyle } from 'echarts/lib/label/labelStyle';\nimport graphicGL from '../../util/graphicGL';\nimport OrbitControl from '../../util/OrbitControl';\nimport Lines3DGeometry from '../../util/geometry/Lines3D';\nimport retrieve from '../../util/retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nimport ZRTextureAtlasSurface from '../../util/ZRTextureAtlasSurface';\nimport SceneHelper from '../common/SceneHelper';\nimport Grid3DFace from './Grid3DFace';\nimport Grid3DAxis from './Grid3DAxis';\nimport LabelsMesh from '../../util/mesh/LabelsMesh';\nimport lines3DGLSL from '../../util/shader/lines3D.glsl.js';\ngraphicGL.Shader.import(lines3DGLSL);\nvar dimIndicesMap = {\n  // Left to right\n  x: 0,\n  // Far to near\n  y: 2,\n  // Bottom to up\n  z: 1\n};\nexport default echarts.ComponentView.extend({\n  type: 'grid3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    var FACES = [// planeDim0, planeDim1, offsetDim, dir on dim3 axis(gl), plane.\n    ['y', 'z', 'x', -1, 'left'], ['y', 'z', 'x', 1, 'right'], ['x', 'y', 'z', -1, 'bottom'], ['x', 'y', 'z', 1, 'top'], ['x', 'z', 'y', -1, 'far'], ['x', 'z', 'y', 1, 'near']];\n    var DIMS = ['x', 'y', 'z'];\n    var quadsMaterial = new graphicGL.Material({\n      // transparent: true,\n      shader: graphicGL.createShader('ecgl.color'),\n      depthMask: false,\n      transparent: true\n    });\n    var linesMaterial = new graphicGL.Material({\n      // transparent: true,\n      shader: graphicGL.createShader('ecgl.meshLines3D'),\n      depthMask: false,\n      transparent: true\n    });\n    quadsMaterial.define('fragment', 'DOUBLE_SIDED');\n    quadsMaterial.define('both', 'VERTEX_COLOR');\n    this.groupGL = new graphicGL.Node();\n    this._control = new OrbitControl({\n      zr: api.getZr()\n    });\n\n    this._control.init(); // Save mesh and other infos for each face.\n\n\n    this._faces = FACES.map(function (faceInfo) {\n      var face = new Grid3DFace(faceInfo, linesMaterial, quadsMaterial);\n      this.groupGL.add(face.rootNode);\n      return face;\n    }, this); // Save mesh and other infos for each axis.\n\n    this._axes = DIMS.map(function (dim) {\n      var axis = new Grid3DAxis(dim, linesMaterial);\n      this.groupGL.add(axis.rootNode);\n      return axis;\n    }, this);\n    var dpr = api.getDevicePixelRatio(); // Texture surface for label.\n\n    this._axisLabelSurface = new ZRTextureAtlasSurface({\n      width: 256,\n      height: 256,\n      devicePixelRatio: dpr\n    });\n\n    this._axisLabelSurface.onupdate = function () {\n      api.getZr().refresh();\n    };\n\n    this._axisPointerLineMesh = new graphicGL.Mesh({\n      geometry: new Lines3DGeometry({\n        useNativeLine: false\n      }),\n      material: linesMaterial,\n      castShadow: false,\n      // PENDING\n      ignorePicking: true,\n      renderOrder: 3\n    });\n    this.groupGL.add(this._axisPointerLineMesh);\n    this._axisPointerLabelsSurface = new ZRTextureAtlasSurface({\n      width: 128,\n      height: 128,\n      devicePixelRatio: dpr\n    });\n    this._axisPointerLabelsMesh = new LabelsMesh({\n      ignorePicking: true,\n      renderOrder: 4,\n      castShadow: false\n    });\n\n    this._axisPointerLabelsMesh.material.set('textureAtlas', this._axisPointerLabelsSurface.getTexture());\n\n    this.groupGL.add(this._axisPointerLabelsMesh);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper();\n\n    this._sceneHelper.initLight(this._lightRoot);\n  },\n  render: function (grid3DModel, ecModel, api) {\n    this._model = grid3DModel;\n    this._api = api;\n    var cartesian = grid3DModel.coordinateSystem; // Always have light.\n\n    cartesian.viewGL.add(this._lightRoot);\n\n    if (grid3DModel.get('show')) {\n      cartesian.viewGL.add(this.groupGL);\n    } else {\n      cartesian.viewGL.remove(this.groupGL);\n    } // cartesian.viewGL.setCameraType(grid3DModel.get('viewControl.projection'));\n\n\n    var control = this._control;\n    control.setViewGL(cartesian.viewGL);\n    var viewControlModel = grid3DModel.getModel('viewControl');\n    control.setFromViewControlModel(viewControlModel, 0);\n\n    this._axisLabelSurface.clear();\n\n    control.off('update');\n\n    if (grid3DModel.get('show')) {\n      this._faces.forEach(function (face) {\n        face.update(grid3DModel, ecModel, api);\n      }, this);\n\n      this._axes.forEach(function (axis) {\n        axis.update(grid3DModel, this._axisLabelSurface, api);\n      }, this);\n    }\n\n    control.on('update', this._onCameraChange.bind(this, grid3DModel, api), this);\n\n    this._sceneHelper.setScene(cartesian.viewGL.scene);\n\n    this._sceneHelper.updateLight(grid3DModel); // Set post effect\n\n\n    cartesian.viewGL.setPostEffect(grid3DModel.getModel('postEffect'), api);\n    cartesian.viewGL.setTemporalSuperSampling(grid3DModel.getModel('temporalSuperSampling'));\n\n    this._initMouseHandler(grid3DModel);\n  },\n  afterRender: function (grid3DModel, ecModel, api, layerGL) {\n    // Create ambient cubemap after render because we need to know the renderer.\n    // TODO\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, grid3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, grid3DModel, api);\n  },\n\n  /**\n   * showAxisPointer will be triggered by action.\n   */\n  showAxisPointer: function (grid3dModel, ecModel, api, payload) {\n    this._doShowAxisPointer();\n\n    this._updateAxisPointer(payload.value);\n  },\n\n  /**\n   * hideAxisPointer will be triggered by action.\n   */\n  hideAxisPointer: function (grid3dModel, ecModel, api, payload) {\n    this._doHideAxisPointer();\n  },\n  _initMouseHandler: function (grid3DModel) {\n    var cartesian = grid3DModel.coordinateSystem;\n    var viewGL = cartesian.viewGL; // TODO xAxis3D.axisPointer.show ?\n\n    if (grid3DModel.get('show') && grid3DModel.get('axisPointer.show')) {\n      viewGL.on('mousemove', this._updateAxisPointerOnMousePosition, this);\n    } else {\n      viewGL.off('mousemove', this._updateAxisPointerOnMousePosition);\n    }\n  },\n\n  /**\n   * Try find and show axisPointer on the intersect point\n   * of mouse ray with grid plane.\n   */\n  _updateAxisPointerOnMousePosition: function (e) {\n    // Ignore if mouse is on the element.\n    if (e.target) {\n      return;\n    }\n\n    var grid3DModel = this._model;\n    var cartesian = grid3DModel.coordinateSystem;\n    var viewGL = cartesian.viewGL;\n    var ray = viewGL.castRay(e.offsetX, e.offsetY, new graphicGL.Ray());\n    var nearestIntersectPoint;\n\n    for (var i = 0; i < this._faces.length; i++) {\n      var face = this._faces[i];\n\n      if (face.rootNode.invisible) {\n        continue;\n      } // Plane is not face the camera. flip it\n\n\n      if (face.plane.normal.dot(viewGL.camera.worldTransform.z) < 0) {\n        face.plane.normal.negate();\n      }\n\n      var point = ray.intersectPlane(face.plane);\n\n      if (!point) {\n        continue;\n      }\n\n      var axis0 = cartesian.getAxis(face.faceInfo[0]);\n      var axis1 = cartesian.getAxis(face.faceInfo[1]);\n      var idx0 = dimIndicesMap[face.faceInfo[0]];\n      var idx1 = dimIndicesMap[face.faceInfo[1]];\n\n      if (axis0.contain(point.array[idx0]) && axis1.contain(point.array[idx1])) {\n        nearestIntersectPoint = point;\n      }\n    }\n\n    if (nearestIntersectPoint) {\n      var data = cartesian.pointToData(nearestIntersectPoint.array, [], true);\n\n      this._updateAxisPointer(data);\n\n      this._doShowAxisPointer();\n    } else {\n      this._doHideAxisPointer();\n    }\n  },\n  _onCameraChange: function (grid3DModel, api) {\n    if (grid3DModel.get('show')) {\n      this._updateFaceVisibility();\n\n      this._updateAxisLinePosition();\n    }\n\n    var control = this._control;\n    api.dispatchAction({\n      type: 'grid3DChangeCamera',\n      alpha: control.getAlpha(),\n      beta: control.getBeta(),\n      distance: control.getDistance(),\n      center: control.getCenter(),\n      from: this.uid,\n      grid3DId: grid3DModel.id\n    });\n  },\n\n  /**\n   * Update visibility of each face when camera view changed, front face will be invisible.\n   * @private\n   */\n  _updateFaceVisibility: function () {\n    var camera = this._control.getCamera();\n\n    var viewSpacePos = new graphicGL.Vector3();\n    camera.update();\n\n    for (var idx = 0; idx < this._faces.length / 2; idx++) {\n      var depths = [];\n\n      for (var k = 0; k < 2; k++) {\n        var face = this._faces[idx * 2 + k];\n        face.rootNode.getWorldPosition(viewSpacePos);\n        viewSpacePos.transformMat4(camera.viewMatrix);\n        depths[k] = viewSpacePos.z;\n      } // Set the front face invisible\n\n\n      var frontIndex = depths[0] > depths[1] ? 0 : 1;\n      var frontFace = this._faces[idx * 2 + frontIndex];\n      var backFace = this._faces[idx * 2 + 1 - frontIndex]; // Update rotation.\n\n      frontFace.rootNode.invisible = true;\n      backFace.rootNode.invisible = false;\n    }\n  },\n\n  /**\n   * Update axis line position when camera view changed.\n   * @private\n   */\n  _updateAxisLinePosition: function () {\n    // Put xAxis, yAxis on x, y visible plane.\n    // Put zAxis on the left.\n    // TODO\n    var cartesian = this._model.coordinateSystem;\n    var xAxis = cartesian.getAxis('x');\n    var yAxis = cartesian.getAxis('y');\n    var zAxis = cartesian.getAxis('z');\n    var top = zAxis.getExtentMax();\n    var bottom = zAxis.getExtentMin();\n    var left = xAxis.getExtentMin();\n    var right = xAxis.getExtentMax();\n    var near = yAxis.getExtentMax();\n    var far = yAxis.getExtentMin();\n    var xAxisNode = this._axes[0].rootNode;\n    var yAxisNode = this._axes[1].rootNode;\n    var zAxisNode = this._axes[2].rootNode;\n    var faces = this._faces; // Notice: in cartesian up axis is z, but in webgl up axis is y.\n\n    var xAxisZOffset = faces[4].rootNode.invisible ? far : near;\n    var xAxisYOffset = faces[2].rootNode.invisible ? top : bottom;\n    var yAxisXOffset = faces[0].rootNode.invisible ? left : right;\n    var yAxisYOffset = faces[2].rootNode.invisible ? top : bottom;\n    var zAxisXOffset = faces[0].rootNode.invisible ? right : left;\n    var zAxisZOffset = faces[4].rootNode.invisible ? far : near;\n    xAxisNode.rotation.identity();\n    yAxisNode.rotation.identity();\n    zAxisNode.rotation.identity();\n\n    if (faces[4].rootNode.invisible) {\n      this._axes[0].flipped = true;\n      xAxisNode.rotation.rotateX(Math.PI);\n    }\n\n    if (faces[0].rootNode.invisible) {\n      this._axes[1].flipped = true;\n      yAxisNode.rotation.rotateZ(Math.PI);\n    }\n\n    if (faces[4].rootNode.invisible) {\n      this._axes[2].flipped = true;\n      zAxisNode.rotation.rotateY(Math.PI);\n    }\n\n    xAxisNode.position.set(0, xAxisYOffset, xAxisZOffset);\n    yAxisNode.position.set(yAxisXOffset, yAxisYOffset, 0); // Actually z\n\n    zAxisNode.position.set(zAxisXOffset, 0, zAxisZOffset); // Actually y\n\n    xAxisNode.update();\n    yAxisNode.update();\n    zAxisNode.update();\n\n    this._updateAxisLabelAlign();\n  },\n\n  /**\n   * Update label align on axis when axisLine position changed.\n   * @private\n   */\n  _updateAxisLabelAlign: function () {\n    // var cartesian = this._model.coordinateSystem;\n    var camera = this._control.getCamera();\n\n    var coords = [new graphicGL.Vector4(), new graphicGL.Vector4()];\n    var center = new graphicGL.Vector4();\n    this.groupGL.getWorldPosition(center);\n    center.w = 1.0;\n    center.transformMat4(camera.viewMatrix).transformMat4(camera.projectionMatrix);\n    center.x /= center.w;\n    center.y /= center.w;\n\n    this._axes.forEach(function (axisInfo) {\n      var lineCoords = axisInfo.axisLineCoords;\n      var labelGeo = axisInfo.labelsMesh.geometry;\n\n      for (var i = 0; i < coords.length; i++) {\n        coords[i].setArray(lineCoords[i]);\n        coords[i].w = 1.0;\n        coords[i].transformMat4(axisInfo.rootNode.worldTransform).transformMat4(camera.viewMatrix).transformMat4(camera.projectionMatrix);\n        coords[i].x /= coords[i].w;\n        coords[i].y /= coords[i].w;\n      }\n\n      var dx = coords[1].x - coords[0].x;\n      var dy = coords[1].y - coords[0].y;\n      var cx = (coords[1].x + coords[0].x) / 2;\n      var cy = (coords[1].y + coords[0].y) / 2;\n      var textAlign;\n      var verticalAlign;\n\n      if (Math.abs(dy / dx) < 0.5) {\n        textAlign = 'center';\n        verticalAlign = cy > center.y ? 'bottom' : 'top';\n      } else {\n        verticalAlign = 'middle';\n        textAlign = cx > center.x ? 'left' : 'right';\n      } // axis labels\n\n\n      axisInfo.setSpriteAlign(textAlign, verticalAlign, this._api);\n    }, this);\n  },\n  _doShowAxisPointer: function () {\n    if (!this._axisPointerLineMesh.invisible) {\n      return;\n    }\n\n    this._axisPointerLineMesh.invisible = false;\n    this._axisPointerLabelsMesh.invisible = false;\n\n    this._api.getZr().refresh();\n  },\n  _doHideAxisPointer: function () {\n    if (this._axisPointerLineMesh.invisible) {\n      return;\n    }\n\n    this._axisPointerLineMesh.invisible = true;\n    this._axisPointerLabelsMesh.invisible = true;\n\n    this._api.getZr().refresh();\n  },\n\n  /**\n   * @private updateAxisPointer.\n   */\n  _updateAxisPointer: function (data) {\n    var cartesian = this._model.coordinateSystem;\n    var point = cartesian.dataToPoint(data);\n    var axisPointerLineMesh = this._axisPointerLineMesh;\n    var linesGeo = axisPointerLineMesh.geometry;\n\n    var axisPointerParentModel = this._model.getModel('axisPointer');\n\n    var dpr = this._api.getDevicePixelRatio();\n\n    linesGeo.convertToDynamicArray(true);\n\n    function ifShowAxisPointer(axis) {\n      return retrieve.firstNotNull(axis.model.get('axisPointer.show'), axisPointerParentModel.get('show'));\n    }\n\n    function getAxisColorAndLineWidth(axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', axisPointerParentModel);\n      var lineStyleModel = axisPointerModel.getModel('lineStyle');\n      var color = graphicGL.parseColor(lineStyleModel.get('color'));\n      var lineWidth = firstNotNull(lineStyleModel.get('width'), 1);\n      var opacity = firstNotNull(lineStyleModel.get('opacity'), 1);\n      color[3] *= opacity;\n      return {\n        color: color,\n        lineWidth: lineWidth\n      };\n    }\n\n    for (var k = 0; k < this._faces.length; k++) {\n      var face = this._faces[k];\n\n      if (face.rootNode.invisible) {\n        continue;\n      }\n\n      var faceInfo = face.faceInfo;\n      var otherCoord = faceInfo[3] < 0 ? cartesian.getAxis(faceInfo[2]).getExtentMin() : cartesian.getAxis(faceInfo[2]).getExtentMax();\n      var otherDimIdx = dimIndicesMap[faceInfo[2]]; // Line on face.\n\n      for (var i = 0; i < 2; i++) {\n        var dim = faceInfo[i];\n        var faceOtherDim = faceInfo[1 - i];\n        var axis = cartesian.getAxis(dim);\n        var faceOtherAxis = cartesian.getAxis(faceOtherDim);\n\n        if (!ifShowAxisPointer(axis)) {\n          continue;\n        }\n\n        var p0 = [0, 0, 0];\n        var p1 = [0, 0, 0];\n        var dimIdx = dimIndicesMap[dim];\n        var faceOtherDimIdx = dimIndicesMap[faceOtherDim];\n        p0[dimIdx] = p1[dimIdx] = point[dimIdx];\n        p0[otherDimIdx] = p1[otherDimIdx] = otherCoord;\n        p0[faceOtherDimIdx] = faceOtherAxis.getExtentMin();\n        p1[faceOtherDimIdx] = faceOtherAxis.getExtentMax();\n        var colorAndLineWidth = getAxisColorAndLineWidth(axis);\n        linesGeo.addLine(p0, p1, colorAndLineWidth.color, colorAndLineWidth.lineWidth * dpr);\n      } // Project line.\n\n\n      if (ifShowAxisPointer(cartesian.getAxis(faceInfo[2]))) {\n        var p0 = point.slice();\n        var p1 = point.slice();\n        p1[otherDimIdx] = otherCoord;\n        var colorAndLineWidth = getAxisColorAndLineWidth(cartesian.getAxis(faceInfo[2]));\n        linesGeo.addLine(p0, p1, colorAndLineWidth.color, colorAndLineWidth.lineWidth * dpr);\n      }\n    }\n\n    linesGeo.convertToTypedArray();\n\n    this._updateAxisPointerLabelsMesh(data);\n\n    this._api.getZr().refresh();\n  },\n  _updateAxisPointerLabelsMesh: function (data) {\n    var grid3dModel = this._model;\n    var axisPointerLabelsMesh = this._axisPointerLabelsMesh;\n    var axisPointerLabelsSurface = this._axisPointerLabelsSurface;\n    var cartesian = grid3dModel.coordinateSystem;\n    var axisPointerParentModel = grid3dModel.getModel('axisPointer');\n    axisPointerLabelsMesh.geometry.convertToDynamicArray(true);\n    axisPointerLabelsSurface.clear();\n    var otherDim = {\n      x: 'y',\n      y: 'x',\n      z: 'y'\n    };\n\n    this._axes.forEach(function (axisInfo, idx) {\n      var axis = cartesian.getAxis(axisInfo.dim);\n      var axisModel = axis.model;\n      var axisPointerModel = axisModel.getModel('axisPointer', axisPointerParentModel);\n      var labelModel = axisPointerModel.getModel('label');\n      var lineColor = axisPointerModel.get('lineStyle.color');\n\n      if (!labelModel.get('show') || !axisPointerModel.get('show')) {\n        return;\n      }\n\n      var val = data[idx];\n      var formatter = labelModel.get('formatter');\n      var text = axis.scale.getLabel({\n        value: val\n      });\n\n      if (formatter != null) {\n        text = formatter(text, data);\n      } else {\n        if (axis.scale.type === 'interval' || axis.scale.type === 'log') {\n          var precision = echarts.number.getPrecisionSafe(axis.scale.getTicks()[0]);\n          text = val.toFixed(precision + 2);\n        }\n      }\n\n      var labelColor = labelModel.get('color');\n      var textEl = new echarts.graphic.Text({\n        style: createTextStyle(labelModel, {\n          text: text,\n          fill: labelColor || lineColor,\n          align: 'left',\n          verticalAlign: 'top'\n        })\n      });\n      var coords = axisPointerLabelsSurface.add(textEl);\n      var rect = textEl.getBoundingRect();\n\n      var dpr = this._api.getDevicePixelRatio();\n\n      var pos = axisInfo.rootNode.position.toArray();\n      var otherIdx = dimIndicesMap[otherDim[axisInfo.dim]];\n      pos[otherIdx] += (axisInfo.flipped ? -1 : 1) * labelModel.get('margin');\n      pos[dimIndicesMap[axisInfo.dim]] = axis.dataToCoord(data[idx]);\n      axisPointerLabelsMesh.geometry.addSprite(pos, [rect.width * dpr, rect.height * dpr], coords, axisInfo.textAlign, axisInfo.textVerticalAlign);\n    }, this);\n\n    axisPointerLabelsSurface.getZr().refreshImmediately();\n    axisPointerLabelsMesh.material.set('uvScale', axisPointerLabelsSurface.getCoordsScale());\n    axisPointerLabelsMesh.geometry.convertToTypedArray();\n  },\n  dispose: function () {\n    this.groupGL.removeAll();\n\n    this._control.dispose();\n\n    this._axisLabelSurface.dispose();\n\n    this._axisPointerLabelsSurface.dispose();\n  }\n});","import * as echarts from 'echarts/lib/echarts';\nimport Cartesian from 'echarts/lib/coord/cartesian/Cartesian';\n\nfunction Cartesian3D(name) {\n  Cartesian.call(this, name);\n  this.type = 'cartesian3D';\n  this.dimensions = ['x', 'y', 'z'];\n  this.size = [0, 0, 0];\n}\n\nCartesian3D.prototype = {\n  constructor: Cartesian3D,\n  model: null,\n  containPoint: function (point) {\n    return this.getAxis('x').contain(point[0]) && this.getAxis('y').contain(point[2]) && this.getAxis('z').contain(point[1]);\n  },\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]) && this.getAxis('z').containData(data[2]);\n  },\n  dataToPoint: function (data, out, clamp) {\n    out = out || [];\n    out[0] = this.getAxis('x').dataToCoord(data[0], clamp);\n    out[2] = this.getAxis('y').dataToCoord(data[1], clamp);\n    out[1] = this.getAxis('z').dataToCoord(data[2], clamp);\n    return out;\n  },\n  pointToData: function (point, out, clamp) {\n    out = out || [];\n    out[0] = this.getAxis('x').coordToData(point[0], clamp);\n    out[1] = this.getAxis('y').coordToData(point[2], clamp);\n    out[2] = this.getAxis('z').coordToData(point[1], clamp);\n    return out;\n  }\n};\necharts.util.inherits(Cartesian3D, Cartesian);\nexport default Cartesian3D;","import * as echarts from 'echarts/lib/echarts';\n\nfunction Axis3D(dim, scale, extent) {\n  echarts.Axis.call(this, dim, scale, extent);\n}\n\nAxis3D.prototype = {\n  constructor: Axis3D,\n  getExtentMin: function () {\n    var extent = this._extent;\n    return Math.min(extent[0], extent[1]);\n  },\n  getExtentMax: function () {\n    var extent = this._extent;\n    return Math.max(extent[0], extent[1]);\n  },\n  calculateCategoryInterval: function () {\n    // TODO consider label length\n    return Math.floor(this.scale.count() / 8);\n  }\n};\necharts.util.inherits(Axis3D, echarts.Axis);\nexport default Axis3D;","import Cartesian3D from './grid3D/Cartesian3D';\nimport Axis3D from './grid3D/Axis3D';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\n\nfunction resizeCartesian3D(grid3DModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = grid3DModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  var boxWidth = grid3DModel.get('boxWidth');\n  var boxHeight = grid3DModel.get('boxHeight');\n  var boxDepth = grid3DModel.get('boxDepth');\n\n  if (process.env.NODE_ENV !== 'production') {\n    ['x', 'y', 'z'].forEach(function (dim) {\n      if (!this.getAxis(dim)) {\n        throw new Error('Grid' + grid3DModel.id + ' don\\'t have ' + dim + 'Axis');\n      }\n    }, this);\n  }\n\n  this.getAxis('x').setExtent(-boxWidth / 2, boxWidth / 2); // From near to far\n\n  this.getAxis('y').setExtent(boxDepth / 2, -boxDepth / 2);\n  this.getAxis('z').setExtent(-boxHeight / 2, boxHeight / 2);\n  this.size = [boxWidth, boxHeight, boxDepth];\n}\n\nfunction updateCartesian3D(ecModel, api) {\n  var dataExtents = {};\n\n  function unionDataExtents(dim, extent) {\n    dataExtents[dim] = dataExtents[dim] || [Infinity, -Infinity];\n    dataExtents[dim][0] = Math.min(extent[0], dataExtents[dim][0]);\n    dataExtents[dim][1] = Math.max(extent[1], dataExtents[dim][1]);\n  } // Get data extents for scale.\n\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    ['x', 'y', 'z'].forEach(function (coordDim) {\n      data.mapDimensionsAll(coordDim, true).forEach(function (dataDim) {\n        unionDataExtents(coordDim, data.getDataExtent(dataDim, true));\n      });\n    });\n  }, this);\n  ['xAxis3D', 'yAxis3D', 'zAxis3D'].forEach(function (axisType) {\n    ecModel.eachComponent(axisType, function (axisModel) {\n      var dim = axisType.charAt(0);\n      var grid3DModel = axisModel.getReferringComponents('grid3D').models[0];\n      var cartesian3D = grid3DModel.coordinateSystem;\n\n      if (cartesian3D !== this) {\n        return;\n      }\n\n      var axis = cartesian3D.getAxis(dim);\n\n      if (axis) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Can\\'t have two %s in one grid3D', axisType);\n        }\n\n        return;\n      }\n\n      var scale = echarts.helper.createScale(dataExtents[dim] || [Infinity, -Infinity], axisModel);\n      axis = new Axis3D(dim, scale);\n      axis.type = axisModel.get('type');\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axisModel.axis = axis;\n      axis.model = axisModel; // override `echarts/coord/Axis#getLabelModel`\n\n      axis.getLabelModel = function () {\n        return axisModel.getModel('axisLabel', grid3DModel.getModel('axisLabel'));\n      }; // override `echarts/coord/Axis#getTickModel`\n\n\n      axis.getTickModel = function () {\n        return axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));\n      };\n\n      cartesian3D.addAxis(axis);\n    }, this);\n  }, this);\n  this.resize(this.model, api);\n}\n\nvar grid3DCreator = {\n  dimensions: Cartesian3D.prototype.dimensions,\n  create: function (ecModel, api) {\n    var cartesian3DList = [];\n    ecModel.eachComponent('grid3D', function (grid3DModel) {\n      // FIXME\n      grid3DModel.__viewGL = grid3DModel.__viewGL || new ViewGL();\n      var cartesian3D = new Cartesian3D();\n      cartesian3D.model = grid3DModel;\n      cartesian3D.viewGL = grid3DModel.__viewGL;\n      grid3DModel.coordinateSystem = cartesian3D;\n      cartesian3DList.push(cartesian3D); // Inject resize and update\n\n      cartesian3D.resize = resizeCartesian3D;\n      cartesian3D.update = updateCartesian3D;\n    });\n    var axesTypes = ['xAxis3D', 'yAxis3D', 'zAxis3D'];\n\n    function findAxesModels(seriesModel, ecModel) {\n      return axesTypes.map(function (axisType) {\n        var axisModel = seriesModel.getReferringComponents(axisType).models[0];\n\n        if (axisModel == null) {\n          axisModel = ecModel.getComponent(axisType);\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!axisModel) {\n            throw new Error(axisType + ' \"' + retrieve.firstNotNull(seriesModel.get(axisType + 'Index'), seriesModel.get(axisType + 'Id'), 0) + '\" not found');\n          }\n        }\n\n        return axisModel;\n      });\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') !== 'cartesian3D') {\n        return;\n      }\n\n      var firstGridModel = seriesModel.getReferringComponents('grid3D').models[0];\n\n      if (firstGridModel == null) {\n        var axesModels = findAxesModels(seriesModel, ecModel);\n        var firstGridModel = axesModels[0].getCoordSysModel();\n        axesModels.forEach(function (axisModel) {\n          var grid3DModel = axisModel.getCoordSysModel();\n\n          if (process.env.NODE_ENV !== 'production') {\n            if (!grid3DModel) {\n              throw new Error('grid3D \"' + retrieve.firstNotNull(axisModel.get('gridIndex'), axisModel.get('gridId'), 0) + '\" not found');\n            }\n\n            if (grid3DModel !== firstGridModel) {\n              throw new Error('xAxis3D, yAxis3D, zAxis3D must use the same grid');\n            }\n          }\n        });\n      }\n\n      var coordSys = firstGridModel.coordinateSystem;\n      seriesModel.coordinateSystem = coordSys;\n    });\n    return cartesian3DList;\n  }\n};\nexport default grid3DCreator;","import * as echarts from 'echarts/lib/echarts';\nvar Axis3DModel = echarts.ComponentModel.extend({\n  type: 'cartesian3DAxis',\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid3D',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\necharts.helper.mixinAxisModelCommonMethods(Axis3DModel);\nexport default Axis3DModel;","import * as echarts from 'echarts/lib/echarts';\nvar defaultOption = {\n  show: true,\n  grid3DIndex: 0,\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字\n  name: '',\n  // 坐标轴名字位置\n  nameLocation: 'middle',\n  nameTextStyle: {\n    fontSize: 16\n  },\n  // 文字与轴线距离\n  nameGap: 20,\n  axisPointer: {},\n  axisLine: {},\n  // 坐标轴小标记\n  axisTick: {},\n  axisLabel: {},\n  // 分隔区域\n  splitArea: {}\n};\nvar categoryAxis = echarts.util.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    // Default with axisTick\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  },\n  axisPointer: {\n    label: {\n      show: false\n    }\n  }\n}, defaultOption);\nvar valueAxis = echarts.util.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5,\n  // Minimum interval\n  // minInterval: null\n  axisPointer: {\n    label: {}\n  }\n}, defaultOption); // FIXME\n\nvar timeAxis = echarts.util.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, valueAxis);\nvar logAxis = echarts.util.defaults({\n  logBase: 10\n}, valueAxis);\nlogAxis.scale = true;\nexport default {\n  categoryAxis3D: categoryAxis,\n  valueAxis3D: valueAxis,\n  timeAxis3D: timeAxis,\n  logAxis3D: logAxis\n};","import * as echarts from 'echarts/lib/echarts';\nimport axisDefault from './axis3DDefault';\nimport OrdinalMeta from 'echarts/lib/data/OrdinalMeta';\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {} registers\n * @param {string} dim 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nexport default function (registers, dim, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  AXIS_TYPES.forEach(function (axisType) {\n    var AxisModel = BaseAxisModelClass.extend({\n      type: dim + 'Axis3D.' + axisType,\n\n      /**\n       * @type readOnly\n       */\n      __ordinalMeta: null,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var themeModel = ecModel.getTheme();\n        echarts.util.merge(option, themeModel.get(axisType + 'Axis3D'));\n        echarts.util.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(dim, option);\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n      getCategories: function () {\n        if (this.option.type === 'category') {\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: echarts.util.merge(echarts.util.clone(axisDefault[axisType + 'Axis3D']), extraDefaultOption || {}, true)\n    });\n    registers.registerComponentModel(AxisModel);\n  }); // TODO\n\n  registers.registerSubTypeDefaulter(dim + 'Axis3D', echarts.util.curry(axisTypeDefaulter, dim));\n}\n;","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Grid3DModel from './Grid3DModel';\nimport Grid3DView from './Grid3DView';\nimport grid3DCreator from '../../coord/grid3DCreator';\nimport Axis3DModel from './Axis3DModel';\nimport createAxis3DModel from './createAxis3DModel';\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nexport function install(registers) {\n  registers.registerComponentModel(Grid3DModel);\n  registers.registerComponentView(Grid3DView);\n  registers.registerCoordinateSystem('grid3D', grid3DCreator);\n  ['x', 'y', 'z'].forEach(function (dim) {\n    createAxis3DModel(registers, dim, Axis3DModel, getAxisType, {\n      name: dim.toUpperCase()\n    });\n    const AxisView = registers.ComponentView.extend({\n      type: dim + 'Axis3D'\n    });\n    registers.registerComponentView(AxisView);\n  });\n  registers.registerAction({\n    type: 'grid3DChangeCamera',\n    event: 'grid3dcamerachanged',\n    update: 'series:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'grid3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setView(payload);\n    });\n  });\n  registers.registerAction({\n    type: 'grid3DShowAxisPointer',\n    event: 'grid3dshowaxispointer',\n    update: 'grid3D:showAxisPointer'\n  }, function (payload, ecModel) {});\n  registers.registerAction({\n    type: 'grid3DHideAxisPointer',\n    event: 'grid3dhideaxispointer',\n    update: 'grid3D:hideAxisPointer'\n  }, function (payload, ecModel) {});\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './grid3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPBOX_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Mapbox3DModel = echarts.ComponentModel.extend({\n  type: 'mapbox3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    style: 'mapbox://styles/mapbox/light-v9',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMapboxCameraOption: function () {\n    var self = this;\n    return MAPBOX_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMapboxCameraOption: function (option) {\n    if (option != null) {\n      MAPBOX_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get mapbox instance\n   */\n  getMapbox: function () {\n    return this._mapbox;\n  },\n  setMapbox: function (mapbox) {\n    this._mapbox = mapbox;\n  }\n});\necharts.util.merge(Mapbox3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Mapbox3DModel.prototype, componentLightMixin);\nexport default Mapbox3DModel;","/**\n * @constructor\n * @alias module:echarts-gl/component/mapbox3D/Mapbox3DLayer\n * @param {string} id Layer ID\n * @param {module:zrender/ZRender} zr\n */\nfunction Mapbox3DLayer(id, zr) {\n  this.id = id;\n  this.zr = zr;\n  this.dom = document.createElement('div');\n  this.dom.style.cssText = 'position:absolute;left:0;right:0;top:0;bottom:0;'; // FIXME If in module environment.\n\n  if (!mapboxgl) {\n    throw new Error('Mapbox GL library must be included. See https://www.mapbox.com/mapbox-gl-js/api/');\n  }\n\n  this._mapbox = new mapboxgl.Map({\n    container: this.dom\n  }); // Proxy events\n\n  this._initEvents();\n}\n\nMapbox3DLayer.prototype.setUnpainted = function () {};\n\nMapbox3DLayer.prototype.resize = function () {\n  this._mapbox.resize();\n};\n\nMapbox3DLayer.prototype.getMapbox = function () {\n  return this._mapbox;\n};\n\nMapbox3DLayer.prototype.clear = function () {};\n\nMapbox3DLayer.prototype.refresh = function () {\n  this._mapbox.resize();\n};\n\nvar EVENTS = ['mousedown', 'mouseup', 'click', 'dblclick', 'mousemove', 'mousewheel', 'wheel', 'touchstart', 'touchend', 'touchmove', 'touchcancel'];\n\nMapbox3DLayer.prototype._initEvents = function () {\n  // Event is bound on canvas container.\n  var mapboxRoot = this._mapbox.getCanvasContainer();\n\n  this._handlers = this._handlers || {\n    contextmenu: function (e) {\n      e.preventDefault();\n      return false;\n    }\n  };\n  EVENTS.forEach(function (eName) {\n    this._handlers[eName] = function (e) {\n      var obj = {};\n\n      for (var name in e) {\n        obj[name] = e[name];\n      }\n\n      obj.bubbles = false;\n      var newE = new e.constructor(e.type, obj);\n      mapboxRoot.dispatchEvent(newE);\n    };\n\n    this.zr.dom.addEventListener(eName, this._handlers[eName]);\n  }, this); // PENDING\n\n  this.zr.dom.addEventListener('contextmenu', this._handlers.contextmenu);\n};\n\nMapbox3DLayer.prototype.dispose = function () {\n  EVENTS.forEach(function (eName) {\n    this.zr.dom.removeEventListener(eName, this._handlers[eName]);\n  }, this);\n};\n\nexport default Mapbox3DLayer;","import * as echarts from 'echarts/lib/echarts';\nimport Mapbox3DLayer from './Mapbox3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nvar TILE_SIZE = 512;\nexport default echarts.ComponentView.extend({\n  type: 'mapbox3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Mapbox3DLayer('mapbox3D', zr);\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    var mapbox = this._zrLayer.getMapbox();\n\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, mapbox); // PENDING\n\n\n    ['zoom', 'rotate', 'drag', 'pitch', 'rotate', 'move'].forEach(function (eName) {\n      mapbox.on(eName, dispatchInteractAction);\n    });\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  render: function (mapbox3DModel, ecModel, api) {\n    var mapbox = this._zrLayer.getMapbox();\n\n    var styleDesc = mapbox3DModel.get('style');\n    var styleStr = JSON.stringify(styleDesc);\n\n    if (styleStr !== this._oldStyleStr) {\n      if (styleDesc) {\n        mapbox.setStyle(styleDesc);\n      }\n    }\n\n    this._oldStyleStr = styleStr;\n    mapbox.setCenter(mapbox3DModel.get('center'));\n    mapbox.setZoom(mapbox3DModel.get('zoom'));\n    mapbox.setPitch(mapbox3DModel.get('pitch'));\n    mapbox.setBearing(mapbox3DModel.get('bearing'));\n    mapbox3DModel.setMapbox(mapbox);\n    var coordSys = mapbox3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n\n    this._updateGroundMesh(); // Update lights\n\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n\n    this._sceneHelper.updateLight(mapbox3DModel); // Update post effects\n\n\n    coordSys.viewGL.setPostEffect(mapbox3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(mapbox3DModel.getModel('temporalSuperSampling'));\n    this._mapbox3DModel = mapbox3DModel;\n  },\n  afterRender: function (mapbox3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, mapbox3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, mapbox3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n\n    mapbox3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (mapbox3DModel, ecModel, api, payload) {\n    mapbox3DModel.coordinateSystem.setCameraOption(payload);\n\n    this._updateGroundMesh();\n\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, mapbox, mapbox3DModel) {\n    api.dispatchAction({\n      type: 'mapbox3DChangeCamera',\n      pitch: mapbox.getPitch(),\n      zoom: mapbox.getZoom(),\n      center: mapbox.getCenter().toArray(),\n      bearing: mapbox.getBearing(),\n      mapbox3DId: this._mapbox3DModel && this._mapbox3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._mapbox3DModel) {\n      var coordSys = this._mapbox3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n\n    api.getZr().painter.delLayer(-1000);\n  }\n});","import MapService3D from '../mapServiceCommon/MapService3D';\n\nfunction Mapbox3D() {\n  MapService3D.apply(this, arguments);\n}\n\nMapbox3D.prototype = new MapService3D();\nMapbox3D.prototype.constructor = Mapbox3D;\nMapbox3D.prototype.type = 'mapbox3D';\nexport default Mapbox3D;","import Mapbox3D from './mapbox3D/Mapbox3D';\nimport createMapService3DCreator from './mapServiceCommon/createMapService3DCreator';\nvar mapbox3DCreator = createMapService3DCreator('mapbox3D', Mapbox3D, function (mapbox3DList) {\n  mapbox3DList.forEach(function (mapbox3D) {\n    mapbox3D.setCameraOption(mapbox3D.model.getMapboxCameraOption());\n  });\n});\nexport default mapbox3DCreator;","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Mapbox3DModel from './Mapbox3DModel';\nimport Mapbox3DView from './Mapbox3DView';\nimport mapbox3DCreator from '../../coord/mapbox3DCreator';\nexport function install(registers) {\n  registers.registerComponentModel(Mapbox3DModel);\n  registers.registerComponentView(Mapbox3DView);\n  registers.registerCoordinateSystem('mapbox3D', mapbox3DCreator);\n  registers.registerAction({\n    type: 'mapbox3DChangeCamera',\n    event: 'mapbox3dcamerachanged',\n    update: 'mapbox3D:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'mapbox3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setMapboxCameraOption(payload);\n    });\n  });\n}","import { use } from 'echarts/lib/echarts';\nimport { install } from './mapbox3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport componentPostEffectMixin from '../common/componentPostEffectMixin';\nimport componentLightMixin from '../common/componentLightMixin';\nvar MAPTALKS_CAMERA_OPTION = ['zoom', 'center', 'pitch', 'bearing'];\nvar Maptalks3DModel = echarts.ComponentModel.extend({\n  type: 'maptalks3D',\n  layoutMode: 'box',\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: -10,\n    urlTemplate: 'http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>',\n    center: [0, 0],\n    zoom: 0,\n    pitch: 0,\n    bearing: 0,\n    light: {\n      main: {\n        alpha: 20,\n        beta: 30\n      }\n    },\n    altitudeScale: 1,\n    // Default depend on altitudeScale\n    boxHeight: 'auto'\n  },\n  getMaptalksCameraOption: function () {\n    var self = this;\n    return MAPTALKS_CAMERA_OPTION.reduce(function (obj, key) {\n      obj[key] = self.get(key);\n      return obj;\n    }, {});\n  },\n  setMaptalksCameraOption: function (option) {\n    if (option != null) {\n      MAPTALKS_CAMERA_OPTION.forEach(function (key) {\n        if (option[key] != null) {\n          this.option[key] = option[key];\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Get maptalks instance\n   */\n  getMaptalks: function () {\n    return this._maptalks;\n  },\n  setMaptalks: function (maptalks) {\n    this._maptalks = maptalks;\n  }\n});\necharts.util.merge(Maptalks3DModel.prototype, componentPostEffectMixin);\necharts.util.merge(Maptalks3DModel.prototype, componentLightMixin);\nexport default Maptalks3DModel;","/**\n * @constructor\n * @alias module:echarts-gl/component/maptalks/Maptalks3DLayer\n * @param {string} id Layer ID\n * @param {module:zrender/ZRender} zr\n */\nfunction Maptalks3DLayer(id, zr, defaultCenter, defaultZoom) {\n  this.id = id;\n  this.zr = zr;\n  this.dom = document.createElement('div');\n  this.dom.style.cssText = 'position:absolute;left:0;right:0;top:0;bottom:0;'; // FIXME If in module environment.\n\n  if (!maptalks) {\n    throw new Error('Maptalks library must be included. See https://maptalks.org');\n  }\n\n  this._maptalks = new maptalks.Map(this.dom, {\n    center: defaultCenter,\n    zoom: defaultZoom,\n    doubleClickZoom: false,\n    fog: false // fogColor: [0, 0, 0]\n\n  }); // Proxy events\n\n  this._initEvents();\n}\n\nMaptalks3DLayer.prototype.setUnpainted = function () {};\n\nMaptalks3DLayer.prototype.resize = function () {\n  this._maptalks.checkSize();\n};\n\nMaptalks3DLayer.prototype.getMaptalks = function () {\n  return this._maptalks;\n};\n\nMaptalks3DLayer.prototype.clear = function () {};\n\nMaptalks3DLayer.prototype.refresh = function () {\n  this._maptalks.checkSize();\n};\n\nvar EVENTS = ['mousedown', 'mouseup', 'click', 'dblclick', 'mousemove', 'mousewheel', 'DOMMouseScroll', 'touchstart', 'touchend', 'touchmove', 'touchcancel'];\n\nMaptalks3DLayer.prototype._initEvents = function () {\n  // Event is bound on canvas container.\n  var maptalksRoot = this.dom;\n  this._handlers = this._handlers || {\n    contextmenu: function (e) {\n      e.preventDefault();\n      return false;\n    }\n  };\n  EVENTS.forEach(function (eName) {\n    this._handlers[eName] = function (e) {\n      var obj = {};\n\n      for (var name in e) {\n        obj[name] = e[name];\n      }\n\n      obj.bubbles = false;\n      var newE = new e.constructor(e.type, obj);\n\n      if (eName === 'mousewheel' || eName === 'DOMMouseScroll') {\n        // maptalks listens events to different elements?\n        maptalksRoot.dispatchEvent(newE);\n      } else {\n        maptalksRoot.firstElementChild.dispatchEvent(newE);\n      }\n    };\n\n    this.zr.dom.addEventListener(eName, this._handlers[eName]);\n  }, this); // PENDING\n\n  this.zr.dom.addEventListener('contextmenu', this._handlers.contextmenu);\n};\n\nMaptalks3DLayer.prototype.dispose = function () {\n  EVENTS.forEach(function (eName) {\n    this.zr.dom.removeEventListener(eName, this._handlers[eName]);\n  }, this);\n\n  this._maptalks.remove();\n};\n\nexport default Maptalks3DLayer;","import * as echarts from 'echarts/lib/echarts';\nimport Maptalks3DLayer from './Maptalks3DLayer';\nimport SceneHelper from '../common/SceneHelper';\nimport graphicGL from '../../util/graphicGL';\nimport displayShadowGLSL from '../../util/shader/displayShadow.glsl.js';\ngraphicGL.Shader.import(displayShadowGLSL);\nexport default echarts.ComponentView.extend({\n  type: 'maptalks3D',\n  __ecgl__: true,\n  init: function (ecModel, api) {\n    this._groundMesh = new graphicGL.Mesh({\n      geometry: new graphicGL.PlaneGeometry(),\n      material: new graphicGL.Material({\n        shader: new graphicGL.Shader({\n          vertex: graphicGL.Shader.source('ecgl.displayShadow.vertex'),\n          fragment: graphicGL.Shader.source('ecgl.displayShadow.fragment')\n        }),\n        depthMask: false\n      }),\n      // Render first\n      renderOrder: -100,\n      culling: false,\n      castShadow: false,\n      $ignorePicking: true,\n      renderNormal: true\n    });\n  },\n  _initMaptalksLayer: function (mapbox3DModel, api) {\n    var zr = api.getZr();\n    this._zrLayer = new Maptalks3DLayer('maptalks3D', zr, mapbox3DModel.get('center'), mapbox3DModel.get('zoom'));\n    zr.painter.insertLayer(-1000, this._zrLayer);\n    this._lightRoot = new graphicGL.Node();\n    this._sceneHelper = new SceneHelper(this._lightRoot);\n\n    this._sceneHelper.initLight(this._lightRoot);\n\n    var maptalks = this._zrLayer.getMaptalks();\n\n    var dispatchInteractAction = this._dispatchInteractAction.bind(this, api, maptalks); // PENDING\n\n\n    ['zoomend', 'zooming', 'zoomstart', 'dragrotating', 'pitch', 'pitchend', 'movestart', 'moving', 'moveend', 'resize', 'touchstart', 'touchmove', 'touchend', 'animating'].forEach(function (eName) {\n      maptalks.on(eName, dispatchInteractAction);\n    });\n  },\n  render: function (maptalks3DModel, ecModel, api) {\n    if (!this._zrLayer) {\n      this._initMaptalksLayer(maptalks3DModel, api);\n    }\n\n    var mtks = this._zrLayer.getMaptalks();\n\n    var urlTemplate = maptalks3DModel.get('urlTemplate');\n    var baseLayer = mtks.getBaseLayer();\n\n    if (urlTemplate !== this._oldUrlTemplate) {\n      if (!baseLayer) {\n        baseLayer = new maptalks.TileLayer('maptalks-echarts-gl-baselayer', {\n          urlTemplate: urlTemplate,\n          // used sequentially to help with browser parallel requests per domain limitation\n          subdomains: ['a', 'b', 'c'],\n          attribution: maptalks3DModel.get('attribution')\n        });\n        mtks.setBaseLayer(baseLayer);\n      } else {\n        // PENDING setOptions may not work?\n        baseLayer.setOptions({\n          urlTemplate: urlTemplate,\n          attribution: maptalks3DModel.get('attribution')\n        });\n      }\n    }\n\n    this._oldUrlTemplate = urlTemplate;\n    mtks.setCenter(maptalks3DModel.get('center'));\n    mtks.setZoom(maptalks3DModel.get('zoom'), {\n      animation: false\n    });\n    mtks.setPitch(maptalks3DModel.get('pitch'));\n    mtks.setBearing(maptalks3DModel.get('bearing'));\n    maptalks3DModel.setMaptalks(mtks);\n    var coordSys = maptalks3DModel.coordinateSystem; // Not add to rootNode. Or light direction will be stretched by rootNode scale\n\n    coordSys.viewGL.scene.add(this._lightRoot);\n    coordSys.viewGL.add(this._groundMesh);\n\n    this._updateGroundMesh(); // Update lights\n\n\n    this._sceneHelper.setScene(coordSys.viewGL.scene);\n\n    this._sceneHelper.updateLight(maptalks3DModel); // Update post effects\n\n\n    coordSys.viewGL.setPostEffect(maptalks3DModel.getModel('postEffect'), api);\n    coordSys.viewGL.setTemporalSuperSampling(maptalks3DModel.getModel('temporalSuperSampling'));\n    this._maptalks3DModel = maptalks3DModel;\n  },\n  afterRender: function (maptalks3DModel, ecModel, api, layerGL) {\n    var renderer = layerGL.renderer;\n\n    this._sceneHelper.updateAmbientCubemap(renderer, maptalks3DModel, api);\n\n    this._sceneHelper.updateSkybox(renderer, maptalks3DModel, api); // FIXME If other series changes coordinate system.\n    // FIXME When doing progressive rendering.\n\n\n    maptalks3DModel.coordinateSystem.viewGL.scene.traverse(function (mesh) {\n      if (mesh.material) {\n        mesh.material.define('fragment', 'NORMAL_UP_AXIS', 2);\n        mesh.material.define('fragment', 'NORMAL_FRONT_AXIS', 1);\n      }\n    });\n  },\n  updateCamera: function (maptalks3DModel, ecModel, api, payload) {\n    maptalks3DModel.coordinateSystem.setCameraOption(payload);\n\n    this._updateGroundMesh();\n\n    api.getZr().refresh();\n  },\n  _dispatchInteractAction: function (api, maptalks, maptalks3DModel) {\n    api.dispatchAction({\n      type: 'maptalks3DChangeCamera',\n      pitch: maptalks.getPitch(),\n      zoom: getMapboxZoom(maptalks.getResolution()) + 1,\n      center: maptalks.getCenter().toArray(),\n      bearing: maptalks.getBearing(),\n      maptalks3DId: this._maptalks3DModel && this._maptalks3DModel.id\n    });\n  },\n  _updateGroundMesh: function () {\n    if (this._maptalks3DModel) {\n      var coordSys = this._maptalks3DModel.coordinateSystem;\n      var pt = coordSys.dataToPoint(coordSys.center);\n\n      this._groundMesh.position.set(pt[0], pt[1], -0.001);\n\n      var plane = new graphicGL.Plane(new graphicGL.Vector3(0, 0, 1), 0);\n      var ray1 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(-1, -1));\n      var ray2 = coordSys.viewGL.camera.castRay(new graphicGL.Vector2(1, 1));\n      var pos0 = ray1.intersectPlane(plane);\n      var pos1 = ray2.intersectPlane(plane);\n      var scale = pos0.dist(pos1) / coordSys.viewGL.rootNode.scale.x;\n\n      this._groundMesh.scale.set(scale, scale, 1);\n    }\n  },\n  dispose: function (ecModel, api) {\n    if (this._zrLayer) {\n      this._zrLayer.dispose();\n    }\n\n    api.getZr().painter.delLayer(-1000);\n  }\n});\nconst MAX_RES = 2 * 6378137 * Math.PI / (256 * Math.pow(2, 20));\n\nfunction getMapboxZoom(res) {\n  return 19 - Math.log(res / MAX_RES) / Math.LN2;\n}","import MapService3D from '../mapServiceCommon/MapService3D';\n\nfunction Maptalks3D() {\n  MapService3D.apply(this, arguments);\n  this.maxPitch = 85;\n  this.zoomOffset = 1;\n}\n\nMaptalks3D.prototype = new MapService3D();\nMaptalks3D.prototype.constructor = Maptalks3D;\nMaptalks3D.prototype.type = 'maptalks3D';\nexport default Maptalks3D;","import Maptalks3D from './maptalks3D/Maptalks3D';\nimport createMapService3DCreator from './mapServiceCommon/createMapService3DCreator';\nvar maptalks3DCreator = createMapService3DCreator('maptalks3D', Maptalks3D, function (maptalks3DList) {\n  maptalks3DList.forEach(function (maptalks3D) {\n    maptalks3D.setCameraOption(maptalks3D.model.getMaptalksCameraOption());\n  });\n});\nexport default maptalks3DCreator;","// TODO ECharts GL must be imported whatever component,charts is imported.\nimport '../../echarts-gl';\nimport Maptalks3DModel from './Maptalks3DModel';\nimport Maptalks3DView from './Maptalks3DView';\nimport maptalks3DCreator from '../../coord/maptalks3DCreator';\nexport function install(registers) {\n  registers.registerComponentModel(Maptalks3DModel);\n  registers.registerComponentView(Maptalks3DView);\n  registers.registerCoordinateSystem('maptalks3D', maptalks3DCreator);\n  registers.registerAction({\n    type: 'maptalks3DChangeCamera',\n    event: 'maptalks3dcamerachanged',\n    update: 'maptalks3D:updateCamera'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'maptalks3D',\n      query: payload\n    }, function (componentModel) {\n      componentModel.setMaptalksCameraOption(payload);\n    });\n  });\n}","// Thanks to https://gitee.com/iverson_hu/maptalks-echarts-gl\nimport { use } from 'echarts/lib/echarts';\nimport { install } from './maptalks3D/install';\nuse(install);","import * as echarts from 'echarts/lib/echarts';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar mat4 = glmatrix.mat4;\nimport textCoord from 'echarts/lib/coord/geo/fix/textCoord';\nimport geoCoord from 'echarts/lib/coord/geo/fix/geoCoord'; // Geo fix functions\n\nvar geoFixFuncs = [textCoord, geoCoord];\n\nfunction Geo3D(name, map, geoJson, specialAreas, nameMap) {\n  this.name = name;\n  this.map = map;\n  this.regionHeight = 0;\n  this.regions = [];\n  this._nameCoordMap = {};\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n  this.transform = mat4.identity(new Float64Array(16));\n  this.invTransform = mat4.identity(new Float64Array(16)); // Which dimension to extrude. Y or Z\n\n  this.extrudeY = true;\n  this.altitudeAxis;\n}\n\nGeo3D.prototype = {\n  constructor: Geo3D,\n  type: 'geo3D',\n  dimensions: ['lng', 'lat', 'alt'],\n  containPoint: function () {},\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    var parseGeoJSON = echarts.parseGeoJSON || echarts.parseGeoJson;\n\n    try {\n      this.regions = geoJson ? parseGeoJSON(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = {};\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap[regionName] || regionName;\n      regions[i].name = regionName;\n      regionsMap[regionName] = regions[i]; // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].getCenter()); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._geoRect = null;\n    geoFixFuncs.forEach(function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  getGeoBoundingRect: function () {\n    if (this._geoRect) {\n      return this._geoRect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._geoRect = rect || new echarts.graphic.BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap[name] = geoCoord;\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap[name];\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n  setSize: function (width, height, depth) {\n    this.size = [width, height, depth];\n    var rect = this.getGeoBoundingRect();\n    var scaleX = width / rect.width;\n    var scaleZ = -depth / rect.height;\n    var translateX = -width / 2 - rect.x * scaleX;\n    var translateZ = depth / 2 - rect.y * scaleZ;\n    var position = this.extrudeY ? [translateX, 0, translateZ] : [translateX, translateZ, 0];\n    var scale = this.extrudeY ? [scaleX, 1, scaleZ] : [scaleX, scaleZ, 1];\n    var m = this.transform;\n    mat4.identity(m);\n    mat4.translate(m, m, position);\n    mat4.scale(m, m, scale);\n    mat4.invert(this.invTransform, m);\n  },\n  dataToPoint: function (data, out) {\n    out = out || [];\n    var extrudeCoordIndex = this.extrudeY ? 1 : 2;\n    var sideCoordIndex = this.extrudeY ? 2 : 1;\n    var altitudeVal = data[2]; // PENDING.\n\n    if (isNaN(altitudeVal)) {\n      altitudeVal = 0;\n    } // lng\n\n\n    out[0] = data[0]; // lat\n\n    out[sideCoordIndex] = data[1];\n\n    if (this.altitudeAxis) {\n      out[extrudeCoordIndex] = this.altitudeAxis.dataToCoord(altitudeVal);\n    } else {\n      out[extrudeCoordIndex] = 0;\n    } // PENDING different region height.\n\n\n    out[extrudeCoordIndex] += this.regionHeight;\n    vec3.transformMat4(out, out, this.transform);\n    return out;\n  },\n  pointToData: function (point, out) {// TODO\n  }\n};\nexport default Geo3D;","import Geo3D from './geo3D/Geo3D';\nimport * as echarts from 'echarts/lib/echarts';\nimport { getLayoutRect } from 'echarts/lib/util/layout';\nimport ViewGL from '../core/ViewGL';\nimport retrieve from '../util/retrieve';\n\nfunction resizeGeo3D(geo3DModel, api) {\n  // Use left/top/width/height\n  var boxLayoutOption = geo3DModel.getBoxLayoutParams();\n  var viewport = getLayoutRect(boxLayoutOption, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }); // Flip Y\n\n  viewport.y = api.getHeight() - viewport.y - viewport.height;\n  this.viewGL.setViewport(viewport.x, viewport.y, viewport.width, viewport.height, api.getDevicePixelRatio());\n  var geoRect = this.getGeoBoundingRect();\n  var aspect = geoRect.width / geoRect.height * (geo3DModel.get('aspectScale') || 0.75);\n  var width = geo3DModel.get('boxWidth');\n  var depth = geo3DModel.get('boxDepth');\n  var height = geo3DModel.get('boxHeight');\n\n  if (height == null) {\n    height = 5;\n  }\n\n  if (isNaN(width) && isNaN(depth)) {\n    // Default to have 100 width\n    width = 100;\n  }\n\n  if (isNaN(depth)) {\n    depth = width / aspect;\n  } else if (isNaN(width)) {\n    width = depth / aspect;\n  }\n\n  this.setSize(width, height, depth);\n  this.regionHeight = geo3DModel.get('regionHeight');\n\n  if (this.altitudeAxis) {\n    this.altitudeAxis.setExtent(0, Math.max(height - this.regionHeight, 0));\n  }\n}\n\nfunction updateGeo3D(ecModel, api) {\n  var altitudeDataExtent = [Infinity, -Infinity];\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem !== this) {\n      return;\n    }\n\n    if (seriesModel.type === 'series.map3D') {\n      return;\n    } // Get altitude data extent.\n\n\n    var data = seriesModel.getData();\n    var altDims = seriesModel.coordDimToDataDim('alt');\n    var altDim = altDims && altDims[0];\n\n    if (altDim) {\n      // TODO altitiude is in coords of lines.\n      var dataExtent = data.getDataExtent(altDim, true);\n      altitudeDataExtent[0] = Math.min(altitudeDataExtent[0], dataExtent[0]);\n      altitudeDataExtent[1] = Math.max(altitudeDataExtent[1], dataExtent[1]);\n    }\n  }, this); // Create altitude axis\n\n  if (altitudeDataExtent && isFinite(altitudeDataExtent[1] - altitudeDataExtent[0])) {\n    var scale = echarts.helper.createScale(altitudeDataExtent, {\n      type: 'value',\n      // PENDING\n      min: 'dataMin',\n      max: 'dataMax'\n    });\n    this.altitudeAxis = new echarts.Axis('altitude', scale); // Resize again\n\n    this.resize(this.model, api);\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var mapNotExistsError = function (name) {\n    console.error('Map ' + name + ' not exists. You can download map file on http://echarts.baidu.com/download-map.html');\n  };\n}\n\nvar idStart = 0;\nvar geo3DCreator = {\n  dimensions: Geo3D.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geo3DList = [];\n\n    if (!echarts.getMap) {\n      throw new Error('geo3D component depends on geo component');\n    }\n\n    function createGeo3D(componentModel, idx) {\n      var geo3D = geo3DCreator.createGeo3D(componentModel); // FIXME\n\n      componentModel.__viewGL = componentModel.__viewGL || new ViewGL();\n      geo3D.viewGL = componentModel.__viewGL;\n      componentModel.coordinateSystem = geo3D;\n      geo3D.model = componentModel;\n      geo3DList.push(geo3D); // Inject resize\n\n      geo3D.resize = resizeGeo3D;\n      geo3D.resize(componentModel, api);\n      geo3D.update = updateGeo3D;\n    }\n\n    ecModel.eachComponent('geo3D', function (geo3DModel, idx) {\n      createGeo3D(geo3DModel, idx);\n    });\n    ecModel.eachSeriesByType('map3D', function (map3DModel, idx) {\n      var coordSys = map3DModel.get('coordinateSystem');\n\n      if (coordSys == null) {\n        coordSys = 'geo3D';\n      }\n\n      if (coordSys === 'geo3D') {\n        createGeo3D(map3DModel, idx);\n      }\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'geo3D') {\n        if (seriesModel.type === 'series.map3D') {\n          return;\n        }\n\n        var geo3DModel = seriesModel.getReferringComponents('geo3D').models[0];\n\n        if (!geo3DModel) {\n          geo3DModel = ecModel.getComponent('geo3D');\n        }\n\n        if (!geo3DModel) {\n          throw new Error('geo \"' + retrieve.firstNotNull(seriesModel.get('geo3DIndex'), seriesModel.get('geo3DId'), 0) + '\" not found');\n        }\n\n        seriesModel.coordinateSystem = geo3DModel.coordinateSystem;\n      }\n    });\n    return geo3DList;\n  },\n  createGeo3D: function (componentModel) {\n    var mapData = componentModel.get('map');\n    var name;\n\n    if (typeof mapData === 'string') {\n      name = mapData;\n      mapData = echarts.getMap(mapData);\n    } else {\n      if (mapData && mapData.features) {\n        mapData = {\n          geoJson: mapData\n        };\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mapData) {\n        mapNotExistsError(mapData);\n      }\n\n      if (!mapData.geoJson.features) {\n        throw new Error('Invalid GeoJSON for map3D');\n      }\n    }\n\n    if (name == null) {\n      name = 'GEO_ANONYMOUS_' + idStart++;\n    }\n\n    return new Geo3D(name + idStart++, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, componentModel.get('nameMap'));\n  }\n};\nexport default geo3DCreator;","import * as echarts from 'echarts/lib/echarts';\nexport default {\n  getFilledRegions: function (regions, mapData) {\n    var regionsArr = (regions || []).slice();\n    var geoJson;\n\n    if (typeof mapData === 'string') {\n      mapData = echarts.getMap(mapData);\n      geoJson = mapData && mapData.geoJson;\n    } else {\n      if (mapData && mapData.features) {\n        geoJson = mapData;\n      }\n    }\n\n    if (!geoJson) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Map ' + mapData + ' not exists. You can download map file on http://echarts.baidu.com/download-map.html');\n\n        if (!geoJson.features) {\n          console.error('Invalid GeoJSON for map3D');\n        }\n      }\n\n      return [];\n    }\n\n    var dataNameMap = {};\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap[regionsArr[i].name] = regionsArr[i];\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap[name]) {\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  },\n  defaultOption: {\n    show: true,\n    zlevel: -10,\n    // geoJson used by geo3D\n    map: '',\n    // Layout used for viewport\n    left: 0,\n    top: 0,\n    width: '100%',\n    height: '100%',\n    boxWidth: 100,\n    boxHeight: 10,\n    boxDepth: 'auto',\n    regionHeight: 3,\n    environment: 'auto',\n    groundPlane: {\n      show: false,\n      color: '#aaa'\n    },\n    shading: 'lambert',\n    light: {\n      main: {\n        alpha: 40,\n        beta: 30\n      }\n    },\n    viewControl: {\n      alpha: 40,\n      beta: 0,\n      distance: 100,\n      orthographicSize: 60,\n      minAlpha: 5,\n      minBeta: -80,\n      maxBeta: 80\n    },\n    label: {\n      show: false,\n      // Distance in 3d space.\n      distance: 2,\n      textStyle: {\n        fontSize: 20,\n        color: '#000',\n        backgroundColor: 'rgba(255,255,255,0.7)',\n        padding: 3,\n        borderRadius: 4\n      }\n    },\n    // TODO\n    // altitude: {\n    //     min: 'auto',\n    //     max: 'auto',\n    //     height: []\n    // },\n    // labelLine\n    // light\n    // postEffect\n    // temporalSuperSampling\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 0,\n      borderColor: '#333'\n    },\n    emphasis: {\n      itemStyle: {\n        // color: '#f94b59'\n        color: '#639fc0'\n      },\n      label: {\n        show: true\n      }\n    }\n  }\n};","import glmatrix from 'claygl/src/dep/glmatrix';\nvar mat4 = glmatrix.mat4;\nvar TILE_SIZE = 512;\nvar FOV = 0.6435011087932844;\nvar PI = Math.PI;\nvar WORLD_SCALE = 1 / 10;\n\nfunction MapServiceCoordSys3D() {\n  /**\n   * Width of mapbox viewport\n   */\n  this.width = 0;\n  /**\n   * Height of mapbox viewport\n   */\n\n  this.height = 0;\n  this.altitudeScale = 1; // TODO Change boxHeight won't have animation.\n\n  this.boxHeight = 'auto'; // Set by mapbox creator\n\n  this.altitudeExtent;\n  this.bearing = 0;\n  this.pitch = 0;\n  this.center = [0, 0];\n  this._origin;\n  this.zoom = 0;\n  this._initialZoom; // Some parameters for different map services.\n\n  this.maxPitch = 60;\n  this.zoomOffset = 0;\n}\n\nMapServiceCoordSys3D.prototype = {\n  constructor: MapServiceCoordSys3D,\n  dimensions: ['lng', 'lat', 'alt'],\n  containPoint: function () {},\n  setCameraOption: function (option) {\n    this.bearing = option.bearing;\n    this.pitch = option.pitch;\n    this.center = option.center;\n    this.zoom = option.zoom;\n\n    if (!this._origin) {\n      this._origin = this.projectOnTileWithScale(this.center, TILE_SIZE);\n    }\n\n    if (this._initialZoom == null) {\n      this._initialZoom = this.zoom;\n    }\n\n    this.updateTransform();\n  },\n  // https://github.com/mapbox/mapbox-gl-js/blob/master/src/geo/transform.js#L479\n  updateTransform: function () {\n    if (!this.height) {\n      return;\n    }\n\n    var cameraToCenterDistance = 0.5 / Math.tan(FOV / 2) * this.height * WORLD_SCALE; // Convert to radian.\n\n    var pitch = Math.max(Math.min(this.pitch, this.maxPitch), 0) / 180 * Math.PI; // Find the distance from the center point [width/2, height/2] to the\n    // center top point [width/2, 0] in Z units, using the law of sines.\n    // 1 Z unit is equivalent to 1 horizontal px at the center of the map\n    // (the distance between[width/2, height/2] and [width/2 + 1, height/2])\n\n    var halfFov = FOV / 2;\n    var groundAngle = Math.PI / 2 + pitch;\n    var topHalfSurfaceDistance = Math.sin(halfFov) * cameraToCenterDistance / Math.sin(Math.PI - groundAngle - halfFov); // Calculate z distance of the farthest fragment that should be rendered.\n\n    var furthestDistance = Math.cos(Math.PI / 2 - pitch) * topHalfSurfaceDistance + cameraToCenterDistance; // Add a bit extra to avoid precision problems when a fragment's distance is exactly `furthestDistance`\n\n    var farZ = furthestDistance * 1.1; // Forced to be 1000\n\n    if (this.pitch > 50) {\n      farZ = 1000;\n    } // matrix for conversion from location to GL coordinates (-1 .. 1)\n\n\n    var m = [];\n    mat4.perspective(m, FOV, this.width / this.height, 1, farZ);\n    this.viewGL.camera.projectionMatrix.setArray(m);\n    this.viewGL.camera.decomposeProjectionMatrix();\n    var m = mat4.identity([]);\n    var pt = this.dataToPoint(this.center); // Inverse\n\n    mat4.scale(m, m, [1, -1, 1]); // Translate to altitude\n\n    mat4.translate(m, m, [0, 0, -cameraToCenterDistance]);\n    mat4.rotateX(m, m, pitch);\n    mat4.rotateZ(m, m, -this.bearing / 180 * Math.PI); // Translate to center.\n\n    mat4.translate(m, m, [-pt[0] * this.getScale() * WORLD_SCALE, -pt[1] * this.getScale() * WORLD_SCALE, 0]);\n    this.viewGL.camera.viewMatrix.array = m;\n    var invertM = [];\n    mat4.invert(invertM, m);\n    this.viewGL.camera.worldTransform.array = invertM;\n    this.viewGL.camera.decomposeWorldTransform(); // scale vertically to meters per pixel (inverse of ground resolution):\n    // worldSize / (circumferenceOfEarth * cos(lat * π / 180))\n\n    var worldSize = TILE_SIZE * this.getScale();\n    var verticalScale;\n\n    if (this.altitudeExtent && !isNaN(this.boxHeight)) {\n      var range = this.altitudeExtent[1] - this.altitudeExtent[0];\n      verticalScale = this.boxHeight / range * this.getScale() / Math.pow(2, this._initialZoom - this.zoomOffset);\n    } else {\n      verticalScale = worldSize / (2 * Math.PI * 6378000 * Math.abs(Math.cos(this.center[1] * (Math.PI / 180)))) * this.altitudeScale * WORLD_SCALE;\n    } // Include scale to avoid relayout when zooming\n    // FIXME Camera scale may have problem in shadow\n\n\n    this.viewGL.rootNode.scale.set(this.getScale() * WORLD_SCALE, this.getScale() * WORLD_SCALE, verticalScale);\n  },\n  getScale: function () {\n    return Math.pow(2, this.zoom - this.zoomOffset);\n  },\n  projectOnTile: function (data, out) {\n    return this.projectOnTileWithScale(data, this.getScale() * TILE_SIZE, out);\n  },\n  projectOnTileWithScale: function (data, scale, out) {\n    var lng = data[0];\n    var lat = data[1];\n    var lambda2 = lng * PI / 180;\n    var phi2 = lat * PI / 180;\n    var x = scale * (lambda2 + PI) / (2 * PI);\n    var y = scale * (PI - Math.log(Math.tan(PI / 4 + phi2 * 0.5))) / (2 * PI);\n    out = out || [];\n    out[0] = x;\n    out[1] = y;\n    return out;\n  },\n  unprojectFromTile: function (point, out) {\n    return this.unprojectOnTileWithScale(point, this.getScale() * TILE_SIZE, out);\n  },\n  unprojectOnTileWithScale: function (point, scale, out) {\n    var x = point[0];\n    var y = point[1];\n    var lambda2 = x / scale * (2 * PI) - PI;\n    var phi2 = 2 * (Math.atan(Math.exp(PI - y / scale * (2 * PI))) - PI / 4);\n    out = out || [];\n    out[0] = lambda2 * 180 / PI;\n    out[1] = phi2 * 180 / PI;\n    return out;\n  },\n  dataToPoint: function (data, out) {\n    out = this.projectOnTileWithScale(data, TILE_SIZE, out); // Add a origin to avoid precision issue in WebGL.\n\n    out[0] -= this._origin[0];\n    out[1] -= this._origin[1]; // PENDING\n\n    out[2] = !isNaN(data[2]) ? data[2] : 0;\n\n    if (!isNaN(data[2])) {\n      out[2] = data[2];\n\n      if (this.altitudeExtent) {\n        out[2] -= this.altitudeExtent[0];\n      }\n    }\n\n    return out;\n  }\n};\nexport default MapServiceCoordSys3D;","import retrieve from '../../util/retrieve';\nimport graphicGL from '../../util/graphicGL';\nimport ViewGL from '../../core/ViewGL';\nexport default function (serviceComponentType, ServiceCtor, afterCreate) {\n  function resizeMapService3D(mapService3DModel, api) {\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var dpr = api.getDevicePixelRatio();\n    this.viewGL.setViewport(0, 0, width, height, dpr);\n    this.width = width;\n    this.height = height;\n    this.altitudeScale = mapService3DModel.get('altitudeScale');\n    this.boxHeight = mapService3DModel.get('boxHeight'); // this.updateTransform();\n  }\n\n  function updateService3D(ecModel, api) {\n    if (this.model.get('boxHeight') === 'auto') {\n      return;\n    }\n\n    var altitudeDataExtent = [Infinity, -Infinity];\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem !== this) {\n        return;\n      } // Get altitude data extent.\n\n\n      var data = seriesModel.getData();\n      var altDim = seriesModel.coordDimToDataDim('alt')[0];\n\n      if (altDim) {\n        // TODO altitiude is in coords of lines.\n        var dataExtent = data.getDataExtent(altDim, true);\n        altitudeDataExtent[0] = Math.min(altitudeDataExtent[0], dataExtent[0]);\n        altitudeDataExtent[1] = Math.max(altitudeDataExtent[1], dataExtent[1]);\n      }\n    }, this);\n\n    if (altitudeDataExtent && isFinite(altitudeDataExtent[1] - altitudeDataExtent[0])) {\n      this.altitudeExtent = altitudeDataExtent;\n    }\n  }\n\n  return {\n    dimensions: ServiceCtor.prototype.dimensions,\n    create: function (ecModel, api) {\n      var mapService3DList = [];\n      ecModel.eachComponent(serviceComponentType, function (mapService3DModel) {\n        var viewGL = mapService3DModel.__viewGL;\n\n        if (!viewGL) {\n          viewGL = mapService3DModel.__viewGL = new ViewGL();\n          viewGL.setRootNode(new graphicGL.Node());\n        }\n\n        var mapService3DCoordSys = new ServiceCtor();\n        mapService3DCoordSys.viewGL = mapService3DModel.__viewGL; // Inject resize\n\n        mapService3DCoordSys.resize = resizeMapService3D;\n        mapService3DCoordSys.resize(mapService3DModel, api);\n        mapService3DList.push(mapService3DCoordSys);\n        mapService3DModel.coordinateSystem = mapService3DCoordSys;\n        mapService3DCoordSys.model = mapService3DModel;\n        mapService3DCoordSys.update = updateService3D;\n      });\n      ecModel.eachSeries(function (seriesModel) {\n        if (seriesModel.get('coordinateSystem') === serviceComponentType) {\n          var mapService3DModel = seriesModel.getReferringComponents(serviceComponentType).models[0];\n\n          if (!mapService3DModel) {\n            mapService3DModel = ecModel.getComponent(serviceComponentType);\n          }\n\n          if (!mapService3DModel) {\n            throw new Error(serviceComponentType + ' \"' + retrieve.firstNotNull(seriesModel.get(serviceComponentType + 'Index'), seriesModel.get(serviceComponentType + 'Id'), 0) + '\" not found');\n          }\n\n          seriesModel.coordinateSystem = mapService3DModel.coordinateSystem;\n        }\n      });\n      afterCreate && afterCreate(mapService3DList, ecModel, api);\n      return mapService3DList;\n    }\n  };\n}","/**\n * Provide WebGL layer to zrender. Which is rendered on top of clay.\n *\n *\n * Relationship between zrender, LayerGL(renderer) and ViewGL(Scene, Camera, Viewport)\n *           zrender\n *           /     \\\n *      LayerGL   LayerGL\n *    (renderer) (renderer)\n *      /     \\\n *  ViewGL   ViewGL\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Renderer from 'claygl/src/Renderer';\nimport RayPicking from 'claygl/src/picking/RayPicking';\nimport Texture from 'claygl/src/Texture';\nimport graphicGL from '../util/graphicGL'; // PENDING, clay. notifier is same with zrender Eventful\n\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport requestAnimationFrame from 'zrender/lib/animation/requestAnimationFrame';\n/**\n * @constructor\n * @alias module:echarts-gl/core/LayerGL\n * @param {string} id Layer ID\n * @param {module:zrender/ZRender} zr\n */\n\nvar LayerGL = function (id, zr) {\n  /**\n   * Layer ID\n   * @type {string}\n   */\n  this.id = id;\n  /**\n   * @type {module:zrender/ZRender}\n   */\n\n  this.zr = zr;\n  /**\n   * @type {clay.Renderer}\n   */\n\n  try {\n    this.renderer = new Renderer({\n      clearBit: 0,\n      devicePixelRatio: zr.painter.dpr,\n      preserveDrawingBuffer: true,\n      // PENDING\n      premultipliedAlpha: true\n    });\n    this.renderer.resize(zr.painter.getWidth(), zr.painter.getHeight());\n  } catch (e) {\n    this.renderer = null;\n    this.dom = document.createElement('div');\n    this.dom.style.cssText = 'position:absolute; left: 0; top: 0; right: 0; bottom: 0;';\n    this.dom.className = 'ecgl-nowebgl';\n    this.dom.innerHTML = 'Sorry, your browser does not support WebGL';\n    console.error(e);\n    return;\n  }\n\n  this.onglobalout = this.onglobalout.bind(this);\n  zr.on('globalout', this.onglobalout);\n  /**\n   * Canvas dom for webgl rendering\n   * @type {HTMLCanvasElement}\n   */\n\n  this.dom = this.renderer.canvas;\n  var style = this.dom.style;\n  style.position = 'absolute';\n  style.left = '0';\n  style.top = '0';\n  /**\n   * @type {Array.<clay.Scene>}\n   */\n\n  this.views = [];\n  this._picking = new RayPicking({\n    renderer: this.renderer\n  });\n  this._viewsToDispose = [];\n  /**\n   * Current accumulating id.\n   */\n\n  this._accumulatingId = 0;\n  this._zrEventProxy = new echarts.graphic.Rect({\n    shape: {\n      x: -1,\n      y: -1,\n      width: 2,\n      height: 2\n    },\n    // FIXME Better solution.\n    __isGLToZRProxy: true\n  });\n  this._backgroundColor = null;\n  this._disposed = false;\n};\n\nLayerGL.prototype.setUnpainted = function () {};\n/**\n * @param {module:echarts-gl/core/ViewGL} view\n */\n\n\nLayerGL.prototype.addView = function (view) {\n  if (view.layer === this) {\n    return;\n  } // If needs to dispose in this layer. unmark it.\n\n\n  var idx = this._viewsToDispose.indexOf(view);\n\n  if (idx >= 0) {\n    this._viewsToDispose.splice(idx, 1);\n  }\n\n  this.views.push(view);\n  view.layer = this;\n  var zr = this.zr;\n  view.scene.traverse(function (node) {\n    node.__zr = zr;\n\n    if (node.addAnimatorsToZr) {\n      node.addAnimatorsToZr(zr);\n    }\n  });\n};\n\nfunction removeFromZr(node) {\n  var zr = node.__zr;\n  node.__zr = null;\n\n  if (zr && node.removeAnimatorsFromZr) {\n    node.removeAnimatorsFromZr(zr);\n  }\n}\n/**\n * @param {module:echarts-gl/core/ViewGL} view\n */\n\n\nLayerGL.prototype.removeView = function (view) {\n  if (view.layer !== this) {\n    return;\n  }\n\n  var idx = this.views.indexOf(view);\n\n  if (idx >= 0) {\n    this.views.splice(idx, 1);\n    view.scene.traverse(removeFromZr, this);\n    view.layer = null; // Mark to dispose in this layer.\n\n    this._viewsToDispose.push(view);\n  }\n};\n/**\n * Remove all views\n */\n\n\nLayerGL.prototype.removeViewsAll = function () {\n  this.views.forEach(function (view) {\n    view.scene.traverse(removeFromZr, this);\n    view.layer = null; // Mark to dispose in this layer.\n\n    this._viewsToDispose.push(view);\n  }, this);\n  this.views.length = 0;\n};\n/**\n * Resize the canvas and viewport, will be invoked by zrender\n * @param  {number} width\n * @param  {number} height\n */\n\n\nLayerGL.prototype.resize = function (width, height) {\n  var renderer = this.renderer;\n  renderer.resize(width, height);\n};\n/**\n * Clear color and depth\n * @return {[type]} [description]\n */\n\n\nLayerGL.prototype.clear = function () {\n  var gl = this.renderer.gl;\n  var clearColor = this._backgroundColor || [0, 0, 0, 0];\n  gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n  gl.depthMask(true);\n  gl.colorMask(true, true, true, true);\n  gl.clear(gl.DEPTH_BUFFER_BIT | gl.COLOR_BUFFER_BIT);\n};\n/**\n * Clear depth\n */\n\n\nLayerGL.prototype.clearDepth = function () {\n  var gl = this.renderer.gl;\n  gl.clear(gl.DEPTH_BUFFER_BIT);\n};\n/**\n * Clear color\n */\n\n\nLayerGL.prototype.clearColor = function () {\n  var gl = this.renderer.gl;\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n};\n/**\n * Mark layer to refresh next tick\n */\n\n\nLayerGL.prototype.needsRefresh = function () {\n  this.zr.refresh();\n};\n/**\n * Refresh the layer, will be invoked by zrender\n */\n\n\nLayerGL.prototype.refresh = function (bgColor) {\n  this._backgroundColor = bgColor ? graphicGL.parseColor(bgColor) : [0, 0, 0, 0];\n  this.renderer.clearColor = this._backgroundColor;\n\n  for (var i = 0; i < this.views.length; i++) {\n    this.views[i].prepareRender(this.renderer);\n  }\n\n  this._doRender(false); // Auto dispose unused resources on GPU, like program(shader), texture, geometry(buffers)\n\n\n  this._trackAndClean(); // Dispose trashed views\n\n\n  for (var i = 0; i < this._viewsToDispose.length; i++) {\n    this._viewsToDispose[i].dispose(this.renderer);\n  }\n\n  this._viewsToDispose.length = 0;\n\n  this._startAccumulating();\n};\n\nLayerGL.prototype.renderToCanvas = function (ctx) {\n  // PENDING will block the page\n  this._startAccumulating(true);\n\n  ctx.drawImage(this.dom, 0, 0, ctx.canvas.width, ctx.canvas.height);\n};\n\nLayerGL.prototype._doRender = function (accumulating) {\n  this.clear();\n  this.renderer.saveViewport();\n\n  for (var i = 0; i < this.views.length; i++) {\n    this.views[i].render(this.renderer, accumulating);\n  }\n\n  this.renderer.restoreViewport();\n};\n/**\n * Stop accumulating\n */\n\n\nLayerGL.prototype._stopAccumulating = function () {\n  this._accumulatingId = 0;\n  clearTimeout(this._accumulatingTimeout);\n};\n\nvar accumulatingId = 1;\n/**\n * Start accumulating all the views.\n * Accumulating is for antialising and have more sampling in SSAO\n * @private\n */\n\nLayerGL.prototype._startAccumulating = function (immediate) {\n  var self = this;\n\n  this._stopAccumulating();\n\n  var needsAccumulate = false;\n\n  for (var i = 0; i < this.views.length; i++) {\n    needsAccumulate = this.views[i].needsAccumulate() || needsAccumulate;\n  }\n\n  if (!needsAccumulate) {\n    return;\n  }\n\n  function accumulate(id) {\n    if (!self._accumulatingId || id !== self._accumulatingId) {\n      return;\n    }\n\n    var isFinished = true;\n\n    for (var i = 0; i < self.views.length; i++) {\n      isFinished = self.views[i].isAccumulateFinished() && needsAccumulate;\n    }\n\n    if (!isFinished) {\n      self._doRender(true);\n\n      if (immediate) {\n        accumulate(id);\n      } else {\n        requestAnimationFrame(function () {\n          accumulate(id);\n        });\n      }\n    }\n  }\n\n  this._accumulatingId = accumulatingId++;\n\n  if (immediate) {\n    accumulate(self._accumulatingId);\n  } else {\n    this._accumulatingTimeout = setTimeout(function () {\n      accumulate(self._accumulatingId);\n    }, 50);\n  }\n};\n\nLayerGL.prototype._trackAndClean = function () {\n  var textureList = [];\n  var geometriesList = []; // Mark all resources unused;\n\n  if (this._textureList) {\n    markUnused(this._textureList);\n    markUnused(this._geometriesList);\n  }\n\n  for (var i = 0; i < this.views.length; i++) {\n    collectResources(this.views[i].scene, textureList, geometriesList);\n  } // Dispose those unsed resources.\n\n\n  if (this._textureList) {\n    checkAndDispose(this.renderer, this._textureList);\n    checkAndDispose(this.renderer, this._geometriesList);\n  }\n\n  this._textureList = textureList;\n  this._geometriesList = geometriesList;\n};\n\nfunction markUnused(resourceList) {\n  for (var i = 0; i < resourceList.length; i++) {\n    resourceList[i].__used__ = 0;\n  }\n}\n\nfunction checkAndDispose(renderer, resourceList) {\n  for (var i = 0; i < resourceList.length; i++) {\n    if (!resourceList[i].__used__) {\n      resourceList[i].dispose(renderer);\n    }\n  }\n}\n\nfunction updateUsed(resource, list) {\n  resource.__used__ = resource.__used__ || 0;\n  resource.__used__++;\n\n  if (resource.__used__ === 1) {\n    // Don't push to the list twice.\n    list.push(resource);\n  }\n}\n\nfunction collectResources(scene, textureResourceList, geometryResourceList) {\n  var prevMaterial;\n  var prevGeometry;\n  scene.traverse(function (renderable) {\n    if (renderable.isRenderable()) {\n      var geometry = renderable.geometry;\n      var material = renderable.material; // TODO optimize!!\n\n      if (material !== prevMaterial) {\n        var textureUniforms = material.getTextureUniforms();\n\n        for (var u = 0; u < textureUniforms.length; u++) {\n          var uniformName = textureUniforms[u];\n          var val = material.uniforms[uniformName].value;\n\n          if (!val) {\n            continue;\n          }\n\n          if (val instanceof Texture) {\n            updateUsed(val, textureResourceList);\n          } else if (val instanceof Array) {\n            for (var k = 0; k < val.length; k++) {\n              if (val[k] instanceof Texture) {\n                updateUsed(val[k], textureResourceList);\n              }\n            }\n          }\n        }\n      }\n\n      if (geometry !== prevGeometry) {\n        updateUsed(geometry, geometryResourceList);\n      }\n\n      prevMaterial = material;\n      prevGeometry = geometry;\n    }\n  });\n\n  for (var k = 0; k < scene.lights.length; k++) {\n    // Track AmbientCubemap\n    if (scene.lights[k].cubemap) {\n      updateUsed(scene.lights[k].cubemap, textureResourceList);\n    }\n  }\n}\n/**\n * Dispose the layer\n */\n\n\nLayerGL.prototype.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._stopAccumulating();\n\n  if (this._textureList) {\n    markUnused(this._textureList);\n    markUnused(this._geometriesList);\n    checkAndDispose(this.renderer, this._textureList);\n    checkAndDispose(this.renderer, this._geometriesList);\n  }\n\n  this.zr.off('globalout', this.onglobalout);\n  this._disposed = true;\n}; // Event handlers\n\n\nLayerGL.prototype.onmousedown = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent('mousedown', e, obj);\n\n    this._dispatchDataEvent('mousedown', e, obj);\n  }\n\n  this._downX = e.offsetX;\n  this._downY = e.offsetY;\n};\n\nLayerGL.prototype.onmousemove = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n  var target = obj && obj.target;\n  var lastHovered = this._hovered;\n  this._hovered = obj;\n\n  if (lastHovered && target !== lastHovered.target) {\n    lastHovered.relatedTarget = target;\n\n    this._dispatchEvent('mouseout', e, lastHovered); // this._dispatchDataEvent('mouseout', e, lastHovered);\n\n\n    this.zr.setCursorStyle('default');\n  }\n\n  this._dispatchEvent('mousemove', e, obj);\n\n  if (obj) {\n    this.zr.setCursorStyle('pointer');\n\n    if (!lastHovered || target !== lastHovered.target) {\n      this._dispatchEvent('mouseover', e, obj); // this._dispatchDataEvent('mouseover', e, obj);\n\n    }\n  }\n\n  this._dispatchDataEvent('mousemove', e, obj);\n};\n\nLayerGL.prototype.onmouseup = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent('mouseup', e, obj);\n\n    this._dispatchDataEvent('mouseup', e, obj);\n  }\n\n  this._upX = e.offsetX;\n  this._upY = e.offsetY;\n};\n\nLayerGL.prototype.onclick = LayerGL.prototype.dblclick = function (e) {\n  if (e.target && e.target.__isGLToZRProxy) {\n    return;\n  } // Ignore click event if mouse moved\n\n\n  var dx = this._upX - this._downX;\n  var dy = this._upY - this._downY;\n\n  if (Math.sqrt(dx * dx + dy * dy) > 20) {\n    return;\n  }\n\n  e = e.event;\n  var obj = this.pickObject(e.offsetX, e.offsetY);\n\n  if (obj) {\n    this._dispatchEvent(e.type, e, obj);\n\n    this._dispatchDataEvent(e.type, e, obj);\n  } // Try set depth of field onclick\n\n\n  var result = this._clickToSetFocusPoint(e);\n\n  if (result) {\n    var success = result.view.setDOFFocusOnPoint(result.distance);\n\n    if (success) {\n      this.zr.refresh();\n    }\n  }\n};\n\nLayerGL.prototype._clickToSetFocusPoint = function (e) {\n  var renderer = this.renderer;\n  var oldViewport = renderer.viewport;\n\n  for (var i = this.views.length - 1; i >= 0; i--) {\n    var viewGL = this.views[i];\n\n    if (viewGL.hasDOF() && viewGL.containPoint(e.offsetX, e.offsetY)) {\n      this._picking.scene = viewGL.scene;\n      this._picking.camera = viewGL.camera; // Only used for picking, renderer.setViewport will also invoke gl.viewport.\n      // Set directly, PENDING.\n\n      renderer.viewport = viewGL.viewport;\n\n      var result = this._picking.pick(e.offsetX, e.offsetY, true);\n\n      if (result) {\n        result.view = viewGL;\n        return result;\n      }\n    }\n  }\n\n  renderer.viewport = oldViewport;\n};\n\nLayerGL.prototype.onglobalout = function (e) {\n  var lastHovered = this._hovered;\n\n  if (lastHovered) {\n    this._dispatchEvent('mouseout', e, {\n      target: lastHovered.target\n    });\n  }\n};\n\nLayerGL.prototype.pickObject = function (x, y) {\n  var output = [];\n  var renderer = this.renderer;\n  var oldViewport = renderer.viewport;\n\n  for (var i = 0; i < this.views.length; i++) {\n    var viewGL = this.views[i];\n\n    if (viewGL.containPoint(x, y)) {\n      this._picking.scene = viewGL.scene;\n      this._picking.camera = viewGL.camera; // Only used for picking, renderer.setViewport will also invoke gl.viewport.\n      // Set directly, PENDING.\n\n      renderer.viewport = viewGL.viewport;\n\n      this._picking.pickAll(x, y, output);\n    }\n  }\n\n  renderer.viewport = oldViewport;\n  output.sort(function (a, b) {\n    return a.distance - b.distance;\n  });\n  return output[0];\n};\n\nLayerGL.prototype._dispatchEvent = function (eveName, originalEvent, newEvent) {\n  if (!newEvent) {\n    newEvent = {};\n  }\n\n  var current = newEvent.target;\n  newEvent.cancelBubble = false;\n  newEvent.event = originalEvent;\n  newEvent.type = eveName;\n  newEvent.offsetX = originalEvent.offsetX;\n  newEvent.offsetY = originalEvent.offsetY;\n\n  while (current) {\n    current.trigger(eveName, newEvent);\n    current = current.getParent();\n\n    if (newEvent.cancelBubble) {\n      break;\n    }\n  }\n\n  this._dispatchToView(eveName, newEvent);\n};\n\nLayerGL.prototype._dispatchDataEvent = function (eveName, originalEvent, newEvent) {\n  var mesh = newEvent && newEvent.target;\n  var dataIndex = mesh && mesh.dataIndex;\n  var seriesIndex = mesh && mesh.seriesIndex; // Custom event data\n\n  var eventData = mesh && mesh.eventData;\n  var elChangedInMouseMove = false;\n  var eventProxy = this._zrEventProxy;\n  eventProxy.x = originalEvent.offsetX;\n  eventProxy.y = originalEvent.offsetY;\n  eventProxy.update();\n  var targetInfo = {\n    target: eventProxy\n  };\n  const ecData = echarts.helper.getECData(eventProxy);\n\n  if (eveName === 'mousemove') {\n    if (dataIndex != null) {\n      if (dataIndex !== this._lastDataIndex) {\n        if (parseInt(this._lastDataIndex, 10) >= 0) {\n          ecData.dataIndex = this._lastDataIndex;\n          ecData.seriesIndex = this._lastSeriesIndex; // FIXME May cause double events.\n\n          this.zr.handler.dispatchToElement(targetInfo, 'mouseout', originalEvent);\n        }\n\n        elChangedInMouseMove = true;\n      }\n    } else if (eventData != null) {\n      if (eventData !== this._lastEventData) {\n        if (this._lastEventData != null) {\n          ecData.eventData = this._lastEventData; // FIXME May cause double events.\n\n          this.zr.handler.dispatchToElement(targetInfo, 'mouseout', originalEvent);\n        }\n\n        elChangedInMouseMove = true;\n      }\n    }\n\n    this._lastEventData = eventData;\n    this._lastDataIndex = dataIndex;\n    this._lastSeriesIndex = seriesIndex;\n  }\n\n  ecData.eventData = eventData;\n  ecData.dataIndex = dataIndex;\n  ecData.seriesIndex = seriesIndex;\n\n  if (eventData != null || parseInt(dataIndex, 10) >= 0 && parseInt(seriesIndex, 10) >= 0) {\n    this.zr.handler.dispatchToElement(targetInfo, eveName, originalEvent);\n\n    if (elChangedInMouseMove) {\n      this.zr.handler.dispatchToElement(targetInfo, 'mouseover', originalEvent);\n    }\n  }\n};\n\nLayerGL.prototype._dispatchToView = function (eventName, e) {\n  for (var i = 0; i < this.views.length; i++) {\n    if (this.views[i].containPoint(e.offsetX, e.offsetY)) {\n      this.views[i].trigger(eventName, e);\n    }\n  }\n};\n\nObject.assign(LayerGL.prototype, notifier);\nexport default LayerGL;","/*\n * @module echarts-gl/core/ViewGL\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport ShadowMapPass from 'claygl/src/prePass/ShadowMap';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport notifier from 'claygl/src/core/mixin/notifier';\nimport EffectCompositor from '../effect/EffectCompositor';\nimport TemporalSuperSampling from '../effect/TemporalSuperSampling';\nimport halton from '../effect/halton';\n/**\n * @constructor\n * @alias module:echarts-gl/core/ViewGL\n * @param {string} [projection='perspective']\n */\n\nfunction ViewGL(projection) {\n  projection = projection || 'perspective';\n  /**\n   * @type {module:echarts-gl/core/LayerGL}\n   */\n\n  this.layer = null;\n  /**\n   * @type {clay.Scene}\n   */\n\n  this.scene = new Scene();\n  /**\n   * @type {clay.Node}\n   */\n\n  this.rootNode = this.scene;\n  this.viewport = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  };\n  this.setProjection(projection);\n  this._compositor = new EffectCompositor();\n  this._temporalSS = new TemporalSuperSampling();\n  this._shadowMapPass = new ShadowMapPass();\n  var pcfKernels = [];\n  var off = 0;\n\n  for (var i = 0; i < 30; i++) {\n    var pcfKernel = [];\n\n    for (var k = 0; k < 6; k++) {\n      pcfKernel.push(halton(off, 2) * 4.0 - 2.0);\n      pcfKernel.push(halton(off, 3) * 4.0 - 2.0);\n      off++;\n    }\n\n    pcfKernels.push(pcfKernel);\n  }\n\n  this._pcfKernels = pcfKernels;\n  this.scene.on('beforerender', function (renderer, scene, camera) {\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n  }, this);\n}\n/**\n * Set camera type of group\n * @param {string} cameraType 'perspective' | 'orthographic'\n */\n\n\nViewGL.prototype.setProjection = function (projection) {\n  var oldCamera = this.camera;\n  oldCamera && oldCamera.update();\n\n  if (projection === 'perspective') {\n    if (!(this.camera instanceof PerspectiveCamera)) {\n      this.camera = new PerspectiveCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } else {\n    if (!(this.camera instanceof OrthographicCamera)) {\n      this.camera = new OrthographicCamera();\n\n      if (oldCamera) {\n        this.camera.setLocalTransform(oldCamera.localTransform);\n      }\n    }\n  } // PENDING\n\n\n  this.camera.near = 0.1;\n  this.camera.far = 2000;\n};\n/**\n * Set viewport of group\n * @param {number} x Viewport left bottom x\n * @param {number} y Viewport left bottom y\n * @param {number} width Viewport height\n * @param {number} height Viewport height\n * @param {number} [dpr=1]\n */\n\n\nViewGL.prototype.setViewport = function (x, y, width, height, dpr) {\n  if (this.camera instanceof PerspectiveCamera) {\n    this.camera.aspect = width / height;\n  }\n\n  dpr = dpr || 1;\n  this.viewport.x = x;\n  this.viewport.y = y;\n  this.viewport.width = width;\n  this.viewport.height = height;\n  this.viewport.devicePixelRatio = dpr; // Source and output of compositor use high dpr texture.\n  // But the intermediate texture of bloom, dof effects use fixed 1.0 dpr\n\n  this._compositor.resize(width * dpr, height * dpr);\n\n  this._temporalSS.resize(width * dpr, height * dpr);\n};\n/**\n * If contain screen point x, y\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @return {boolean}\n */\n\n\nViewGL.prototype.containPoint = function (x, y) {\n  var viewport = this.viewport;\n  var height = this.layer.renderer.getHeight(); // Flip y;\n\n  y = height - y;\n  return x >= viewport.x && y >= viewport.y && x <= viewport.x + viewport.width && y <= viewport.y + viewport.height;\n};\n/**\n * Cast a ray\n * @param {number} x offsetX\n * @param {number} y offsetY\n * @param {clay.math.Ray} out\n * @return {clay.math.Ray}\n */\n\n\nvar ndc = new Vector2();\n\nViewGL.prototype.castRay = function (x, y, out) {\n  var renderer = this.layer.renderer;\n  var oldViewport = renderer.viewport;\n  renderer.viewport = this.viewport;\n  renderer.screenToNDC(x, y, ndc);\n  this.camera.castRay(ndc, out);\n  renderer.viewport = oldViewport;\n  return out;\n};\n/**\n * Prepare and update scene before render\n */\n\n\nViewGL.prototype.prepareRender = function () {\n  this.scene.update();\n  this.camera.update();\n  this.scene.updateLights();\n  var renderList = this.scene.updateRenderList(this.camera);\n  this._needsSortProgressively = false; // If has any transparent mesh needs sort triangles progressively.\n\n  for (var i = 0; i < renderList.transparent.length; i++) {\n    var renderable = renderList.transparent[i];\n    var geometry = renderable.geometry;\n\n    if (geometry.needsSortVerticesProgressively && geometry.needsSortVerticesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n\n    if (geometry.needsSortTrianglesProgressively && geometry.needsSortTrianglesProgressively()) {\n      this._needsSortProgressively = true;\n    }\n  }\n\n  this._frame = 0;\n\n  this._temporalSS.resetFrame(); // var lights = this.scene.getLights();\n  // for (var i = 0; i < lights.length; i++) {\n  //     if (lights[i].cubemap) {\n  //         if (this._compositor && this._compositor.isSSREnabled()) {\n  //             lights[i].invisible = true;\n  //         }\n  //         else {\n  //             lights[i].invisible = false;\n  //         }\n  //     }\n  // }\n\n};\n\nViewGL.prototype.render = function (renderer, accumulating) {\n  this._doRender(renderer, accumulating, this._frame);\n\n  this._frame++;\n};\n\nViewGL.prototype.needsAccumulate = function () {\n  return this.needsTemporalSS() || this._needsSortProgressively;\n};\n\nViewGL.prototype.needsTemporalSS = function () {\n  var enableTemporalSS = this._enableTemporalSS;\n\n  if (enableTemporalSS === 'auto') {\n    enableTemporalSS = this._enablePostEffect;\n  }\n\n  return enableTemporalSS;\n};\n\nViewGL.prototype.hasDOF = function () {\n  return this._enableDOF;\n};\n\nViewGL.prototype.isAccumulateFinished = function () {\n  return this.needsTemporalSS() ? this._temporalSS.isFinished() : this._frame > 30;\n};\n\nViewGL.prototype._doRender = function (renderer, accumulating, accumFrame) {\n  var scene = this.scene;\n  var camera = this.camera;\n  accumFrame = accumFrame || 0;\n\n  this._updateTransparent(renderer, scene, camera, accumFrame);\n\n  if (!accumulating) {\n    this._shadowMapPass.kernelPCF = this._pcfKernels[0]; // Not render shadowmap pass in accumulating frame.\n\n    this._shadowMapPass.render(renderer, scene, camera, true);\n  }\n\n  this._updateShadowPCFKernel(accumFrame); // Shadowmap will set clear color.\n\n\n  var bgColor = renderer.clearColor;\n  renderer.gl.clearColor(bgColor[0], bgColor[1], bgColor[2], bgColor[3]);\n\n  if (this._enablePostEffect) {\n    // normal render also needs to be jittered when have edge pass.\n    if (this.needsTemporalSS()) {\n      this._temporalSS.jitterProjection(renderer, camera);\n    }\n\n    this._compositor.updateNormal(renderer, scene, camera, this._temporalSS.getFrame());\n  } // Always update SSAO to make sure have correct ssaoMap status\n\n\n  this._updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n\n  if (this._enablePostEffect) {\n    var frameBuffer = this._compositor.getSourceFrameBuffer();\n\n    frameBuffer.bind(renderer);\n    renderer.gl.clear(renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT);\n    renderer.render(scene, camera, true, true);\n    frameBuffer.unbind(renderer);\n\n    if (this.needsTemporalSS() && accumulating) {\n      this._compositor.composite(renderer, scene, camera, this._temporalSS.getSourceFrameBuffer(), this._temporalSS.getFrame());\n\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n\n      this._compositor.composite(renderer, scene, camera, null, 0);\n    }\n  } else {\n    if (this.needsTemporalSS() && accumulating) {\n      var frameBuffer = this._temporalSS.getSourceFrameBuffer();\n\n      frameBuffer.bind(renderer);\n      renderer.saveClear();\n      renderer.clearBit = renderer.gl.DEPTH_BUFFER_BIT | renderer.gl.COLOR_BUFFER_BIT;\n      renderer.render(scene, camera, true, true);\n      renderer.restoreClear();\n      frameBuffer.unbind(renderer);\n      renderer.setViewport(this.viewport);\n\n      this._temporalSS.render(renderer);\n    } else {\n      renderer.setViewport(this.viewport);\n      renderer.render(scene, camera, true, true);\n    }\n  } // this._shadowMapPass.renderDebug(renderer);\n  // this._compositor._normalPass.renderDebug(renderer);\n\n};\n\nViewGL.prototype._updateTransparent = function (renderer, scene, camera, frame) {\n  var v3 = new Vector3();\n  var invWorldTransform = new Matrix4();\n  var cameraWorldPosition = camera.getWorldPosition();\n  var transparentList = scene.getRenderList(camera).transparent; // Sort transparent object.\n\n  for (var i = 0; i < transparentList.length; i++) {\n    var renderable = transparentList[i];\n    var geometry = renderable.geometry;\n    Matrix4.invert(invWorldTransform, renderable.worldTransform);\n    Vector3.transformMat4(v3, cameraWorldPosition, invWorldTransform);\n\n    if (geometry.needsSortTriangles && geometry.needsSortTriangles()) {\n      geometry.doSortTriangles(v3, frame);\n    }\n\n    if (geometry.needsSortVertices && geometry.needsSortVertices()) {\n      geometry.doSortVertices(v3, frame);\n    }\n  }\n};\n\nViewGL.prototype._updateSSAO = function (renderer, scene, camera) {\n  var ifEnableSSAO = this._enableSSAO && this._enablePostEffect;\n\n  if (ifEnableSSAO) {\n    this._compositor.updateSSAO(renderer, scene, camera, this._temporalSS.getFrame());\n  }\n\n  var renderList = scene.getRenderList(camera);\n\n  for (var i = 0; i < renderList.opaque.length; i++) {\n    var renderable = renderList.opaque[i]; // PENDING\n\n    if (renderable.renderNormal) {\n      renderable.material[ifEnableSSAO ? 'enableTexture' : 'disableTexture']('ssaoMap');\n    }\n\n    if (ifEnableSSAO) {\n      renderable.material.set('ssaoMap', this._compositor.getSSAOTexture());\n    }\n  }\n};\n\nViewGL.prototype._updateShadowPCFKernel = function (frame) {\n  var pcfKernel = this._pcfKernels[frame % this._pcfKernels.length];\n  var renderList = this.scene.getRenderList(this.camera);\n  var opaqueList = renderList.opaque;\n\n  for (var i = 0; i < opaqueList.length; i++) {\n    if (opaqueList[i].receiveShadow) {\n      opaqueList[i].material.set('pcfKernel', pcfKernel);\n      opaqueList[i].material.define('fragment', 'PCF_KERNEL_SIZE', pcfKernel.length / 2);\n    }\n  }\n};\n\nViewGL.prototype.dispose = function (renderer) {\n  this._compositor.dispose(renderer.gl);\n\n  this._temporalSS.dispose(renderer.gl);\n\n  this._shadowMapPass.dispose(renderer);\n};\n/**\n * @param {module:echarts/Model} Post effect model\n */\n\n\nViewGL.prototype.setPostEffect = function (postEffectModel, api) {\n  var compositor = this._compositor;\n  this._enablePostEffect = postEffectModel.get('enable');\n  var bloomModel = postEffectModel.getModel('bloom');\n  var edgeModel = postEffectModel.getModel('edge');\n  var dofModel = postEffectModel.getModel('DOF', postEffectModel.getModel('depthOfField'));\n  var ssaoModel = postEffectModel.getModel('SSAO', postEffectModel.getModel('screenSpaceAmbientOcclusion'));\n  var ssrModel = postEffectModel.getModel('SSR', postEffectModel.getModel('screenSpaceReflection'));\n  var fxaaModel = postEffectModel.getModel('FXAA');\n  var colorCorrModel = postEffectModel.getModel('colorCorrection');\n  bloomModel.get('enable') ? compositor.enableBloom() : compositor.disableBloom();\n  dofModel.get('enable') ? compositor.enableDOF() : compositor.disableDOF();\n  ssrModel.get('enable') ? compositor.enableSSR() : compositor.disableSSR();\n  colorCorrModel.get('enable') ? compositor.enableColorCorrection() : compositor.disableColorCorrection();\n  edgeModel.get('enable') ? compositor.enableEdge() : compositor.disableEdge();\n  fxaaModel.get('enable') ? compositor.enableFXAA() : compositor.disableFXAA();\n  this._enableDOF = dofModel.get('enable');\n  this._enableSSAO = ssaoModel.get('enable');\n  this._enableSSAO ? compositor.enableSSAO() : compositor.disableSSAO();\n  compositor.setBloomIntensity(bloomModel.get('intensity'));\n  compositor.setEdgeColor(edgeModel.get('color'));\n  compositor.setColorLookupTexture(colorCorrModel.get('lookupTexture'), api);\n  compositor.setExposure(colorCorrModel.get('exposure'));\n  ['radius', 'quality', 'intensity'].forEach(function (name) {\n    compositor.setSSAOParameter(name, ssaoModel.get(name));\n  });\n  ['quality', 'maxRoughness', 'physical'].forEach(function (name) {\n    compositor.setSSRParameter(name, ssrModel.get(name));\n  });\n  ['quality', 'focalDistance', 'focalRange', 'blurRadius', 'fstop'].forEach(function (name) {\n    compositor.setDOFParameter(name, dofModel.get(name));\n  });\n  ['brightness', 'contrast', 'saturation'].forEach(function (name) {\n    compositor.setColorCorrection(name, colorCorrModel.get(name));\n  });\n};\n\nViewGL.prototype.setDOFFocusOnPoint = function (depth) {\n  if (this._enablePostEffect) {\n    if (depth > this.camera.far || depth < this.camera.near) {\n      return;\n    }\n\n    this._compositor.setDOFParameter('focalDistance', depth);\n\n    return true;\n  }\n};\n\nViewGL.prototype.setTemporalSuperSampling = function (temporalSuperSamplingModel) {\n  this._enableTemporalSS = temporalSuperSamplingModel.get('enable');\n};\n\nViewGL.prototype.isLinearSpace = function () {\n  return this._enablePostEffect;\n};\n\nViewGL.prototype.setRootNode = function (rootNode) {\n  if (this.rootNode === rootNode) {\n    return;\n  }\n\n  var children = this.rootNode.children();\n\n  for (var i = 0; i < children.length; i++) {\n    rootNode.add(children[i]);\n  }\n\n  if (rootNode !== this.scene) {\n    this.scene.add(rootNode);\n  }\n\n  this.rootNode = rootNode;\n}; // Proxies\n\n\nViewGL.prototype.add = function (node3D) {\n  this.rootNode.add(node3D);\n};\n\nViewGL.prototype.remove = function (node3D) {\n  this.rootNode.remove(node3D);\n};\n\nViewGL.prototype.removeAll = function (node3D) {\n  this.rootNode.removeAll(node3D);\n};\n\nObject.assign(ViewGL.prototype, notifier);\nexport default ViewGL;"],"names":["t","e","module","exports","this","n","r","i","s","u","a","o","c","f","h","d","l","$","y","M","name","weekdays","split","months","ordinal","m","String","length","Array","join","v","z","utcOffset","Math","abs","floor","date","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","g","S","_","O","args","arguments","b","locale","$L","utc","$u","x","$x","$offset","parse","prototype","$d","Date","NaN","test","match","substring","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","slice","$locale","weekStart","$set","min","daysInMonth","get","Number","round","subtract","format","invalidDate","meridiem","monthsShort","weekdaysMin","weekdaysShort","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","k","forEach","extend","$i","isDayjs","en","Ls","vec3","glmatrix","isDimensionStacked","echarts","ifCrossZero","extent","max","cartesian3DLayout","seriesModel","coordSys","data","getData","barSize","barWidth","barDepth","size","xAxis","getAxis","yAxis","type","getBandWidth","sqrt","count","zAxisExtent","scale","getExtent","ifZAxisCrossZero","dims","map","coordDimName","coordDimToDataDim","isStacked","valueDim","getCalculationInfo","each","idx","stackedValue","baseValue","start","dataToPoint","end","height","dist","dir","setItemLayout","setLayout","dimX","dimY","xExtent","getDataExtent","yExtent","xSpan","ySpan","dimSize","tmp","Uint8Array","xIdx","yIdx","filledCount","globeLayout","barMinHeight","perimeter","radius","PI","fillRatio","evaluateBarSparseness","getValueDimension","lng","lat","val","dimension","altitudeAxis","dataToCoord","sub","normalize","Vector3","UP","array","geo3DLayout","mapService3DLayout","dimLng","dimLat","dimAlt","corner0","corner1","getScale","dataDims","registerBarLayout","registers","registerLayout","ecModel","api","eachSeriesByType","coordinateSystem","coordSysType","Bar3DSeries","dependencies","visualStyleAccessPathvisu","getInitialData","option","createList","getFormattedLabel","dataIndex","status","dataType","dimIndex","text","formatUtil","formatTooltip","defaultOption","globeIndex","grid3DIndex","zlevel","bevelSize","bevelSmoothness","onGridPlane","shading","minHeight","itemStyle","opacity","label","show","distance","textStyle","fontSize","color","backgroundColor","padding","borderRadius","emphasis","animationDurationUpdate","componentShadingMixin","__ecgl__","groupGL","graphicGL","Node","_api","_labelsBuilder","LabelsBuilder","self","getLabelPosition","position","_data","layout","getItemLayout","scaleAndAdd","getMesh","renderOrder","render","_prevBarMesh","_barMesh","Mesh","geometry","BarsGeometry","shadowDepthMaterial","Material","shader","Shader","source","culling","renderNormal","remove","_doRender","viewGL","methodName","isLinearSpace","material","updateData","updateLabels","_updateAnimation","updateVertexAnimation","enableNormal","barMesh","shadingPrefix","createMaterial","setMaterialFromModel","resetOffset","bevelSegments","colorArr","vertexColors","Float32Array","colorOffset","barCount","hasTransparent","hasValue","getItemVisualColor","getItemVisualOpacity","parseColor","setBarCount","orient","getLayout","barIndexOfData","_barIndexOfData","Int32Array","idx4","addBar","dirty","updateBoundingBox","transparent","depthMask","sortTriangles","_initHandler","isCartesian3D","seriesIndex","lastDataIndex","off","on","getDataIndexOfVertex","triangle","_downplay","_highlight","dispatchAction","value","barIndex","itemModel","getItemModel","emphasisItemStyleModel","getModel","emphasisColor","emphasisOpacity","setColor","getZr","refresh","highlight","payload","_toggleStatus","downplay","retrieve","queryDataIndex","normalizeToArray","dataIdx","removeAll","dispose","install","registerChartView","Bar3DView","registerSeriesModel","registerProcessor","filterSelf","use","GLViewHelper","reset","_updateCamera","getWidth","getHeight","getDevicePixelRatio","_viewTransform","matrix","updateTransform","getRoamTransform","_setCameraTransform","pt","viewTransform","vector","removeTransformInPoint","getZoom","camera","width","dpr","setViewport","left","top","bottom","right","near","far","vec4","import","sdfSpriteGLSL","PointsMesh","Geometry","dynamic","attributes","Attribute","prevPosition","prevSize","Object","assign","verticesSortMixin","createShader","enableTexture","define","sdfTexture","Texture2D","image","document","createElement","flipY","pick","_pick","bind","mode","POINTS","sizeScale","renderer","renderable","out","positionNDC","_positionNDC","viewport","ndcScaleX","ndcScaleY","vertexCount","indices","cx","cy","halfSize","point","pointWorld","transformMat4","worldTransform","push","vertexIndex","target","getWorldPosition","updateNDCPosition","worldViewProjection","is2D","pos","create","SDF_RANGE","Z_2D","isSymbolSizeSame","PointsBuilder","rootNode","_spriteImageCanvas","_startDataIndex","_endDataIndex","_sizeScale","constructor","highlightOnMouseover","update","_prevMesh","_mesh","frustumCulling","_setPositionTextureToMesh","_positionTexture","symbolInfo","_getSymbolInfo","getItemStyle","largeMode","pointSizeScale","maxSize","_updateSymbolSprite","disableTexture","rgbaArr","undefine","getVisualColor","getVisualOpacity","_originalOpacity","points","positionArr","i3","i2","symbolSize","getItemVisual","isNaN","_updateMaterial","_updateLabelBuilder","_updateHandler","getPointsMesh","highlightDataIndices","hideLabels","showLabels","aspect","_symbolType","_symbolSize","_lineWidth","lineWidth","spriteUtil","createSymbolSprite","fill","stroke","shadowColor","minMargin","createSDFFromCanvas","blendFunc","additiveBlend","blend","strokeColor","depthTest","sortVertices","positionDesc","idx3","getLabelDistance","grid3DModel","pointsMesh","model","componentIndex","updateLayout","updateView","Matrix4","mul","viewMatrix","projectionMatrix","dirtyAttribute","fadeOutAll","fadeOutPercent","geo","fadeOutOpacity","fadeInAll","setPositionTexture","texture","removePositionTexture","setSizeScale","originalSize","mesh","firstNotNull","maxSymbolSize","symbolAspect","symbolType","currentSymbolAspect","currentSymbolType","process","getSource","coordSysDimensions","dimensions","dimensionsDefine","encodeDefine","coordDimensions","dim","axis3DModel","getReferringComponents","models","dimInfo","indexOf","coordDim","ordinalMeta","getOrdinalMeta","stackCalculationInfo","enableDataStack","byIndex","stackedCoordDimension","setCalculationInfo","initData","otherDimToDataDim","otherDim","dataDim","dimName","dimItem","getDimensionInfo","otherDims","multipleSeries","formatArrayValue","vertially","result","tooltipDims","setEachItem","dimIdx","tooltip","dimType","valStr","tooltipName","getRawValue","formattedValue","getName","colorStops","colorEl","seriesName","visualStyleAccessPath","coordType","supersampling","particleType","particleDensity","particleSize","particleSpeed","particleTrail","colorTexture","gridWidth","gridHeight","LinesGeometry","_vertexOffset","_faceOffset","setLineCount","nLine","nVertex","nTriangle","triangleCount","Uint32Array","Uint16Array","addLine","vertexOffset","setTriangleIndices","createSpriteCanvas","canvas","ctx","getContext","fillStyle","arc","vectorFieldParticleGLSL","VectorFieldParticleSurface","motionBlurFactor","vectorFieldTexture","Texture","FLOAT","particleLife","_particleType","_particleSize","particleColor","particleSpeedScaling","_thisFrameTexture","_particlePass","_spawnTexture","_particleTexture0","_particleTexture1","_particlePointsMesh","_surfaceFrameBuffer","_elapsedTime","_scene","_camera","_lastFrameTexture","_supersampling","_downsampleTextures","_width","_height","parameters","minFilter","NEAREST","magFilter","useMipmap","_frameBuffer","FrameBuffer","depthBuffer","Pass","fragment","setUniform","_downsamplePass","particlePointsMesh","mainAttribute","particleLinesMesh","Line2DGeometry","lastFrameFullQuad","PlaneGeometry","_particleLinesMesh","_lastFrameFullQuadMesh","OrthoCamera","setParticleDensity","spawnTextureData","lifeRange","j","random","life","_setLineGeometry","_setPointsGeometry","pixels","texcoord0","_getParticleMesh","deltaTime","firstFrame","particleMesh","frameBuffer","particlePass","_updateDownsampleTextures","attach","gl","clear","DEPTH_BUFFER_BIT","COLOR_BUFFER_BIT","renderPass","unbind","_downsample","_swapTexture","downsampleTextures","current","sourceTexture","targetTexture","getSurfaceTexture","setRegion","region","resize","setParticleSize","_spriteTexture","setGradientTexture","gradientTexture","setColorTextureImage","colorTextureImg","setTextureImage","setParticleType","clearFrame","setSupersampling","upScale","log","disposeFrameBuffer","disposeTexture","disposeGeometry","ViewGL","_particleSurface","planeMesh","vertex","_planeMesh","particleSurface","_updateData","time","__percent","stopAnimation","animate","loop","when","during","timeNow","dTime","_renderer","itemStyleModel","pow","afterRender","globeModel","layerGL","maxMag","minMag","Infinity","offset","bbox","vx","vy","mag","xPix","yPix","_fillEmptyPixels","_updatePlanePosition","_updateGradientTexture","getVisual","fetchPixel","rg","addPixel","center","weight","visualMeta","magExtent","_gradientTexture","gradient","createLinearGradient","stops","stop","addColorStop","fillRect","leftTop","rightBottom","limitedResult","_limitInViewportAndFullFill","newLeftTop","newRightBottom","lngRange","isContinuous","newWidth","newHeight","FlowGLView","FlowGLSeries","nodes","edges","hostModel","directed","beforeLink","graph","Graph","addNode","id","nodeData","linkNameList","validEdges","linkCount","link","addEdge","dimensionNames","edgeData","linkList","mainData","struct","structAttr","datas","node","edge","datasAttr","GraphSeries","hasSymbolVisual","superApply","legendDataProvider","_categoriesData","_updateCategoriesData","mergeOption","lastDim","links","createGraphFromNodeEdge","wrapMethod","categoriesModels","_categoriesModels","categoryIdx","getShallow","categoryModel","parentModel","oldGetModel","newGetModel","path","call","resolveParentPath","pathArr","newPathArr","getGraph","getEdgeData","getCategoriesData","params","getDataParams","getEdgeByIndex","sourceName","node1","targetName","node2","html","categories","category","categoriesData","mapArray","setView","zoom","setNodePosition","opt","getRawDataItem","isAnimationEnabled","superCall","legendHoverLink","forceAtlas2","initLayout","GPU","steps","maxSteps","repulsionByDegree","linLogMode","strongGravityMode","gravity","edgeWeightInfluence","edgeWeight","nodeWeight","preventOverlap","gravityCenter","focusNodeAdjacency","focusNodeAdjacencyOn","symbol","roam","formatter","lineStyle","animation","forceAtlas2Code","defaultConfigs","scaling","jitterTolerence","dissuadeHubs","ForceAtlas2GPU","options","textureOpt","_positionSourceTex","_positionTex","_positionPrevTex","_forceTex","_forcePrevTex","_weightedSumTex","_globalSpeedTex","_globalSpeedPrevTex","_nodeRepulsionPass","_positionPass","_globalSpeedPass","_copyPass","blendEquation","FUNC_ADD","ONE","_edgeForceMesh","depthText","_weightedSumMesh","_framebuffer","_dummyCamera","OrthographicCamera","_globalSpeed","updateOption","nNodes","_nodes","positionBuffer","degree","_updateGravityCenter","_edges","_gravityCenter","textureWidth","textureHeight","_resize","mass","edgeGeometry","edgeLen","uv","getNodeUV","weigtedSumGeo","_inited","_frame","getNodes","getEdges","step","_initFromSource","nodeRepulsionPass","edgeForceMesh","enable","BLEND","clearColor","weightedSumMesh","globalSpeedPass","disable","positionPass","cb","getNodePositionTexture","nodeIndex","getNodePosition","_positionArr","readPixels","RGBA","getTextureData","textureName","tex","arr","getTextureSize","isFinished","texName","forceAtlas2Worker","vec2","len","negate","copy","Region","subRegions","nSubRegions","centerOfMass","regionProto","GraphNode","force","forcePrev","inDegree","outDegree","GraphEdge","ForceAtlas2","autoSettings","barnesHutOptimize","barnesHutTheta","rootRegion","_massArr","_swingingArr","_sizeArr","beforeUpdate","afterUpdate","_addNodeToSubRegion","_updateCenterOfMass","findSubRegion","contain","setBBox","minX","minY","maxX","maxY","_newSubRegion","subRegion","xi","yi","forceAtlas2Proto","initNodes","massArr","sizeArr","haveSize","initEdges","edgeArr","edgeWeightArr","nEdges","sIdx","tIdx","sNode","tNode","console","error","updateSettings","updateBBox","na","applyRegionToNodeRepulsion","nb","applyNodeToNodeRepulsion","applyNodeStrongGravity","applyNodeGravity","applyEdgeAttraction","swingWeightedSum","tractionWeightedSum","swing","traction","globalSpeed","speed","df","d2","factor","oneWay","getGlobalSpeed","onmessage","cmd","nodesPosition","nodesMass","nodesSize","edgesWeight","config","postMessage","buffer","emptyArr","workerUrl","workerFunc","lastIndexOf","_disposed","bb","Blob","blobURL","window","URL","createObjectURL","_worker","Worker","_$onupdate","positionTex","_onupdate","_updateTexture","lines2DGLSL","globalLayoutId","_pointsBuilder","_forceEdgesMesh","$ignorePicking","LINES","_edgesMesh","Lines2DGeometry","useNativeLine","_layoutId","_control","Roam2DControl","zr","setTarget","_clickHandler","_model","_initLayout","_forceLayoutInstance","seriesId","getOffset","setZoom","setOffset","_mousemoveHandler","_mouseOutHandler","_lastMouseOverDataIndex","_layouting","_updateForceEdgesGeometry","layoutInstance","_updateMeshLinesGeometry","setVertexCount","getLineVertexCount","setTriangleCount","getLineTriangleCount","p0","p1","lineWidthQuery","_originalEdgeColors","_edgeIndicesMap","idx1","idx2","_updateForceNodesGeometry","boxLayoutOption","getBoxLayoutParams","getLayoutRect","stopLayout","beforeLayout","layoutModel","nodeDataExtent","edgeDataExtent","edgeWeightRange","nodeWeightRange","nodesIndicesMap","layoutPoints","eachNode","hasItemOption","eachEdge","isGPU","_forceLayoutInstanceToDispose","_updatePositionTexture","from","uid","_updateAfterLayout","startLayout","layoutId","stepsCount","syncStepCount","doLayout","layer","_syncNodePosition","requestAnimationFrame","_downplayAll","focusNodes","getNodeByIndex","_fadeOutEdgesAll","focusEdges","_highlightEdge","_focusNodes","_focusEdges","unfocusNodeAdjacency","_fadeInEdgesAll","setItemColor","_downplayEdge","_getColor","_setEdgeFade","percent","noop","GraphGLView","GraphGLSeries","registerVisual","paletteScope","categoryNameIdxMap","style","getColorFromPalette","setItemVisual","symbolVisualList","symbolVisual","categoryStyle","ensureUniqueItemVisual","visualList","setVisual","getLineStyle","existsStyle","nodeStyle","registerAction","event","eachComponent","mainType","query","componentModel","Line3DSeries","visualDrawType","lines3DGLSL","_prevLine3DMesh","_line3DMesh","Lines3DGeometry","updateCamera","_updateNDCPosition","lineMesh","getPolylineVertexCount","getPolylineTriangleCount","addPolyline","debugWireframeModel","createAttribute","generateBarycentric","_points","pointToData","indicesOfNearest","multiply","nPoints","halfWidth","halfHeight","x0","y0","x1","y1","lineContain","dist0","dist1","Line3DView","item","coordDims","cross","normal","tangent","bitangent","halfVector","coord0","coord1","getCubicPointsOnGlobe","coords","pts","p2","p3","projDist","dot","cosTheta","getCubicPointsOnPlane","up","lerp","getPolylinePoints","prepareCoords","coordsList","layoutGlobe","isPolyline","res","getPointsMethod","layoutOnPlane","lines3DLayout","lineData","dataItem","geo3DIndex","polyline","effect","period","trailWidth","trailLength","spotIntensity","silent","blendMode","sign","trail2GLSL","lines3DGeometry","effectModel","useConstantSpeed","attrName","extraAttrs","effectColor","effectOpacity","hasEffectColor","hasEffectOpacity","updateWorldTransform","xScale","yScale","zScale","maxDistance","getCubicCurveVertexCount","posPrev","randomStart","distAll","setAnimationTime","getCoordSysSize","_meshLinesMaterial","_linesMesh","_trailMesh","TrailMesh2","_updateLines","trailMesh","__time","_curveEffectsAnimator","pauseEffect","pause","resumeEffect","resume","toggleEffect","animator","isPaused","expandLine","segmentScale","lineWidthQueryPath","maxLineWidth","getCubicCurveTriangleCount","addCubicCurve","Lines3DView","Lines3DSeries","LinesGLSeries","streamEnabled","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","appendData","concatArray","getRawData","_getCoordsFromItemModel","getLineCoordsCount","getLineCoords","startOffset","coordsOffsetAndLenStorage","coordsStorage","Float64Array","coordsCursor","offsetCursor","dataCount","progressive","progressiveThreshold","postEffect","colorCorrection","exposure","brightness","contrast","saturation","_glViewHelper","_nativeLinesShader","_meshLinesShader","_linesMeshes","_currentStep","linesMesh","_createLinesMesh","_updateLinesMesh","setPostEffect","incrementalPrepareRender","incrementalRender","curveness","attachShader","TRIANGLES","lineCoords","t2","updateBezierControlPoints","lineCount","LinesGLView","transformPolygon","mapbox3DCoordSys","poly","newPoly","Map3DSeries","layoutMode","optionUpdated","newOpt","groundPlane","_geo","getFilledRegions","list","regionModelMap","_regionModelMap","getRegionModel","getRegionPolygonCoords","transform","getRegion","geometries","geo3DCreator","createGeo3D","ret","interiors","exterior","geo3DModelMixin","componentViewControlMixin","componentPostEffectMixin","componentLightMixin","_geo3DBuilder","Geo3DBuilder","map3DModel","_sceneHelper","SceneHelper","initLight","setScene","scene","updateLight","setTemporalSuperSampling","control","OrbitControl","viewControlModel","setViewGL","setFromViewControlModel","alpha","getAlpha","beta","getBeta","getDistance","map3DId","extrudeY","srgbDefineMethod","traverse","updateAmbientCubemap","updateSkybox","installGeo3D","Map3DView","subType","Polygons3DSeries","polygonsData","multiPolygon","borderWidth","borderColor","_geo3DBuilderList","geo3DBuilder","_updateShaderDefines","Polygons3DView","_pointsBuilderList","pointsBuilder","isHighlight","Scatter3DView","Scatter3DSeries","seriesType","progress","large","zoomScale","_removeTransformInPoints","ScatterGLView","ScatterGLSeries","mapDimension","SurfaceSeries","validateDimension","dimOpts","getPrecision","parametric","parametricEquation","uOpts","vOpts","uCount","vCount","uPrecision","vPrecision","u2","v2","equation","xOpts","yOpts","xCount","yCount","xPrecision","yPrecision","x2","y2","wireframe","dataShape","isPointsNaN","_prevSurfaceMesh","_surfaceMesh","_createSurfaceMesh","isParametric","_getDataShape","wireframeModel","wireframeLineWidth","showWireframe","_updateSurfaceMesh","trianglesSortMixin","surfaceMesh","getNearestPointIdx","nearestDist","nearestIdx","minDist","squaredDistance","pointsArr","invalidDataCount","needsSplitQuad","positionAttr","normalAttr","texcoordAttr","barycentricAttr","barycentric","colorAttr","row","column","needsNormal","quadToTriangle","quadBarycentric","getQuadIndices","isTransparent","quadIndices","faceOffset","v21","v32","getFromArray","vertexNormals","farPoints","invisibleQuad","k3","uvArr","cursor","generateVertexNormals","generateTangents","prevX","rowCount","columnCount","mayInvalid","rowDim","rows","SurfaceView","surfaceModel","cartesian","nanPoint","_triangulationResults","_shadersMap","COMMON_SHADERS","filter","shaderName","reduce","obj","_linesShader","groundMaterials","_groundMaterials","_groundMesh","castShadow","rotation","rotateX","_initMeshes","_startIndex","_endIndex","_triangulation","_getShader","_prepareMesh","_updateRegionMesh","_updateGroundPlane","getCenter","_updateDebugWireframe","_lastHoverDataIndex","createPolygonMesh","lambert","ignorePicking","polygonMesh","LinesGeo","_polygonMesh","__shading","polygonVertexCount","polygonTriangleCount","linesVertexCount","linesTriangleCount","polyInfo","_getRegionPolygonInfo","lineInfo","_getRegionLinesInfo","polygonGeo","_dataIndexOfVertex","_vertexRangeOfDataIndex","triangleOffset","hasTranparentRegion","regionModel","borderColorArr","regionHeight","newOffsets","_updatePolygonGeometry","hasLine","_updateLinesGeometry","invisible","frontFace","CCW","CW","_onmousemove","_onmouseout","geo3D","groundModel","minAll","maxAll","polygons","polygonCoords","holes","startIdx","triangles","earcut","points3","off3","_geoBoundingBox","sideVertexCount","sideTriangleCount","projectUVOnGround","hasColor","extrudeCoordIndex","sideCoordIndex","maxDimSize","addVertices","polygon","insideOffset","pointsLen","currentPosition","buildTopBottom","startVertexOffset","normalTop","normalBottom","ringVertexCount","quadPos","next","dx","dy","sideLen","isCurrent","convertToPoints3","whiteColor","_setColorOfDataIndex","LABEL_NORMAL_SHOW_BIT","LABEL_EMPHASIS_SHOW_BIT","_labelsMesh","LabelsMesh","_labelTextureSurface","ZRTextureAtlasSurface","devicePixelRatio","onupdate","getTexture","_labelsVisibilitiesBits","normalLabelVisibilityQuery","emphasisLabelVisibilityQuery","normalVisibility","emphasisVisibility","bit","_start","_end","hasHighlightData","highlightDataIndicesMap","convertToDynamicArray","normalLabelQuery","emphasisLabelQuery","seriesLabelModel","seriesLabelEmphasisModel","textAlignMap","textVerticalAlignMap","isEmphasis","ifShow","labelModel","textEl","createTextStyle","align","verticalAlign","rect","getBoundingRect","lineHeight","textAlign","textVerticalAlign","addSprite","getCoordsScale","refreshImmediately","convertToTypedArray","_skybox","attachScene","_lightRoot","mainLight","DirectionalLight","shadowBias","ambientLight","AmbientLight","lightModel","mainLightModel","ambientLightModel","intensity","setArray","directionFromAlphaBeta","lookAt","ZERO","shadowResolution","getShadowResolution","ambientCubemapModel","textureUrl","_cubemapLightsCache","lights","createAmbientCubemap","_isSkyboxFromAmbientCubemap","setEnvironmentMap","specular","cubemap","diffuse","_currentCubemapLights","environmentUrl","getSkybox","Skybox","skybox","detachScene","anisotropic","shape","loadTexture","light","main","shadow","shadowQuality","ambient","ambientCubemap","diffuseIntensity","specularIntensity","bloom","depthOfField","focalRange","focalDistance","blurRadius","fstop","quality","screenSpaceAmbientOcclusion","screenSpaceReflection","maxRoughness","lookupTexture","FXAA","temporalSuperSampling","realisticMaterial","textureTiling","textureOffset","detailTexture","lambertMaterial","colorMaterial","hatchingMaterial","paperColor","viewControl","projection","autoRotate","autoRotateDirection","autoRotateSpeed","autoRotateAfterStill","damping","rotateSensitivity","zoomSensitivity","panSensitivity","panMouseButton","rotateMouseButton","minDistance","orthographicSize","maxOrthographicSize","minOrthographicSize","minAlpha","maxAlpha","opts","Geo3DModel","regions","serName","geo3DModel","geo3DId","registerComponentModel","registerComponentView","Geo3DView","registerCoordinateSystem","defaultId","GlobeModel","layers","layerOption","defaultLayerOption","oldLayers","createLayerMap","newLayerMap","oldLayerMap","updateDisplacementHash","environment","baseColor","baseTexture","heightTexture","displacementTexture","displacementScale","displacementQuality","globeRadius","globeOuterRadius","atmosphere","glowPower","innerGlowPower","targetCoord","setDisplacementData","displacementData","displacementWidth","displacementHeight","getDisplacementTexture","getDisplacemenScale","hasDisplacement","_displacementChanged","_displacementScale","_displacementTexture","isDisplacementChanged","utilShaderCode","atmosphereShaderCode","_sphereGeometry","SphereGeometry","widthSegments","heightSegments","_overlayGeometry","_planeGeometry","_earthMesh","_atmosphereMesh","_atmosphereGeometry","_atmosphereMaterial","_layerMeshes","earthMesh","setUniforms","glowColor","diffuseTexture","surface","attachToMesh","bumpTexture","_updateLight","_displaceVertices","_updateViewControl","_updateLayers","lastDistance","layerDiffuseTextures","layerDiffuseIntensity","layerEmissiveTextures","layerEmissionIntensity","layerModel","layerType","blendTo","overlayMesh","__lambertMaterial","autoUpdateTextureStatus","__colorMaterial","blankTexture","_blankTexture","createBlankTexture","earthMaterial","makeAction","globeId","coord","baseDistance","showDebugWireframe","globe","_displacementQuality","_showDebugWireframe","low","medium","high","ultra","build","_doDisplaceVertices","originalPositionArr","__originalPosition","sunCalc","getPosition","r0","cos","altitude","azimuth","sin","Globe","containPoint","_getDisplacementScale","altVal","theta","asin","phi","atan2","coordToData","getDisplacementData","img","drawImage","getImageData","displacementArr","resizeGlobe","outerRadius","setExtent","updateGlobe","altitudeDataExtent","eachSeries","altDims","altDim","dataExtent","isFinite","globeCreator","globeList","__viewGL","getComponent","Error","displacementTextureValue","immediateLoaded","GlobeView","Grid3DModel","boxWidth","boxHeight","boxDepth","axisPointer","margin","axisLine","axisTick","inside","axisLabel","rotate","splitLine","splitArea","areaStyle","dimIndicesMap","updateFacePlane","plane","otherAxis","getExtentMin","getExtentMax","identity","rotateY","Grid3DFace","faceInfo","linesMaterial","quadsMaterial","quadsMesh","QuadsGeometry","Plane","axes","lineGeometry","quadsGeometry","_updateSplitLines","_udpateSplitAreas","axis","axisModel","otherExtent","isBlank","splitLineModel","lineStyleModel","lineColors","ticksCoords","getTicksCoords","tickModel","tickCoord","lineColor","splitAreaModel","areaStyleModel","colors","clamp","prevP0","prevP1","addQuad","Grid3DAxis","axisLabelsMesh","labelsMesh","axisLineCoords","labelElements","axisLabelSurface","linesGeo","labelsGeo","axisLineModel","axisTickModel","axisLabelModel","axisLineColor","axisLineStyleModel","tickLength","otherIdx","categoryData","labelMargin","labels","getViewLabels","tickValue","formattedLabel","rawLabel","itemTextStyleModel","textColor","nameTextStyleModel","labelColor","__idx","nameLabelElement","setSpriteAlign","labelGeo","labelEl","nameLabelEl","FACES","DIMS","_faces","face","_axes","_axisLabelSurface","_axisPointerLineMesh","_axisPointerLabelsSurface","_axisPointerLabelsMesh","_onCameraChange","_initMouseHandler","showAxisPointer","grid3dModel","_doShowAxisPointer","_updateAxisPointer","hideAxisPointer","_doHideAxisPointer","_updateAxisPointerOnMousePosition","nearestIntersectPoint","ray","castRay","offsetX","offsetY","Ray","intersectPlane","axis0","axis1","idx0","_updateFaceVisibility","_updateAxisLinePosition","grid3DId","getCamera","viewSpacePos","depths","frontIndex","backFace","zAxis","xAxisNode","yAxisNode","zAxisNode","faces","xAxisZOffset","xAxisYOffset","yAxisXOffset","yAxisYOffset","zAxisXOffset","zAxisZOffset","flipped","rotateZ","_updateAxisLabelAlign","Vector4","axisInfo","axisPointerLineMesh","axisPointerParentModel","ifShowAxisPointer","getAxisColorAndLineWidth","axisPointerModel","otherCoord","otherDimIdx","faceOtherDim","faceOtherAxis","faceOtherDimIdx","colorAndLineWidth","_updateAxisPointerLabelsMesh","axisPointerLabelsMesh","axisPointerLabelsSurface","getLabel","precision","getTicks","toFixed","toArray","Cartesian3D","Cartesian","containData","Axis3D","_extent","calculateCategoryInterval","resizeCartesian3D","updateCartesian3D","dataExtents","unionDataExtents","mapDimensionsAll","axisType","charAt","cartesian3D","isCategory","onBand","inverse","getLabelModel","getTickModel","addAxis","grid3DCreator","cartesian3DList","axesTypes","findAxesModels","firstGridModel","axesModels","getCoordSysModel","Axis3DModel","queryComponents","index","gridIndex","gridId","nameLocation","nameTextStyle","nameGap","categoryAxis","boundaryGap","alignWithLabel","interval","valueAxis","splitNumber","timeAxis","logAxis","logBase","categoryAxis3D","valueAxis3D","timeAxis3D","logAxis3D","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","AxisModel","__ordinalMeta","mergeDefaultAndTheme","themeModel","getTheme","getDefaultOption","thisOption","OrdinalMeta","createByAxisModel","getCategories","axisDefault","registerSubTypeDefaulter","getAxisType","axisDim","Grid3DView","createAxis3DModel","toUpperCase","AxisView","ComponentView","MAPBOX_CAMERA_OPTION","Mapbox3DModel","pitch","bearing","altitudeScale","getMapboxCameraOption","key","setMapboxCameraOption","getMapbox","_mapbox","setMapbox","mapbox","Mapbox3DLayer","dom","cssText","mapboxgl","Map","container","_initEvents","setUnpainted","EVENTS","mapboxRoot","getCanvasContainer","_handlers","contextmenu","preventDefault","eName","bubbles","newE","dispatchEvent","addEventListener","removeEventListener","displayShadowGLSL","_zrLayer","painter","insertLayer","dispatchInteractAction","_dispatchInteractAction","mapbox3DModel","styleDesc","styleStr","JSON","stringify","_oldStyleStr","setStyle","setCenter","setPitch","setBearing","_updateGroundMesh","_mapbox3DModel","setCameraOption","getPitch","getBearing","mapbox3DId","ray1","Vector2","ray2","pos0","pos1","delLayer","Mapbox3D","MapService3D","mapbox3DCreator","createMapService3DCreator","mapbox3DList","mapbox3D","Mapbox3DView","MAPTALKS_CAMERA_OPTION","Maptalks3DModel","urlTemplate","attribution","getMaptalksCameraOption","setMaptalksCameraOption","getMaptalks","_maptalks","setMaptalks","maptalks","Maptalks3DLayer","defaultCenter","defaultZoom","doubleClickZoom","fog","checkSize","maptalksRoot","firstElementChild","_initMaptalksLayer","maptalks3DModel","mtks","baseLayer","getBaseLayer","_oldUrlTemplate","setOptions","TileLayer","subdomains","setBaseLayer","_maptalks3DModel","getMapboxZoom","getResolution","maptalks3DId","MAX_RES","LN2","Maptalks3D","maxPitch","zoomOffset","maptalks3DCreator","maptalks3DList","maptalks3D","Maptalks3DView","mat4","geoFixFuncs","textCoord","geoCoord","Geo3D","geoJson","specialAreas","nameMap","_nameCoordMap","loadGeoJson","invTransform","parseGeoJSON","regionsMap","regionName","addGeoCoord","specialArea","transformTo","_regionsMap","_geoRect","fixFunc","getGeoBoundingRect","regionRect","union","getRegionByCoord","setSize","depth","scaleX","scaleZ","translateX","translateZ","translate","invert","altitudeVal","resizeGeo3D","geoRect","updateGeo3D","idStart","geo3DList","mapData","features","regionsArr","dataNameMap","properties","minBeta","maxBeta","TILE_SIZE","FOV","WORLD_SCALE","MapServiceCoordSys3D","altitudeExtent","_origin","_initialZoom","projectOnTileWithScale","cameraToCenterDistance","tan","halfFov","groundAngle","topHalfSurfaceDistance","furthestDistance","farZ","perspective","decomposeProjectionMatrix","invertM","decomposeWorldTransform","verticalScale","worldSize","range","projectOnTile","lambda2","phi2","unprojectFromTile","unprojectOnTileWithScale","atan","exp","serviceComponentType","ServiceCtor","afterCreate","resizeMapService3D","mapService3DModel","updateService3D","mapService3DList","setRootNode","mapService3DCoordSys","LayerGL","Renderer","clearBit","preserveDrawingBuffer","premultipliedAlpha","className","innerHTML","onglobalout","views","_picking","RayPicking","_viewsToDispose","_accumulatingId","_zrEventProxy","__isGLToZRProxy","_backgroundColor","removeFromZr","__zr","removeAnimatorsFromZr","addView","view","splice","addAnimatorsToZr","removeView","removeViewsAll","colorMask","clearDepth","needsRefresh","bgColor","prepareRender","_trackAndClean","_startAccumulating","renderToCanvas","accumulating","saveViewport","restoreViewport","_stopAccumulating","clearTimeout","_accumulatingTimeout","accumulatingId","markUnused","resourceList","__used__","checkAndDispose","updateUsed","resource","collectResources","textureResourceList","geometryResourceList","prevMaterial","prevGeometry","isRenderable","textureUniforms","getTextureUniforms","uniformName","uniforms","immediate","needsAccumulate","accumulate","isAccumulateFinished","setTimeout","textureList","geometriesList","_textureList","_geometriesList","onmousedown","pickObject","_dispatchEvent","_dispatchDataEvent","_downX","_downY","onmousemove","lastHovered","_hovered","relatedTarget","setCursorStyle","onmouseup","_upX","_upY","onclick","dblclick","_clickToSetFocusPoint","success","setDOFFocusOnPoint","oldViewport","hasDOF","output","pickAll","sort","eveName","originalEvent","newEvent","cancelBubble","trigger","getParent","_dispatchToView","eventData","elChangedInMouseMove","eventProxy","targetInfo","ecData","_lastDataIndex","parseInt","_lastSeriesIndex","handler","dispatchToElement","_lastEventData","eventName","notifier","Scene","setProjection","_compositor","EffectCompositor","_temporalSS","TemporalSuperSampling","_shadowMapPass","ShadowMapPass","pcfKernels","pcfKernel","halton","_pcfKernels","needsTemporalSS","jitterProjection","oldCamera","PerspectiveCamera","setLocalTransform","localTransform","ndc","screenToNDC","updateLights","renderList","updateRenderList","_needsSortProgressively","needsSortVerticesProgressively","needsSortTrianglesProgressively","resetFrame","enableTemporalSS","_enableTemporalSS","_enablePostEffect","_enableDOF","accumFrame","_updateTransparent","kernelPCF","_updateShadowPCFKernel","updateNormal","getFrame","_updateSSAO","getSourceFrameBuffer","composite","saveClear","restoreClear","frame","v3","invWorldTransform","cameraWorldPosition","transparentList","getRenderList","needsSortTriangles","doSortTriangles","needsSortVertices","doSortVertices","ifEnableSSAO","_enableSSAO","updateSSAO","opaque","getSSAOTexture","opaqueList","receiveShadow","postEffectModel","compositor","bloomModel","edgeModel","dofModel","ssaoModel","ssrModel","fxaaModel","colorCorrModel","enableBloom","disableBloom","enableDOF","disableDOF","enableSSR","disableSSR","enableColorCorrection","disableColorCorrection","enableEdge","disableEdge","enableFXAA","disableFXAA","enableSSAO","disableSSAO","setBloomIntensity","setEdgeColor","setColorLookupTexture","setExposure","setSSAOParameter","setSSRParameter","setDOFParameter","setColorCorrection","temporalSuperSamplingModel","children","node3D"],"sourceRoot":""}