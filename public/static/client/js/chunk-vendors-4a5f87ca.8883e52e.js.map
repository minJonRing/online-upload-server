{"version":3,"file":"static/client/js/chunk-vendors-4a5f87ca.8883e52e.js","mappings":"8HAQIA,EAAaC,EAAAA,EAAKC,OAAsC,CAIxDC,SAAU,KAKVC,SAAU,KAKVC,KAAMC,EAAAA,EAAOC,UAEbC,YAAa,MAGjB,CAEIC,UAAW,KAKXC,WAAY,EAKZC,YAAa,EAYbC,SAAS,EAUTC,SAAUP,EAAAA,EAAOQ,KASjBC,UAAWT,EAAAA,EAAOU,IAMlBC,gBAAgB,EAIhBC,eAAe,EAIfC,YAAY,EAIZC,eAAe,EAIfC,YAAY,EAKZC,eAAe,EAKfC,aAAc,WAEV,OAAOC,KAAKpB,UAAYoB,KAAKrB,UAAYqB,KAAKrB,SAASsB,SAAWD,KAAKE,WAChEF,KAAKpB,SAASuB,YAAc,CACvC,EAMAC,aAAc,SAAUC,GAAM,EAM9BC,YAAa,SAAUD,EAAKE,GAAa,EAEzCC,eAAgB,SAAUC,EAAQC,GAM9B,OALAA,EAAMjC,EAAAA,EAAKkC,UAAUH,eAAeI,KAAKZ,KAAMS,EAAQC,GACnDV,KAAKpB,UAAYoB,KAAKpB,SAASiC,aAC/BH,EAAII,MAAMd,KAAKpB,SAASiC,aAGrBH,CACX,EAOAK,MAAQ,WACJ,IAAIC,EAAa,CACb,aAAc,gBACd,OAAQ,UAAW,WAAY,YAC/B,iBACA,cAAe,YACf,gBAAiB,aAAc,iBAEnC,OAAO,WACH,IAAIC,EAAaxC,EAAAA,EAAKkC,UAAUI,MAAMH,KAAKZ,MAE3CiB,EAAWrC,SAAWoB,KAAKpB,SAC3BqC,EAAWtC,SAAWqB,KAAKrB,SAE3B,IAAK,IAAIuC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IAAK,CACxC,IAAIE,EAAOJ,EAAWE,GAElBD,EAAWG,KAAUpB,KAAKoB,KAC1BH,EAAWG,GAAQpB,KAAKoB,GAEhC,CAEA,OAAOH,CACX,CACJ,CAxBQ,KA8BZzC,EAAW6C,OAASvC,EAAAA,EAAOuC,OAI3B7C,EAAW8C,MAAQxC,EAAAA,EAAOwC,MAI1B9C,EAAW+C,UAAYzC,EAAAA,EAAOyC,UAI9B/C,EAAWgD,WAAa1C,EAAAA,EAAO0C,WAI/BhD,EAAWO,UAAYD,EAAAA,EAAOC,UAI9BP,EAAWiD,eAAiB3C,EAAAA,EAAO2C,eAInCjD,EAAWkD,aAAe5C,EAAAA,EAAO4C,aAIjClD,EAAWc,KAAOR,EAAAA,EAAOQ,KAIzBd,EAAWmD,MAAQ7C,EAAAA,EAAO6C,MAI1BnD,EAAWoD,eAAiB9C,EAAAA,EAAO8C,eAInCpD,EAAWqD,GAAK/C,EAAAA,EAAO+C,GAIvBrD,EAAWgB,IAAMV,EAAAA,EAAOU,IAExB,K,sIClNIsC,EAAiB,CACjB,oBACA,yBACA,2BACA,gCACA,2BACA,0BACA,yBACA,gCACA,sBACA,iCACA,yBACA,qBACA,iBACA,WACA,0BAGAC,EAAkB,CAClB,mBACA,6BAGJ,SAASC,EAAO3B,GAKZ,IAJA,IAAI4B,EAAa,CAAC,EACdC,EAAa,CAAC,EAGThB,EAAI,EAAGA,EAAIY,EAAeX,OAAQD,IAAK,CAC5C,IAAIiB,EAAUL,EAAeZ,GAC7BkB,EAAgBD,EACpB,CAEA,IAASjB,EAAI,EAAGA,EAAIa,EAAgBZ,OAAQD,IAAK,CAC7C,IAAIE,EAAOW,EAAgBb,GAC3BgB,EAAWd,GAAQf,EAAIgC,aAAahC,EAAIe,GAC5C,CAaA,SAASgB,EAAgBhB,GACrB,GAAIf,EAAIiC,aAAc,CAClB,IAAIC,EAAMlC,EAAIiC,aAAalB,GACtBmB,IACDA,EAAMlC,EAAIiC,aAAa,OAASlB,IAE/BmB,IACDA,EAAMlC,EAAIiC,aAAa,UAAYlB,IAEvCa,EAAWb,GAAQmB,CACvB,CACJ,CAtBAvC,KAAKsC,aAAe,SAAUlB,GAI1B,OAHMA,KAAQa,GACVG,EAAgBhB,GAEba,EAAWb,EACtB,EAEApB,KAAKqC,aAAe,SAAUjB,GAC1B,OAAOc,EAAWd,EACtB,CAcJ,CAEA,Q,0CC5DIoB,EAAyB,EACzBC,EAA2B,EAC3BC,EAAuB,EAKvBC,EAAuB,CAAC,EAG5B,SAASC,EAAeC,GAEpB,IADA,IAAIC,EAASD,EAAOE,MAAM,MACjB7B,EAAI,EAAG8B,EAAKF,EAAO3B,OAAQD,EAAI8B,EAAI9B,IAGxC4B,EAAO5B,GAAMA,EAAI,EAAK,KAAO4B,EAAO5B,GAExC,OAAO4B,EAAOG,KAAK,KACvB,CAGA,SAASC,EAAoB7C,EAAKJ,EAAQkD,GACtC,IAAK9C,EAAI+C,mBAAmBnD,EAAQI,EAAIgD,gBACpC,MAAO,CAAChD,EAAIiD,iBAAiBrD,GAAS2C,EAAeO,IAAeF,KAAK,KAEjF,CAEA,IAAIM,EAAoB,IAAIC,EAAAA,EAAOC,aAAa,IAE5CC,EAAYC,EAAAA,EAAKjF,OAAO,CAExBkF,iBAAkB,CAAC,EACnBC,WAAY,CAAC,IAEd,WACC7D,KAAK8D,WAAa,CAAC,EAEnB9D,KAAK+D,aAAe,EAEpB/D,KAAKgE,SAAW,IACpB,GAAG,CAECC,KAAM,SAAUC,GACZlE,KAAK+D,aAAe,EACpBG,EAASC,GAAGC,WAAWpE,KAAKgE,SAChC,EAEAK,WAAY,SAAUC,GAClB,IAAIC,EAAWvE,KAAK8D,WAAWQ,GAC/B,OAAoB,OAAbC,QAAkCC,IAAbD,CAChC,EAEAE,eAAgB,SAAUP,EAAUQ,EAASC,GACrCD,IACAR,EAASC,GAAGS,cAAcV,EAASC,GAAGU,SAAWF,GAE7CD,EAAQ3E,eACR2E,EAAQT,KAAKC,GAIbQ,EAAQI,OAAOZ,GAG3B,EAEAa,mBAAoB,WAChB,OAAO/E,KAAK+D,YAChB,EAEAiB,iBAAkB,SAAUL,GACxB3E,KAAK+D,aAAeY,GAAQ,CAChC,EAEAM,uBAAwB,SAAUf,EAAUQ,GACxC,IAAIQ,EAAclF,KAAK+D,aAMvB,OAJA/D,KAAKyE,eAAeP,EAAUQ,EAASQ,GAEvClF,KAAK+D,eAEEmB,CACX,EAEAC,WAAY,SAAU9E,EAAK+E,EAAMd,EAAQe,GACrC,IAAIC,EAActF,KAAK8D,WACnBS,EAAWe,EAAYhB,GAE3B,GAAiB,OAAbC,QAAkCC,IAAbD,EACrB,OAAO,EAGX,OAAQa,GACJ,IAAK,KACD,KAAMC,aAAiB5B,cAAe,CAElC,IAAK,IAAIvC,EAAI,EAAGA,EAAImE,EAAMlE,OAAQD,IAC9BqC,EAAkBrC,GAAKmE,EAAMnE,GAEjCmE,EAAQ9B,CACZ,CACAlD,EAAIkF,iBAAiBhB,GAAU,EAAOc,GACtC,MACJ,IAAK,KACDhF,EAAImF,UAAUjB,EAAUc,EAAM,GAAIA,EAAM,IACxC,MACJ,IAAK,KACDhF,EAAIoF,UAAUlB,EAAUc,EAAM,GAAIA,EAAM,IACxC,MACJ,IAAK,KACDhF,EAAIqF,UAAUnB,EAAUc,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAClD,MACJ,IAAK,KACDhF,EAAIsF,UAAUpB,EAAUc,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAClD,MACJ,IAAK,KACDhF,EAAIuF,UAAUrB,EAAUc,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC5D,MACJ,IAAK,KACDhF,EAAIwF,UAAUtB,EAAUc,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC5D,MACJ,IAAK,KACDhF,EAAIyF,UAAUvB,EAAUc,GACxB,MACJ,IAAK,KACDhF,EAAI0F,UAAUxB,EAAUc,GACxB,MACJ,IAAK,MACDhF,EAAI2F,WAAWzB,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAI4F,WAAW1B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAI6F,WAAW3B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAI8F,WAAW5B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAI+F,WAAW7B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAIgG,WAAW9B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAIiG,WAAW/B,EAAUc,GACzB,MACJ,IAAK,MACDhF,EAAIkG,WAAWhC,EAAUc,GACzB,MACJ,IAAK,KACL,IAAK,MACDhF,EAAImG,iBAAiBjC,GAAU,EAAOc,GACtC,MACJ,IAAK,KACL,IAAK,MACDhF,EAAIoG,iBAAiBlC,GAAU,EAAOc,GACtC,MACJ,IAAK,MAED,GAAIqB,MAAMC,QAAQtB,IAAUqB,MAAMC,QAAQtB,EAAM,IAAK,CACjD,IAAIuB,EAAQ,IAAIpD,EAAAA,EAAOC,aAA4B,GAAf4B,EAAMlE,QACtC0F,EAAS,EACb,IAAS3F,EAAI,EAAGA,EAAImE,EAAMlE,OAAQD,IAE9B,IADA,IAAI4F,EAAOzB,EAAMnE,GACR6F,EAAI,EAAGA,EAAI,GAAIA,IACpBH,EAAMC,KAAYC,EAAKC,GAG/B1G,EAAIkF,iBAAiBhB,GAAU,EAAOqC,EAC1C,MAEIvG,EAAIkF,iBAAiBhB,GAAU,EAAOc,GAE1C,MAER,OAAO,CACX,EAEA2B,qBAAsB,SAAU3G,EAAK4G,EAAUC,GAC3C,IAAIC,EAAenH,KAAK4D,iBAAiBqD,GACzC,QAAIE,GACOnH,KAAKmF,WAAW9E,EAAK8G,EAAa/B,KAAM+B,EAAa7C,OAAQ4C,EAG5E,EAMAE,iBAAkB,SAAUlD,EAAUmD,EAAYC,GAC9C,IAKIC,EALAlH,EAAM6D,EAASC,GACfqD,EAAUxH,KAAKgE,SAEfsB,EAActF,KAAK8D,WAInByD,EADAD,EACgCA,EAAIG,uBAGJ9E,EAAqBuB,EAASwD,SAE7DH,IAIGA,EADAD,EAEMA,EAAIG,uBACJ,GAIA9E,EAAqBuB,EAASwD,SAC9B,IAId,IADA,IAAIC,EAAe,GACVzG,EAAI,EAAGA,EAAImG,EAAWlG,OAAQD,IAAK,CACxC,IAAIoD,EAAS+C,EAAWnG,GACxB,GAAKlB,KAAK6D,WAAWS,GAArB,CAIA,IAAIC,EAAWe,EAAYhB,GAC3B,GAAgB,MAAZC,EAAkB,CAGlB,GAFAA,EAAWlE,EAAIuH,kBAAkBJ,EAASlD,IAExB,IAAdC,EAAiB,CACjBoD,EAAazG,IAAM,EACnB,QACJ,CACAoE,EAAYhB,GAAUC,CAC1B,CACAoD,EAAazG,GAAKqD,EAEbgD,EAA8BhD,GAI/BgD,EAA8BhD,GAAY9B,EAH1C8E,EAA8BhD,GAAY/B,CAd9C,MAFImF,EAAazG,IAAM,CAqB3B,CAEA,IAASA,EAAI,EAAGA,EAAIqG,EAA8BpG,OAAQD,IACtD,OAAOqG,EAA8BrG,IACjC,KAAKsB,EACDnC,EAAIwH,wBAAwB3G,GAC5BqG,EAA8BrG,GAAKwB,EACnC,MACJ,KAAKD,EACD8E,EAA8BrG,GAAKwB,EACnC,MAEJ,KAAKA,EACDrC,EAAIyH,yBAAyB5G,GAC7BqG,EAA8BrG,GAAK,EACnC,MAIZ,OAAOyG,CACX,EAEAC,kBAAmB,SAAUvH,EAAKiE,GAC9B,IAAIgB,EAActF,KAAK8D,WAEnBS,EAAWe,EAAYhB,GAM3B,OALgB,MAAZC,IACAA,EAAWlE,EAAIuH,kBAAkB5H,KAAKgE,SAAUM,GAChDgB,EAAYhB,GAAUC,GAGnBA,CACX,EAEAwD,aAAc,SAAU1H,EAAKJ,EAAQ+H,EAAkBC,GACnD,IAAIC,EAAe7H,EAAI8H,aAAa9H,EAAI+H,eACpCZ,EAAUnH,EAAIgI,gBAElBhI,EAAIiI,aAAaJ,EAAcF,GAC/B3H,EAAIkI,cAAcL,GAElB,IAAIM,EAAiBnI,EAAI8H,aAAa9H,EAAIoI,iBAC1CpI,EAAIiI,aAAaE,EAAgBP,GACjC5H,EAAIkI,cAAcC,GAElB,IAAIE,EAAMxF,EAAoB7C,EAAK6H,EAAcF,GACjD,GAAIU,EACA,OAAOA,EAGX,GADAA,EAAMxF,EAAoB7C,EAAKmI,EAAgBP,GAC3CS,EACA,OAAOA,EAMX,GAHArI,EAAIsI,aAAanB,EAASU,GAC1B7H,EAAIsI,aAAanB,EAASgB,GAEtBvI,EAAO2I,mBAAmB,YAC1BvI,EAAIwI,mBAAmBrB,EAAS,EAAGvH,EAAO2I,mBAAmB,YAAYtE,YAExE,CAED,IAAIwE,EAAOC,OAAOD,KAAK9I,KAAK6D,YAC5BxD,EAAIwI,mBAAmBrB,EAAS,EAAGsB,EAAK,GAC5C,CAaA,GAXAzI,EAAI2I,YAAYxB,GAEhBnH,EAAI4I,aAAaf,GACjB7H,EAAI4I,aAAaT,GAEjBxI,KAAKgE,SAAWwD,EAGhBxH,KAAKkJ,WAAalB,EAClBhI,KAAKmJ,aAAelB,GAEf5H,EAAI+I,oBAAoB5B,EAASnH,EAAIgJ,aACtC,MAAO,2BAA6BhJ,EAAIiJ,kBAAkB9B,GAI9D,IAAK,IAAItG,EAAI,EAAGA,EAAIjB,EAAOsJ,SAASpI,OAAQD,IAAK,CAC7C,IAAIsI,EAAgBvJ,EAAOsJ,SAASrI,GACpClB,KAAK8D,WAAW0F,GAAiBnJ,EAAIoJ,mBAAmBjC,EAASgC,EACrE,CAEJ,IAGJ,IC/UIE,EAAY,oHAEhB,SAASC,EAAWC,EAAWC,EAASC,GAUpC,SAASC,EAAQC,EAAOC,EAAOC,EAAKC,GAChC,IAAIC,EAAS,GAETC,MAAMJ,KAEFA,EADAA,KAASJ,EACDA,EAAQI,GAGRK,EAAmBL,IAG/BI,MAAMH,KAEFA,EADAA,KAAOL,EACDA,EAAQK,GAGRI,EAAmBJ,IAKjC,IAAK,IAAIK,EAAMC,SAASP,GAAQM,EAAMC,SAASN,GAAMK,IAEjDH,GAAU,IACJD,EACGJ,QAAQ,2BAA4BQ,EAAIE,QAAQ,IAChDV,QAAQ,SAAUQ,GACzB,IAGN,OAAOH,CACX,CAEA,IAAIE,EAAqB,CAAC,EAC1B,IAAK,IAAII,KAAaZ,EAClBQ,EAAmBI,EAAY,UAAYZ,EAAcY,GAE7D,OAAOd,EAAUG,QAAQL,EAAWK,EACxC,CAEA,SAASY,EAAcd,EAASC,EAAec,GAC3C,IAAIC,EAAY,GAChB,GAAIf,EACA,IAAK,IAAIY,KAAaZ,EAAe,CACjC,IAAIgB,EAAQhB,EAAcY,GACtBI,EAAQ,GACRD,EAAUE,KAAK,WAAaL,EAAUM,cAAgB,UAAYF,EAE1E,CAEJ,GAAIF,EACA,IAAK,IAAI1J,EAAI,EAAGA,EAAI0J,EAAgBzJ,OAAQD,IAAK,CAC7C,IAAIoD,EAASsG,EAAgB1J,GAC7B2J,EAAUE,KAAK,WAAazG,EAAO0G,cAAgB,WACvD,CAGJ,IAAK,IAAI1G,KAAUuF,EAAS,CACxB,IAAIxE,EAAQwE,EAAQvF,GACN,OAAVe,EACAwF,EAAUE,KAAK,WAAazG,GAG5BuG,EAAUE,KAAK,WAAazG,EAAS,IAAMe,EAAM4F,WAEzD,CACA,OAAOJ,EAAU5H,KAAK,KAC1B,CAEA,SAASiI,EAAiBC,GAItB,IADA,IAAIC,EAAe,GACVlK,EAAI,EAAGA,EAAIiK,EAAKhK,OAAQD,IAC7BkK,EAAaL,KAAK,iBAAmBI,EAAKjK,GAAK,aAEnD,OAAOkK,EAAanI,KAAK,KAC7B,CAEA,SAASoI,EAAiBC,GACtB,MAAO,CAAC,YAAaA,EAAW,SAASrI,KAAK,KAAO,MAC/C,CAAC,YAAaqI,EAAW,OAAOrI,KAAK,KAAO,MAE5C,CAAC,YAAaqI,EAAW,aAAarI,KAAK,KAAO,KAC5D,CAEA,SAASsI,EAAerH,GACpBlE,KAAKwL,UAAYtH,EACjBlE,KAAKyL,OAAS,CAAC,CACnB,CAEAF,EAAe5K,UAAU+K,WAAa,SAAUzK,EAAYtC,EAAUgN,GAClE,IAAIC,EAAQ5L,KAAKyL,OAEbI,EAAgB5K,EAAW4K,eAAiB5K,EAAW4K,gBACvDC,EAAkB7K,EAAW6K,iBAAmB7K,EAAW6K,kBAC3DC,EAAM,IAAMpN,EAASsB,OAAO+L,SAAW,IAAMrN,EAASsN,gBACtDN,IACAI,GAAO,KAAOJ,EAAMM,cAAchL,EAAW/B,aAE7C2M,IACAE,GAAO,MAAQ9K,EAAWiL,OAAO/K,QAEjC2K,IACAC,GAAO,OAEX,IAAIvE,EAAUoE,EAAMG,GAEpB,GAAIvE,EACA,OAAOA,EAGX,IAAIsC,EAAgB6B,EAAQA,EAAMQ,iBAAiBlL,EAAW/B,YAAc,CAAC,EACzEgF,EAAWlE,KAAKwL,UAChBnL,EAAM6D,EAASC,GACfyG,EAAkBjM,EAASyN,qBAC3BC,EAAkB,GACtB,GAAIR,EAAe,CACf,IAAIS,EAAc,CACdC,SAAU,KACVC,YAAavL,EAAWiL,OAAO/K,QAE/BF,EAAWiL,OAAO/K,OAAS+C,EAASuI,sBACpCH,EAAYI,0BAA4B,MAG5CL,GAAmB,KAAO1B,EAAc2B,GAAe,IAC3D,CACIR,IACAO,GAAmB,0BAIvB,IAAIM,EAAkBN,EAAkB1B,EAAchM,EAASiO,cAAe9C,EAAec,GAEzFiC,EAAoBR,EAAkB1B,EAAchM,EAASmO,gBAAiBhD,EAAec,GAE7F1B,EAAayD,EAAkB,KAAOhO,EAASsB,OAAO8M,OAEtD9K,EAAa,CACb,2BACA,0BACFxB,QAAO,SAAU8B,GACf,OAAuC,MAAhC2B,EAAS8I,eAAezK,EACnC,IAEIN,EAAWgL,QAAQ,2BAA6B,IAChDJ,GAAqB,iCAErB5K,EAAWgL,QAAQ,6BAA+B,IAClDJ,GAAqB,0CAGzB,IAAI1D,EAAe+B,EAAiBjJ,GAAc,KAC5CoJ,EAAiB1M,EAAS2M,WAAa,KACvCuB,EAAoB,KACpBlO,EAASsB,OAAOiN,SAElBC,EAAkBxD,EAAWT,EAAYvK,EAASiO,cAAe9C,GACjEsD,EAAoBzD,EAAWR,EAAcxK,EAASmO,gBAAiBhD,GAEvEtC,EAAU,IAAI9D,EAClB8D,EAAQ5D,iBAAmBjF,EAASsB,OAAO2D,iBAC3C4D,EAAQ3D,WAAalF,EAASsB,OAAO4D,WACrC,IAAIwJ,EAAW7F,EAAQO,aAAa1H,EAAK1B,EAASsB,OAAQkN,EAAiBC,GAK3E,OAJA5F,EAAQ8F,QAAUD,EAElBzB,EAAMG,GAAOvE,EAENA,CACX,EAEA,Q,0CC3KA+F,EAAAA,EAAO,UAAUC,EAAAA,GAKjB,IAAIC,EAAaC,EAAAA,EAAKC,OAElBC,EAAc,CAAC,EAEnB,SAASC,EAAmB5M,GACxB,OAAOA,EAAWtC,QACtB,CACA,SAASmP,EAAkB7M,EAAYtC,EAAU2F,GAC7C,OAAO3F,EAAS4K,SAASjF,GAAQe,KACrC,CACA,SAAS0I,EAAyBC,EAAaC,EAAgBtP,EAAUuP,GACrE,OAAOvP,IAAauP,CACxB,CACA,SAASC,EAAgBlN,GACrB,OAAO,CACX,CAEA,SAASmN,IAAQ,CAEjB,IAAIC,EAAyB,CACzBC,MAAOxP,EAAAA,EAAOyP,MACdC,KAAM1P,EAAAA,EAAO2P,KACbC,MAAO5P,EAAAA,EAAO6P,cACdC,MAAO9P,EAAAA,EAAO+P,MACdC,OAAQhQ,EAAAA,EAAOiQ,gBAGnB,SAASC,EAAkBC,EAAqBC,EAA2BC,GACvEnP,KAAKiP,oBAAsBA,EAC3BjP,KAAKkP,0BAA4BA,EACjClP,KAAKmP,cAAgBA,EAErBnP,KAAKsH,IAAM,IACf,CAEA,SAAS8H,EAAmBlL,GACxB,IAAImL,EACAC,EACJtP,KAAKiE,KAAO,SAAUC,GACbmL,IAEDA,EAAc7L,EAAAA,EAAO+L,eACrBF,EAAYG,MAAQH,EAAYI,OAAS,EACzCJ,EAAYK,WAAW,OAG3B,IAAIvL,EAAKD,EAASC,GACdwL,GAAaL,EACbK,IACAL,EAAenL,EAAGyL,iBAEtBzL,EAAG0L,YAAY1L,EAAG2L,WAAYR,GAC1BK,GACAxL,EAAG4L,WAAW5L,EAAG2L,WAAY,EAAG3L,EAAG6L,KAAM7L,EAAG6L,KAAM7L,EAAGwK,cAAeU,EAE5E,EACArP,KAAK8E,OAAS,SAAUZ,GACpBA,EAASC,GAAG0L,YAAY3L,EAASC,GAAG2L,WAAY,KACpD,EACA9P,KAAKD,aAAe,WAChB,OAAO,CACX,CACJ,CAKA,IAAIkQ,EAAWtM,EAAAA,EAAKjF,QAAO,WACvB,MAAoC,CAMhCwR,OAAQ,KAORC,OAAQ,IAORC,QAAS,IASTC,iBAAqC,qBAAXC,QAA0BA,OAAOD,kBAAqB,EAMhFE,WAAY,CAAC,EAAK,EAAK,EAAK,GAO5BC,SAAU,MASVC,OAAO,EAKPC,OAAO,EAKPC,SAAS,EAKTC,WAAW,EAKXC,oBAAoB,EAKpBC,uBAAuB,EAKvBC,YAAY,EAKZ5M,GAAI,KAKJ6M,SAAU,CAAC,EAMXC,eAAgB,GAGhBC,qBAAsB,KAEtBC,eAAgB,GAChBC,YAAa,GAEbC,gBAAiB,KAEzB,IAAG,WAEMrR,KAAKkQ,SACNlQ,KAAKkQ,OAAS1M,EAAAA,EAAO+L,gBAEzB,IAAIW,EAASlQ,KAAKkQ,OAClB,IACI,IAAIoB,EAAO,CACPb,MAAOzQ,KAAKyQ,MACZC,MAAO1Q,KAAK0Q,MACZC,QAAS3Q,KAAK2Q,QACdC,UAAW5Q,KAAK4Q,UAChBC,mBAAoB7Q,KAAK6Q,mBACzBC,sBAAuB9Q,KAAK8Q,uBAMhC,GAHA9Q,KAAKmE,GAAK+L,EAAOR,WAAW,QAAS4B,IAC9BpB,EAAOR,WAAW,qBAAsB4B,IAE1CtR,KAAKmE,GACN,MAAM,IAAIoN,MAGdvR,KAAKwR,QAAU,IAAIxP,EAAOhC,KAAKmE,IAE3BnE,KAAKmE,GAAGsN,gBACRC,QAAQC,MAAM,8BAElB3R,KAAKmE,GAAGsN,eAAiBzR,KAEzBA,KAAK4R,QACT,CACA,MAAOC,GACH,KAAM,gCAAkCA,CAC5C,CAGA7R,KAAK8R,YAAc,IAAIvG,EAAevL,MAEtCA,KAAK+R,oBAAsB,IAAI3C,EAAmBpP,KACtD,GAEA,CAMI4R,OAAQ,SAASpC,EAAOC,GACpB,IAAIS,EAASlQ,KAAKkQ,OAGd8B,EAAMhS,KAAKqQ,iBACF,MAATb,GACIU,EAAO+B,QACP/B,EAAO+B,MAAMzC,MAAQA,EAAQ,KAC7BU,EAAO+B,MAAMxC,OAASA,EAAS,MAGnCS,EAAOV,MAAQA,EAAQwC,EACvB9B,EAAOT,OAASA,EAASuC,EAEzBhS,KAAKmQ,OAASX,EACdxP,KAAKoQ,QAAUX,IAGfzP,KAAKmQ,OAASD,EAAOV,MAAQwC,EAC7BhS,KAAKoQ,QAAUF,EAAOT,OAASuC,GAGnChS,KAAKkS,YAAY,EAAG,EAAGlS,KAAKmQ,OAAQnQ,KAAKoQ,QAC7C,EAMA+B,SAAU,WACN,OAAOnS,KAAKmQ,MAChB,EAMAiC,UAAW,WACP,OAAOpS,KAAKoQ,OAChB,EAMAiC,kBAAmB,WACf,IAAIrB,EAAWhR,KAAKgR,SACpB,OAAOA,EAASxB,MAAQwB,EAASvB,MACrC,EAMA6C,oBAAqB,SAASjC,GAC1BrQ,KAAKqQ,iBAAmBA,EACxBrQ,KAAK4R,OAAO5R,KAAKmQ,OAAQnQ,KAAKoQ,QAClC,EAMAmC,oBAAqB,WACjB,OAAOvS,KAAKqQ,gBAChB,EAOArD,eAAgB,SAAU5L,GACtB,OAAOpB,KAAKwR,QAAQlP,aAAalB,EACrC,EAOAoR,eAAgB,SAAUpR,GACtB,OAAOpB,KAAKwR,QAAQnP,aAAajB,EACrC,EAsBA8Q,YAAa,SAAUO,EAAGC,EAAGlD,EAAOC,EAAQuC,GAExC,GAAiB,kBAANS,EAAgB,CACvB,IAAIE,EAAMF,EAEVA,EAAIE,EAAIF,EACRC,EAAIC,EAAID,EACRlD,EAAQmD,EAAInD,MACZC,EAASkD,EAAIlD,OACbuC,EAAMW,EAAItC,gBACd,CACA2B,EAAMA,GAAOhS,KAAKqQ,iBAElBrQ,KAAKmE,GAAG6M,SACJyB,EAAIT,EAAKU,EAAIV,EAAKxC,EAAQwC,EAAKvC,EAASuC,GAG5ChS,KAAKgR,SAAW,CACZyB,EAAGA,EACHC,EAAGA,EACHlD,MAAOA,EACPC,OAAQA,EACRY,iBAAkB2B,EAE1B,EAKAY,aAAc,WACV5S,KAAKmR,eAAepG,KAAK/K,KAAKgR,SAClC,EAKA6B,gBAAiB,WACT7S,KAAKmR,eAAehQ,OAAS,GAC7BnB,KAAKkS,YAAYlS,KAAKmR,eAAe2B,MAE7C,EAKAC,UAAW,WACP/S,KAAKoR,YAAYrG,KAAK,CAClByF,SAAUxQ,KAAKwQ,SACfD,WAAYvQ,KAAKuQ,YAEzB,EAKAyC,aAAc,WACV,GAAIhT,KAAKoR,YAAYjQ,OAAS,EAAG,CAC7B,IAAI8R,EAAMjT,KAAKoR,YAAY0B,MAC3B9S,KAAKuQ,WAAa0C,EAAI1C,WACtBvQ,KAAKwQ,SAAWyC,EAAIzC,QACxB,CACJ,EAEA0C,mBAAoB,SAAUvH,GAC1B3L,KAAKqR,gBAAkB1F,CAC3B,EAUAwH,OAAQ,SAASxH,EAAOyH,EAAQC,EAAgBC,GAC5C,IAAIjT,EAAML,KAAKmE,GAEXoM,EAAavQ,KAAKuQ,WAEtB,GAAIvQ,KAAKwQ,SAAU,CAGfnQ,EAAIkT,WAAU,GAAM,GAAM,GAAM,GAChClT,EAAImT,WAAU,GACd,IAAIxC,EAAWhR,KAAKgR,SAChByC,GAAe,EACfC,EAAc1C,EAASX,kBACvBW,EAASxB,QAAUxP,KAAKmQ,QAAUa,EAASvB,SAAWzP,KAAKoQ,SACvDsD,GAAeA,IAAgB1T,KAAKqQ,kBACrCW,EAASyB,GAAKzB,EAAS0B,KAE1Be,GAAe,EAGfpT,EAAIsT,OAAOtT,EAAIuT,cACfvT,EAAIwT,QAAQ7C,EAASyB,EAAIiB,EAAa1C,EAAS0B,EAAIgB,EAAa1C,EAASxB,MAAQkE,EAAa1C,EAASvB,OAASiE,IAEpHrT,EAAIkQ,WAAWA,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACvElQ,EAAIyT,MAAM9T,KAAKwQ,UACXiD,GACApT,EAAI0T,QAAQ1T,EAAIuT,aAExB,CAUA,GANKP,GACD1H,EAAMqI,QAAO,GAEjBrI,EAAMsI,eAENb,EAASA,GAAUzH,EAAMuI,gBACpBd,EAAL,CAIAA,EAAOY,SACP,IAAIG,EAAaxI,EAAMyI,iBAAiBhB,GAAQ,GAEhDpT,KAAKqR,gBAAkB1F,EAEvB,IAAI0I,EAAaF,EAAWG,OACxBC,EAAkBJ,EAAWK,YAC7BC,EAAgB9I,EAAMhN,SAE1BgN,EAAM+I,QAAQ,eAAgB1U,KAAM2L,EAAOyH,EAAQe,GAG/Cb,GACAtT,KAAK2U,WAAWN,EAAY1I,EAAOyH,GACnC/S,EAAIuU,UAAUvU,EAAIwU,SAGlBxU,EAAIuU,UAAUvU,EAAIyU,MAMtB,IAFA,IAAIC,EAAetH,IACfuH,EAAeC,EAAAA,EAAKtH,SACfzM,EAAI,EAAGA,EAAIqT,EAAgBpT,OAAQD,IAAK,CAC7C,IAAID,EAAasT,EAAgBrT,GACjCwM,EAAAA,EAAKwH,eAAeH,EAAc3B,EAAO+B,WAAWvO,MAAO3F,EAAWmU,eAAexO,OACrFqO,EAAAA,EAAKI,cAAcL,EAAc/T,EAAWqU,SAAS1O,MAAOmO,GAC5D9T,EAAWsU,QAAUP,EAAa,EACtC,CAGAhV,KAAKwV,WAAWnB,EAAYjB,EAAQ,CAChCqC,YAAa,SAAUxU,GACnB,OAAOwT,GAAiBxT,EAAWtC,QACvC,EACA+W,YAAa1V,KAAK2V,oBAGtB3V,KAAKwV,WAAWjB,EAAiBnB,EAAQ,CACrCqC,YAAa,SAAUxU,GACnB,OAAOwT,GAAiBxT,EAAWtC,QACvC,EACA+W,YAAa1V,KAAK4V,yBAGtBjK,EAAM+I,QAAQ,cAAe1U,KAAM2L,EAAOyH,EAAQe,GAGlDnU,KAAKqR,gBAAkB,IAjDvB,MAFIK,QAAQC,MAAM,kCAoDtB,EAEAjG,WAAY,SAAUzK,EAAY4U,EAAgBlK,GAE9C,OADAkK,EAAiBA,GAAkB5U,EAAWtC,SACvCqB,KAAK8R,YAAYpG,WAAWzK,EAAY4U,EAAgBlK,EACnE,EAEAmK,gBAAiB,SAAUtO,GACvB,GAAIA,EAAQ8F,QAAS,CACjB,IAAID,EAAW7F,EAAQ8F,QACvB,GAAIM,EAAYpG,EAAQE,SACpB,OAIJ,GAFAkG,EAAYpG,EAAQE,UAAW,EAE3B1H,KAAK+Q,WACL,MAAM,IAAIQ,MAAMlE,GAGhBrN,KAAK0U,QAAQ,QAASrH,EAG9B,CAEJ,EAEA0I,eAAgB,SAAUC,EAAMrK,EAAOsK,GACnC,IAAIR,EAAeQ,GAAcA,EAAWR,aAAgB5H,EAC5DlC,EAAQA,GAAS,KACjB,IAAK,IAAIzK,EAAI,EAAGA,EAAI8U,EAAK7U,OAAQD,IAAK,CAClC,IAAID,EAAa+U,EAAK9U,GAClB2U,EAAiBJ,EAAY7U,KAAKZ,KAAMiB,GAC5C,GAAIC,EAAI,EAAG,CACP,IAAI+M,EAAiB+H,EAAK9U,EAAI,GAC1BgV,EAAgBjI,EAAe/B,OAAS+B,EAAe/B,OAAO/K,OAAS,EACvEgV,EAAYlV,EAAWiL,OAASjL,EAAWiL,OAAO/K,OAAS,EAE/D,GAAIgV,IAAcD,GACXjV,EAAWtC,WAAasP,EAAetP,UACvCsC,EAAW/B,aAAe+O,EAAe/O,WAC9C,CACE+B,EAAWhC,UAAYgP,EAAehP,UACtC,QACJ,CACJ,CAEA,IAAIuI,EAAUxH,KAAK8R,YAAYpG,WAAWzK,EAAY4U,EAAgBlK,GAEtE3L,KAAK8V,gBAAgBtO,GAErBvG,EAAWhC,UAAYuI,CAC3B,CACJ,EAgBAgO,WAAY,SAASQ,EAAM5C,EAAQ6C,GAC/BjW,KAAK0U,QAAQ,mBAAoB1U,KAAMgW,EAAM5C,EAAQ6C,GAErDA,EAAaA,GAAc,CAAC,EAC5BA,EAAWR,YAAcQ,EAAWR,aAAe5H,EACnDoI,EAAWG,WAAaH,EAAWG,YAActI,EAEjDmI,EAAWI,kBAAoBJ,EAAWI,mBAAqBtI,EAC/DkI,EAAW7V,aAAe6V,EAAW7V,cAAgBgO,EACrD6H,EAAW3V,YAAc2V,EAAW3V,aAAe8N,EAEnD,IAAIkI,EAAiBL,EAAWM,UAAYpI,EAE5CnO,KAAK+V,eAAeC,EAAMhW,KAAKqR,gBAAiB4E,GAC5CA,EAAWP,aACXM,EAAKQ,KAAKP,EAAWP,aAIzB,IAAI1E,EAAWhR,KAAKgR,SAChByF,EAAOzF,EAASX,iBAChBqG,EAAkB,CAClB1F,EAASyB,EAAIgE,EAAMzF,EAAS0B,EAAI+D,EAChCzF,EAASxB,MAAQiH,EAAMzF,EAASvB,OAASgH,GAEzCE,EAAY3W,KAAKqQ,iBACjBuG,EAAoB5W,KAAKkR,qBACvB,CAAClR,KAAKkR,qBAAqB2F,kBAAmB7W,KAAKkR,qBAAqB4F,oBACxE,CAAC9W,KAAKmQ,OAASwG,EAAW3W,KAAKoQ,QAAUuG,GAE3CI,EAAsB,CACtBL,EAAgB,GAAIA,EAAgB,IAEpCM,EAAOC,KAAKC,MAGZ9D,GACA1F,EAAAA,EAAKyJ,KAAKC,EAASC,KAAMjE,EAAO+B,WAAWvO,OAC3C8G,EAAAA,EAAKyJ,KAAKC,EAASE,WAAYlE,EAAOmE,iBAAiB3Q,OACvD8G,EAAAA,EAAKyJ,KAAKC,EAASI,YAAapE,EAAOgC,eAAexO,SAGtD8G,EAAAA,EAAK+J,SAASL,EAASC,MACvB3J,EAAAA,EAAK+J,SAASL,EAASE,YACvB5J,EAAAA,EAAK+J,SAASL,EAASI,cAE3B9J,EAAAA,EAAKgK,SAASN,EAASO,eAAgBP,EAASE,WAAYF,EAASC,MACrE3J,EAAAA,EAAKkK,OAAOR,EAASS,kBAAmBT,EAASE,YACjD5J,EAAAA,EAAKkK,OAAOR,EAASU,sBAAuBV,EAASO,gBAqBrD,IAnBA,IAGIzJ,EACA6J,EACA9J,EAGA+J,EAAWxE,EACXpU,EAASC,EAAUE,EACnBiV,EACAyD,EACAC,EACAC,EAbA9X,EAAML,KAAKmE,GACXwH,EAAQ3L,KAAKqR,gBAgBb+G,EAAS,KAEJlX,EAAI,EAAGA,EAAI8U,EAAK7U,OAAQD,IAAK,CAClC,IAEImX,EAFApX,EAAa+U,EAAK9U,GAClBoX,EAA2C,MAA7BrX,EAAWmU,eAG7B,GAAKkB,EAAerV,GAApB,CAKIqX,IACAD,EAAUpX,EAAW4K,eAAiB5K,EAAW4K,gBAE1C5K,EAAWsX,aAAetX,EAAWsX,aAAa3R,MAAOwQ,EAASoB,SACnEvX,EAAWmU,eAAexO,OAEpC,IAAIhI,EAAWqC,EAAWrC,SACtBD,EAAWsX,EAAWR,YAAY7U,KAAKZ,KAAMiB,GAE7CuG,EAAUvG,EAAWhC,UACrBgB,EAAStB,EAASsB,OAElBwY,EAAgB7Z,EAAS8I,QAAU,IAAMF,EAAQE,QACjDgR,EAAgBD,IAAkBR,EACtCA,EAASQ,EACLC,GAAiBN,GAEjBA,EAAOO,mBAAmB,MAE1BL,IACA5K,EAAAA,EAAKyJ,KAAKC,EAASwB,MAAOP,GAC1B3K,EAAAA,EAAKgK,SAASN,EAASyB,oBAAqBzB,EAASO,eAAgBU,GACrE3K,EAAAA,EAAKwH,eAAekC,EAAS0B,UAAW1B,EAASC,KAAMgB,IACnDpY,EAAO8Y,gBAAgBC,cACvB/Y,EAAO8Y,gBAAgBE,wBACvBvL,EAAAA,EAAKkK,OAAOR,EAAS4B,aAAcX,IAEnCpY,EAAO8Y,gBAAgBG,kBACvBjZ,EAAO8Y,gBAAgBI,4BACvBzL,EAAAA,EAAKkK,OAAOR,EAAS8B,iBAAkB9B,EAAS0B,YAEhD7Y,EAAO8Y,gBAAgBK,4BACvBnZ,EAAO8Y,gBAAgBM,sCACvB3L,EAAAA,EAAKkK,OAAOR,EAASgC,2BAA4BhC,EAASyB,sBAKlE5X,EAAWb,cAAgBa,EAAWb,aAAaJ,MACnDiW,EAAW7V,aAAaQ,KAAKZ,KAAMiB,EAAYtC,EAAUuP,GAEzD,IAAIoL,EAAiB9R,IAAYuQ,EAC7BuB,GAEA9R,EAAQvD,KAAKjE,MAEbwH,EAAQR,qBAAqB3G,EAAK,WAAYqW,GAC9ClP,EAAQR,qBAAqB3G,EAAK,cAAeuW,GAC7CxD,IACA5L,EAAQR,qBAAqB3G,EAAK,OAAQ+S,EAAOmG,MACjD/R,EAAQR,qBAAqB3G,EAAK,MAAO+S,EAAOoG,MAEpDhS,EAAQR,qBAAqB3G,EAAK,mBAAoBoW,GACtDjP,EAAQR,qBAAqB3G,EAAK,OAAQ2W,GAE1CxP,EAAQR,qBAAqB3G,EAAK,gBAAiB0W,GAI/CpL,GACAA,EAAM8N,iBAAiBjS,EAASvG,EAAW/B,WAAYc,OAI3DwH,EAAUuQ,GAIVuB,GAAkBrD,EAAWI,kBAC7BpV,EAAYgN,EAAgBtP,EAAUuP,MAElCvP,EAASqZ,YAAcA,IACvBrZ,EAASqZ,UAAY3X,EAAIsT,OAAOtT,EAAIqZ,YAAcrZ,EAAI0T,QAAQ1T,EAAIqZ,YAClE1B,EAAYrZ,EAASqZ,WAErBrZ,EAAS6U,YAAcA,IACvBnT,EAAImT,UAAU7U,EAAS6U,WACvBA,EAAY7U,EAAS6U,WAErB7U,EAAS6V,cAAgBA,IACzB7V,EAAS6V,YAAcnU,EAAIsT,OAAOtT,EAAIsZ,OAAStZ,EAAI0T,QAAQ1T,EAAIsZ,OAC/DnF,EAAc7V,EAAS6V,aAGvB7V,EAAS6V,cACL7V,EAASib,MACTjb,EAASib,MAAMvZ,IAIfA,EAAIwZ,sBAAsBxZ,EAAIyZ,SAAUzZ,EAAIyZ,UAC5CzZ,EAAI0Z,kBAAkB1Z,EAAI2Z,UAAW3Z,EAAI4Z,oBAAqB5Z,EAAI6Z,IAAK7Z,EAAI4Z,uBAInF9B,EAA2BnY,KAAKma,cAC5BlZ,EAAYtC,EAAU6I,EACtByG,GAAkB,KAAMC,GAAgB,KAAM6J,GAAe,KAC7D9B,EAAWG,YAEflI,EAAevP,GAGnB,IAAIyb,EAAqBna,EAAOma,mBAEhC,GAAI9B,EACA,IAAK,IAAI+B,EAAI,EAAGA,EAAID,EAAmBjZ,OAAQkZ,IAAK,CAChD,IAAIpT,EAAWmT,EAAmBC,GAC9BlT,EAAelH,EAAO8Y,gBAAgB9R,GACtCqT,EAASlD,EAASnQ,GACtB,GAAIE,EAAaoT,YAAa,CAC1B,IAAIC,EAAoBpD,EAASjQ,EAAasT,qBAC9C/M,EAAAA,EAAKgN,UAAUJ,EAAQE,EAC3B,CACAhT,EAAQrC,WAAW9E,EAAK8G,EAAa/B,KAAM+B,EAAa7C,OAAQgW,EACpE,CAGArZ,EAAW5B,WAAaA,IACxBA,EAAW4B,EAAW5B,SACtBgB,EAAIhB,SAASA,IAEb4B,EAAW1B,YAAcA,IACzBA,EAAY0B,EAAW1B,UACvBc,EAAId,UAAUA,IAEd0B,EAAW7B,UAAYA,IACvBA,EAAU6B,EAAW7B,QACrBA,EAAUiB,EAAIsT,OAAOtT,EAAIsa,WAAata,EAAI0T,QAAQ1T,EAAIsa,YAG1D3a,KAAK4a,gBAAgB3Z,EAAYuG,EAAS2Q,GACtCO,IACAR,EAAalY,KAAK6a,SAASzC,EAAQnY,EAAQrB,EAAU4I,IAEzDxH,KAAK8a,cAAc7Z,EAAYiX,EAAY1Q,GAG3CyO,EAAW3V,YAAYN,KAAMiB,GAC7BA,EAAWX,aAAeW,EAAWX,YAAYN,MAEjD+X,EAAcvQ,EACdyG,EAAiBhN,CAjJjB,CAkJJ,CAGImX,GACAA,EAAOO,mBAAmB,MAG9B3Y,KAAK0U,QAAQ,kBAAmB1U,KAAMgW,EAAM5C,EAAQ6C,EACxD,EAEAxJ,kBAAmB,WACf,OAAOzM,KAAKiR,cAChB,EAEA2J,gBAAiB,SAAUG,EAAQvT,EAAS7C,GACxC,IAAItE,EAAML,KAAKmE,GACX6W,EAAWD,EAAOC,SAEtB,GAAIA,EAGA,GADAA,EAAShH,SACL+G,EAAO7O,OAAO/K,OAASnB,KAAKyM,oBAAqB,CACjD,IAAIwO,EAAsBD,EAASE,0BAA0BH,EAAOrT,QAASqT,EAAO7O,QACpF1E,EAAQ/C,eAAezE,KAAMib,EAAqBtW,GAClD6C,EAAQrC,WAAW9E,EAAK,KAAM,sBAAuBsE,GACrD6C,EAAQrC,WAAW9E,EAAK,KAAM,0BAA2B4a,EAAoBzL,MACjF,KACK,CACD,IAAI2L,EAAoBH,EAASI,mBAAmBL,EAAOrT,QAASqT,EAAO7O,QAC3E1E,EAAQR,qBAAqB3G,EAAK,cAAe8a,EACrD,CAER,EAEAL,cAAe,SAAU7Z,EAAYqG,EAAKE,GACtC,IAAInH,EAAML,KAAKmE,GACXvF,EAAWqC,EAAWrC,SAEtByc,EAAapa,EAAWpC,KACV,MAAdwc,IACAA,EAAa,GAGjB,IAAI9Y,EAAM,KACN+Y,EAAcra,EAAW6K,iBAAmB7K,EAAW6K,kBAC3D,IAAIwP,IACA/Y,EAAMvC,KAAKgN,eAAe,0BACrBzK,GAFT,CAQA,IAAIgZ,EAKJ,GAJID,IACAC,EAAyBvb,KAAKwb,yBAAyBva,EAAYuG,EAASjF,IAG5E+E,EAAI6H,cAAe,CACnB,IAAIsM,EAAUzb,KAAKgN,eAAe,0BAC9B0O,EAAaD,GAAY7c,EAAS+c,mBAAmBC,YACrDC,EAAcH,EAAarb,EAAIyb,aAAezb,EAAI0O,eAElDuM,EACA/Y,EAAIwZ,2BACAV,EAAY/T,EAAI6H,cAAcrE,MAAO+Q,EAAa,EAAG5a,EAAW+a,oBAIpE3b,EAAI4b,aAAaZ,EAAY/T,EAAI6H,cAAcrE,MAAO+Q,EAAa,EAE3E,MAEQP,EACA/Y,EAAI2Z,yBAAyBb,EAAY,EAAGzc,EAASuB,YAAac,EAAW+a,oBAK7E3b,EAAI8b,WAAWd,EAAY,EAAGzc,EAASuB,aAI/C,GAAImb,EACA,IAAK,IAAIpa,EAAI,EAAGA,EAAIqa,EAAuBpa,OAAQD,IAC/Cb,EAAIyH,yBAAyByT,EAAuBra,GAlC5D,MAHQwQ,QAAQ0K,KAAK,sDAwCzB,EAEAZ,yBAA0B,SAAUva,EAAYuG,EAASjF,GAKrD,IAJA,IAAIlC,EAAML,KAAKmE,GACXkY,EAAmBpb,EAAWqb,8BAA8Btc,MAC5Duc,EAAY,GAEPrb,EAAI,EAAGA,EAAImb,EAAiBlb,OAAQD,IAAK,CAC9C,IAAIsb,EAAYH,EAAiBnb,GAC7BqD,EAAWiD,EAAQI,kBAAkBvH,EAAKmc,EAAUlY,QACxD,KAAIC,EAAW,GAAf,CAIA,IAAIkY,EAASpO,EAAuBmO,EAAUpX,OAAS/E,EAAIkO,MAC3DlO,EAAIwH,wBAAwBtD,GAC5BlE,EAAIqc,WAAWrc,EAAIsc,aAAcH,EAAUI,QAC3Cvc,EAAIwc,oBAAoBtY,EAAUiY,EAAUM,KAAML,GAAQ,EAAO,EAAG,GACpEla,EAAIwa,yBAAyBxY,EAAUiY,EAAUQ,SAEjDT,EAAUxR,KAAKxG,EARf,CASJ,CAEA,OAAOgY,CACX,EAEApC,cAAe,SAAUlZ,EAAYtC,EAAU6I,EAASyG,EAAgBC,EAAc6J,EAAakF,GAY/F,IAXA,IAAI5c,EAAML,KAAKmE,GAIX+Y,EAAcnF,IAAgBvQ,EAE9BzC,EAAqByC,EAAQzC,qBAC7BoY,EAAkBxe,EAASye,qBAC3BC,EAAkB1e,EAAS2e,qBAC3BC,EAAqBvd,KAAK+R,oBAErByL,EAAI,EAAGA,EAAIH,EAAgBlc,OAAQqc,IAAK,CAC7C,IAAIlZ,EAAS+Y,EAAgBG,GACzBC,EAAeR,EAAgBhc,EAAYtC,EAAU2F,GACrDoZ,EAAc/e,EAAS4K,SAASjF,GAAQc,KAI5C,GAAoB,MAAhBsY,GAAuBD,EAEvBA,EAAaE,QAAU,OAEtB,GAAoB,OAAhBD,EACL,IAAK,IAAIxc,EAAI,EAAGA,EAAIuc,EAAatc,OAAQD,IACjCuc,EAAavc,KACbuc,EAAavc,GAAGyc,QAAU,EAI1C,CAEAJ,EAAmBI,QAAU,EAG7B,IAASH,EAAI,EAAGA,EAAIL,EAAgBhc,OAAQqc,IAAK,CACzClZ,EAAS6Y,EAAgBK,GAA7B,IACII,EAAUjf,EAAS4K,SAASjF,GAG5BuZ,GAFAJ,EAAeR,EAAgBhc,EAAYtC,EAAU2F,GACrDoZ,EAAcE,EAAQxY,KACM,MAAhBsY,GAWhB,GATIG,IACKJ,GAAiBA,EAAa1d,iBAC/B0d,EAAeF,IAOnBrP,GAAgBgP,EAAa,CAC7B,IAAIY,EAAmBb,EAAgBhP,EAAgBC,EAAc5J,GAOrE,GANIuZ,IACKC,GAAqBA,EAAiB/d,iBACvC+d,EAAmBP,IAIvBO,IAAqBL,EAAc,CACnC,GAAII,EAEArW,EAAQvC,uBAAuBjF,KAAM,WAEpC,GAAoB,OAAhB0d,GAAwBD,EAC7B,IAASvc,EAAI,EAAGA,EAAIuc,EAAatc,OAAQD,IACrCsG,EAAQvC,uBAAuBjF,KAAM,MAG7C,QACJ,CACJ,CAEA,GAAoB,MAAhByd,EAGC,GAAII,EACL,GAAIJ,EAAaE,OAAS,EAAG,CACzB,IAAIhZ,EAAO6C,EAAQzC,qBACfgZ,EAAMvW,EAAQrC,WAAW9E,EAAK,KAAMiE,EAAQK,GAC5CoZ,IACAvW,EAAQvC,uBAAuBjF,KAAMyd,GACrCA,EAAaE,OAAShZ,EAE9B,MAGI6C,EAAQrC,WAAW9E,EAAK,KAAMiE,EAAQmZ,EAAaE,aAGtD,GAAIjX,MAAMC,QAAQ8W,GAAe,CAClC,GAA4B,IAAxBA,EAAatc,OACb,SAGJ,GAAoB,OAAhBuc,EAAsB,CACtB,IAAKlW,EAAQnD,WAAWC,GACpB,SAGJ,IAAI0Z,EAAM,GACV,IAAS9c,EAAI,EAAGA,EAAIuc,EAAatc,OAAQD,IAAK,CAC1C,IAAIwD,EAAU+Y,EAAavc,GAE3B,GAAIwD,EAAQiZ,OAAS,EAAG,CAChBhZ,EAAO6C,EAAQzC,qBACnBiZ,EAAIjT,KAAKpG,GACT6C,EAAQvC,uBAAuBjF,KAAM0E,GACrCA,EAAQiZ,OAAShZ,CACrB,MAEIqZ,EAAIjT,KAAKrG,EAAQiZ,OAEzB,CAEAnW,EAAQrC,WAAW9E,EAAK,MAAOiE,EAAQ0Z,EAC3C,MAEIxW,EAAQrC,WAAW9E,EAAKud,EAAQxY,KAAMd,EAAQmZ,EAEtD,MAEIjW,EAAQrC,WAAW9E,EAAKud,EAAQxY,KAAMd,EAAQmZ,EAEtD,CACA,IAAIQ,EAAUzW,EAAQzC,qBAGtB,OADAyC,EAAQxC,iBAAiBD,GAClBkZ,CACX,EAEApD,SAAU,SAAUzC,EAAQnY,EAAQrB,EAAU4I,GAC1C,IAAI0W,GAAYtf,EAASuf,QACrB9d,EAAML,KAAKmE,GAEXia,EAAQpe,KAAK0H,QAAU,IAAMF,EAAQE,QACrCJ,EAAM1I,EAASyf,WAAWD,GAC9B,IAAK9W,EAAK,CACN,IAAIxE,EAASlE,EAAS0f,gBAAgBte,MACtC,IAAK8C,IAAWA,EAAO3B,OACnB,OAQJ,IANA,IAAIod,EAAQzb,EAAO,GACf0b,EAAmBD,EAAMC,iBACzBrP,EAAgBoP,EAAMpP,cAEtBF,EAAsB,GACtBC,EAA4B,GACvBuP,EAAI,EAAGA,EAAID,EAAiBrd,OAAQsd,IAAK,CAC9C,IAGIna,EAHAoa,EAAsBF,EAAiBC,GACvCrd,EAAOsd,EAAoBtd,KAC3B6F,EAAWyX,EAAoBzX,SAEnC,GAAIA,EAAU,CACV,IAAIE,EAAelH,EAAO2I,mBAAmB3B,GAC7C3C,EAAS6C,GAAgBA,EAAa7C,MAC1C,MAEIA,EAASlD,EAETkD,GAAUkD,EAAQ3D,WAAWS,KAC7B2K,EAAoBlE,KAAK2T,GACzBxP,EAA0BnE,KAAKzG,GAEvC,CAEAgD,EAAM,IAAI0H,EACNC,EACAC,EACAC,GAGA+O,IACAtf,EAASyf,WAAWD,GAAS9W,EAErC,CAEA,IAAIqX,GAAsB,EAItBvG,GAAU8F,IAGK,MAAX5W,EAAIA,IACJA,EAAIA,IAAM8Q,EAAOwG,uBAGjBD,GAAsB,EAE1BvG,EAAOO,mBAAmBrR,EAAIA,MAG9B2H,EAAsB3H,EAAI2H,oBAC1BE,EAAgB7H,EAAI6H,cAExB,GAAIwP,EAAqB,CACrB,IAAIhX,EAAeH,EAAQJ,iBAAiBpH,KAAMsH,EAAI4H,0BAA4BkJ,GAAU8F,GAAY5W,GAExG,IAASmX,EAAI,EAAGA,EAAIxP,EAAoB9N,OAAQsd,IAAK,CACjD,IAAIla,EAAWoD,EAAa8W,GAC5B,IAAkB,IAAdla,EAAJ,CAGIma,EAAsBzP,EAAoBwP,GAA9C,IACI7B,EAAS8B,EAAoB9B,OAC7BE,EAAO4B,EAAoB5B,KAC3BL,EAASpO,EAAuBqQ,EAAoBtZ,OAAS/E,EAAIkO,MAErElO,EAAIqc,WAAWrc,EAAIsc,aAAcC,GACjCvc,EAAIwc,oBAAoBtY,EAAUuY,EAAML,GAAQ,EAAO,EAAG,EAP1D,CAQJ,CAEI7d,EAASigB,gBACTxe,EAAIqc,WAAWrc,EAAIye,qBAAsB3P,EAAcyN,OAE/D,CAEA,OAAOtV,CACX,EAEAqN,WAAY,SAAUqB,EAAMrK,EAAOyH,GAC/B,IAAI/S,EAAML,KAAKmE,GACX4a,EAAmB/e,KAAKgf,eAAiB,IAAIC,EAAAA,EAAS,CACtDhf,OAAQ,IAAIsN,EAAAA,EAAOA,EAAAA,EAAO2R,OAAO,oBAAqB3R,EAAAA,EAAO2R,OAAO,yBAExElf,KAAKgf,cAAgBD,EAErB1e,EAAIkT,WAAU,GAAO,GAAO,GAAO,GACnClT,EAAImT,WAAU,GAGdxT,KAAKwV,WAAWQ,EAAM5C,EAAQ,CAC1BmD,SAAU,SAAUtV,GAChB,OAAQA,EAAWpB,UACvB,EACAwW,kBAAmB,SAAUpV,EAAYgN,GACrC,IAAIkR,EAAOle,EAAWtC,SAClBygB,EAAOnR,EAAetP,SAC1B,OAAOwgB,EAAKE,IAAI,gBAAkBD,EAAKC,IAAI,gBACnCF,EAAKE,IAAI,gBAAkB,MAAQD,EAAKC,IAAI,gBAAkB,EAC1E,EACAjJ,WAAY,SAAUnV,EAAYqe,EAAehb,GAC7C,GAAe,aAAXA,EACA,OAAOrD,EAAWtC,SAAS0gB,IAAI,cAE9B,GAAe,gBAAX/a,EAA0B,CAC/B,GAAIrD,EAAWtC,SAAS4gB,UAAU,WAAY,eACvCte,EAAWtC,SAAS0gB,IAAI,cAC7B,CACE,IAAIG,EAAcve,EAAWtC,SAAS0gB,IAAI,eAC1C,OAAOG,GAAe,CAC1B,CACA,OAAO,CACX,CACK,MAAe,aAAXlb,EACErD,EAAWtC,SAAS0gB,IAAI,YAEf,aAAX/a,EACErD,EAAWtC,SAAS0gB,IAAI,YAGxBC,EAAcD,IAAI/a,EAEjC,EACAmR,YAAa,WACT,OAAOsJ,CACX,EACAvI,KAAMxW,KAAK2V,oBAGftV,EAAIkT,WAAU,GAAM,GAAM,GAAM,GAChClT,EAAImT,WAAU,EAClB,EAMAiM,aAAc,SAAS9T,GACnB3L,KAAK0f,YAAY/T,GAAO,GAAM,GAC9BA,EAAMgU,SACV,EAQAD,YAAa,SAASE,EAAMC,EAAiBC,GAErCF,EAAKG,aACLH,EAAKG,YAAYC,OAAOJ,GAE5B,IAAIK,EAAc,CAAC,EACnBL,EAAKM,UAAS,SAASC,GACnB,IAAIxhB,EAAWwhB,EAAKxhB,SAIpB,GAHIwhB,EAAKvhB,UAAYihB,GACjBM,EAAKvhB,SAAS+gB,QAAQ3f,MAEtB8f,GAAkBnhB,IAAashB,EAAYthB,EAAS+I,SAAU,CAE9D,IADA,IAAI2V,EAAkB1e,EAAS2e,qBACtBE,EAAI,EAAGA,EAAIH,EAAgBlc,OAAQqc,IAAK,CAC7C,IAAI4C,EAAc/C,EAAgBG,GAC9BtW,EAAMvI,EAAS4K,SAAS6W,GAAa/a,MACrCqY,EAAc/e,EAAS4K,SAAS6W,GAAahb,KACjD,GAAK8B,EAGL,GAAoB,MAAhBwW,EACAxW,EAAIyY,SAAWzY,EAAIyY,QAAQ3f,WAE1B,GAAoB,OAAhB0d,EACL,IAAK,IAAIrD,EAAI,EAAGA,EAAInT,EAAI/F,OAAQkZ,IACxBnT,EAAImT,IACJnT,EAAImT,GAAGsF,SAAWzY,EAAImT,GAAGsF,QAAQ3f,KAIjD,CACAigB,EAAYthB,EAAS+I,UAAW,CACpC,CAEIyY,EAAKR,SACLQ,EAAKR,QAAQ3f,KAErB,GAAGA,KACP,EAMA6f,gBAAiB,SAASjhB,GACtBA,EAAS+gB,QAAQ3f,KACrB,EAMA8f,eAAgB,SAASpb,GACrBA,EAAQib,QAAQ3f,KACpB,EAMAqgB,mBAAoB,SAASC,GACzBA,EAAYX,QAAQ3f,KACxB,EAKA2f,QAAS,WAAa,EAYtBY,YAAa,SAAS9N,EAAGC,EAAGhS,GACnBA,IACDA,EAAM,IAAI8f,EAAAA,GAGd9N,EAAI1S,KAAKoQ,QAAUsC,EAEnB,IAAI1B,EAAWhR,KAAKgR,SAChBgN,EAAMtd,EAAIkG,MAMd,OALAoX,EAAI,IAAMvL,EAAIzB,EAASyB,GAAKzB,EAASxB,MACrCwO,EAAI,GAAc,EAATA,EAAI,GAAS,EACtBA,EAAI,IAAMtL,EAAI1B,EAAS0B,GAAK1B,EAASvB,OACrCuO,EAAI,GAAc,EAATA,EAAI,GAAS,EAEftd,CACX,IAUJuP,EAAS0F,kBAAoB1F,EAAStP,UAAUgV,kBAAoB,SAASlD,EAAGC,GAE5E,OAAID,EAAEtT,cAAgBuT,EAAEvT,YAChBsT,EAAExT,YAAcyT,EAAEzT,UACdwT,EAAE9T,WAAa+T,EAAE/T,SACV8T,EAAE7T,SAAS8I,QAAUgL,EAAE9T,SAAS8I,QAEpC+K,EAAE9T,SAAS+I,QAAUgL,EAAE/T,SAAS+I,QAEvC+K,EAAExT,WAAayT,EAAEzT,UACVwT,EAAExT,UAAUyI,QAAUgL,EAAEzT,UAAUyI,QAEtC,EAEJ+K,EAAEtT,YAAcuT,EAAEvT,WAC7B,EASA8Q,EAAS2F,uBAAyB3F,EAAStP,UAAUiV,uBAAyB,SAASnD,EAAGC,GAGtF,OAAID,EAAEtT,cAAgBuT,EAAEvT,YAChBsT,EAAE8C,UAAY7C,EAAE6C,QACZ9C,EAAExT,YAAcyT,EAAEzT,UACdwT,EAAE9T,WAAa+T,EAAE/T,SACV8T,EAAE7T,SAAS8I,QAAUgL,EAAE9T,SAAS8I,QAEpC+K,EAAE9T,SAAS+I,QAAUgL,EAAE/T,SAAS+I,QAEvC+K,EAAExT,WAAcyT,EAAEzT,UACXwT,EAAExT,UAAUyI,QAAUgL,EAAEzT,UAAUyI,QAEtC,EAIJ+K,EAAE8C,QAAU7C,EAAE6C,QAElB9C,EAAEtT,YAAcuT,EAAEvT,WAC7B,EAGA,IAAIiY,EAAW,CACXoB,SAAU/K,IAEVmL,MAAOnL,IACP4J,KAAM5J,IACN6J,WAAY7J,IACZqL,UAAWrL,IACXkK,eAAgBlK,IAChBoL,oBAAqBpL,IAErBuL,aAAcvL,IACd+J,YAAa/J,IACboK,kBAAmBpK,IACnByL,iBAAkBzL,IAClBqK,sBAAuBrK,IACvB2L,2BAA4B3L,IAE5BgT,eAAgBhT,IAChBiT,cAAejT,IACfkT,oBAAqBlT,IACrBmT,mBAAoBnT,IACpBoT,wBAAyBpT,IACzBqT,6BAA8BrT,IAC9BwL,sBAAuBxL,IACvBsT,qBAAsBtT,IACtBuT,2BAA4BvT,IAC5B0L,0BAA2B1L,IAC3BwT,+BAAgCxT,IAChC4L,oCAAqC5L,KAOzCwC,EAASiR,iBAAmBpiB,EAAAA,EAAOoiB,iBAKnCjR,EAASkR,iBAAmBriB,EAAAA,EAAOqiB,iBAKnClR,EAASmR,mBAAqBtiB,EAAAA,EAAOsiB,mBAErC,O,6HCt3CI5I,EAAW9K,EAAAA,EAAKC,SAChBmL,EAAYpL,EAAAA,EAAKC,SAEjB0T,EAAkB,CAAC,EAEvB,SAASpV,EAAcqV,GACnB,IAAIzW,EAAY,GACZ0W,EAAaxY,OAAOD,KAAKwY,GAC7BC,EAAW/K,OACX,IAAK,IAAItV,EAAI,EAAGA,EAAIqgB,EAAWpgB,OAAQD,IAAK,CACxC,IAAIwJ,EAAY6W,EAAWrgB,GAC3B2J,EAAUE,KAAKL,EAAY,IAAM4W,EAAa5W,GAClD,CACA,IAAIqB,EAAMlB,EAAU5H,KAAK,MAEzB,GAAIoe,EAAgBtV,GAChB,OAAOsV,EAAgBtV,GAG3B,IAAIyV,EAAKC,EAAAA,EAAKC,UAEd,OADAL,EAAgBtV,GAAOyV,EAChBA,CACX,CAEA,SAASG,IAEL3hB,KAAKsU,OAAS,GACdtU,KAAKwU,YAAc,GAEnBxU,KAAK4hB,aAAe,EACpB5hB,KAAK6hB,kBAAoB,CAC7B,CAEAF,EAAWhhB,UAAUmhB,WAAa,WAC9B9hB,KAAK4hB,aAAe,EACpB5hB,KAAK6hB,kBAAoB,CAC7B,EAEAF,EAAWhhB,UAAUohB,IAAM,SAAUhH,EAAQiH,GACrCA,EACAhiB,KAAKwU,YAAYxU,KAAK6hB,qBAAuB9G,EAG7C/a,KAAKsU,OAAOtU,KAAK4hB,gBAAkB7G,CAE3C,EAEA4G,EAAWhhB,UAAUshB,SAAW,WAC5BjiB,KAAKwU,YAAYrT,OAASnB,KAAK6hB,kBAC/B7hB,KAAKsU,OAAOnT,OAASnB,KAAK4hB,YAC9B,EAYA,IAAIM,EAAQzjB,EAAAA,EAAKC,QAAO,WACpB,MAAiC,CAK7BC,SAAU,KAEVwjB,OAAQ,GAWRC,yBAA0B,IAAIC,EAAAA,EAG9BC,eAAgB,CAAC,EAEjBC,YAAa,GAIbC,eAAgB,CAAC,EAEjBC,qBAAsB,CAAC,EAEvBC,aAAc,CAOV,EAGJC,kBAAmB,CAAC,EAEpBC,gBAAiB,CAAC,EAElBC,aAAc,IAAIC,EAAAA,EAAS,IAGnC,IAAG,WACC9iB,KAAK+iB,OAAS/iB,IAClB,GAEA,CAGIgjB,WAAY,SAAU7C,GACdA,aAAgB8C,EAAAA,GACZjjB,KAAKuiB,YAAYphB,OAAS,GAC1BuQ,QAAQ0K,KAAK,yDAEjBpc,KAAKuiB,YAAYxX,KAAKoV,IAEjBA,aAAgB+C,EAAAA,GACrBljB,KAAKmiB,OAAOpX,KAAKoV,GAEjBA,EAAK/e,OACLpB,KAAK4iB,gBAAgBzC,EAAK/e,MAAQ+e,EAE1C,EAGAgD,gBAAiB,SAAUhD,GACvB,IAAI5V,EACA4V,aAAgB8C,EAAAA,GAChB1Y,EAAMvK,KAAKuiB,YAAYtV,QAAQkT,GAC3B5V,GAAO,GACPvK,KAAKuiB,YAAYa,OAAO7Y,EAAK,IAG5B4V,aAAgB+C,EAAAA,IACrB3Y,EAAMvK,KAAKmiB,OAAOlV,QAAQkT,GACtB5V,GAAO,GACPvK,KAAKmiB,OAAOiB,OAAO7Y,EAAK,IAG5B4V,EAAK/e,aACEpB,KAAK4iB,gBAAgBzC,EAAK/e,KAEzC,EAQAiiB,QAAS,SAAUjiB,GACf,OAAOpB,KAAK4iB,gBAAgBxhB,EAChC,EAMAkiB,cAAe,SAAUlQ,GACrB,IAAI7I,EAAMvK,KAAKuiB,YAAYtV,QAAQmG,GAC/B7I,GAAO,GACPvK,KAAKuiB,YAAYa,OAAO7Y,EAAK,GAEjCvK,KAAKuiB,YAAYgB,QAAQnQ,EAC7B,EAIAc,cAAe,WACX,OAAOlU,KAAKuiB,YAAY,EAC5B,EAEAiB,UAAW,WACP,OAAOxjB,KAAKmiB,MAChB,EAEAlO,aAAc,WACV,IAAIkO,EAASniB,KAAKmiB,OAClBniB,KAAKyiB,qBAAuBziB,KAAK0iB,aAGjC,IADA,IAAIe,EAAc,CAAC,EACVviB,EAAI,EAAGA,EAAIihB,EAAOhhB,OAAQD,IAAK,CACpC,IAAIwiB,EAAQvB,EAAOjhB,GACnB,IAAIwiB,EAAMxjB,UAAV,CAGA,IAAIyjB,EAAQD,EAAMC,MACbF,EAAYE,KACbF,EAAYE,GAAS,CAAC,GAG1BF,EAAYE,GAAOD,EAAMte,MAAQqe,EAAYE,GAAOD,EAAMte,OAAS,EACnEqe,EAAYE,GAAOD,EAAMte,OAPzB,CAQJ,CAGA,IAAK,IAAIwe,KAFT5jB,KAAK0iB,aAAee,EAEAA,EAChBzjB,KAAK2iB,kBAAkBiB,GAAW3X,EAAcwX,EAAYG,IAGhE5jB,KAAK6jB,sBACT,EASAC,UAAW,SAAU3D,GACjB,IAAI4D,EAAU5D,EAAKpf,QACfijB,EAAiB,CAAC,EACtB,SAASC,EAAcC,EAAOC,GAC1BH,EAAeE,EAAMxc,SAAWyc,EAEhC,IAAK,IAAIjjB,EAAI,EAAGA,EAAIgjB,EAAME,UAAUjjB,OAAQD,IAAK,CAC7C,IAAImjB,EAASH,EAAME,UAAUljB,GACzBojB,EAASH,EAAMC,UAAUljB,GAC7B+iB,EAAcI,EAAQC,EAC1B,CACJ,CAYA,OAXAL,EAAc9D,EAAM4D,GAEpBA,EAAQ7D,UAAS,SAAUqE,GACnBA,EAASvJ,WACTuJ,EAASvJ,SAAWuJ,EAASvJ,SAASja,MAAMijB,IAE5CO,EAAS5lB,WACT4lB,EAAS5lB,SAAW4lB,EAAS5lB,SAASoC,QAE9C,IAEOgjB,CACX,EAUA3P,iBAAkB,SAAUhB,EAAQoR,GAChC,IAAIhD,EAAKpO,EAAO1L,QACZyM,EAAanU,KAAK6iB,aAAaxD,IAAImC,GAClCrN,IACDA,EAAa,IAAIwN,EACjB3hB,KAAK6iB,aAAa4B,IAAIjD,EAAIrN,IAE9BA,EAAW2N,aAEP0C,IACAxkB,KAAKoiB,yBAAyBsC,IAAIC,IAAIC,IAAUA,IAAUA,KAC1D5kB,KAAKoiB,yBAAyByC,IAAIF,KAAKC,KAAWA,KAAWA,MAGjE,IAAIE,EAA2B9kB,KAAKrB,UAAYqB,KAAKrB,SAAS6V,cAAe,EAK7E,OAJAxU,KAAK+kB,oBAAoB/kB,KAAMoT,EAAQ0R,EAA0B3Q,EAAYqQ,GAE7ErQ,EAAW8N,WAEJ9N,CACX,EAOA6Q,cAAe,SAAU5R,GACrB,OAAOpT,KAAK6iB,aAAaxD,IAAIjM,EAAO1L,QACxC,EAEAqd,oBAAqB,SAAUE,EAAQ7R,EAAQ0R,EAA0B3Q,EAAYqQ,GACjF,IAAIS,EAAO/kB,UAIX,IAAK,IAAIgB,EAAI,EAAGA,EAAI+jB,EAAOb,UAAUjjB,OAAQD,IAAK,CAC9C,IAAIgkB,EAAQD,EAAOb,UAAUljB,GAE7B,GAAIgkB,EAAMnlB,eAAgB,CAEtB,IAAIsY,EAAS6M,EAAMrZ,gBAAkB2M,EAAW0M,EAAM9P,eAAexO,MACjEhI,EAAWsmB,EAAMtmB,SAErB8O,EAAAA,EAAKwH,eAAe4D,EAAW1F,EAAO+B,WAAWvO,MAAOyR,IACpDmM,IAA2B5lB,EAASiC,cAAgBb,KAAKmlB,gBAAgBD,EAAO9R,EAAQ0F,KACxF3E,EAAW4N,IAAImD,EAAOA,EAAMvmB,SAAS6V,aAAesQ,EAE5D,CACII,EAAMd,UAAUjjB,OAAS,GACzBnB,KAAK+kB,oBAAoBG,EAAO9R,EAAQ0R,EAA0B3Q,EAAYqQ,EAEtF,CACJ,EAYAW,gBAAkB,WAGd,IAAIC,EAAqB,IAAI/C,EAAAA,EACzBgD,EAAgB,IAAIC,EAAAA,EACxB,OAAO,SAASvK,EAAQ3H,EAAQ2B,GAG5B,IAAIwQ,EAAUxK,EAAOla,YAUrB,GATK0kB,IAEGA,EADAxK,EAAOC,UAAYD,EAAOC,SAASna,YACzBka,EAAOC,SAASna,YAGhBka,EAAOnc,SAASiC,cAI7B0kB,EACD,OAAO,EAeX,GAZAF,EAAcze,MAAQmO,EACtBqQ,EAAmBI,cAAcD,EAASF,GAOtCtK,EAAOpb,YACPK,KAAKoiB,yBAAyBthB,MAAMskB,GAGpCrK,EAAOtb,eAAiB,CACxB,IAAK2lB,EAAmBK,qBAAqBrS,EAAOsS,QAAQ7kB,aACxD,OAAO,EAGXwkB,EAAcze,MAAQwM,EAAOmE,iBAAiB3Q,MAE1Cwe,EAAmBP,IAAIje,MAAM,GAAK,GAClCwe,EAAmBV,IAAI9d,MAAM,GAAK,IAGlCwe,EAAmBP,IAAIje,MAAM,IAAM,OAGvCwe,EAAmBO,gBAAgBN,GAEnC,IAAIX,EAAMU,EAAmBV,IAAI9d,MAC7Bie,EAAMO,EAAmBP,IAAIje,MAEjC,GACIie,EAAI,IAAM,GAAKH,EAAI,GAAK,GACrBG,EAAI,IAAM,GAAKH,EAAI,GAAK,GACxBG,EAAI,IAAM,GAAKH,EAAI,GAAK,EAE3B,OAAO,CAEf,CAEA,OAAO,CACX,CACJ,CAhEkB,GAkElBb,qBAAsB,WAClB,IAAI1B,EAASniB,KAAKmiB,OAElBA,EAAO3L,KAAKoP,GAEZ,IAAIC,EAAgB7lB,KAAKwiB,eACzB,IAAK,IAAImB,KAASkC,EACd,IAAK,IAAIvhB,KAAUuhB,EAAclC,GAC7BkC,EAAclC,GAAOrf,GAAQe,MAAMlE,OAAS,EAGpD,IAAK,IAAID,EAAI,EAAGA,EAAIihB,EAAOhhB,OAAQD,IAAK,CAEpC,IAAIwiB,EAAQvB,EAAOjhB,GAEnB,IAAIwiB,EAAMxjB,UAAV,CAIIyjB,EAAQD,EAAMC,MAElB,IAAK,IAAIrf,KAAUof,EAAMoC,iBAAkB,CACvC,IAAIC,EAAarC,EAAMoC,iBAAiBxhB,GACpCe,EAAQ0gB,EAAW1gB,MAAMqe,GAC7B,GAAa,MAATre,EAAJ,CAGKwgB,EAAclC,KACfkC,EAAclC,GAAS,CAAC,GAEvBkC,EAAclC,GAAOrf,KACtBuhB,EAAclC,GAAOrf,GAAU,CAC3Bc,KAAM,GACNC,MAAO,KAGf,IAAI2gB,EAAKH,EAAclC,GAAOrf,GAE9B,OADA0hB,EAAG5gB,KAAO2gB,EAAW3gB,KAAO,IACpB2gB,EAAW3gB,MACf,IAAK,KACL,IAAK,KACL,IAAK,IACD4gB,EAAG3gB,MAAM0F,KAAK1F,GACd,MACJ,IAAK,KACL,IAAK,KACL,IAAK,KACD,IAAK,IAAI0B,EAAI,EAAGA,EAAI1B,EAAMlE,OAAQ4F,IAC9Bif,EAAG3gB,MAAM0F,KAAK1F,EAAM0B,IAExB,MACJ,QACI2K,QAAQC,MAAM,6BAA+BoU,EAAW3gB,MA1BhE,CA4BJ,CArCA,CAsCJ,CACJ,EAEA6gB,eAAgB,WACZ,IAAIC,EAAc,GAClB,IAAK,IAAItC,KAAW5jB,KAAK0iB,aACrBwD,EAAYnb,KAAK6Y,GAErB,OAAOsC,CACX,EAEAC,4BAA6B,WACzB,IAAID,EAAc,GAClB,IAAK,IAAItC,KAAW5jB,KAAK0iB,aACjB1iB,KAAKomB,qBAAqBxC,IAC1BsC,EAAYnb,KAAK6Y,GAGzB,OAAOsC,CACX,EAIAE,qBAAsB,SAAUlnB,GAC5B,IAAImnB,EAAkBrmB,KAAKyiB,qBACvB6D,EAAqBtmB,KAAK0iB,aAE9B,IAAK,IAAItd,KAAQkhB,EAAmBpnB,GAAa,CAC7C,IAAKmnB,EAAgBnnB,GACjB,OAAO,EAEX,GAAIonB,EAAmBpnB,GAAYkG,KAAUihB,EAAgBnnB,GAAYkG,GACrE,OAAO,CAEf,CACA,IAAK,IAAIA,KAAQihB,EAAgBnnB,GAAa,CAC1C,IAAKonB,EAAmBpnB,GACpB,OAAO,EAEX,GAAIonB,EAAmBpnB,GAAYkG,KAAUihB,EAAgBnnB,GAAYkG,GACrE,OAAO,CAEf,CACA,OAAO,CACX,EAEA+G,iBAAkB,SAAUjN,GACxB,OAAOc,KAAK0iB,aAAaxjB,EAC7B,EAEA+M,cAAe,SAAU/M,GACrB,OAAOc,KAAK2iB,kBAAkBzjB,EAClC,EAEAua,iBAAmB,WACf,SAAS8M,EAAYhd,EAAU/B,EAAStD,GACpC,IAAK,IAAII,KAAUiF,EAAU,CACzB,IAAIyc,EAAKzc,EAASjF,GAClB,GAAgB,OAAZ0hB,EAAG5gB,KAAe,CAClB,IAAKoC,EAAQnD,WAAWC,GACpB,SAGJ,IADA,IAAIkiB,EAAW,GACNtlB,EAAI,EAAGA,EAAI8kB,EAAG3gB,MAAMlE,OAAQD,IAAK,CACtC,IAAIwD,EAAUshB,EAAG3gB,MAAMnE,GACnByD,EAAO6C,EAAQvC,uBAAuBf,EAAUQ,GACpD8hB,EAASzb,KAAKpG,EAClB,CACA6C,EAAQrC,WAAWjB,EAASC,GAAI,MAAOG,EAAQkiB,EACnD,MAEIhf,EAAQrC,WAAWjB,EAASC,GAAI6hB,EAAG5gB,KAAMd,EAAQ0hB,EAAG3gB,MAE5D,CACJ,CAEA,OAAO,SAAUmC,EAAStI,EAAYgF,GAClCqiB,EAAYvmB,KAAKwiB,eAAetjB,GAAasI,EAAStD,GAEtDqiB,EAAYvmB,KAAKsiB,eAAgB9a,EAAStD,EAC9C,CACJ,CA3BmB,GAkCnByb,QAAS,WACL3f,KAAKrB,SAAW,KAChBqB,KAAKymB,YAAc,GACnBzmB,KAAK0mB,iBAAmB,GAExB1mB,KAAKmiB,OAAS,GAEdniB,KAAKwiB,eAAiB,CAAC,EAEvBxiB,KAAK0iB,aAAe,CAAC,EACrB1iB,KAAK4iB,gBAAkB,CAAC,CAC5B,IAGJ,SAASgD,EAAcnH,EAAGkI,GACtB,GAAIA,EAAEhnB,aAAe8e,EAAE9e,WACnB,OAAO,CAEf,CAEA,K,0DCliBIinB,EAAe,kHACfC,EAAiB,wDAEjBC,EAAc,2CAEdC,EAAiB,CACjB,KAAQ,KACR,IAAO,KACP,UAAa,IACb,YAAe,IACf,MAAS,KACT,KAAQ,KACR,KAAQ,KACR,KAAQ,KACR,MAAS,KACT,MAAS,KACT,MAAS,KACT,KAAQ,KACR,KAAQ,KACR,KAAQ,MAGZ,SAASC,EAAgBC,GAErB,IADA,IAAIjJ,EAAM,GACD9c,EAAI,EAAGA,EAAI+lB,EAAK/lB,IACrB8c,EAAI9c,GAAK,EAEb,OAAO8c,CACX,CAEA,IAAIkJ,EAA0B,CAC1B,KAAQ,WAAc,OAAO,CAAM,EACnC,IAAO,WAAc,OAAO,CAAG,EAC/B,MAAS,WAAc,OAAO,CAAG,EACjC,UAAa,WAAc,OAAO,IAAM,EACxC,YAAe,WAAc,OAAO,IAAM,EAE1C,KAAQ,WAAc,OAAOF,EAAgB,EAAI,EACjD,KAAQ,WAAc,OAAOA,EAAgB,EAAI,EACjD,KAAQ,WAAc,OAAOA,EAAgB,EAAI,EAEjD,MAAS,WAAc,OAAOA,EAAgB,EAAI,EAClD,MAAS,WAAc,OAAOA,EAAgB,EAAI,EAClD,MAAS,WAAc,OAAOA,EAAgB,EAAI,EAElD,KAAQ,WAAc,OAAOA,EAAgB,EAAI,EACjD,KAAQ,WAAc,OAAOA,EAAgB,EAAI,EACjD,KAAQ,WAAc,OAAOA,EAAgB,GAAK,EAElD,MAAS,WAAc,MAAO,EAAI,GAGlCpe,EAAqB,CACrB,WACA,SACA,WACA,UACA,WACA,aACA,aACA,QAGA,QACA,UAEAhF,EAAmB,CACnB,cAEA,gBACA,WACA,mBAGA,cAEA,OACA,MAEA,QAEAmV,EAAkB,CAClB,QACA,OACA,aACA,YACA,iBACA,sBACA,eACA,cACA,oBACA,mBACA,wBACA,6BACA,iBACA,gBACA,sBACA,qBACA,0BACA,+BACA,wBACA,uBACA,6BACA,4BACA,iCACA,uCAGAoO,EAAmB,CAEnB,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,MAAS,GAITC,EAAgB,CAAC,EACjBC,EAAkB,CAAC,EAEvB,SAASC,EAAYva,EAAQG,GACzB,IAAInB,EAAM,UAAYgB,EAAS,YAAcG,EAC7C,GAAIka,EAAcrb,GACd,OAAOqb,EAAcrb,GAEzB,IAAIyV,EAAKC,EAAAA,EAAKC,UAQd,OAPA0F,EAAcrb,GAAOyV,EAErB6F,EAAgB7F,GAAM,CAClBzU,OAAQA,EACRG,SAAUA,GAGPsU,CACX,CAEA,SAAS+F,EAAcC,GACnB,OAAOA,EAAKzd,QAAQ,kBAAmB,IAClCA,QAAQ,0BAA2B,GAC5C,CAEA,SAAS0d,IACL/V,QAAQC,MAAM,kCAClB,CAEA,SAAS+V,EAAkBtiB,EAAMuiB,GAS7B,IARA,IAAIC,EAAkB,YAClBC,EAASF,EAER5d,QAAQ,sBAAuB,IAAM3E,EAAO,QAC5C2E,QAAQ,OAAQ,IAChBhH,MAAM,kBAEP+kB,EAAY,GACP5mB,EAAI,EAAGA,EAAI2mB,EAAO1mB,OAAQD,IAC3B2mB,EAAO3mB,GAAG8I,MAAM4d,GAChBE,EAAU/c,KACN8c,EAAO3mB,GAAG6mB,OAAO,GACjBF,EAAO3mB,GAAG8mB,MAAM,IAIpBF,EAAU/c,KAAK8c,EAAO3mB,IAG9B2mB,EAASC,EAET,IAUIG,EAVAC,EAAc,EACdC,EAAc,EACdC,EAAW,EACXC,EAAW,EACXC,EAAgB,EAChBC,EAAc,EAEdC,EAASN,EACTO,EAAe,CAAC,EAChBC,EAAmB,KAKvB,SAASC,EAAUrkB,GACVA,GACDmjB,IAEJ,IAAImB,EAAYtkB,EAAO0F,MAAM,aAC7Bie,EAAqB3jB,EAAOyF,QAAQ,YAAa,IACjD0e,EAAaR,GAAsB,CAAC,EAChCW,IACAH,EAAaR,GAAoBthB,SAAU,EAC3C8hB,EAAaR,GAAoBY,UAAYD,EAAU,GAE/D,CAbAD,EAAUd,EAAO,IAejB,IAAS3mB,EAAI,EAAGA,EAAI2mB,EAAO1mB,OAAQD,IAAK,CACpC,IAAI4nB,EAAQjB,EAAO3mB,GACnB,GAAK4nB,EAGL,GAAc,MAAVA,EAUC,GAAc,MAAVA,EAKJ,GAAc,MAAVA,EAcJ,GAAc,MAAVA,EAMJ,GAAc,MAAVA,EAYJ,GAAIA,EAAM7b,QAAQ,QAAU,EAA5B,CACD,GAAIub,IAAWL,GAEZK,IAAWF,EAAe,CACzBb,IACA,KACJ,CACAe,EAASJ,EACTM,EAAmB,EAkCvB,MA/BK,GAAIF,IAAWL,EAUf,GAAIK,IAAWF,EAwBpBK,EAAUG,GACVN,EAASN,MAzBJ,CACD,IAAIjhB,EAAW6hB,EACXlgB,EAAmBqE,QAAQhG,IAAa,GACrCrD,EAAiBqJ,QAAQhG,IAAa,GACtC8R,EAAgB9L,QAAQhG,IAAa,EAExCwhB,EAAaR,GAAoBhhB,SAAWA,EAE1B,WAAbA,GAAsC,mBAAbA,EAC9BwhB,EAAaR,GAAoBc,QAAS,EAKtCN,EAAaR,GAAoB5iB,MADxB,SAATD,EACsD,SAAb6B,EAGA+hB,WAAW/hB,EAIhE,MA7BQwhB,EAAaR,GAAoB5iB,MADxB,SAATD,EACmD,SAAV0jB,EAGAE,WAAWF,GAExDJ,EAAmB,SA9BlB,CACD,GAAIF,IAAWJ,EAAU,CACrBX,IACA,KACJ,CACA,KAAMiB,aAA4BhiB,OAAQ,CACtC+gB,IACA,KACJ,CACAiB,EAAiB3d,MAAM8c,IAAS3mB,GA6CpC,MA3DIunB,EAAaR,GAAoB5iB,MAAQ,IAAI7B,EAAAA,EAAOC,aAAailB,GACjEA,EAAmB,KACnBF,EAASD,OAhBT,GAAIC,IAAWJ,EAAU,CACrB,KAAMM,aAA4BhiB,OAAQ,CACtC+gB,IACA,KACJ,CACAiB,EAAiB3d,MAAM8c,IAAS3mB,GACpC,MAEIsnB,EAASD,OAbbC,EAASF,MAXb,CACI,GAAIE,IAAWN,GACZM,IAAWH,EAAU,CACpBZ,IACA,KACJ,CACAe,EAASL,CAmFb,CAKJ,CAEA,OAAOM,CACX,CAgBA,SAASlb,EAAOR,EAAQG,GAEE,kBAAXH,IACPG,EAAWH,EAAOG,SAClBH,EAASA,EAAOA,QAGpBA,EAASwa,EAAcxa,GACvBG,EAAWqa,EAAcra,GAEzBlN,KAAKipB,UAAY3B,EAAYva,EAAQG,GAErClN,KAAKkpB,YAAc3b,EAAO4b,YAAYpc,GACtC/M,KAAKopB,cAAgB7b,EAAO4b,YAAYjc,GAKxClN,KAAK4I,mBAAqB,CAAC,EAI3B5I,KAAK+Y,gBAAkB,CAAC,EAIxB/Y,KAAK4D,iBAAmB,CAAC,EAIzB5D,KAAKoa,mBAAqB,GAI1Bpa,KAAK8lB,iBAAmB,CAAC,EAIzB9lB,KAAK6D,WAAa,CAAC,EAInB7D,KAAKqpB,SAAW,CAAC,EAIjBrpB,KAAK4M,cAAgB,CAAC,EAItB5M,KAAK8M,gBAAkB,CAAC,EAExB9M,KAAKspB,mBACLtpB,KAAKupB,iBACLvpB,KAAKwpB,eACT,CAEAjc,EAAO5M,UAAY,CAEf8oB,YAAalc,EAGbmc,eAAgB,WACZ,IAAIngB,EAAW,CAAC,EAEhB,IAAK,IAAIjF,KAAUtE,KAAK8lB,iBAAiB,CACrC,IAAIC,EAAa/lB,KAAK8lB,iBAAiBxhB,GACvCiF,EAASjF,GAAU,CACfc,KAAM2gB,EAAW3gB,KACjBC,MAAO0gB,EAAW1gB,QAE1B,CAEA,OAAOkE,CACX,EAEAogB,aAAc,WACV3pB,KAAKkpB,YAAc3b,EAAO4b,YAAYnpB,KAAK+M,QAC3C/M,KAAKopB,cAAgB7b,EAAO4b,YAAYnpB,KAAKkN,SACjD,EAEA0c,oBAAqB,SAAUtlB,EAAQoZ,EAAazW,GAGhD,GAAI2B,EAAmBqE,QAAQhG,IAAa,EACxCjH,KAAK4I,mBAAmB3B,GAAY,CAChC3C,OAAQA,EACRc,KAAMsY,QAGT,GAAI3E,EAAgB9L,QAAQhG,IAAa,EAAG,CAC7C,IAAIsT,GAAc,EACdE,EAAsBxT,EACtBA,EAAS+C,MAAM,gBACfuQ,GAAc,EACdE,EAAsBxT,EAAS+gB,MAAM,GAAI,IAE7ChoB,KAAK+Y,gBAAgB9R,GAAY,CAC7B3C,OAAQA,EACRc,KAAMsY,EACNnD,YAAaA,EACbE,oBAAqBA,EAE7B,MACS7W,EAAiBqJ,QAAQhG,IAAa,IAC3CjH,KAAK4D,iBAAiBqD,GAAY,CAC9B3C,OAAQA,EACRc,KAAMsY,GAGlB,EAEAmM,oBAAqB,SAAUvlB,EAAQc,EAAMsY,EAAaoM,EAAkBnjB,EAASojB,GACjFA,EAAiBzlB,GAAU,CACvBc,KAAMsY,EACNrY,MAAOsB,EAAUugB,EAAwB,SAAY4C,GAAoB5C,EAAwB9hB,GACjG6B,SAAU,KAElB,EAEAsiB,eAAgB,WACZ,IAAIhgB,EAAW,CAAC,EACZygB,EAAOhqB,KACPiqB,EAAa,SASjB,SAASC,EAAqB7kB,GAC1B,OAAgB,MAATA,EAAgB,WAAc,OAAOA,CAAO,EAAI,IAC3D,CAEA,SAAS8kB,EAAeC,EAAKhlB,EAAMilB,GAC/B,IAAIC,EAAmB5C,EAAkBtiB,EAAMilB,GAC3CE,EAAiB,GACrB,IAAK,IAAIjmB,KAAUgmB,EAAkB,CAEjC,IAAIE,EAAcF,EAAiBhmB,GAC/B2C,EAAWujB,EAAYvjB,SACvBwjB,EAASnmB,EACToZ,EAAcqJ,EAAe3hB,GAC7B0kB,EAAmBI,EAAqBI,EAAiBhmB,GAAQe,OACjEilB,EAAiBhmB,GAAQqC,UACzB8jB,GAAU,IAAMH,EAAiBhmB,GAAQukB,UAAY,IACrDnL,GAAe,KAGnB6M,EAAexf,KAAK0f,GAEpBT,EAAKU,aAAa3f,KAAKzG,GAElBkmB,EAAYzB,SACA,cAAT3jB,GAAiC,gBAATA,IAExB4kB,EAAKX,SAAS/kB,GAAU,CACpB2lB,WAAYA,EACZ7kB,KAAMA,IAIV6B,EAEA+iB,EAAKJ,oBAAoBtlB,EAAQoZ,EAAazW,GAG9C+iB,EAAKH,oBACDvlB,EAAQc,EAAMsY,EAAaoM,EAC3BQ,EAAiBhmB,GAAQqC,QAAS4C,GAIlD,CACA,OAAOghB,EAAeppB,OAAS,EACzB,WAAaiE,EAAO,IAAMmlB,EAAetnB,KAAK,KAAO,MAAQ,EACvE,CAtDAjD,KAAK0qB,aAAe,GAEpB1qB,KAAKkpB,YAAclpB,KAAKkpB,YAAYnf,QAAQ6c,EAAcuD,GAC1DF,EAAa,WACbjqB,KAAKopB,cAAgBppB,KAAKopB,cAAcrf,QAAQ6c,EAAcuD,GAE9DH,EAAK5P,mBAAqBrR,OAAOD,KAAK9I,KAAK+Y,iBAkD3C/Y,KAAK8lB,iBAAmBvc,CAC5B,EAEA+f,iBAAkB,WACd,IAAIzlB,EAAa,CAAC,EACdmmB,EAAOhqB,KAGX,SAAS2qB,EAAiBP,EAAKhlB,EAAMilB,GACjC,IAAIO,EAAqBlD,EAAkBtiB,EAAMilB,GAE7CvN,EAAOqK,EAAiB/hB,IAAS,EACjCylB,EAAmB,GACvB,IAAK,IAAIvmB,KAAUsmB,EAAoB,CACnC,IAAI3jB,EAAW2jB,EAAmBtmB,GAAQ2C,SAQ1C,GAPApD,EAAWS,GAAU,CAEjBc,KAAM,QACN0X,KAAMA,EACN7V,SAAUA,GAAY,MAGtBA,EAAU,CACV,GAAI2B,EAAmBqE,QAAQhG,GAAY,EACvC,MAAM,IAAIsK,MAAM,oBAAsBtK,EAAW,KAGjD+iB,EAAKphB,mBAAmB3B,GAAY,CAChC3C,OAAQA,EACRc,KAAMA,EAGlB,CACAylB,EAAiB9f,KAAKzG,EAC1B,CAEA,MAAO,aAAec,EAAO,IAAMylB,EAAiB5nB,KAAK,KAAO,KACpE,CA/BAjD,KAAKkpB,YAAclpB,KAAKkpB,YAAYnf,QAAQ8c,EAAgB8D,GAiC5D3qB,KAAK6D,WAAaA,CACtB,EAEA2lB,cAAe,WACX,IAAIQ,EAAOhqB,KACPiqB,EAAa,SAKjB,SAASa,EAAcV,EAAK9lB,EAAQe,GAChC,IAAIwE,EAAyB,WAAfogB,EAA0BD,EAAKpd,cAAgBod,EAAKld,gBAelE,OAdKjD,EAAQvF,KAELuF,EAAQvF,GADE,UAAVe,IAGe,SAAVA,IAIaA,EAEXgF,MAAM2e,WAAW3jB,IAAUA,EAAM0lB,OAAS/B,WAAW3jB,GACtD,QAGP,EACX,CArBArF,KAAKkpB,YAAclpB,KAAKkpB,YAAYnf,QAAQ+c,EAAagE,GACzDb,EAAa,WACbjqB,KAAKopB,cAAgBppB,KAAKopB,cAAcrf,QAAQ+c,EAAagE,EAoBjE,EAMA/pB,MAAO,WACH,IAAIymB,EAAOH,EAAgBrnB,KAAKipB,WAC5BhpB,EAAS,IAAIsN,EAAOia,EAAKza,OAAQya,EAAKta,UAC1C,OAAOjN,CACX,GAGA8I,OAAOiiB,iBACPjiB,OAAOiiB,eAAezd,EAAO5M,UAAW,WAAY,CAChD0e,IAAK,WACD,OAAOrf,KAAKipB,SAChB,IAEJlgB,OAAOiiB,eAAezd,EAAO5M,UAAW,SAAU,CAC9C0e,IAAK,WACD,OAAOrf,KAAKkpB,WAChB,IAEJngB,OAAOiiB,eAAezd,EAAO5M,UAAW,WAAY,CAChD0e,IAAK,WACD,OAAOrf,KAAKopB,aAChB,IAEJrgB,OAAOiiB,eAAezd,EAAO5M,UAAW,WAAY,CAChD0e,IAAK,WACD,OAAOrf,KAAK0qB,YAChB,KAIR,IAAIO,EAAc,mCAClB1d,EAAO4b,YAAc,SAAUvf,GAY3B,OAXAA,EAAYA,EAAUG,QAAQkhB,GAAa,SAAUb,EAAKc,EAAcC,GAChEf,EAAM7c,EAAO2R,OAAOiM,GACxB,OAAIf,EAEO7c,EAAO4b,YAAYiB,IAG1B1Y,QAAQC,MAAM,iBAAmBwZ,EAAa,4BACvC,GAEf,IACOvhB,CACX,EAEA,IAAIwhB,EAAc,sDAOlB7d,EAAO,UAAY,SAAU3D,GACzBA,EAAUG,QAAQqhB,GAAa,SAAUhB,EAAKiB,EAAcC,EAAY9D,GAChEA,EAAOA,EAAKzd,QAAQ,gDAAiD,IACzE,GAAIyd,EAAM,CACN,IAGIzb,EAHAwf,EAAQD,EAAWvoB,MAAM,KACzB4P,EAAMpF,EAAOie,MACbtqB,EAAI,EAER,MAAOA,EAAIqqB,EAAMpqB,OAAS,EACtB4K,EAAMwf,EAAMrqB,KACPyR,EAAI5G,KACL4G,EAAI5G,GAAO,CAAC,GAEhB4G,EAAMA,EAAI5G,GAEdA,EAAMwf,EAAMrqB,GACZyR,EAAI5G,GAAOyb,CACf,CACA,OAAOA,CACX,GACJ,EAQAja,EAAOie,MAAQ,CAAC,EAOhBje,EAAO2R,OAAS,SAAU9d,GACtB,IAAImqB,EAAQnqB,EAAK2B,MAAM,KACnB4P,EAAMpF,EAAOie,MACbtqB,EAAI,EACR,MAAOyR,GAAOzR,EAAIqqB,EAAMpqB,OAAQ,CAC5B,IAAI4K,EAAMwf,EAAMrqB,KAChByR,EAAMA,EAAI5G,EACd,CACA,MAAmB,kBAAR4G,GAEPjB,QAAQC,MAAM,WAAavQ,EAAO,4BAC3B,IAEJuR,CACX,EAEA,K,6DC1pBI8Y,EAAU9nB,EAAAA,EAAKjF,OAAoC,CAKnD8Q,MAAO,IAKPC,OAAQ,IAWRrK,KAAMtG,EAAAA,EAAO6P,cASb+c,OAAQ5sB,EAAAA,EAAOkR,KASf2b,MAAO7sB,EAAAA,EAAO8sB,OASdC,MAAO/sB,EAAAA,EAAO8sB,OAWdE,UAAWhtB,EAAAA,EAAOitB,qBAOlBC,UAAWltB,EAAAA,EAAOmtB,OAKlBC,WAAW,EAOXC,YAAa,EAQbC,OAAO,EAKPC,MAAM,EAKNC,gBAAiB,EAKjBC,kBAAkB,EAMlBpO,SAAS,EAETqO,MAAM,EAINC,OAAQ,IAET,WACCzsB,KAAKyL,OAAS,IAAIihB,EAAAA,CACtB,GAEA,CAEIC,gBAAiB,SAAUzoB,GACvB,IAAI7D,EAAM6D,EAASC,GACfyH,EAAQ5L,KAAKyL,OAejB,OAdAG,EAAMghB,IAAI1oB,EAASwD,SAEfkE,EAAMihB,KAAK,kBAEXjhB,EAAM6Y,IAAI,gBAAiBpkB,EAAIuP,iBAE/B5P,KAAKme,QACLne,KAAKgU,OAAO9P,GAEP0H,EAAMkhB,YACX9sB,KAAKgU,OAAO9P,GACZ0H,EAAMmhB,SAGHnhB,EAAMyT,IAAI,gBACrB,EAEApb,KAAM,WAAa,EACnBa,OAAQ,WAAa,EAKrBkoB,MAAO,WACChtB,KAAKyL,QACLzL,KAAKyL,OAAOwhB,UAEpB,EAEAjZ,OAAQ,SAAU9P,GAAW,EAG7BgpB,aAAc,SAAUhpB,GACpB,IAAI7D,EAAM6D,EAASC,GACnB9D,EAAI8sB,YAAY9sB,EAAI+sB,oBAAqBptB,KAAKosB,OAC9C/rB,EAAI8sB,YAAY9sB,EAAIgtB,+BAAgCrtB,KAAKusB,kBACzDlsB,EAAI8sB,YAAY9sB,EAAIitB,iBAAkBttB,KAAKssB,iBAIvCtsB,KAAK0rB,SAAW5sB,EAAAA,EAAOyuB,kBACvBvtB,KAAKksB,WAAY,GAGrB,IAAIsB,EAAUtpB,EAAS8I,eAAe,YAElChN,KAAK0rB,SAAWD,EAAQgC,MAASD,IACjCxtB,KAAK0rB,OAASD,EAAQiC,KAEtB1tB,KAAK0rB,SAAWD,EAAQkC,YAAeH,IACvCxtB,KAAK0rB,OAASD,EAAQzb,MAG1BhQ,KAAKwsB,MAAQxsB,KAAK4tB,cACtB,EAEAC,kBAAmB,WACf,OAAI7tB,KAAKwsB,KACE1tB,EAAAA,EAAOgvB,cAEX9tB,KAAK2rB,KAChB,EACAoC,kBAAmB,WACf,OAAI/tB,KAAKwsB,KACE1tB,EAAAA,EAAOgvB,cAEX9tB,KAAK6rB,KAChB,EACAmC,sBAAuB,WACnB,IAAIlC,EAAY9rB,KAAK8rB,UACrB,OAAI9rB,KAAKwsB,OAASxsB,KAAKksB,UACfJ,IAAchtB,EAAAA,EAAOmvB,wBACrBnC,IAAchtB,EAAAA,EAAOovB,sBAEdpvB,EAAAA,EAAOqvB,QAETrC,IAAchtB,EAAAA,EAAOitB,sBAC1BD,IAAchtB,EAAAA,EAAOsvB,sBAEdtvB,EAAAA,EAAOmtB,OAGPH,EAIJA,CAEf,EACAuC,sBAAuB,WACnB,OAAOruB,KAAKgsB,SAChB,EAEAsC,sBAAuB,SAAU7b,KAC3BA,EACF,IAAK,IAAIvR,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAC1BuR,GAAQA,GAAKvR,EAEjB,OAAOuR,EAAI,CACf,EAIAkN,QAAS,SAAUzb,GAEf,IAAI0H,EAAQ5L,KAAKyL,OAEjBG,EAAMghB,IAAI1oB,EAASwD,SAEnB,IAAI4H,EAAe1D,EAAMyT,IAAI,iBACzB/P,GACApL,EAASC,GAAGoqB,cAAcjf,GAE9B1D,EAAM4iB,cAActqB,EAASwD,QAEjC,EAKA3H,aAAc,WAAa,EAM3B6tB,aAAc,WAAa,IAG/B7kB,OAAOiiB,eAAeS,EAAQ9qB,UAAW,QAAS,CAC9C0e,IAAK,WACD,OAAOrf,KAAKmQ,MAChB,EACAwU,IAAK,SAAUtf,GACXrF,KAAKmQ,OAAS9K,CAClB,IAEJ0D,OAAOiiB,eAAeS,EAAQ9qB,UAAW,SAAU,CAC/C0e,IAAK,WACD,OAAOrf,KAAKoQ,OAChB,EACAuU,IAAK,SAAUtf,GACXrF,KAAKoQ,QAAU/K,CACnB,IAQJomB,EAAQhd,KAAO3P,EAAAA,EAAO2P,KAItBgd,EAAQ9c,cAAgB7P,EAAAA,EAAO6P,cAI/B8c,EAAQ5c,MAAQ/P,EAAAA,EAAO+P,MAIvB4c,EAAQ1c,eAAiBjQ,EAAAA,EAAOiQ,eAIhC0c,EAAQgD,IAAM3vB,EAAAA,EAAO2vB,IAIrBhD,EAAQ3P,aAAehd,EAAAA,EAAOgd,aAI9B2P,EAAQld,MAAQzP,EAAAA,EAAOyP,MAIvBkd,EAAQiD,WAAa,MAMrBjD,EAAQkD,wBAA0B,MAMlClD,EAAQ8B,gBAAkBzuB,EAAAA,EAAOyuB,gBAIjC9B,EAAQmD,cAAgB9vB,EAAAA,EAAO8vB,cAI/BnD,EAAQoD,MAAQ/vB,EAAAA,EAAO+vB,MAIvBpD,EAAQiC,IAAM5uB,EAAAA,EAAO4uB,IAIrBjC,EAAQzb,KAAOlR,EAAAA,EAAOkR,KAItByb,EAAQqD,UAAYhwB,EAAAA,EAAOgwB,UAI3BrD,EAAQsD,gBAAkBjwB,EAAAA,EAAOiwB,gBAMjCtD,EAAQgC,KAAO,MAKfhC,EAAQkC,WAAa,MAGrBlC,EAAQuD,6BAA+B,MACvCvD,EAAQwD,8BAAgC,MACxCxD,EAAQyD,8BAAgC,MACxCzD,EAAQ0D,8BAAgC,MAMxC1D,EAAQ0C,QAAUrvB,EAAAA,EAAOqvB,QAIzB1C,EAAQQ,OAASntB,EAAAA,EAAOmtB,OAMxBR,EAAQwC,uBAAyBnvB,EAAAA,EAAOmvB,uBAIxCxC,EAAQ2C,sBAAwBtvB,EAAAA,EAAOsvB,sBAIvC3C,EAAQyC,sBAAwBpvB,EAAAA,EAAOovB,sBAIvCzC,EAAQM,qBAAuBjtB,EAAAA,EAAOitB,qBAMtCN,EAAQG,OAAS9sB,EAAAA,EAAO8sB,OAIxBH,EAAQqC,cAAgBhvB,EAAAA,EAAOgvB,cAI/BrC,EAAQ2D,gBAAkBtwB,EAAAA,EAAOswB,gBAGjC,K,uEC1ZIxB,EAAeyB,EAAAA,EAASzB,aAE5B,SAAS0B,EAAkBpoB,GACvB,OAAOqoB,KAAKC,IAAI,EAAGD,KAAKE,MAAMF,KAAKG,IAAIxoB,GAAOqoB,KAAKI,KACvD,CACA,SAASC,EAA2BlrB,EAASwL,GAEzC,IAAIV,EAAQ8f,EAAkB5qB,EAAQ8K,OAClCC,EAAS6f,EAAkB5qB,EAAQ+K,QACvCS,EAASA,GAAU2f,SAASC,cAAc,UAC1C5f,EAAOV,MAAQA,EACfU,EAAOT,OAASA,EAChB,IAAIsgB,EAAM7f,EAAOR,WAAW,MAG5B,OAFAqgB,EAAIC,UAAUtrB,EAAQurB,MAAO,EAAG,EAAGzgB,EAAOC,GAEnCS,CACX,CAsBA,IAAIggB,EAAYzE,EAAAA,EAAQ/sB,QAAO,WAC3B,MAAqC,CAKjCuxB,MAAO,KAKPE,OAAQ,KAYRC,QAAS,GAMTC,cAAc,EAEtB,GAAG,CAECC,YAAa,YAEbtc,OAAQ,SAAU9P,GAEd,IAAI7D,EAAM6D,EAASC,GACnB9D,EAAIwP,YAAYxP,EAAIyP,WAAY9P,KAAKyL,OAAO4T,IAAI,kBAEhDrf,KAAKktB,aAAahpB,GAElB,IAAIqsB,EAAWvwB,KAAK0rB,OAChBjP,EAASzc,KAAKoF,KAGdirB,KAAkBrwB,KAAKqwB,cACnBrwB,KAAKowB,QAAQjvB,SAAUnB,KAAKiwB,OAC5BjwB,KAAK2rB,QAAUF,EAAAA,EAAQG,QAAU5rB,KAAK6rB,QAAUJ,EAAAA,EAAQG,SACzD5rB,KAAKwsB,MAGZnsB,EAAImwB,cAAcnwB,EAAIyP,WAAYzP,EAAIowB,eAAgBJ,EAAerwB,KAAK2rB,MAAQ3rB,KAAK6tB,qBACvFxtB,EAAImwB,cAAcnwB,EAAIyP,WAAYzP,EAAIqwB,eAAgBL,EAAerwB,KAAK6rB,MAAQ7rB,KAAK+tB,qBAEvF1tB,EAAImwB,cAAcnwB,EAAIyP,WAAYzP,EAAIswB,mBAAoBN,EAAerwB,KAAKgsB,UAAYhsB,KAAKquB,yBAC/FhuB,EAAImwB,cAAcnwB,EAAIyP,WAAYzP,EAAIuwB,mBAAoBP,EAAerwB,KAAK8rB,UAAY9rB,KAAKguB,yBAE/F,IAAI6C,EAAiB3sB,EAAS8I,eAAe,kCAM7C,GALI6jB,GAAkB7wB,KAAKmsB,YAAc,GACrC9rB,EAAIywB,cAAczwB,EAAIyP,WAAY+gB,EAAeE,2BAA4B/wB,KAAKmsB,aAIvE,QAAX1P,EAAkB,CAClB,IAAIuU,EAAe9sB,EAAS8I,eAAe,0BACtCgkB,IACDvU,EAAS3d,EAAAA,EAAOyP,MAExB,CAEA,GAAIvO,KAAKowB,QAAQjvB,OAGb,IAFA,IAAIqO,EAAQxP,KAAKwP,MACbC,EAASzP,KAAKyP,OACTvO,EAAI,EAAGA,EAAIlB,KAAKowB,QAAQjvB,OAAQD,IAAK,CAC1C,IAAI+vB,EAASjxB,KAAKowB,QAAQlvB,GAC1BlB,KAAKkxB,mBAAmB7wB,EAAK4wB,EAAQ/vB,EAAGsO,EAAOC,EAAQ8gB,EAAU9T,GAAQ,GACzEjN,GAAS,EACTC,GAAU,CACd,MAGAzP,KAAKkxB,mBAAmB7wB,EAAKL,KAAM,EAAGA,KAAKwP,MAAOxP,KAAKyP,OAAQ8gB,EAAU9T,EAAQ4T,IAE7ErwB,KAAKksB,WAAelsB,KAAKwsB,OAAQ6D,GACjChwB,EAAI8wB,eAAe9wB,EAAIyP,YAI/BzP,EAAIwP,YAAYxP,EAAIyP,WAAY,KACpC,EAEAohB,mBAAoB,SAAU7wB,EAAK+wB,EAAMC,EAAO7hB,EAAOC,EAAQ8gB,EAAU9T,EAAQ4T,GAC7E,GAAIe,EAAKnB,MAAO,CACZ,IAAIqB,EAAUF,EAAKnB,MACfI,IACArwB,KAAKuxB,WAAa3B,EAA2B5vB,KAAMA,KAAKuxB,YACxDD,EAAUtxB,KAAKuxB,YAEnBlxB,EAAI0P,WAAW1P,EAAIyP,WAAYuhB,EAAOd,EAAUA,EAAU9T,EAAQ6U,EACtE,MAIQf,GAAY9E,EAAAA,EAAQ0D,+BACjBoB,GAAY9E,EAAAA,EAAQuD,6BAEvB3uB,EAAImxB,qBAAqBnxB,EAAIyP,WAAYuhB,EAAOd,EAAU/gB,EAAOC,EAAQ,EAAG2hB,EAAKjB,QAIjF9vB,EAAI0P,WAAW1P,EAAIyP,WAAYuhB,EAAOd,EAAU/gB,EAAOC,EAAQ,EAAG8gB,EAAU9T,EAAQ2U,EAAKjB,OAGrG,EAMAgB,eAAgB,SAAUjtB,GACtB,IAAI7D,EAAM6D,EAASC,GACfnE,KAAKksB,YAAclsB,KAAKwsB,OACxBnsB,EAAIwP,YAAYxP,EAAIyP,WAAY9P,KAAKyL,OAAO4T,IAAI,kBAChDhf,EAAI8wB,eAAe9wB,EAAIyP,YAE/B,EAEA8d,aAAc,WACV,OAAOA,EAAa5tB,KAAKwP,QAAUoe,EAAa5tB,KAAKyP,OACzD,EAEA1P,aAAc,WACV,OAAIC,KAAKiwB,MACEjwB,KAAKiwB,MAAMzgB,MAAQ,GAAKxP,KAAKiwB,MAAMxgB,OAAS,KAGzCzP,KAAKwP,QAASxP,KAAKyP,OAErC,EAEAxL,KAAM,SAAUC,GACZA,EAASC,GAAG0L,YAAY3L,EAASC,GAAG2L,WAAY9P,KAAK2sB,gBAAgBzoB,GACzE,EAEAY,OAAQ,SAAUZ,GACdA,EAASC,GAAG0L,YAAY3L,EAASC,GAAG2L,WAAY,KACpD,EAEA2hB,KAAM,SAAUC,EAAKC,GACjB,IAAI1B,EAAQzsB,EAAAA,EAAOouB,cACfD,IACA1B,EAAM0B,YAAcA,GAExB,IAAI3H,EAAOhqB,KAYX,OAXAiwB,EAAM4B,OAAS,WACX7H,EAAKgD,QACLhD,EAAKtV,QAAQ,UAAWsV,EAC5B,EACAiG,EAAM6B,QAAU,WACZ9H,EAAKtV,QAAQ,QAASsV,EAC1B,EAEAiG,EAAMyB,IAAMA,EACZ1xB,KAAKiwB,MAAQA,EAENjwB,IACX,IAGJ+I,OAAOiiB,eAAekF,EAAUvvB,UAAW,QAAS,CAChD0e,IAAK,WACD,OAAIrf,KAAKiwB,MACEjwB,KAAKiwB,MAAMzgB,MAEfxP,KAAKmQ,MAChB,EACAwU,IAAK,SAAUtf,GACPrF,KAAKiwB,MACLve,QAAQ0K,KAAK,uCAGTpc,KAAKmQ,SAAW9K,GAChBrF,KAAKgtB,QAEThtB,KAAKmQ,OAAS9K,EAEtB,IAEJ0D,OAAOiiB,eAAekF,EAAUvvB,UAAW,SAAU,CACjD0e,IAAK,WACD,OAAIrf,KAAKiwB,MACEjwB,KAAKiwB,MAAMxgB,OAEfzP,KAAKoQ,OAChB,EACAuU,IAAK,SAAUtf,GACPrF,KAAKiwB,MACLve,QAAQ0K,KAAK,wCAGTpc,KAAKoQ,UAAY/K,GACjBrF,KAAKgtB,QAEThtB,KAAKoQ,QAAU/K,EAEvB,IAGJ,K,kFCtPIuoB,EAAeyB,EAAAA,EAASzB,aAExBmE,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MA6B5CC,EAAcvG,EAAAA,EAAQ/sB,QAAO,WAC7B,MAAsC,CAkBlCuxB,MAAO,CACHgC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,MAYRnC,OAAQ,CACJ8B,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,MAMRlC,QAAS,GAEjB,GAAG,CAECE,YAAa,cAEbtc,OAAQ,SAAU9P,GACd,IAAI7D,EAAM6D,EAASC,GACnB9D,EAAIwP,YAAYxP,EAAIkyB,iBAAkBvyB,KAAKyL,OAAO4T,IAAI,kBAEtDrf,KAAKktB,aAAahpB,GAElB,IAAIqsB,EAAWvwB,KAAK0rB,OAChBjP,EAASzc,KAAKoF,KAElB/E,EAAImwB,cAAcnwB,EAAIkyB,iBAAkBlyB,EAAIowB,eAAgBzwB,KAAK6tB,qBACjExtB,EAAImwB,cAAcnwB,EAAIkyB,iBAAkBlyB,EAAIqwB,eAAgB1wB,KAAK+tB,qBAEjE1tB,EAAImwB,cAAcnwB,EAAIkyB,iBAAkBlyB,EAAIswB,mBAAoB3wB,KAAKquB,yBACrEhuB,EAAImwB,cAAcnwB,EAAIkyB,iBAAkBlyB,EAAIuwB,mBAAoB5wB,KAAKguB,yBAErE,IAAI6C,EAAiB3sB,EAAS8I,eAAe,kCAM7C,GALI6jB,GAAkB7wB,KAAKmsB,YAAc,GACrC9rB,EAAIywB,cAAczwB,EAAIkyB,iBAAkB1B,EAAeE,2BAA4B/wB,KAAKmsB,aAI7E,QAAX1P,EAAkB,CAClB,IAAIuU,EAAe9sB,EAAS8I,eAAe,0BACtCgkB,IACDvU,EAAS3d,EAAAA,EAAOyP,MAExB,CAEA,GAAIvO,KAAKowB,QAAQjvB,OAGb,IAFA,IAAIqO,EAAQxP,KAAKwP,MACbC,EAASzP,KAAKyP,OACTvO,EAAI,EAAGA,EAAIlB,KAAKowB,QAAQjvB,OAAQD,IAAK,CAC1C,IAAI+vB,EAASjxB,KAAKowB,QAAQlvB,GAC1BlB,KAAKkxB,mBAAmB7wB,EAAK4wB,EAAQ/vB,EAAGsO,EAAOC,EAAQ8gB,EAAU9T,GACjEjN,GAAS,EACTC,GAAU,CACd,MAGAzP,KAAKkxB,mBAAmB7wB,EAAKL,KAAM,EAAGA,KAAKwP,MAAOxP,KAAKyP,OAAQ8gB,EAAU9T,IAEpEzc,KAAKwsB,MAAQxsB,KAAKksB,WACnB7rB,EAAI8wB,eAAe9wB,EAAIkyB,kBAI/BlyB,EAAIwP,YAAYxP,EAAIkyB,iBAAkB,KAC1C,EAEArB,mBAAoB,SAAU7wB,EAAK+wB,EAAMC,EAAO7hB,EAAOC,EAAQ8gB,EAAU9T,GACrE,IAAK,IAAIvb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIsxB,EAAST,EAAW7wB,GACpBuxB,EAAMrB,EAAKnB,OAASmB,EAAKnB,MAAMuC,GAC/BC,EACApyB,EAAI0P,WAAW1P,EAAIqyB,4BAA8BxxB,EAAGmwB,EAAOd,EAAUA,EAAU9T,EAAQgW,GAGvFpyB,EAAI0P,WAAW1P,EAAIqyB,4BAA8BxxB,EAAGmwB,EAAOd,EAAU/gB,EAAOC,EAAQ,EAAG8gB,EAAU9T,EAAQ2U,EAAKjB,QAAUiB,EAAKjB,OAAOqC,GAE5I,CACJ,EAMArB,eAAgB,SAAUjtB,GACtB,IAAI7D,EAAM6D,EAASC,GACfnE,KAAKksB,YAAclsB,KAAKwsB,OACxBnsB,EAAIwP,YAAYxP,EAAIkyB,iBAAkBvyB,KAAKyL,OAAO4T,IAAI,kBACtDhf,EAAI8wB,eAAe9wB,EAAIkyB,kBAE/B,EAEAtuB,KAAM,SAAUC,GACZA,EAASC,GAAG0L,YAAY3L,EAASC,GAAGouB,iBAAkBvyB,KAAK2sB,gBAAgBzoB,GAC/E,EAEAY,OAAQ,SAAUZ,GACdA,EAASC,GAAG0L,YAAY3L,EAASC,GAAGouB,iBAAkB,KAC1D,EAGA3E,aAAc,WACV,OAAI5tB,KAAKiwB,MAAMgC,GACJrE,EAAa5tB,KAAKiwB,MAAMgC,GAAGziB,QAC3Boe,EAAa5tB,KAAKiwB,MAAMgC,GAAGxiB,QAG3Bme,EAAa5tB,KAAKwP,QAClBoe,EAAa5tB,KAAKyP,OAEjC,EAEA1P,aAAc,WACV,OAAIC,KAAKiwB,MAAMgC,GACJU,EAAkB3yB,KAAKiwB,MAAMgC,KAC7BU,EAAkB3yB,KAAKiwB,MAAMiC,KAC7BS,EAAkB3yB,KAAKiwB,MAAMkC,KAC7BQ,EAAkB3yB,KAAKiwB,MAAMmC,KAC7BO,EAAkB3yB,KAAKiwB,MAAMoC,KAC7BM,EAAkB3yB,KAAKiwB,MAAMqC,OAG1BtyB,KAAKwP,QAASxP,KAAKyP,OAErC,EAEAgiB,KAAM,SAAUmB,EAAWjB,GACvB,IAAIkB,EAAU,EACV7I,EAAOhqB,KAsBX,OArBAyhB,EAAAA,EAAKqR,KAAKF,GAAW,SAAUlB,EAAKc,GAChC,IAAIvC,EAAQzsB,EAAAA,EAAOouB,cACfD,IACA1B,EAAM0B,YAAcA,GAExB1B,EAAM4B,OAAS,WACXgB,IACgB,IAAZA,IACA7I,EAAKgD,QACLhD,EAAKtV,QAAQ,UAAWsV,GAEhC,EACAiG,EAAM6B,QAAU,WACZe,GACJ,EAEAA,IACA5C,EAAMyB,IAAMA,EACZ1H,EAAKiG,MAAMuC,GAAUvC,CACzB,IAEOjwB,IACX,IAyCJ,SAAS2yB,EAAkB1C,GACvB,OAAOA,EAAMzgB,MAAQ,GAAKygB,EAAMxgB,OAAS,CAC7C,CAxCA1G,OAAOiiB,eAAegH,EAAYrxB,UAAW,QAAS,CAClD0e,IAAK,WACD,OAAIrf,KAAKiwB,OAASjwB,KAAKiwB,MAAMgC,GAClBjyB,KAAKiwB,MAAMgC,GAAGziB,MAElBxP,KAAKmQ,MAChB,EACAwU,IAAK,SAAUtf,GACPrF,KAAKiwB,OAASjwB,KAAKiwB,MAAMgC,GACzBvgB,QAAQ0K,KAAK,uCAGTpc,KAAKmQ,SAAW9K,GAChBrF,KAAKgtB,QAEThtB,KAAKmQ,OAAS9K,EAEtB,IAEJ0D,OAAOiiB,eAAegH,EAAYrxB,UAAW,SAAU,CACnD0e,IAAK,WACD,OAAIrf,KAAKiwB,OAASjwB,KAAKiwB,MAAMgC,GAClBjyB,KAAKiwB,MAAMgC,GAAGxiB,OAElBzP,KAAKoQ,OAChB,EACAuU,IAAK,SAAUtf,GACPrF,KAAKiwB,OAASjwB,KAAKiwB,MAAMgC,GACzBvgB,QAAQ0K,KAAK,wCAGTpc,KAAKoQ,UAAY/K,GACjBrF,KAAKgtB,QAEThtB,KAAKoQ,QAAU/K,EAEvB,IAMJ,K,uCCxQI0tB,EAAe9P,EAAAA,EAAOvkB,OAE1B,CAIIs0B,MAAO,EAIPC,MAAO,EAIP1Z,MAAO,EAIPC,IAAK,EAIL0Z,IAAK,EAILC,QAAS,GAGb,CAEIC,uBAAwB,WACpBpzB,KAAKuX,iBAAiB8b,MAAMrzB,KAAKgzB,KAAMhzB,KAAKizB,MAAOjzB,KAAKmzB,OAAQnzB,KAAKkzB,IAAKlzB,KAAKuZ,KAAMvZ,KAAKwZ,IAC9F,EAEA8Z,0BAA2B,WACvB,IAAIC,EAAIvzB,KAAKuX,iBAAiB3Q,MAC9B5G,KAAKgzB,OAAS,EAAIO,EAAE,KAAOA,EAAE,GAC7BvzB,KAAKizB,OAAS,EAAIM,EAAE,KAAOA,EAAE,GAC7BvzB,KAAKkzB,KAAO,EAAIK,EAAE,KAAOA,EAAE,GAC3BvzB,KAAKmzB,SAAW,EAAII,EAAE,KAAOA,EAAE,GAC/BvzB,KAAKuZ,QAAU,EAAIga,EAAE,KAAOA,EAAE,IAC9BvzB,KAAKwZ,MAAQ,EAAI+Z,EAAE,KAAOA,EAAE,GAChC,EAIAxyB,MAAO,WACH,IAAIqS,EAAS6P,EAAAA,EAAOtiB,UAAUI,MAAMH,KAAKZ,MAQzC,OAPAoT,EAAO4f,KAAOhzB,KAAKgzB,KACnB5f,EAAO6f,MAAQjzB,KAAKizB,MACpB7f,EAAOmG,KAAOvZ,KAAKuZ,KACnBnG,EAAOoG,IAAMxZ,KAAKwZ,IAClBpG,EAAO8f,IAAMlzB,KAAKkzB,IAClB9f,EAAO+f,OAASnzB,KAAKmzB,OAEd/f,CACX,IAGJ,K,uCC3DIogB,EAAcvQ,EAAAA,EAAOvkB,OAA6C,CAKlE+0B,IAAK,GAKLC,OAAQ,EAKRna,KAAM,GAKNC,IAAK,KAGT,CAEI4Z,uBAAwB,WACpB,IAAIO,EAAM3zB,KAAKyzB,IAAM,IAAMlE,KAAKqE,GAChC5zB,KAAKuX,iBAAiBsc,YAAYF,EAAK3zB,KAAK0zB,OAAQ1zB,KAAKuZ,KAAMvZ,KAAKwZ,IACxE,EACA8Z,0BAA2B,WACvB,IAAIC,EAAIvzB,KAAKuX,iBAAiB3Q,MAC1B+sB,EAA4B,EAAtBpE,KAAKuE,KAAK,EAAIP,EAAE,IAC1BvzB,KAAKyzB,IAAME,EAAMpE,KAAKqE,GAAK,IAC3B5zB,KAAK0zB,OAASH,EAAE,GAAKA,EAAE,GACvBvzB,KAAKuZ,KAAOga,EAAE,KAAOA,EAAE,IAAM,GAC7BvzB,KAAKwZ,IAAM+Z,EAAE,KAAOA,EAAE,IAAM,EAChC,EAIAxyB,MAAO,WACH,IAAIqS,EAAS6P,EAAAA,EAAOtiB,UAAUI,MAAMH,KAAKZ,MAMzC,OALAoT,EAAOqgB,IAAMzzB,KAAKyzB,IAClBrgB,EAAOsgB,OAAS1zB,KAAK0zB,OACrBtgB,EAAOmG,KAAOvZ,KAAKuZ,KACnBnG,EAAOoG,IAAMxZ,KAAKwZ,IAEXpG,CACX,IAGJ,K,4HChDA7F,EAAAA,EAAO,UAAUwmB,EAAAA,GAEjB,IAAIC,EAAW,IAAIC,EAAAA,EACfC,EAAO,IAAIC,EAAAA,EAAK,CAChBv1B,SAAUo1B,EACVv0B,gBAAgB,IAEhB2T,EAAS,IAAIghB,EAAAA,EAMbC,EAAO1wB,EAAAA,EAAKjF,QAAO,WACnB,MAA2C,CAMvCwO,SAAU,GAKVonB,QAAS,KAKT31B,SAAU,KAKV41B,mBAAmB,EAKnBhkB,YAAY,EAKZikB,YAAY,EAEpB,IAAG,WAEC,IAAIv0B,EAAS,IAAIsN,EAAAA,EAAOA,EAAAA,EAAO2R,OAAO,0BAA2Blf,KAAKkN,UAClEvO,EAAW,IAAIsgB,EAAAA,EAAS,CACxBhf,OAAQA,IAEZtB,EAAS81B,oBAETz0B,KAAKrB,SAAWA,CAEpB,GAEA,CAKIwG,WAAY,SAAS/D,EAAMiE,GACvBrF,KAAKrB,SAASwG,WAAW/D,EAAMiE,EACnC,EAKA+Q,WAAY,SAAShV,GACjB,IAAIwc,EAAU5d,KAAKrB,SAAS4K,SAASnI,GACrC,GAAIwc,EACA,OAAOA,EAAQvY,KAEvB,EAKAqvB,aAAc,SAAShwB,EAASiwB,GACvB30B,KAAKs0B,UACNt0B,KAAKs0B,QAAU,CAAC,GAEpBK,EAAaA,GAAc71B,EAAAA,EAAO81B,kBAClC50B,KAAKs0B,QAAQK,GAAcjwB,CAC/B,EAIAmwB,aAAc,SAASnwB,GACnB,IAAK,IAAIiwB,KAAc30B,KAAKs0B,QACpBt0B,KAAKs0B,QAAQK,KAAgBjwB,IAC7B1E,KAAKs0B,QAAQK,GAAc,KAGvC,EAEA1wB,KAAM,SAASC,EAAUoc,GAErB,GAAItgB,KAAKs0B,QACL,IAAK,IAAIK,KAAc30B,KAAKs0B,QAAS,CACjC,IAAI5vB,EAAU1E,KAAKs0B,QAAQK,GACvBjwB,GACA4b,EAAYwU,OAAOpwB,EAASiwB,EAEpC,CAGArU,GACAA,EAAYrc,KAAKC,EAEzB,EAEAY,OAAQ,SAASZ,EAAUoc,GACvBA,EAAYxb,OAAOZ,EACvB,EAKAiP,OAAQ,SAASjP,EAAUoc,GAEvB,IAAIjgB,EAAM6D,EAASC,GAEnB,GAAImc,EAAa,CACbtgB,KAAKiE,KAAKC,EAAUoc,GAGpB,IAAI/d,EAAM2B,EAAS8I,eAAe,oBAClC,GAAIzK,GAAOvC,KAAKs0B,QAAS,CACrB,IAAIS,EAAO,GACX,IAAK,IAAIJ,KAAc30B,KAAKs0B,QACxBK,GAAcA,EACVA,GAAct0B,EAAIu0B,mBAAqBD,GAAct0B,EAAIu0B,kBAAoB,GAC7EG,EAAKhqB,KAAK4pB,GAGlBpyB,EAAIyyB,eAAeD,EACvB,CACJ,CAEA/0B,KAAK0U,QAAQ,eAAgB1U,KAAMkE,GAInC,IAAIsM,EAAWxQ,KAAKw0B,WAAan0B,EAAI8gB,iBAAmB,EAExD,GADA9gB,EAAImT,WAAU,GACVxT,KAAKuQ,WAAY,CACjBC,GAAsBnQ,EAAI6gB,iBAC1B7gB,EAAIkT,WAAU,GAAM,GAAM,GAAM,GAChC,IAAI0hB,EAAKj1B,KAAKuQ,WACV7J,MAAMC,QAAQsuB,IACd50B,EAAIkQ,WAAW0kB,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAAIA,EAAG,GAE/C,CACA50B,EAAIyT,MAAMtD,GAENxQ,KAAKu0B,mBAILl0B,EAAIsT,OAAOtT,EAAIsZ,OACf3Z,KAAKrB,SAAS6V,aAAc,IAG5BnU,EAAI0T,QAAQ1T,EAAIsZ,OAChB3Z,KAAKrB,SAAS6V,aAAc,GAGhCxU,KAAKk1B,WAAWhxB,GAEhBlE,KAAK0U,QAAQ,cAAe1U,KAAMkE,GAE9Boc,GACAtgB,KAAK8E,OAAOZ,EAAUoc,EAE9B,EAKA4U,WAAY,SAAUhxB,GAClBgwB,EAAKv1B,SAAWqB,KAAKrB,SACrBuF,EAASsR,WAAW,CAAC0e,GAAO9gB,EAChC,EAKAuM,QAAS,SAAUzb,GAAW,IAGlC,K,sECvMIixB,EAAc,WAEdn1B,KAAKo1B,MAAQ,CAAC,EAEdp1B,KAAKq1B,mBAAqB,EAC9B,EAEAF,EAAYx0B,UAAY,CAEpB8oB,YAAa0L,EAEb9V,IAAK,SAAUnd,GACX,IAAI6J,EAAMupB,EAAYpzB,GACjBlC,KAAKo1B,MAAMG,eAAexpB,KAC3B/L,KAAKo1B,MAAMrpB,GAAO,IAEtB,IAAIiK,EAAOhW,KAAKo1B,MAAMrpB,GACtB,IAAKiK,EAAK7U,OAAQ,CACd,IAAIuD,EAAU,IAAIwrB,EAAAA,EAAUhuB,GAE5B,OADAlC,KAAKq1B,mBAAmBtqB,KAAKrG,GACtBA,CACX,CACA,OAAOsR,EAAKlD,KAChB,EAEA2R,IAAK,SAAU/f,GACX,IAAIqH,EAAMupB,EAAY5wB,GACjB1E,KAAKo1B,MAAMG,eAAexpB,KAC3B/L,KAAKo1B,MAAMrpB,GAAO,IAEtB,IAAIiK,EAAOhW,KAAKo1B,MAAMrpB,GACtBiK,EAAKjL,KAAKrG,EACd,EAEAoP,MAAO,SAAU5P,GACb,IAAK,IAAIhD,EAAI,EAAGA,EAAIlB,KAAKq1B,mBAAmBl0B,OAAQD,IAChDlB,KAAKq1B,mBAAmBn0B,GAAGye,QAAQzb,GAEvClE,KAAKo1B,MAAQ,CAAC,EACdp1B,KAAKq1B,mBAAqB,EAC9B,GAGJ,IAAIG,EAAgB,CAChBhmB,MAAO,IACPC,OAAQ,IACRrK,KAAMtG,EAAAA,EAAO6P,cACb+c,OAAQ5sB,EAAAA,EAAOkR,KACf2b,MAAO7sB,EAAAA,EAAOgvB,cACdjC,MAAO/sB,EAAAA,EAAOgvB,cACdhC,UAAWhtB,EAAAA,EAAOitB,qBAClBC,UAAWltB,EAAAA,EAAOmtB,OAClBC,WAAW,EACXC,YAAa,EACbC,OAAO,EACPE,gBAAiB,EACjBC,kBAAkB,GAGlBkJ,EAAuB1sB,OAAOD,KAAK0sB,GAEvC,SAASF,EAAYpzB,GACjBuf,EAAAA,EAAKiU,qBAAqBxzB,EAAYszB,EAAeC,GACrDE,EAASzzB,GAGT,IADA,IAAI6J,EAAM,GACD7K,EAAI,EAAGA,EAAIu0B,EAAqBt0B,OAAQD,IAAK,CAClD,IAAIE,EAAOq0B,EAAqBv0B,GAC5Bqd,EAAQrc,EAAWd,GAAM6J,WAC7Bc,GAAOwS,CACX,CACA,OAAOxS,CACX,CAEA,SAAS4pB,EAASnD,GAEd,IAAIoD,EAAOhI,EAAa4E,EAAOhjB,MAAOgjB,EAAO/iB,QAEzC+iB,EAAO9G,SAAW5sB,EAAAA,EAAOyuB,kBACzBiF,EAAOtG,WAAY,GAGlB0J,GAASpD,EAAOtG,YACbsG,EAAO1G,WAAahtB,EAAAA,EAAOmvB,wBAC3BuE,EAAO1G,WAAahtB,EAAAA,EAAOovB,sBAC3BsE,EAAO1G,UAAYhtB,EAAAA,EAAOqvB,QAE1BqE,EAAO1G,WAAahtB,EAAAA,EAAOitB,sBAC3ByG,EAAO1G,WAAahtB,EAAAA,EAAOsvB,wBAE3BoE,EAAO1G,UAAYhtB,EAAAA,EAAOmtB,SAG7B2J,IACDpD,EAAO7G,MAAQ7sB,EAAAA,EAAOgvB,cACtB0E,EAAO3G,MAAQ/sB,EAAAA,EAAOgvB,cAE9B,CAEA,SAASF,EAAape,EAAOC,GACzB,OAA+B,KAAvBD,EAASA,EAAM,IACW,KAAzBC,EAAUA,EAAO,EAC9B,CAEA,K,6FChGIomB,EAAiBlyB,EAAAA,EAAKjF,QAAO,WAC7B,MAAqD,CAIjD0C,KAAM,GAWN00B,WAAY,CAAC,EAWbC,YAAa,CAAC,EAIdC,oBAAqB,CAAC,EACtBC,gBAAiB,CAAC,EAGlBC,kBAAmB,CAAC,EAEpBC,YAAY,EAEZC,WAAW,EAEXC,YAAa,KAErB,GAEA,CAGIC,gBAAiB,SAAUC,EAAYryB,GACnC,IAaIsL,EAAOC,EAbP+mB,EAAax2B,KAAKs0B,QAAQiC,GAC1Br0B,EAAas0B,EAAWt0B,WACxBu0B,EAAiBD,EAAWE,gBAIhC,GAHKD,IACDA,EAAiBD,EAAWE,gBAAkB,CAAC,GAE/Cx0B,EACA,IAAK,IAAI6J,KAAO7J,EACA,UAAR6J,GAA2B,WAARA,IACnB0qB,EAAe1qB,GAAO7J,EAAW6J,IA4B7C,OAtBIyD,EADAtN,EAAWsN,iBAAiBmnB,SACpBz0B,EAAWsN,MAAM5O,KAAKZ,KAAMkE,GAG5BhC,EAAWsN,MAGnBC,EADAvN,EAAWuN,kBAAkBknB,SACpBz0B,EAAWuN,OAAO7O,KAAKZ,KAAMkE,GAG7BhC,EAAWuN,OAGpBgnB,EAAejnB,QAAUA,GACtBinB,EAAehnB,SAAWA,GAEzBzP,KAAKi2B,gBAAgBM,IACrBv2B,KAAKi2B,gBAAgBM,GAAY5W,QAAQzb,EAASC,IAG1DsyB,EAAejnB,MAAQA,EACvBinB,EAAehnB,OAASA,EAEjBgnB,CACX,EAOAG,aAAc,SAAUx1B,EAAMiE,GAAQ,EAMtChD,aAAc,SAAUjB,GAAO,EAK/By1B,cAAe,SAAUlkB,GACrB,IAAK,IAAIvR,KAAQuR,EACb3S,KAAK42B,aAAax1B,EAAMuR,EAAIvR,GAEpC,EAEA+R,OAAQ,WAAa,EAErB2jB,UAAW,SAAU5yB,EAAuB9C,GACxC,GAAY,MAARA,EAGA,OADAA,EAAO8C,EACAlE,KAAKi2B,gBAAgB70B,GAEhC,IAAIo1B,EAAax2B,KAAKs0B,QAAQlzB,GAC9B,OAAKo1B,EAKDx2B,KAAKo2B,UAEDI,EAAWO,gBACJ/2B,KAAKg2B,oBAAoB50B,GAGzBpB,KAAKi2B,gBAAgB70B,GAKhCpB,KAAKm2B,YAEAn2B,KAAKg2B,oBAAoB50B,KAE1BpB,KAAKg2B,oBAAoB50B,GAAQpB,KAAKq2B,YAAYW,gBAAgBR,EAAWt0B,YAAc,CAAC,IAEzFlC,KAAKg2B,oBAAoB50B,KAGpCpB,KAAKmT,OAAOjP,GAELlE,KAAKi2B,gBAAgB70B,SA3B5B,CA4BJ,EAEA61B,gBAAiB,SAAUV,GAEvB,GADAv2B,KAAKk2B,kBAAkBK,KACoB,IAAvCv2B,KAAKk2B,kBAAkBK,GAAmB,CAC1C,IAAIC,EAAax2B,KAAKs0B,QAAQiC,GAC1BC,EAAWU,eACPl3B,KAAKg2B,oBAAoBO,IACzBv2B,KAAKq2B,YAAYc,eAAen3B,KAAKg2B,oBAAoBO,IAE7Dv2B,KAAKg2B,oBAAoBO,GAAcv2B,KAAKi2B,gBAAgBM,IAK5Dv2B,KAAKq2B,YAAYc,eAAen3B,KAAKi2B,gBAAgBM,GAE7D,CACJ,EAEAa,KAAM,SAAUC,EAAcC,EAAUC,GAGpCv3B,KAAK81B,WAAWuB,GAAgB,CAC5BlX,KAAMmX,EACNE,IAAKD,GAEJD,EAASvB,YAAYwB,KACtBD,EAASvB,YAAYwB,GAAe,IAExCD,EAASvB,YAAYwB,GAAaxsB,KAAK,CACnCoV,KAAMngB,KACNw3B,IAAKH,IAITr3B,KAAKy3B,KAAK94B,SAAS+4B,cAAcL,EACrC,EAEAvjB,MAAO,WACH9T,KAAK81B,WAAa,CAAC,EACnB91B,KAAK+1B,YAAc,CAAC,CACxB,EAEA4B,gBAAiB,SAAUpB,GACvB,IAAKv2B,KAAKm2B,WAAY,CAElB,IAAK,IAAIyB,KADT53B,KAAKm2B,YAAa,EACIn2B,KAAK81B,WAAY,CACnC,IAAIsB,EAAOp3B,KAAK81B,WAAW8B,GAC3BR,EAAKjX,KAAKwX,gBAAgBP,EAAKI,IACnC,CACAx3B,KAAKm2B,YAAa,CACtB,CACII,GACAv2B,KAAKk2B,kBAAkBK,IAE/B,EAEAsB,YAAa,WAGT,IAAK,IAAIz2B,KAFTpB,KAAKo2B,WAAY,EAEAp2B,KAAK+1B,YAClB/1B,KAAKk2B,kBAAkB90B,GAAQ,CAEvC,EAEA02B,WAAY,WAER,IAAK,IAAI12B,KAAQpB,KAAK+1B,YAClB,GAAI/1B,KAAKk2B,kBAAkB90B,GAAQ,EAAG,CAClC,IAAIo1B,EAAax2B,KAAKs0B,QAAQlzB,GAC1Bo1B,EAAWU,eACPl3B,KAAKg2B,oBAAoB50B,IACzBpB,KAAKq2B,YAAYc,eAAen3B,KAAKg2B,oBAAoB50B,IAE7DpB,KAAKg2B,oBAAoB50B,GAAQpB,KAAKi2B,gBAAgB70B,IAGtDpB,KAAKq2B,YAAYc,eAAen3B,KAAKi2B,gBAAgB70B,GAE7D,CAER,IAGJ,IC9OI22B,EAAQp0B,EAAAA,EAAKjF,QAAO,WACpB,MAA4C,CAIxCs5B,MAAO,GAEf,GAEA,CAKIhL,MAAO,WACHhtB,KAAKi4B,QAAS,CAClB,EAIAC,QAAS,SAAU/X,GAEXngB,KAAKg4B,MAAM/qB,QAAQkT,IAAS,IAIhCngB,KAAKg4B,MAAMjtB,KAAKoV,GAEhBngB,KAAKi4B,QAAS,EAClB,EAIAE,WAAY,SAAUhY,GACE,kBAATA,IACPA,EAAOngB,KAAKo4B,cAAcjY,IAE9B,IAAI5V,EAAMvK,KAAKg4B,MAAM/qB,QAAQkT,GACzB5V,GAAO,IACPvK,KAAKg4B,MAAM5U,OAAO7Y,EAAK,GACvBvK,KAAKi4B,QAAS,EAEtB,EAKAG,cAAe,SAAUh3B,GACrB,IAAK,IAAIF,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IACnC,GAAIlB,KAAKg4B,MAAM92B,GAAGE,OAASA,EACvB,OAAOpB,KAAKg4B,MAAM92B,EAG9B,EAIA8S,OAAQ,WACJ,IAAK,IAAI9S,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IACnClB,KAAKg4B,MAAM92B,GAAG4S,QAGlB,IAAS5S,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IAAK,CACxC,IAAIif,EAAOngB,KAAKg4B,MAAM92B,GAEtB,GAAKif,EAAKkY,OAGV,IAAK,IAAIT,KAAazX,EAAKkY,OACvB,GAAKlY,EAAKkY,OAAOT,GAGjB,IAAIzX,EAAKsX,MAAStX,EAAKsX,KAAK94B,SAAS25B,iBAAiBV,GAAtD,CAIA,IAAIW,EAAcpY,EAAKkY,OAAOT,GAE1BY,EAAUx4B,KAAKy4B,QAAQF,GACvBC,EACArY,EAAKiX,KAAKQ,EAAWY,EAAQrY,KAAMqY,EAAQhB,KAGhB,kBAAhBe,EACP7mB,QAAQ0K,KAAK,QAAUmc,EAAc,cAGrC7mB,QAAQ0K,KAAK,UAAYmc,EAAYpY,KAAO,IAAMoY,EAAYf,IAAM,aAZ5E,MAFI9lB,QAAQ0K,KAAK,OAAU+D,EAAK/e,KAAO,IAAMw2B,EAAY,aAkBjE,CACJ,EAEAa,QAAS,SAAUC,GACf,IAAIvY,EAQJ,IANqB,kBAAVuY,GAAsBA,aAAiBC,KAC9CD,EAAQ,CACJvY,KAAMuY,IAIY,kBAAfA,EAAMvY,KACb,IAAK,IAAIjf,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IAAK,CACxC,IAAI03B,EAAM54B,KAAKg4B,MAAM92B,GACjB03B,EAAIx3B,OAASs3B,EAAMvY,OACnBA,EAAOyY,EAEf,MAGAzY,EAAOuY,EAAMvY,KAEjB,GAAIA,EAAM,CACN,IAAI0Y,EAAWH,EAAMlB,IAOrB,GANKqB,GAEG1Y,EAAKmU,UACLuE,EAAW9vB,OAAOD,KAAKqX,EAAKmU,SAAS,IAGzCnU,EAAKmU,QAAQuE,GACb,MAAO,CACH1Y,KAAMA,EACNqX,IAAKqB,EAGjB,CACJ,IAGJ,I,sBChIIC,EAAaf,EAAMr5B,QAAO,WAC1B,MAAO,CAEHq6B,SAAU,GAEVC,aAAc,IAAI7D,EAAAA,EAElB8D,aAAc,IAAIC,EAAAA,EAAY,CAC1BC,aAAa,IAGzB,GAEA,CACIjB,QAAS,SAAS/X,GACd4X,EAAMp3B,UAAUu3B,QAAQt3B,KAAKZ,KAAMmgB,GACnCA,EAAKkW,YAAcr2B,IACvB,EAIAmT,OAAQ,SAASjP,EAAUoc,GACvB,GAAItgB,KAAKi4B,OAAQ,CACbj4B,KAAKgU,SACLhU,KAAKi4B,QAAS,EAEdj4B,KAAK+4B,SAAS53B,OAAS,EACvB,IAAK,IAAID,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IAC9BlB,KAAKg4B,MAAM92B,GAAGozB,SACft0B,KAAK+4B,SAAShuB,KAAK/K,KAAKg4B,MAAM92B,GAG1C,CAEA,IAASA,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IAEnClB,KAAKg4B,MAAM92B,GAAG22B,cAGlB,IAAS32B,EAAI,EAAGA,EAAIlB,KAAK+4B,SAAS53B,OAAQD,IACtClB,KAAK+4B,SAAS73B,GAAGy2B,kBAGrB,IAASz2B,EAAI,EAAGA,EAAIlB,KAAK+4B,SAAS53B,OAAQD,IACtClB,KAAK+4B,SAAS73B,GAAGiS,OAAOjP,EAAUoc,GAGtC,IAASpf,EAAI,EAAGA,EAAIlB,KAAKg4B,MAAM72B,OAAQD,IAEnClB,KAAKg4B,MAAM92B,GAAG42B,YAEtB,EAEAd,gBAAiB,SAAU90B,GACvB,OAAOlC,KAAKg5B,aAAa3Z,IAAInd,EACjC,EAEAi1B,eAAgB,SAAUj1B,GACtBlC,KAAKg5B,aAAavU,IAAIviB,EAC1B,EAEAk3B,eAAgB,WACZ,OAAOp5B,KAAKi5B,YAChB,EAMAtZ,QAAS,SAAUzb,GACflE,KAAKg5B,aAAallB,MAAM5P,EAC5B,IAGJ,I,WC7EIm1B,EAAYxD,EAAen3B,OAE/B,CACI0C,KAAM,QAINuK,MAAO,KAIPyH,OAAQ,KAIRkmB,iBAAiB,EAIjBhmB,MAAM,IAEP,WACCtT,KAAKsgB,YAAc,IAAI4Y,EAAAA,CAC3B,GAAG,CACC/lB,OAAQ,SAASjP,GAEblE,KAAKm2B,YAAa,EAClB,IAIIoD,EAJAl5B,EAAM6D,EAASC,GAMnB,GAJAnE,KAAK0U,QAAQ,gBAIR1U,KAAKs0B,QAKL,CAED,IAAIhU,EAActgB,KAAKsgB,YACvB,IAAK,IAAIlf,KAAQpB,KAAKs0B,QAAS,CAC3B,IAAIpyB,EAAalC,KAAKs2B,gBAAgBl1B,EAAM8C,GACxCsyB,EAAax2B,KAAKs0B,QAAQlzB,GAC1BsD,EAAU1E,KAAKq2B,YAAYW,gBAAgB90B,GAC/ClC,KAAKi2B,gBAAgB70B,GAAQsD,EAE7B,IAAIiwB,EAAa6B,EAAW7B,YAAct0B,EAAIu0B,kBACpB,iBAAfD,IACPA,EAAat0B,EAAIs0B,IAErBrU,EAAYwU,OAAOpwB,EAASiwB,EAChC,CACArU,EAAYrc,KAAKC,GAIjB,IAAI3B,EAAM2B,EAAS8I,eAAe,oBAClC,GAAIzK,EAAK,CACL,IAAIwyB,EAAO,GACX,IAAK,IAAIJ,KAAc30B,KAAKs0B,QACxBK,EAAanqB,SAASmqB,GAClBA,GAAct0B,EAAIu0B,mBAAqBD,GAAct0B,EAAIu0B,kBAAoB,GAC7EG,EAAKhqB,KAAK4pB,GAGlBpyB,EAAIyyB,eAAeD,EACvB,CAIA7wB,EAAS6O,YACT7O,EAASsM,SAAW1R,EAAAA,EAAOqiB,iBAAmBriB,EAAAA,EAAOoiB,iBACrDqY,EAAar1B,EAASiP,OAAOnT,KAAK2L,MAAO3L,KAAKoT,QAASpT,KAAKs5B,gBAAiBt5B,KAAKsT,MAClFpP,EAAS8O,eAETsN,EAAYxb,OAAOZ,EACvB,MA1CIq1B,EAAar1B,EAASiP,OAAOnT,KAAK2L,MAAO3L,KAAKoT,QAASpT,KAAKs5B,gBAAiBt5B,KAAKsT,MA4CtFtT,KAAK0U,QAAQ,cAAe6kB,GAE5Bv5B,KAAKm2B,YAAa,EAClBn2B,KAAKo2B,WAAY,CACrB,IAGJ,ICxFIoD,EAAc3D,EAAen3B,QAAO,WACpC,MAAkD,CAI9CgG,QAAS,KAGT4vB,QAAS,CACLmF,MAAO,CAAC,GAGpB,IAAG,WACH,GAAG,CAEC3C,UAAW,SAAU5yB,EAAU9C,GAC3B,OAAOpB,KAAK0E,OAChB,EAGAmzB,YAAa,WAAa,EAC1BC,WAAY,WAAa,IAG7B,I,WCaI4B,EAAa7D,EAAen3B,QAAO,WACnC,MAAiD,CAI7C0C,KAAM,GAKNi3B,OAAQ,CAAC,EAKT/D,QAAS,KAKTr0B,OAAQ,GAWR61B,WAAY,CAAC,EAWbC,YAAa,CAAC,EAKd0B,KAAM,KAINzB,oBAAqB,CAAC,EACtBC,gBAAiB,CAAC,EAGlBC,kBAAmB,CAAC,EAEpBC,YAAY,EAEZC,WAAW,EAEXC,YAAa,KAErB,IAAG,WAEC,IAAIoB,EAAO,IAAIpD,EAAAA,EAAK,CAChBnnB,SAAUlN,KAAKC,SAEnBD,KAAKy3B,KAAOA,CAChB,GAEA,CAIItkB,OAAQ,SAAUjP,EAAUoc,GACxBtgB,KAAK0U,QAAQ,eAAgBxQ,GAE7BlE,KAAKm2B,YAAa,EAElB,IAAI91B,EAAM6D,EAASC,GAEnB,IAAK,IAAIyzB,KAAa53B,KAAK81B,WAAY,CACnC,IAAIsB,EAAOp3B,KAAK81B,WAAW8B,GACvB+B,EAAevC,EAAKjX,KAAK2W,UAAU5yB,EAAUkzB,EAAKI,KACtDx3B,KAAKy3B,KAAKtyB,WAAWyyB,EAAW+B,EACpC,CAEA,GAAK35B,KAAKs0B,QAOL,CACDt0B,KAAKy3B,KAAKnD,QAAU,CAAC,EAErB,IAAIsF,EAAmB,CAAC,EACxB,IAAK,IAAIx4B,KAAQpB,KAAKs0B,QAAS,CAC3B,IAAIpyB,EAAalC,KAAKs2B,gBAAgBl1B,EAAM8C,GACxCmG,MAAMnI,EAAWsN,QACjBxP,KAAKs2B,gBAAgBl1B,EAAM8C,GAE/B,IAAIsyB,EAAax2B,KAAKs0B,QAAQlzB,GAC1BsD,EAAU1E,KAAKq2B,YAAYW,gBAAgB90B,GAC/ClC,KAAKi2B,gBAAgB70B,GAAQsD,EAC7B,IAAIiwB,EAAa6B,EAAW7B,YAAct0B,EAAIu0B,kBACnB,kBAAhBD,IACPA,EAAat0B,EAAIs0B,IAErBiF,EAAiBjF,GAAcjwB,CACnC,CAGA,IAAK,IAAIiwB,KAFT30B,KAAKq2B,YAAY+C,iBAAiBn1B,KAAKC,GAEhB01B,EAEnB55B,KAAKq2B,YAAY+C,iBAAiBtE,OAC9B8E,EAAiBjF,GAAaA,GAItC30B,KAAKy3B,KAAKtkB,OAAOjP,GAIjBlE,KAAKq2B,YAAY+C,iBAAiBS,aAAa31B,EACnD,MAtCIlE,KAAKy3B,KAAKnD,QAAU,KAEpBt0B,KAAKq2B,YAAY+C,iBAAiBt0B,OAAOZ,GAEzClE,KAAKy3B,KAAKtkB,OAAOjP,EAAUoc,GAoC/B,IAAK,IAAIsX,KAAa53B,KAAK81B,WAAY,CAC/BsB,EAAOp3B,KAAK81B,WAAW8B,GAC3BR,EAAKjX,KAAK8W,gBAAgBG,EAAKI,IACnC,CAEAx3B,KAAKm2B,YAAa,EAClBn2B,KAAKo2B,WAAY,EAEjBp2B,KAAK0U,QAAQ,cAAexQ,EAChC,EAGAoyB,gBAAiB,SAAUC,EAAYryB,GACnC,IAaIsL,EAAOC,EAbP+mB,EAAax2B,KAAKs0B,QAAQiC,GAC1Br0B,EAAas0B,EAAWt0B,WACxBu0B,EAAiBD,EAAWE,gBAIhC,GAHKD,IACDA,EAAiBD,EAAWE,gBAAkB,CAAC,GAE/Cx0B,EACA,IAAK,IAAI6J,KAAO7J,EACA,UAAR6J,GAA2B,WAARA,IACnB0qB,EAAe1qB,GAAO7J,EAAW6J,IA8B7C,OAxBIyD,EAD4B,oBAArBtN,EAAWsN,MACVtN,EAAWsN,MAAM5O,KAAKZ,KAAMkE,GAG5BhC,EAAWsN,MAGnBC,EAD6B,oBAAtBvN,EAAWuN,OACTvN,EAAWuN,OAAO7O,KAAKZ,KAAMkE,GAG7BhC,EAAWuN,OAExBD,EAAQ+f,KAAKuK,KAAKtqB,GAClBC,EAAS8f,KAAKuK,KAAKrqB,GAEfgnB,EAAejnB,QAAUA,GACtBinB,EAAehnB,SAAWA,GAEzBzP,KAAKi2B,gBAAgBM,IACrBv2B,KAAKi2B,gBAAgBM,GAAY5W,QAAQzb,GAGjDuyB,EAAejnB,MAAQA,EACvBinB,EAAehnB,OAASA,EAEjBgnB,CACX,EAOAG,aAAc,SAAUx1B,EAAMiE,GAC1BrF,KAAKy3B,KAAKtyB,WAAW/D,EAAMiE,EAC/B,EAMAhD,aAAc,SAAUjB,GACpB,OAAOpB,KAAKy3B,KAAKrhB,WAAWhV,EAChC,EAKAy1B,cAAe,SAAUlkB,GACrB,IAAK,IAAIvR,KAAQuR,EACb3S,KAAK42B,aAAax1B,EAAMuR,EAAIvR,GAEpC,EAeA24B,OAAQ,SAAUz1B,EAAQ4C,GACtBlH,KAAKy3B,KAAK94B,SAASo7B,OAAO,WAAYz1B,EAAQ4C,EAClD,EAMA8yB,SAAU,SAAU11B,GAChBtE,KAAKy3B,KAAK94B,SAASq7B,SAAS,WAAY11B,EAC5C,EAEA2yB,gBAAiB,SAAUV,GAEvB,GADAv2B,KAAKk2B,kBAAkBK,KACoB,IAAvCv2B,KAAKk2B,kBAAkBK,GAAmB,CAC1C,IAAIC,EAAax2B,KAAKs0B,QAAQiC,GAC1BC,EAAWU,eACPl3B,KAAKg2B,oBAAoBO,IACzBv2B,KAAKq2B,YAAYc,eAAen3B,KAAKg2B,oBAAoBO,IAE7Dv2B,KAAKg2B,oBAAoBO,GAAcv2B,KAAKi2B,gBAAgBM,IAK5Dv2B,KAAKq2B,YAAYc,eAAen3B,KAAKi2B,gBAAgBM,GAE7D,CACJ,EAEAziB,MAAO,WACH+hB,EAAel1B,UAAUmT,MAAMlT,KAAKZ,MAGpCA,KAAKy3B,KAAK94B,SAASs7B,oBACvB,IAGJ,I,wDCpSAC,EAAAA,EAAAA,GAA0B3sB,EAAAA,GAE1B,IAAI4sB,EAAkB,oBAStB,SAASC,EAAiBC,EAAM/oB,GAC5B,IAAIgpB,EAAa,IAAIxB,EACrBxnB,EAAOA,GAAQ,CAAC,EAEhB,IAAIipB,EAAM,CACNlR,SAAU,CAAC,EACXnnB,WAAY,CAAC,GAEbs4B,EAAY,SAASC,EAAWC,GAChC,IAAK,IAAIx5B,EAAI,EAAGA,EAAIm5B,EAAKrC,MAAM72B,OAAQD,IAAK,CACxC,IAAIy5B,EAAWN,EAAKrC,MAAM92B,GACtBif,EAAOya,EAAWD,EAAUJ,EAAKjpB,GACjC6O,GACAma,EAAWpC,QAAQ/X,EAE3B,CACJ,EAEA,IAAK,IAAI/e,KAAQi5B,EAAKn4B,WAAY,CAC9B,IAAI24B,EAAYR,EAAKn4B,WAAWd,GAChCm5B,EAAIr4B,WAAWd,GAAQ05B,EAAiBD,EAC5C,CAOA,OALAE,EAAaV,EAAME,EAAKjpB,GAAM,SAASopB,GACnCH,EAAIlR,SAAWqR,EACfF,GACJ,IAEOF,CACX,CAEA,SAASM,EAAWD,EAAUJ,EAAKjpB,GAC/B,IACIhJ,EACA+vB,EACA/D,EAoDAnU,EAvDA/a,EAAOu1B,EAASv1B,MAAQ,SAK5B,GAAa,WAATA,EAAmB,CACnB,IAAI41B,EAAYL,EAAS16B,OAAO8qB,OAC5BhN,EAAMoc,EAAgBc,KAAKD,GAU/B,GATIjd,EACAzV,EAAeiF,EAAAA,EAAO2R,OAAOnB,EAAI,GAAGgN,QAEP,MAAxBiQ,EAAUjT,OAAO,KACtBzf,EAAeiyB,EAAIW,QAAQF,EAAUG,OAAO,KAE3C7yB,IACDA,EAAe0yB,IAEd1yB,EACD,MAER,CAEA,GAAIqyB,EAAStC,OAET,IAAK,IAAIj3B,KADTi3B,EAAS,CAAC,EACOsC,EAAStC,OACe,kBAA1BsC,EAAStC,OAAOj3B,GACvBi3B,EAAOj3B,GAAQu5B,EAAStC,OAAOj3B,GAG/Bi3B,EAAOj3B,GAAQ,CACX+e,KAAMwa,EAAStC,OAAOj3B,GAAM+e,KAC5BqX,IAAKmD,EAAStC,OAAOj3B,GAAMo2B,KAK3C,GAAImD,EAASrG,QAET,IAAK,IAAIlzB,KADTkzB,EAAU,CAAC,EACMqG,EAASrG,QAAS,CAC/B,IAAIkC,EAAamE,EAASrG,QAAQlzB,GAClCkzB,EAAQlzB,GAAQ,CAAC,EACY,MAAzBo1B,EAAW7B,aACXL,EAAQlzB,GAAMuzB,WAAa6B,EAAW7B,YAEV,MAA5B6B,EAAWU,gBACX5C,EAAQlzB,GAAM81B,cAAgBV,EAAWU,eAEX,MAA9BV,EAAWO,kBACXzC,EAAQlzB,GAAM21B,gBAAkBP,EAAWO,iBAE3CP,EAAWt0B,aACXoyB,EAAQlzB,GAAMc,WAAa44B,EAAiBtE,EAAWt0B,YAE/D,CA0BJ,GAtBIie,EADS,UAAT/a,EACO,IAAIg2B,EAAe,CACtBh6B,KAAMu5B,EAASv5B,KACfuK,MAAO2F,EAAK3F,MACZyH,OAAQ9B,EAAK8B,OACbkhB,QAASA,IAGC,YAATlvB,EACE,IAAIi2B,EAAiB,CACxBj6B,KAAMu5B,EAASv5B,KACfkzB,QAASA,IAKN,IAAIgH,EAAgB,CACvBl6B,KAAMu5B,EAASv5B,KACfnB,OAAQqI,EACR+vB,OAAQA,EACR/D,QAASA,IAGbnU,EAAM,CACN,GAAIwa,EAASz4B,WACT,IAAK,IAAId,KAAQu5B,EAASz4B,WAAY,CAClC,IAAIgF,EAAMyzB,EAASz4B,WAAWd,GACX,kBAAR8F,GACPA,EAAMA,EAAI6jB,OACY,MAAlB7jB,EAAI6gB,OAAO,GACX7gB,EAAMqzB,EAAIlR,SAASniB,EAAIi0B,OAAO,IAG9Bhb,EAAKob,GACD,eAAgBC,EACZp6B,EAAMq6B,EAAev0B,MAKb,oBAARA,GACZiZ,EAAKob,GAAG,eAAgBr0B,GAE5BiZ,EAAKyW,aAAax1B,EAAM8F,EAC5B,CAEJ,GAAIyzB,EAAS9wB,SAAWsW,EAAKsX,KACzB,IAAK,IAAIr2B,KAAQu5B,EAAS9wB,QAAS,CAC3B3C,EAAMyzB,EAAS9wB,QAAQzI,GAC3B+e,EAAKsX,KAAK94B,SAASo7B,OAAO,WAAY34B,EAAM8F,EAChD,CAER,CACA,OAAOiZ,CACX,CAEA,SAASub,EAAiBlsB,EAAOC,GAC7B,OAAOD,CACX,CACA,SAASmsB,EAAkBnsB,EAAOC,GAC9B,OAAOA,CACX,CAEA,SAASqrB,EAAiBD,GACtB,IAAIe,EAAQ,CAAC,EACb,IAAKf,EACD,OAAOe,EAEX,CAAC,OAAQ,YAAa,YAAa,QAAS,QAAS,QAAS,aACzDC,SAAQ,SAASz6B,GACd,IAAI8F,EAAM2zB,EAAUz5B,GACT,MAAP8F,IAEmB,kBAARA,IACPA,EAAMukB,EAAAA,EAAQvkB,IAElB00B,EAAMx6B,GAAQ8F,EAEtB,IAEJ,IAAI40B,EAAYjB,EAAUkB,OAAS,EA0BnC,MAzBA,CAAC,QAAS,UACLF,SAAQ,SAASz6B,GACd,GAAuB,MAAnBy5B,EAAUz5B,GAAe,CACzB,IAAI8F,EAAM2zB,EAAUz5B,GACD,kBAAR8F,GACPA,EAAMA,EAAI6jB,OACV6Q,EAAMx6B,GAAQ46B,EACV56B,EAAMq6B,EAAev0B,GAAM40B,IAI/BF,EAAMx6B,GAAQ8F,CAEtB,CACJ,IACC00B,EAAMpsB,QACPosB,EAAMpsB,MAAQksB,GAEbE,EAAMnsB,SACPmsB,EAAMnsB,OAASksB,GAGQ,MAAvBd,EAAU3O,YACV0P,EAAM1P,UAAY2O,EAAU3O,WAEzB0P,CACX,CAEA,SAASb,EAAaV,EAAME,EAAKjpB,EAAM2qB,GACnC,GAAK5B,EAAKhR,SAAV,CAIA,IAAIA,EAAW,CAAC,EACZwJ,EAAU,EAEVqJ,GAAM,EACNC,EAAkB7qB,EAAK6qB,gBAC3B1a,EAAAA,EAAKqR,KAAKuH,EAAKhR,UAAU,SAAS+S,EAAah7B,GAC3C,IAAIsD,EACA23B,EAAOD,EAAYC,KACnBn6B,EAAa44B,EAAiBsB,EAAYl6B,YAC9C,GAAIwE,MAAMC,QAAQ01B,IAAyB,IAAhBA,EAAKl7B,OACxBg7B,IACAE,EAAOA,EAAKC,KAAI,SAASx1B,GACrB,OAAO2a,EAAAA,EAAK8a,kBAAkBz1B,EAAMq1B,EACxC,KAEJz3B,EAAU,IAAIstB,EAAAA,EAAY9vB,OAEzB,IAAmB,kBAATm6B,EAOX,OANIF,IACAE,EAAO5a,EAAAA,EAAK8a,kBAAkBF,EAAMF,IAExCz3B,EAAU,IAAIwrB,EAAAA,EAAUhuB,EAI5B,CAEAwC,EAAQ+sB,KAAK4K,GACbxJ,IACAnuB,EAAQ83B,KAAK,WAAW,WACpBnT,EAASjoB,GAAQsD,EACjBmuB,IACgB,IAAZA,IACAoJ,EAAS5S,GACT6S,GAAM,EAEd,GACJ,IAEgB,IAAZrJ,GAAkBqJ,GAClBD,EAAS5S,EAzCb,MAFI4S,EAAS,CAAC,EA6ClB,CAEA,SAAST,EAAqBp6B,EAAMq7B,GAChC,OAAO,SAAUv4B,GAEb,IAAI8N,EAAM9N,EAASqO,sBAEf/C,EAAQtL,EAASiO,WACjB1C,EAASvL,EAASkO,YAClBsqB,EAASD,EAASjtB,EAAOC,EAAQuC,GACrChS,KAAK42B,aAAax1B,EAAMs7B,EAC5B,CACJ,CAEA,SAASV,EAAiB56B,EAAMq7B,EAAUV,GAEtC,OADAA,EAAQA,GAAS,EACV,SAAU73B,GACb,IAAI8N,EAAM9N,EAASqO,sBACf/C,EAAQtL,EAASiO,WAAa4pB,EAC9BtsB,EAASvL,EAASkO,YAAc2pB,EACpC,OAAOU,EAASjtB,EAAOC,EAAQuC,EACnC,CACJ,CAEA,SAASypB,EAAe54B,GAEpB,IAAI85B,EAAU,iBAAiB1B,KAAKp4B,GACpC,GAAI85B,EACA,IACI,IAAIC,EAAO,IAAIjG,SAAS,QAAS,SAAU,MAAO,UAAYgG,EAAQ,IAItE,OAFAC,EAAK,EAAG,GAEDA,CACX,CACA,MAAO/qB,GACH,MAAM,IAAIN,MAAM,sBACpB,CAER,CAEA,QClTA,G,iECMA,SAASsrB,EAAOC,EAAgBC,EAAwBC,GAE3B,iBAAdD,IACPC,EAAQD,EACRA,EAAa,MAGjB,IAEIE,EAFAC,EAASl9B,KAGb,KAAM88B,aAA0BnG,UAG5B,IAAK,IAAIwG,KADTF,EAAW,GACUH,EACbA,EAAevH,eAAe4H,IAC9BF,EAASlyB,KAAKoyB,GAK1B,IAAIC,EAAM,SAASC,GAcf,GAXAH,EAAOI,MAAMt9B,KAAMu9B,WAEfT,aAA0BnG,SAG1Bj4B,EAAOsB,KAAM88B,EAAel8B,KAAKZ,KAAMq9B,IAGvCG,EAAmBx9B,KAAM88B,EAAgBG,GAGzCj9B,KAAKypB,cAAgB2T,EAGrB,IADA,IAAIK,EAAeL,EAAIM,iBACdx8B,EAAI,EAAGA,EAAIu8B,EAAat8B,OAAQD,IACrCu8B,EAAav8B,GAAGo8B,MAAMt9B,KAAMu9B,UAGxC,EAEAH,EAAIO,UAAYT,EAEXA,EAAOQ,iBAGRN,EAAIM,iBAAmBR,EAAOQ,iBAAiB1V,QAF/CoV,EAAIM,iBAAmB,GAIvBX,GACAK,EAAIM,iBAAiB3yB,KAAKgyB,GAG9B,IAAIa,EAAO,WAAY,EAYvB,OAXAA,EAAKj9B,UAAYu8B,EAAOv8B,UACxBy8B,EAAIz8B,UAAY,IAAIi9B,EACpBR,EAAIz8B,UAAU8oB,YAAc2T,EAC5B1+B,EAAO0+B,EAAIz8B,UAAWq8B,GAGtBI,EAAI1+B,OAASw+B,EAAOx+B,OAGpB0+B,EAAIP,OAASK,EAAOx+B,OAEb0+B,CACX,CAEA,SAAS1+B,EAAO8zB,EAAQtT,GACpB,GAAKA,EAGL,IAAK,IAAI9d,KAAQ8d,EACTA,EAAOqW,eAAen0B,KACtBoxB,EAAOpxB,GAAQ8d,EAAO9d,GAGlC,CAEA,SAASo8B,EAAmBhL,EAAQtT,EAAQ+d,GACxC,IAAK,IAAI/7B,EAAI,EAAGA,EAAI+7B,EAAS97B,OAAQD,IAAK,CACtC,IAAIi8B,EAAWF,EAAS/7B,GACxBsxB,EAAO2K,GAAYje,EAAOie,EAC9B,CACJ,CAMA,OAEIz+B,OAAQm+B,EAGRA,OAAQA,G,sBC9FRl5B,EAAO,WAIP3D,KAAK0H,QAAU+Z,EAAAA,EAAKC,SACxB,EAEA/d,EAAK+5B,iBAAmB,CACpB,SAAUpsB,GACNmQ,EAAAA,EAAK/iB,OAAOsB,KAAMsR,EACtB,GAGJmQ,EAAAA,EAAK/iB,OAAOiF,EAAMk6B,GAClBpc,EAAAA,EAAK/iB,OAAOiF,EAAKhD,UAAWm9B,EAAAA,GAE5B,O,sBC1BA,IAAIC,EAAe,SAEfrR,EAAQ,WAER1sB,KAAKg+B,WAAa,EAElBh+B,KAAKi+B,QAAU,GAEfj+B,KAAKk+B,SAAW,CAAC,CACrB,EAEAxR,EAAM/rB,UAAY,CAEdisB,IAAK,SAAUuR,EAAWC,GACtB,IAAIC,EAASr+B,KAAKi+B,QACbI,EAAOF,KACRE,EAAOF,GAAa,CAAC,EAEjBC,IACAC,EAAOF,GAAaC,MAG5Bp+B,KAAKg+B,WAAaG,EAElBn+B,KAAKk+B,SAAWG,EAAOF,EAC3B,EAEA1Z,IAAK,SAAU1Y,EAAK1G,GAChBrF,KAAKk+B,SAASnyB,GAAO1G,CACzB,EAEAga,IAAK,SAAUtT,GACX,OAAO/L,KAAKk+B,SAASnyB,EACzB,EAEAihB,MAAO,SAAUsR,GACbA,EAAQA,GAAS,GACjB,IAAIvyB,EAAMgyB,EAAeO,EACzBt+B,KAAKykB,IAAI1Y,GAAK,EAClB,EAEAkhB,SAAU,SAAUqR,GAChBA,EAAQA,GAAS,GAGjB,IAFA,IAAIvyB,EAAMgyB,EAAeO,EACrBD,EAASr+B,KAAKi+B,QACT/8B,EAAI,EAAGA,EAAIm9B,EAAOl9B,OAAQD,IAC3Bm9B,EAAOn9B,KACPm9B,EAAOn9B,GAAG6K,IAAO,EAG7B,EAEAghB,MAAO,SAAUuR,GACbA,EAAQA,GAAS,GACjB,IAAIvyB,EAAMgyB,EAAeO,EACzBt+B,KAAKykB,IAAI1Y,GAAK,EAClB,EAEAwyB,SAAU,SAAUD,GAChBA,EAAQA,GAAS,GAGjB,IAFA,IAAIvyB,EAAMgyB,EAAeO,EACrBD,EAASr+B,KAAKi+B,QACT/8B,EAAI,EAAGA,EAAIm9B,EAAOl9B,OAAQD,IAC3Bm9B,EAAOn9B,KACPm9B,EAAOn9B,GAAG6K,IAAO,EAG7B,EAEA+gB,QAAS,SAAUwR,GACfA,EAAQA,GAAS,GACjB,IAAIvyB,EAAMgyB,EAAeO,EACrBE,EAAUx+B,KAAKk+B,SACnB,OAASM,EAAQjJ,eAAexpB,KACR,IAAjByyB,EAAQzyB,EACnB,EAEAyiB,cAAe,SAAU2P,UACdn+B,KAAKi+B,QAAQE,GACpBn+B,KAAKk+B,SAAW,CAAC,CACrB,EAEAO,OAAQ,SAAU1yB,UACP/L,KAAKk+B,SAASnyB,EACzB,EAEA2yB,SAAU,WACN1+B,KAAKi+B,QAAU,CAAC,CACpB,EAEAvuB,WAAY,WACR,OAAO1P,KAAKk+B,QAChB,EAEAS,YAAc,SAAUC,EAAIJ,GACxB,IAAI11B,EAAOC,OAAOD,KAAK9I,KAAKi+B,SAC5Bn1B,EAAK+yB,SAAQ,SAAU9vB,GACnB6yB,GAAMA,EAAGh+B,KAAK49B,EAASzyB,EAC3B,GACJ,EAEA8gB,KAAM,SAAU9gB,GACZ,OAAS/L,KAAKk+B,SAAS3I,eAAexpB,EAC1C,GAGJ2gB,EAAM/rB,UAAU8oB,YAAciD,EAE9B,K,wDCvGA,IAAImS,EAAa,WAKb7+B,KAAK8+B,KAAO,KAKZ9+B,KAAK++B,KAAO,KAEZ/+B,KAAKg/B,QAAU,CACnB,EAOAH,EAAWl+B,UAAUs+B,OAAS,SAAU/3B,GACpC,IAAIg4B,EAAQ,IAAIL,EAAWM,MAAMj4B,GAEjC,OADAlH,KAAKo/B,YAAYF,GACVA,CACX,EAQAL,EAAWl+B,UAAU0+B,SAAW,SAAU90B,EAAKrD,GAC3C,KAAIqD,EAAM,GAAV,CAGA,IAAI+0B,EAAOt/B,KAAK8+B,KACZj4B,EAAS,EACb,MAAOy4B,GAAQz4B,GAAU0D,EACrB+0B,EAAOA,EAAKA,KACZz4B,IAEJ,GAAIy4B,EAAM,CACN,IAAIJ,EAAQ,IAAIL,EAAWM,MAAMj4B,GAC7Bq4B,EAAOD,EAAKC,KACXA,GAIDA,EAAKD,KAAOJ,EACZA,EAAMK,KAAOA,GAJbv/B,KAAK8+B,KAAOI,EAMhBA,EAAMI,KAAOA,EACbA,EAAKC,KAAOL,CAChB,MAEIl/B,KAAKi/B,OAAO/3B,EArBhB,CAuBJ,EAEA23B,EAAWl+B,UAAU6+B,kBAAoB,SAAUt4B,EAAKo4B,GACpD,IAAIJ,EAAQ,IAAIL,EAAWM,MAAMj4B,GAC7Bq4B,EAAOD,EAAKC,KACXA,GAIDA,EAAKD,KAAOJ,EACZA,EAAMK,KAAOA,GAJbv/B,KAAK8+B,KAAOI,EAMhBA,EAAMI,KAAOA,EACbA,EAAKC,KAAOL,EAEZl/B,KAAKg/B,SACT,EAMAH,EAAWl+B,UAAUy+B,YAAc,SAAUF,GACpCl/B,KAAK8+B,MAIN9+B,KAAK++B,KAAKO,KAAOJ,EACjBA,EAAMK,KAAOv/B,KAAK++B,KAClB/+B,KAAK++B,KAAOG,GALZl/B,KAAK8+B,KAAO9+B,KAAK++B,KAAOG,EAO5Bl/B,KAAKg/B,SACT,EAMAH,EAAWl+B,UAAUqf,OAAS,SAAUkf,GACpC,IAAIK,EAAOL,EAAMK,KACbD,EAAOJ,EAAMI,KACbC,EACAA,EAAKD,KAAOA,EAIZt/B,KAAK8+B,KAAOQ,EAEZA,EACAA,EAAKC,KAAOA,EAIZv/B,KAAK++B,KAAOQ,EAEhBL,EAAMI,KAAOJ,EAAMK,KAAO,KAC1Bv/B,KAAKg/B,SACT,EAOAH,EAAWl+B,UAAU8+B,SAAW,SAAUl1B,GACtC,KAAIA,EAAM,GAAV,CAGA,IAAIm1B,EAAO1/B,KAAK8+B,KACZj4B,EAAS,EACb,MAAO64B,GAAQ74B,GAAU0D,EACrBm1B,EAAOA,EAAKJ,KACZz4B,IAEJ,OAAI64B,GACA1/B,KAAKggB,OAAO0f,GACLA,EAAKr6B,YAFhB,CAPA,CAWJ,EAKAw5B,EAAWl+B,UAAUg/B,QAAU,WAC3B,GAAI3/B,KAAK8+B,KACL,OAAO9+B,KAAK8+B,KAAKz5B,KAEzB,EAKAw5B,EAAWl+B,UAAUi/B,QAAU,WAC3B,GAAI5/B,KAAK++B,KACL,OAAO/+B,KAAK++B,KAAK15B,KAEzB,EAMAw5B,EAAWl+B,UAAUk/B,MAAQ,SAAUt1B,GACnC,KAAIA,EAAM,GAAV,CAGA,IAAIm1B,EAAO1/B,KAAK8+B,KACZj4B,EAAS,EACb,MAAO64B,GAAQ74B,GAAU0D,EACrBm1B,EAAOA,EAAKJ,KACZz4B,IAEJ,OAAO64B,EAAKr6B,KAPZ,CAQJ,EAMAw5B,EAAWl+B,UAAUsM,QAAU,SAAU5H,GACrC,IAAIq6B,EAAO1/B,KAAK8+B,KACZj4B,EAAS,EACb,MAAO64B,EAAM,CACT,GAAIA,EAAKr6B,QAAUA,EACf,OAAOwB,EAEX64B,EAAOA,EAAKJ,KACZz4B,GACJ,CACJ,EAKAg4B,EAAWl+B,UAAUQ,OAAS,WAC1B,OAAOnB,KAAKg/B,OAChB,EAKAH,EAAWl+B,UAAUm/B,QAAU,WAC3B,OAAwB,IAAjB9/B,KAAKg/B,OAChB,EAMAH,EAAWl+B,UAAUk7B,QAAU,SAAU+C,EAAIJ,GACzC,IAAIkB,EAAO1/B,KAAK8+B,KACZv0B,EAAM,EACNw1B,EAAiC,oBAAZvB,EACzB,MAAOkB,EACCK,EACAnB,EAAGh+B,KAAK49B,EAASkB,EAAKr6B,MAAOkF,GAG7Bq0B,EAAGc,EAAKr6B,MAAOkF,GAEnBm1B,EAAOA,EAAKJ,KACZ/0B,GAER,EAKAs0B,EAAWl+B,UAAUmT,MAAQ,WACzB9T,KAAK++B,KAAO/+B,KAAK8+B,KAAO,KACxB9+B,KAAKg/B,QAAU,CACnB,EAMAH,EAAWM,MAAQ,SAAUj4B,GAIzBlH,KAAKqF,MAAQ6B,EAKblH,KAAKs/B,KAAO,KAKZt/B,KAAKu/B,KAAO,IAChB,EAEA,QC1PIS,EAAM,SAAUC,GAEhBjgC,KAAKkgC,MAAQ,IAAIrB,EAEjB7+B,KAAKmgC,KAAO,CAAC,EAEbngC,KAAKogC,SAAWH,GAAW,EAC/B,EAMAD,EAAIr/B,UAAU0/B,WAAa,SAAUvjB,GACjC9c,KAAKogC,SAAWtjB,CACpB,EAMAkjB,EAAIr/B,UAAU8jB,IAAM,SAAU1Y,EAAK1G,GAC/B,IAAKrF,KAAKmgC,KAAK5K,eAAexpB,GAAM,CAChC,IAAIkb,EAAMjnB,KAAKkgC,MAAM/+B,SACrB,GAAI8lB,GAAOjnB,KAAKogC,UAAYnZ,EAAM,EAAG,CAEjC,IAAIqZ,EAAiBtgC,KAAKkgC,MAAMpB,KAChC9+B,KAAKkgC,MAAMlgB,OAAOsgB,UACXtgC,KAAKmgC,KAAKG,EAAev0B,IACpC,CAEA,IAAImzB,EAAQl/B,KAAKkgC,MAAMjB,OAAO55B,GAC9B65B,EAAMnzB,IAAMA,EACZ/L,KAAKmgC,KAAKp0B,GAAOmzB,CACrB,CACJ,EAMAc,EAAIr/B,UAAU0e,IAAM,SAAUtT,GAC1B,IAAImzB,EAAQl/B,KAAKmgC,KAAKp0B,GACtB,GAAI/L,KAAKmgC,KAAK5K,eAAexpB,GAOzB,OALImzB,IAAUl/B,KAAKkgC,MAAMnB,OACrB/+B,KAAKkgC,MAAMlgB,OAAOkf,GAClBl/B,KAAKkgC,MAAMd,YAAYF,IAGpBA,EAAM75B,KAErB,EAKA26B,EAAIr/B,UAAUqf,OAAS,SAAUjU,GAC7B,IAAImzB,EAAQl/B,KAAKmgC,KAAKp0B,GACA,qBAAXmzB,WACAl/B,KAAKmgC,KAAKp0B,GACjB/L,KAAKkgC,MAAMlgB,OAAOkf,GAE1B,EAKAc,EAAIr/B,UAAUmT,MAAQ,WAClB9T,KAAKkgC,MAAMpsB,QACX9T,KAAKmgC,KAAO,CAAC,CACjB,EAEA,O,gDC3EII,EAAY,CAAC,EAEbC,EAAiB,CACjB,YAAe,CAAC,EAAE,EAAE,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACpD,aAAgB,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,EAAE,IAAI,IAAI,GACpD,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GACrD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,OAAU,CAAC,IAAI,IAAI,IAAI,GACjD,MAAS,CAAC,EAAE,EAAE,EAAE,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GACnD,KAAQ,CAAC,EAAE,EAAE,IAAI,GAAI,WAAc,CAAC,IAAI,GAAG,IAAI,GAC/C,MAAS,CAAC,IAAI,GAAG,GAAG,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GAClD,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,EAAE,GACtD,UAAa,CAAC,IAAI,IAAI,GAAG,GAAI,MAAS,CAAC,IAAI,IAAI,GAAG,GAClD,eAAkB,CAAC,IAAI,IAAI,IAAI,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GAC5D,QAAW,CAAC,IAAI,GAAG,GAAG,GAAI,KAAQ,CAAC,EAAE,IAAI,IAAI,GAC7C,SAAY,CAAC,EAAE,EAAE,IAAI,GAAI,SAAY,CAAC,EAAE,IAAI,IAAI,GAChD,cAAiB,CAAC,IAAI,IAAI,GAAG,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GAC1D,UAAa,CAAC,EAAE,IAAI,EAAE,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GACnD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,EAAE,IAAI,GACxD,eAAkB,CAAC,GAAG,IAAI,GAAG,GAAI,WAAc,CAAC,IAAI,IAAI,EAAE,GAC1D,WAAc,CAAC,IAAI,GAAG,IAAI,GAAI,QAAW,CAAC,IAAI,EAAE,EAAE,GAClD,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GAC5D,cAAiB,CAAC,GAAG,GAAG,IAAI,GAAI,cAAiB,CAAC,GAAG,GAAG,GAAG,GAC3D,cAAiB,CAAC,GAAG,GAAG,GAAG,GAAI,cAAiB,CAAC,EAAE,IAAI,IAAI,GAC3D,WAAc,CAAC,IAAI,EAAE,IAAI,GAAI,SAAY,CAAC,IAAI,GAAG,IAAI,GACrD,YAAe,CAAC,EAAE,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GACtD,QAAW,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,GAAG,IAAI,IAAI,GACtD,UAAa,CAAC,IAAI,GAAG,GAAG,GAAI,YAAe,CAAC,IAAI,IAAI,IAAI,GACxD,YAAe,CAAC,GAAG,IAAI,GAAG,GAAI,QAAW,CAAC,IAAI,EAAE,IAAI,GACpD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,KAAQ,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,GAAG,GAChD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,EAAE,IAAI,EAAE,GAC3C,YAAe,CAAC,IAAI,IAAI,GAAG,GAAI,KAAQ,CAAC,IAAI,IAAI,IAAI,GACpD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GACrD,UAAa,CAAC,IAAI,GAAG,GAAG,GAAI,OAAU,CAAC,GAAG,EAAE,IAAI,GAChD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GAChD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GAC3D,UAAa,CAAC,IAAI,IAAI,EAAE,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,qBAAwB,CAAC,IAAI,IAAI,IAAI,GACnE,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,YAAe,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,GAAG,IAAI,IAAI,GAC7D,aAAgB,CAAC,IAAI,IAAI,IAAI,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GAChE,eAAkB,CAAC,IAAI,IAAI,IAAI,GAAI,eAAkB,CAAC,IAAI,IAAI,IAAI,GAClE,YAAe,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,EAAE,IAAI,EAAE,GACjD,UAAa,CAAC,GAAG,IAAI,GAAG,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GAClD,QAAW,CAAC,IAAI,EAAE,IAAI,GAAI,OAAU,CAAC,IAAI,EAAE,EAAE,GAC7C,iBAAoB,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,EAAE,EAAE,IAAI,GAC5D,aAAgB,CAAC,IAAI,GAAG,IAAI,GAAI,aAAgB,CAAC,IAAI,IAAI,IAAI,GAC7D,eAAkB,CAAC,GAAG,IAAI,IAAI,GAAI,gBAAmB,CAAC,IAAI,IAAI,IAAI,GAClE,kBAAqB,CAAC,EAAE,IAAI,IAAI,GAAI,gBAAmB,CAAC,GAAG,IAAI,IAAI,GACnE,gBAAmB,CAAC,IAAI,GAAG,IAAI,GAAI,aAAgB,CAAC,GAAG,GAAG,IAAI,GAC9D,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,SAAY,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,IAAI,IAAI,GACzD,KAAQ,CAAC,EAAE,EAAE,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GAC7C,MAAS,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,GAAG,GACjD,OAAU,CAAC,IAAI,IAAI,EAAE,GAAI,UAAa,CAAC,IAAI,GAAG,EAAE,GAChD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GACzD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,cAAiB,CAAC,IAAI,IAAI,IAAI,GAC5D,cAAiB,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GAC7D,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,IAAI,IAAI,GAAG,GAClD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,KAAQ,CAAC,IAAI,IAAI,IAAI,GAC9C,WAAc,CAAC,IAAI,IAAI,IAAI,GAAI,OAAU,CAAC,IAAI,EAAE,IAAI,GACpD,IAAO,CAAC,IAAI,EAAE,EAAE,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GAC9C,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,YAAe,CAAC,IAAI,GAAG,GAAG,GACvD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,GAAG,GACrD,SAAY,CAAC,GAAG,IAAI,GAAG,GAAI,SAAY,CAAC,IAAI,IAAI,IAAI,GACpD,OAAU,CAAC,IAAI,GAAG,GAAG,GAAI,OAAU,CAAC,IAAI,IAAI,IAAI,GAChD,QAAW,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,GAAG,IAAI,GACrD,UAAa,CAAC,IAAI,IAAI,IAAI,GAAI,UAAa,CAAC,IAAI,IAAI,IAAI,GACxD,KAAQ,CAAC,IAAI,IAAI,IAAI,GAAI,YAAe,CAAC,EAAE,IAAI,IAAI,GACnD,UAAa,CAAC,GAAG,IAAI,IAAI,GAAI,IAAO,CAAC,IAAI,IAAI,IAAI,GACjD,KAAQ,CAAC,EAAE,IAAI,IAAI,GAAI,QAAW,CAAC,IAAI,IAAI,IAAI,GAC/C,OAAU,CAAC,IAAI,GAAG,GAAG,GAAI,UAAa,CAAC,GAAG,IAAI,IAAI,GAClD,OAAU,CAAC,IAAI,IAAI,IAAI,GAAI,MAAS,CAAC,IAAI,IAAI,IAAI,GACjD,MAAS,CAAC,IAAI,IAAI,IAAI,GAAI,WAAc,CAAC,IAAI,IAAI,IAAI,GACrD,OAAU,CAAC,IAAI,IAAI,EAAE,GAAI,YAAe,CAAC,IAAI,IAAI,GAAG,IAGxD,SAASC,EAAav/B,GAElB,OADAA,EAAIquB,KAAKE,MAAMvuB,GACRA,EAAI,EAAI,EAAIA,EAAI,IAAM,IAAMA,CACvC,CAEA,SAASw/B,EAAcx/B,GAEnB,OADAA,EAAIquB,KAAKE,MAAMvuB,GACRA,EAAI,EAAI,EAAIA,EAAI,IAAM,IAAMA,CACvC,CAEA,SAASy/B,EAAcC,GACnB,OAAOA,EAAI,EAAI,EAAIA,EAAI,EAAI,EAAIA,CACnC,CAEA,SAASC,EAAYzW,GACjB,OAAIA,EAAIjpB,QAAyC,MAA/BipB,EAAIrC,OAAOqC,EAAIjpB,OAAS,GAC/Bs/B,EAAazX,WAAWoB,GAAO,IAAM,KAEzCqW,EAAaj2B,SAAS4f,EAAK,IACtC,CAEA,SAAS0W,EAAc1W,GACnB,OAAIA,EAAIjpB,QAAyC,MAA/BipB,EAAIrC,OAAOqC,EAAIjpB,OAAS,GAC/Bw/B,EAAc3X,WAAWoB,GAAO,KAEpCuW,EAAc3X,WAAWoB,GACpC,CAEA,SAAS2W,EAAYC,EAAIC,EAAIC,GAQzB,OAPIA,EAAI,EACJA,GAAK,EAEAA,EAAI,IACTA,GAAK,GAGD,EAAJA,EAAQ,EACDF,GAAMC,EAAKD,GAAME,EAAI,EAExB,EAAJA,EAAQ,EACDD,EAEH,EAAJC,EAAQ,EACDF,GAAMC,EAAKD,IAAO,EAAE,EAAIE,GAAK,EAEjCF,CACX,CAEA,SAASG,EAAW1iB,EAAGkI,EAAGya,GACtB,OAAO3iB,GAAKkI,EAAIlI,GAAK2iB,CACzB,CAEA,SAASC,EAAQ3gC,EAAK4gC,EAAGC,EAAG5a,EAAGlI,GAE3B,OADA/d,EAAI,GAAK4gC,EAAG5gC,EAAI,GAAK6gC,EAAG7gC,EAAI,GAAKimB,EAAGjmB,EAAI,GAAK+d,EACtC/d,CACX,CACA,SAAS8gC,EAAS9gC,EAAK+d,GAEnB,OADA/d,EAAI,GAAK+d,EAAE,GAAI/d,EAAI,GAAK+d,EAAE,GAAI/d,EAAI,GAAK+d,EAAE,GAAI/d,EAAI,GAAK+d,EAAE,GACjD/d,CACX,CAEA,IAAI+gC,EAAa,IAAIzB,EAAAA,EAAI,IACrB0B,EAAiB,KAErB,SAASC,EAAWC,EAAUC,GAEtBH,GACAF,EAASE,EAAgBG,GAE7BH,EAAiBD,EAAWhd,IAAImd,EAAUF,GAAmBG,EAAQ7Z,QACzE,CAuIA,SAAS8Z,EAAUC,EAAMC,GACrB,IAAId,GAAOlY,WAAW+Y,EAAK,IAAM,IAAO,KAAO,IAAO,IAGlDE,EAAInB,EAAciB,EAAK,IACvBG,EAAIpB,EAAciB,EAAK,IACvBd,EAAKiB,GAAK,GAAMA,GAAKD,EAAI,GAAKC,EAAID,EAAIC,EAAID,EAC1CjB,EAAS,EAAJkB,EAAQjB,EAcjB,OAZAe,EAAOA,GAAQ,GACfX,EAAQW,EACJvB,EAA8C,IAAjCM,EAAYC,EAAIC,EAAIC,EAAI,EAAI,IACzCT,EAAsC,IAAzBM,EAAYC,EAAIC,EAAIC,IACjCT,EAA8C,IAAjCM,EAAYC,EAAIC,EAAIC,EAAI,EAAI,IACzC,GAGgB,IAAhBa,EAAK5gC,SACL6gC,EAAK,GAAKD,EAAK,IAGZC,CACX,CAOA,SAASG,EAAUH,GACf,GAAKA,EAAL,CAKA,IASII,EACAC,EAVAC,EAAIN,EAAK,GAAK,IACdO,EAAIP,EAAK,GAAK,IACdQ,EAAIR,EAAK,GAAK,IAEdS,EAAOlT,KAAK7K,IAAI4d,EAAGC,EAAGC,GACtBE,EAAOnT,KAAK1K,IAAIyd,EAAGC,EAAGC,GACtBG,EAAQD,EAAOD,EAEfG,GAAKF,EAAOD,GAAQ,EAIxB,GAAc,IAAVE,EACAP,EAAI,EACJC,EAAI,MAEH,CAEGA,EADAO,EAAI,GACAD,GAASD,EAAOD,GAGhBE,GAAS,EAAID,EAAOD,GAG5B,IAAII,IAAYH,EAAOJ,GAAK,EAAMK,EAAQ,GAAMA,EAC5CG,IAAYJ,EAAOH,GAAK,EAAMI,EAAQ,GAAMA,EAC5CI,IAAYL,EAAOF,GAAK,EAAMG,EAAQ,GAAMA,EAE5CL,IAAMI,EACNN,EAAIW,EAASD,EAERP,IAAMG,EACXN,EAAK,EAAI,EAAKS,EAASE,EAElBP,IAAME,IACXN,EAAK,EAAI,EAAKU,EAASD,GAGvBT,EAAI,IACJA,GAAK,GAGLA,EAAI,IACJA,GAAK,EAEb,CAEA,IAAIL,EAAO,CAAK,IAAJK,EAASC,EAAGO,GAMxB,OAJe,MAAXZ,EAAK,IACLD,EAAKh3B,KAAKi3B,EAAK,IAGZD,CAxDP,CAyDJ,CAxNAxB,EAAUyC,MAAQ,SAAUpB,EAAUC,GAClC,GAAKD,EAAL,CAGAC,EAAUA,GAAW,GAErB,IAAIoB,EAASxB,EAAWpiB,IAAIuiB,GAC5B,GAAIqB,EACA,OAAOzB,EAASK,EAASoB,GAI7BrB,GAAsB,GAEtB,IAAIxX,EAAMwX,EAAS73B,QAAQ,KAAM,IAAIm5B,cAGrC,GAAI9Y,KAAOoW,EAGP,OAFAgB,EAASK,EAASrB,EAAepW,IACjCuX,EAAWC,EAAUC,GACdA,EAIX,GAAsB,MAAlBzX,EAAIrC,OAAO,GAAf,CAkCA,IAAIob,EAAK/Y,EAAInd,QAAQ,KAAMm2B,EAAKhZ,EAAInd,QAAQ,KAC5C,IAAY,IAARk2B,GAAaC,EAAK,IAAMhZ,EAAIjpB,OAAQ,CACpC,IAAIkiC,EAAQjZ,EAAI+Q,OAAO,EAAGgI,GACtBG,EAASlZ,EAAI+Q,OAAOgI,EAAK,EAAGC,GAAMD,EAAK,IAAIpgC,MAAM,KACjD0N,EAAQ,EACZ,OAAQ4yB,GACJ,IAAK,OACD,GAAsB,IAAlBC,EAAOniC,OAEP,YADAkgC,EAAQQ,EAAS,EAAG,EAAG,EAAG,GAG9BpxB,EAAQqwB,EAAcwC,EAAOxwB,OAEjC,IAAK,MACD,OAAsB,IAAlBwwB,EAAOniC,YACPkgC,EAAQQ,EAAS,EAAG,EAAG,EAAG,IAG9BR,EAAQQ,EACJhB,EAAYyC,EAAO,IACnBzC,EAAYyC,EAAO,IACnBzC,EAAYyC,EAAO,IACnB7yB,GAEJkxB,EAAWC,EAAUC,GACdA,GACX,IAAK,OACD,OAAsB,IAAlByB,EAAOniC,YACPkgC,EAAQQ,EAAS,EAAG,EAAG,EAAG,IAG9ByB,EAAO,GAAKxC,EAAcwC,EAAO,IACjCxB,EAAUwB,EAAQzB,GAClBF,EAAWC,EAAUC,GACdA,GACX,IAAK,MACD,OAAsB,IAAlByB,EAAOniC,YACPkgC,EAAQQ,EAAS,EAAG,EAAG,EAAG,IAG9BC,EAAUwB,EAAQzB,GAClBF,EAAWC,EAAUC,GACdA,GACX,QACI,OAEZ,CAEAR,EAAQQ,EAAS,EAAG,EAAG,EAAG,EAjD1B,KAjCA,CACI,GAAmB,IAAfzX,EAAIjpB,OAAc,CAClB,IAAIoiC,EAAK/4B,SAAS4f,EAAI+Q,OAAO,GAAI,IACjC,OAAMoI,GAAM,GAAKA,GAAM,MAIvBlC,EAAQQ,GACG,KAAL0B,IAAe,GAAY,KAALA,IAAe,EACjC,IAALA,GAAoB,IAALA,IAAc,EACxB,GAALA,GAAmB,GAALA,IAAa,EAC5B,GAEJ5B,EAAWC,EAAUC,GACdA,QAVHR,EAAQQ,EAAS,EAAG,EAAG,EAAG,EAWlC,CACK,GAAmB,IAAfzX,EAAIjpB,OAAc,CACnBoiC,EAAK/4B,SAAS4f,EAAI+Q,OAAO,GAAI,IACjC,OAAMoI,GAAM,GAAKA,GAAM,UAIvBlC,EAAQQ,GACE,SAAL0B,IAAkB,IACb,MAALA,IAAgB,EACZ,IAALA,EACA,GAEJ5B,EAAWC,EAAUC,GACdA,QAVHR,EAAQQ,EAAS,EAAG,EAAG,EAAG,EAWlC,CAGJ,CAtDA,CAyGJ,EAEAtB,EAAUiD,aAAe,SAAU5B,EAAUC,GAEzC,GADAA,EAAUtB,EAAUyC,MAAMpB,EAAUC,GAC/BA,EAML,OAHAA,EAAQ,IAAM,IACdA,EAAQ,IAAM,IACdA,EAAQ,IAAM,IACPA,CACX,EAyGAtB,EAAUkD,KAAO,SAAUhK,EAAOpI,GAC9B,IAAIqS,EAAWnD,EAAUyC,MAAMvJ,GAC/B,GAAIiK,EAAU,CACV,IAAK,IAAIxiC,EAAI,EAAGA,EAAI,EAAGA,IAEfwiC,EAASxiC,GADTmwB,EAAQ,EACMqS,EAASxiC,IAAM,EAAImwB,GAAS,GAG1B,IAAMqS,EAASxiC,IAAMmwB,EAAQqS,EAASxiC,GAAM,EAGpE,OAAOq/B,EAAUoD,UAAUD,EAA8B,IAApBA,EAASviC,OAAe,OAAS,MAC1E,CACJ,EAOAo/B,EAAUqD,MAAQ,SAAUnK,GACxB,IAAIiK,EAAWnD,EAAUyC,MAAMvJ,GAC/B,GAAIiK,EACA,QAAS,GAAK,KAAOA,EAAS,IAAM,KAAOA,EAAS,IAAM,KAAOA,EAAS,IAAKz4B,SAAS,IAAI+c,MAAM,EAE1G,EAUAuY,EAAUsD,SAAW,SAAUC,EAAiBC,EAAQrjC,GACpD,GAAMqjC,GAAUA,EAAO5iC,QACd2iC,GAAmB,GAAKA,GAAmB,EADpD,CAMApjC,EAAMA,GAAO,GAEb,IAAI2E,EAAQy+B,GAAmBC,EAAO5iC,OAAS,GAC3C6iC,EAAYzU,KAAK0U,MAAM5+B,GACvB6+B,EAAa3U,KAAKuK,KAAKz0B,GACvB8+B,EAAYJ,EAAOC,GACnBI,EAAaL,EAAOG,GACpBG,EAAKh/B,EAAQ2+B,EAMjB,OALAtjC,EAAI,GAAK+/B,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IAC9D3jC,EAAI,GAAK+/B,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IAC9D3jC,EAAI,GAAK+/B,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IAC9D3jC,EAAI,GAAKigC,EAAcQ,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IAExD3jC,CAfP,CAgBJ,EAEA6/B,EAAU+D,eAAiB/D,EAAUsD,SASrCtD,EAAUgE,KAAO,SAAUT,EAAiBC,EAAQS,GAChD,GAAMT,GAAUA,EAAO5iC,QACd2iC,GAAmB,GAAKA,GAAmB,EADpD,CAMA,IAAIz+B,EAAQy+B,GAAmBC,EAAO5iC,OAAS,GAC3C6iC,EAAYzU,KAAK0U,MAAM5+B,GACvB6+B,EAAa3U,KAAKuK,KAAKz0B,GACvB8+B,EAAY5D,EAAUyC,MAAMe,EAAOC,IACnCI,EAAa7D,EAAUyC,MAAMe,EAAOG,IACpCG,EAAKh/B,EAAQ2+B,EAEbvK,EAAQ8G,EAAUoD,UAClB,CACIlD,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IACrD5D,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IACrD5D,EAAaU,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,IACrD1D,EAAcQ,EAAWgD,EAAU,GAAIC,EAAW,GAAIC,KAE1D,QAGJ,OAAOG,EACD,CACE/K,MAAOA,EACPuK,UAAWA,EACXE,WAAYA,EACZ7+B,MAAOA,GAETo0B,CA1BN,CA2BJ,EAKA8G,EAAUkE,WAAalE,EAAUgE,KAUjChE,EAAUmE,UAAY,SAAUjL,EAAOyH,EAAGe,EAAGC,GAGzC,GAFAzI,EAAQ8G,EAAUyC,MAAMvJ,GAEpBA,EAMA,OALAA,EAAQ0I,EAAU1I,GACb,MAALyH,IAAczH,EAAM,GAAKiH,EAAcQ,IAClC,MAALe,IAAcxI,EAAM,GAAKqH,EAAcmB,IAClC,MAALC,IAAczI,EAAM,GAAKqH,EAAcoB,IAEhC3B,EAAUoD,UAAU7B,EAAUrI,GAAQ,OAErD,EAOA8G,EAAUoE,YAAc,SAAUlL,EAAOhpB,GAGrC,GAFAgpB,EAAQ8G,EAAUyC,MAAMvJ,GAEpBA,GAAkB,MAAThpB,EAET,OADAgpB,EAAM,GAAKkH,EAAclwB,GAClB8vB,EAAUoD,UAAUlK,EAAO,OAE1C,EAOA8G,EAAUoD,UAAY,SAAUiB,EAAUx/B,GACtC,GAAKw/B,GAAaA,EAASzjC,OAA3B,CAGA,IAAIygC,EAAWgD,EAAS,GAAK,IAAMA,EAAS,GAAK,IAAMA,EAAS,GAIhE,MAHa,SAATx/B,GAA4B,SAATA,GAA4B,SAATA,IACtCw8B,GAAY,IAAMgD,EAAS,IAExBx/B,EAAO,IAAMw8B,EAAW,GAL/B,CAMJ,EAIA,K,sBC7hBA,KAEIzgB,iBAAiC,IACjCC,mBAAiC,KACjCF,iBAAiC,MAGjC7f,OAAiC,EACjCC,MAAiC,EACjCC,UAAiC,EACjCC,WAAiC,EACjCzC,UAAiC,EACjC0C,eAAiC,EACjCC,aAAiC,EAajCmjC,KAAiC,EACjC3qB,IAAiC,EACjC4qB,UAAiC,IACjCC,oBAAiC,IACjC/qB,UAAiC,IACjCC,oBAAiC,IACjC+qB,UAAiC,IACjCC,oBAAiC,IAKjCC,UAAiC,IACjCC,oBAAiC,IACjCC,mBAAiC,IAOjCtrB,SAAiC,MACjCurB,eAAiC,MACjCC,mBAAiC,MACjCC,qBAAiC,MAGjCC,cAAiC,MACjCC,sBAAiC,MAGjCC,cAAiC,MACjCC,cAAiC,MACjCC,gBAAiC,MACjCC,gBAAiC,MACjCC,eAAiC,MACjCC,yBAAiC,MACjCC,eAAiC,MACjCC,yBAAiC,MACjCC,YAAiC,MAGjCvpB,aAAiC,MACjCmC,qBAAiC,MACjCqnB,qBAAiC,MACjCC,6BAAiC,MAEjCC,YAAiC,MACjCC,YAAiC,MACjCC,aAAiC,MAEjCC,YAAiC,MACjCC,aAAiC,MAEjCC,sBAAiC,MAGjC/kC,MAAiC,KACjCrC,KAAiC,KACjCsC,eAAiC,KAcjC+Y,UAAiC,KACjChB,MAAiC,KACjCgtB,OAAiC,KACjCC,aAAiC,KACjCltB,WAAiC,KACjC9F,aAAiC,KACjCizB,oBAAiC,MACjCC,yBAAiC,MACjCC,gBAAiC,MAGjCC,SAAiC,EACjCC,aAAiC,KACjCC,cAAiC,KACjCC,kBAAiC,KACjCC,cAAiC,KAGjCvlC,GAAiC,KACjCrC,IAAiC,KAGjC6nC,WAAiC,KACjCC,yBAAiC,MACjCC,yBAAiC,MACjCC,eAAiC,KACjCC,WAAiC,KACjCC,YAAiC,KACjCC,gBAAiC,KACjCC,kBAAiC,KACjCC,WAAiC,KACjCC,oBAAiC,KACjCC,aAAiC,KACjCC,aAAiC,KACjCC,wBAAiC,KACjCC,wBAAiC,KACjCC,YAAiC,KACjCC,mBAAiC,KACjCC,kBAAiC,KACjCC,kBAAiC,MACjCC,kBAAiC,MACjCC,6BAAiC,MACjCC,6BAAiC,MACjCC,iBAAiC,MACjCC,wBAAiC,MACjCC,uBAAiC,MACjCC,SAAiC,KACjCC,YAAiC,KAEjCC,kBAAiC,KACjCC,gBAAiC,KACjC1b,iBAAiC,KACjC2b,eAAiC,KACjCC,iBAAiC,KACjCC,kBAAiC,KACjCC,cAAiC,KACjCC,SAAiC,KACjCC,WAAiC,KACjCC,UAAiC,KACjCC,WAAiC,KACjCC,WAAiC,KACjCC,aAAiC,KACjCC,qBAAiC,MAEjCC,sBAAiC,MACjCC,mBAAiC,MACjCC,eAAiC,MACjCC,QAAiC,MACjCC,sBAAiC,MACjCC,uBAAiC,MAQjCC,2BAAiC,MAGjCC,UAAiC,KACjCC,QAAiC,KACjCC,OAAiC,KAGjCC,qBAAkC,MAGlC77B,KAAiC,KACjCE,cAAiC,KACjCE,MAAiC,KACjCE,eAAiC,KACjC0f,IAAiC,KACjC3S,aAAiC,KACjCvN,MAAiC,KAGjCgf,gBAAiC,KACjCsB,MAAiC,KACjCnB,IAAiC,KACjC1d,KAAiC,KACjC8e,UAAiC,KACjCC,gBAAiC,KAIjCwb,uBAAiC,MACjCC,uBAAiC,MACjCC,qBAAiC,MAGjChiC,gBAAmC,MACnCL,cAAmC,MACnCsiC,mBAAmC,MACnCC,2BAAmC,MACnCC,oBAAmC,MACnCC,iCAAmC,MACnCC,+BAAmC,MACnCC,wBAAmC,MACnCC,6BAAmC,MACnCC,YAAmC,MACnCC,cAAmC,MACnC7hC,YAAmC,MACnC8hC,gBAAmC,MACnCC,iBAAmC,MACnCC,gBAAmC,MACnCC,kBAAmC,MACnCC,yBAAmC,MACnCC,gBAAmC,MAGnCC,MAAiC,IACjC32B,KAAiC,IACjC42B,MAAiC,IACjC72B,OAAiC,IACjC82B,QAAiC,IACjCC,SAAiC,IACjCC,OAAiC,IACjCC,OAAiC,IAIjCC,KAAiC,KACjCC,QAAiC,KACjCC,KAAiC,KACjCC,KAAiC,KACjCC,OAAiC,KACjCC,UAAiC,MACjCC,UAAiC,MAGjCC,OAAiC,KACjCC,SAAiC,KACjCC,QAAiC,KAGjCre,QAAiC,KACjClC,OAAiC,KAKjCgC,uBAAiC,KACjCG,sBAAiC,KACjCF,sBAAiC,KACjCnC,qBAAiC,KAGjC4E,mBAAiC,MACjCC,mBAAiC,MACjCH,eAAiC,MACjCC,eAAiC,MAGjC5gB,WAAiC,KACjC28B,QAAiC,KAEjCla,iBAAiC,MACjCma,yBAAiC,MACjCha,4BAAiC,MACjCia,4BAAiC,MACjCC,4BAAiC,MACjCC,4BAAiC,MACjCC,4BAAiC,MACjCC,4BAAiC,MACjCC,0BAAiC,MAGjCnoC,SAAiC,MACjCooC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,KACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,eAAiC,MAGjCpjB,OAAiC,MACjCkC,cAAiC,MACjCsB,gBAAiC,MAGjC6f,WAAiC,MACjCC,WAAiC,MACjCC,WAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,SAAiC,MACjCC,KAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,UAAiC,MACjCC,WAAiC,MACjCC,WAAiC,MACjCC,WAAiC,MACjCC,WAAiC,MACjCC,aAAiC,MAGjCC,4BAAqC,MACrCC,yBAAqC,MACrCC,2BAAqC,MACrCC,yBAAqC,MACrCC,+BAAqC,MACrCC,4BAAqC,MACrCC,mCAAqC,MAGrCjtC,eAAiC,MAGjCktC,UAAiC,MACjCC,aAAiC,MACjCC,WAAiC,MACjCC,QAAiC,MACjCC,WAAiC,MACjCC,SAAiC,MAGjCC,YAAiC,MACjCC,aAAiC,MAEjCC,MAAiC,MACjCC,QAAiC,MACjCC,OAAiC,MACjCC,kBAAiC,MACjCC,cAAiC,KACjCC,eAAiC,MACjCxiB,cAAiC,MAEjCyiB,mBAAiC,MACjCC,oBAAiC,MACjCC,6BAAiC,MACjCC,sBAAiC,MACjCC,wBAAiC,MACjCC,uBAAiC,MACjCC,wBAAiC,MACjCC,wBAAiC,MACjCC,0BAAiC,MAEjCC,mCAA+C,MAC/CC,mCAA+C,MAC/CC,qCAA+C,MAC/CC,6CAA+C,MAE/Crd,kBAAiC,MACjCsd,iBAAiC,MACjCC,mBAAiC,MACjCC,yBAAiC,MAEjCC,KAAiC,EAEjCC,qBAA4C,MAC5CC,kCAA4C,MAC5CC,0CAA4C,MAC5CC,kCAA4C,MAC5CC,wBAA4C,MAE5CC,oBAAiC,MACjCC,qBAAiC,MACjCC,sBAAiC,MAEjCC,8BAAiC,KAGjC1lB,oBAAiC,MACjCC,+BAAiC,MACjC0lB,mBAAiC,MACjCC,mCAAqC,MACrCC,sBAAiC,M,iCClarC,SAASC,EAAQC,EAAQ3U,GACrBx+B,KAAKmzC,OAASA,EACdnzC,KAAKw+B,QAAUA,CACnB,CAKA,IAAI4U,EAAW,CAKX1+B,QAAS,SAAStT,GACd,GAAKpB,KAAKu1B,eAAe,iBAGpBv1B,KAAKqzC,aAAa9d,eAAen0B,GAAtC,CAIA,IAAIkyC,EAAOtzC,KAAKqzC,aAAajyC,GACzB8gC,EAAIoR,EAAKnyC,OAAQD,GAAK,EAAGqyC,EAAOhW,UAEpC,OAAQgW,EAAKpyC,QACT,KAAK,EACD,QAASD,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAOvyC,KAAK0yC,EAAKpyC,GAAGs9B,SAEhC,OACJ,KAAK,EACD,QAASt9B,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAOvyC,KAAK0yC,EAAKpyC,GAAGs9B,QAAS+U,EAAK,IAE9C,OACJ,KAAK,EACD,QAASryC,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAOvyC,KAAK0yC,EAAKpyC,GAAGs9B,QAAS+U,EAAK,GAAIA,EAAK,IAEvD,OACJ,KAAK,EACD,QAASryC,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAOvyC,KAAK0yC,EAAKpyC,GAAGs9B,QAAS+U,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEhE,OACJ,KAAK,EACD,QAASryC,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAOvyC,KAAK0yC,EAAKpyC,GAAGs9B,QAAS+U,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAEzE,OACJ,QACI,QAASryC,EAAIghC,EACToR,EAAKpyC,GAAGiyC,OAAO7V,MAAMgW,EAAKpyC,GAAGs9B,QAAS93B,MAAM/F,UAAUqnB,MAAMpnB,KAAK2yC,EAAM,IAE3E,OAnCR,CAqCJ,EAQAhY,GAAI,SAASn6B,EAAM+xC,EAAQ3U,GACvB,GAAKp9B,GAAS+xC,EAAd,CAGA,IAAIK,EAAWxzC,KAAKqzC,eAAiBrzC,KAAKqzC,aAAa,CAAC,GACxD,GAAKG,EAASpyC,IAIV,GAAIpB,KAAKyzC,IAAIryC,EAAM+xC,GACf,YAJJK,EAASpyC,GAAQ,GAOrB,IAAIsyC,EAAU,IAAIR,EAAQC,EAAQ3U,GAAWx+B,MAG7C,OAFAwzC,EAASpyC,GAAM2J,KAAK2oC,GAEb1zC,IAbP,CAcJ,EASAw8B,KAAM,SAASp7B,EAAM+xC,EAAQ3U,GACzB,GAAKp9B,GAAS+xC,EAAd,CAGA,IAAInpB,EAAOhqB,KAKX,OAAOA,KAAKu7B,GAAGn6B,EAAMuyC,EAASnV,EAN9B,CAEA,SAASmV,IACL3pB,EAAK4pB,IAAIxyC,EAAMuyC,GACfR,EAAO7V,MAAMt9B,KAAMu9B,UACvB,CAEJ,EASAsW,OAAQ,SAASzyC,EAAM+xC,EAAQ3U,GAC3B,GAAKp9B,GAAS+xC,EAId,OADA/xC,EAAO,SAAWA,EACXpB,KAAKu7B,GAAGn6B,EAAM+xC,EAAQ3U,EACjC,EASAsV,MAAO,SAAS1yC,EAAM+xC,EAAQ3U,GAC1B,GAAKp9B,GAAS+xC,EAId,OADA/xC,EAAO,QAAUA,EACVpB,KAAKu7B,GAAGn6B,EAAM+xC,EAAQ3U,EACjC,EAQAuV,QAAS,SAASZ,EAAQ3U,GACtB,OAAOx+B,KAAKw8B,KAAK,UAAW2W,EAAQ3U,EACxC,EAQA7sB,MAAO,SAASwhC,EAAQ3U,GACpB,OAAOx+B,KAAKw8B,KAAK,QAAS2W,EAAQ3U,EACtC,EAQAoV,IAAK,SAASxyC,EAAM+xC,GAEhB,IAAIK,EAAWxzC,KAAKqzC,eAAiBrzC,KAAKqzC,aAAa,CAAC,GAExD,GAAKF,EAAL,CAIA,GAAIK,EAASpyC,GAAO,CAGhB,IAFA,IAAIkyC,EAAOE,EAASpyC,GAChB4yC,EAAU,GACL9yC,EAAI,EAAGA,EAAIoyC,EAAKnyC,OAAQD,IACzBiyC,GAAUG,EAAKpyC,GAAGiyC,SAAWA,GAC7Ba,EAAQjpC,KAAKuoC,EAAKpyC,IAG1BsyC,EAASpyC,GAAQ4yC,CACrB,CAEA,OAAOh0C,IAZP,CAFIwzC,EAASpyC,GAAQ,EAezB,EAQAqyC,IAAK,SAASryC,EAAM+xC,GAChB,IAAIK,EAAWxzC,KAAKqzC,aAEpB,IAAMG,IACAA,EAASpyC,GACX,OAAO,EAGX,IADA,IAAIkyC,EAAOE,EAASpyC,GACXF,EAAI,EAAGA,EAAIoyC,EAAKnyC,OAAQD,IAC7B,GAAIoyC,EAAKpyC,GAAGiyC,SAAWA,EACnB,OAAO,CAGnB,GAGJ,K,sBC1MA,IAAIc,EAAO,EAEPC,EAAaxtC,MAAM/F,UACnBwzC,EAAgBD,EAAWrY,QAM3Bpa,EAAO,CAOPC,QAAS,WACL,QAASuyB,CACb,EAQA1X,kBAAmB,SAAUF,EAAM+X,GAC/B,IAAKA,GAAY/X,EAAKryB,MAAM,OACxB,OAAOqyB,EAEX,IAAIgY,EAAYhY,EAAKt5B,MAAM,KACvBuxC,EAAgBF,EAASrxC,MAAM,KAE/B+D,EAAOutC,EAAU,GACrB,MAAe,MAATvtC,GAAyB,OAATA,EACL,OAATA,GACAwtC,EAAcxhC,MAElBuhC,EAAUE,QACVztC,EAAOutC,EAAU,GAErB,OAAOC,EAAcrxC,KAAK,KAAO,IAAMoxC,EAAUpxC,KAAK,IAC1D,EASAvE,OAAQ,SAAU8zB,EAAQtT,GACtB,GAAIA,EACA,IAAK,IAAI9d,KAAQ8d,EACTA,EAAOqW,eAAen0B,KACtBoxB,EAAOpxB,GAAQ8d,EAAO9d,IAIlC,OAAOoxB,CACX,EASAgiB,SAAU,SAAUhiB,EAAQtT,GACxB,GAAIA,EACA,IAAK,IAAIie,KAAYje,OACQ1a,IAArBguB,EAAO2K,KACP3K,EAAO2K,GAAYje,EAAOie,IAItC,OAAO3K,CACX,EASAgL,mBAAoB,SAAUhL,EAAQtT,EAAQ+d,GAC1C,GAAI/d,EACA,IAAK,IAAIhe,EAAI,EAAGA,EAAI+7B,EAAS97B,OAAQD,IAAK,CACtC,IAAIi8B,EAAWF,EAAS/7B,GACxBsxB,EAAO2K,GAAYje,EAAOie,EAC9B,CAEJ,OAAO3K,CACX,EASAkD,qBAAsB,SAAUlD,EAAQtT,EAAQ+d,GAC5C,GAAI/d,EACA,IAAK,IAAIhe,EAAI,EAAGA,EAAI+7B,EAAS97B,OAAQD,IAAK,CACtC,IAAIi8B,EAAWF,EAAS/7B,GACA,MAApBsxB,EAAO2K,KACP3K,EAAO2K,GAAYje,EAAOie,GAElC,CAEJ,OAAO3K,CACX,EAOAM,KAAM,SAAUngB,EAAK8hC,EAAUjW,GAC3B,GAAM7rB,GAAO8hC,EAGb,GAAI9hC,EAAIkpB,SAAWlpB,EAAIkpB,UAAYsY,EAC/BxhC,EAAIkpB,QAAQ4Y,EAAUjW,QAErB,GAAI7rB,EAAIxR,UAAawR,EAAIxR,OAC1B,IAAK,IAAID,EAAI,EAAG+lB,EAAMtU,EAAIxR,OAAQD,EAAI+lB,EAAK/lB,IACvCuzC,EAAS7zC,KAAK49B,EAAS7rB,EAAIzR,GAAIA,EAAGyR,QAItC,IAAK,IAAI5G,KAAO4G,EACRA,EAAI4iB,eAAexpB,IACnB0oC,EAAS7zC,KAAK49B,EAAS7rB,EAAI5G,GAAMA,EAAK4G,EAItD,EAQA+hC,SAAU,SAAU/hC,GAChB,OAAOA,IAAQ5J,OAAO4J,EAC1B,EAQAhM,QAAS,SAAUgM,GACf,OAAOjM,MAAMC,QAAQgM,EACzB,EAQAgiC,YAAa,SAAUhiC,GACnB,QAAKA,GAIMA,EAAIxR,UAAawR,EAAIxR,MAEpC,EAOAJ,MAAO,SAAU4R,GACb,GAAK8O,EAAKizB,SAAS/hC,GAGd,IAAI8O,EAAK9a,QAAQgM,GAClB,OAAOA,EAAIqV,QAEV,GAAIvG,EAAKkzB,YAAYhiC,GAAM,CAE5B,IADA,IAAIiiC,EAAM,IAAIjiC,EAAI8W,YAAY9W,EAAIxR,QACzBD,EAAI,EAAGA,EAAIyR,EAAIxR,OAAQD,IAC5B0zC,EAAI1zC,GAAKyR,EAAIzR,GAEjB,OAAO0zC,CACX,CAEI,OAAOnzB,EAAK/iB,OAAO,CAAC,EAAGiU,EAC3B,CAdI,OAAOA,CAef,GAGJ,K,6GC1MA,SAAS0M,EAAIge,GAET,IAAIwX,EAAM,IAAIC,eAEdD,EAAIE,KAAK,MAAO1X,EAAQ2X,KAKxBH,EAAII,aAAe5X,EAAQ4X,cAAgB,OAEvC5X,EAAQ6X,aAERL,EAAIK,WAAa,SAASrjC,GACtB,GAAIA,EAAEsjC,iBAAkB,CACpB,IAAIC,EAAUvjC,EAAEwjC,OAASxjC,EAAEyjC,MAC3BjY,EAAQ6X,WAAWE,EAASvjC,EAAEwjC,OAAQxjC,EAAEyjC,MAC5C,MAEIjY,EAAQ6X,WAAW,KAE3B,GAEJL,EAAIhjB,OAAS,SAAShgB,GACdgjC,EAAIU,QAAU,IACdlY,EAAQvL,SAAWuL,EAAQvL,UAG3BuL,EAAQxL,QAAUwL,EAAQxL,OAAOgjB,EAAIW,SAE7C,EACInY,EAAQvL,UACR+iB,EAAI/iB,QAAUuL,EAAQvL,SAE1B+iB,EAAIY,KAAK,KACb,CAEA,ICnCIC,EDmCJ,GACIr2B,IAAKA,GClCL7b,EAAS,CAMbA,aAAsB,WAClB,GAAoB,MAAhBkyC,EACA,IACI,IAAIxlC,EAAS2f,SAASC,cAAc,UAChC3rB,EAAK+L,EAAOR,WAAW,UAAYQ,EAAOR,WAAW,sBACzD,IAAKvL,EACD,MAAM,IAAIoN,KAElB,CACA,MAAOM,GACH6jC,GAAe,CACnB,CAGJ,OAAOA,CACX,GAEAlyC,EAAOmyC,UAAiC,qBAAdA,UAA4BjvC,MAAQivC,UAE9DnyC,EAAOoyC,WAAmC,qBAAfA,WAA6BlvC,MAAQkvC,WAEhEpyC,EAAOqyC,YAAqC,qBAAhBA,YAA8BnvC,MAAQmvC,YAElEryC,EAAOoY,YAAqC,qBAAhBA,YAA8BlV,MAAQkV,YAElEpY,EAAOsyC,WAAmC,qBAAfA,WAA6BpvC,MAAQovC,WAEhEtyC,EAAOC,aAAuC,qBAAjBA,aAA+BiD,MAAQjD,aAEpED,EAAOuyC,aAAuC,qBAAjBA,aAA+BrvC,MAAQqvC,aAEpE,IAAIxU,EAAI,CAAC,EACa,qBAAXjxB,OACPixB,EAAIjxB,OAEmB,qBAAX0lC,EAAAA,IACZzU,EAAIyU,EAAAA,GAIRxyC,EAAOyyC,sBAAwB1U,EAAE0U,uBAC1B1U,EAAE2U,yBACF3U,EAAE4U,0BACF5U,EAAE6U,6BACF,SAAUxZ,GAAOyZ,WAAWzZ,EAAM,GAAK,EAE9Cp5B,EAAO+L,aAAe,WAClB,OAAOsgB,SAASC,cAAc,SAClC,EAEAtsB,EAAOouB,YAAc,WACjB,OAAO,IAAI2P,EAAE+U,KACjB,EAEA9yC,EAAO+yC,QAAU,CACbl3B,IAAKk3B,EAAQl3B,KAGjB7b,EAAOgzC,iBAAmB,SAAUC,EAAKrxC,EAAMw3B,EAAM8Z,GACjDD,EAAID,iBAAiBpxC,EAAMw3B,EAAM8Z,EACrC,EAEAlzC,EAAOmzC,oBAAsB,SAAUF,EAAKrxC,EAAMw3B,GAC9C6Z,EAAIE,oBAAoBvxC,EAAMw3B,EAClC,EAEA,O,oJCtCA,GACIga,KAAMA,EAAAA,EACN3hC,KAAMA,EAAAA,EACN4hC,KAAMA,EAAAA,EACNC,KAAMA,EAAAA,EACNC,MAAOA,EAAAA,EACPC,KAAMA,EAAAA,EACNtpC,KAAMA,EAAAA,EACNupC,KAAMA,EAAAA,GC3CV,G,2FCIIC,EAAc,IAAI5xB,EAAAA,EAWlB6xB,EAAOC,EAAAA,EAAS14C,OAEpB,CACIyf,SAAS,EAITk5B,cAAe,EAIfC,eAAgB,EAIhBC,cAAe,EAIfC,QAAQ,IACT,WACCx3C,KAAKy3C,OACT,GAEA,CAIIA,MAAO,WAEH,IAAIC,EAAS,CACT,GAAMC,EAAY,KAAM33C,KAAKu3C,cAAev3C,KAAKs3C,gBACjD,GAAMK,EAAY,KAAM33C,KAAKu3C,cAAev3C,KAAKs3C,gBACjD,GAAMK,EAAY,KAAM33C,KAAKq3C,cAAer3C,KAAKu3C,eACjD,GAAMI,EAAY,KAAM33C,KAAKq3C,cAAer3C,KAAKu3C,eACjD,GAAMI,EAAY,KAAM33C,KAAKq3C,cAAer3C,KAAKs3C,gBACjD,GAAMK,EAAY,KAAM33C,KAAKq3C,cAAer3C,KAAKs3C,iBAGjDM,EAAW,CAAC,WAAY,YAAa,UACrCC,EAAe,EACfC,EAAa,EACjB,IAAK,IAAIC,KAAOL,EACZG,GAAgBH,EAAOK,GAAK53C,YAC5B23C,GAAcJ,EAAOK,GAAKp8B,QAAQxa,OAEtC,IAAK,IAAIkZ,EAAI,EAAGA,EAAIu9B,EAASz2C,OAAQkZ,IACjCra,KAAK6D,WAAW+zC,EAASv9B,IAAI29B,KAAKH,GAEtC73C,KAAK2b,QAAU,IAAInY,EAAAA,EAAOqyC,YAAYiC,GACtC,IAAIG,EAAa,EACbC,EAAe,EACnB,IAAK,IAAIH,KAAOL,EAAQ,CACpB,IAAIS,EAAQT,EAAOK,GACnB,IAAS19B,EAAI,EAAGA,EAAIu9B,EAASz2C,OAAQkZ,IAKjC,IAJA,IAAI+9B,EAAWR,EAASv9B,GACpBg+B,EAAYF,EAAMt0C,WAAWu0C,GAAU/yC,MACvCizC,EAAWH,EAAMt0C,WAAWu0C,GAAUt7B,KACtCy7B,EAAwB,WAAbH,EACNl3C,EAAI,EAAGA,EAAIm3C,EAAUl3C,OAAQD,IAAK,CACvC,IAAImE,EAAQgzC,EAAUn3C,GAClBlB,KAAKw3C,QAAUe,IACflzC,GAASA,GAEbrF,KAAK6D,WAAWu0C,GAAU/yC,MAAMnE,EAAIo3C,EAAWJ,GAAgB7yC,CACnE,CAEJ,IAAI4hB,EAAMkxB,EAAMx8B,QAAQxa,OACxB,IAASD,EAAI,EAAGA,EAAIi3C,EAAMx8B,QAAQxa,OAAQD,IACtClB,KAAK2b,QAAQza,EAAI+2C,GAAcC,EAAeC,EAAMx8B,QAAQ3b,KAAKw3C,OAAUvwB,EAAM/lB,EAAI,EAAKA,GAE9F+2C,GAAcE,EAAMx8B,QAAQxa,OAC5B+2C,GAAgBC,EAAMh4C,WAC1B,CAEAH,KAAKa,YAAc,IAAIwhB,EAAAA,EACvBriB,KAAKa,YAAYgkB,IAAIF,IAAI,EAAG,EAAG,GAC/B3kB,KAAKa,YAAY6jB,IAAIC,KAAK,GAAI,GAAI,EACtC,IAGJ,SAASgzB,EAAYI,EAAKV,EAAeC,GAErCJ,EAAYz/B,WAEZ,IAAI0gC,EAAQ,IAAIlkB,EAAAA,EAAM,CAClBojB,cAAeA,EACfC,eAAgBA,IAGpB,OAAOS,GACH,IAAK,KACDzyB,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQC,YACpDpzB,EAAAA,EAAQqzB,QAAQzB,EAAaA,EAAa3nB,KAAKqE,GAAK,GACpD,MACJ,IAAK,KACDtO,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQG,YACpDtzB,EAAAA,EAAQqzB,QAAQzB,EAAaA,GAAc3nB,KAAKqE,GAAK,GACrD,MACJ,IAAK,KACDtO,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQI,YACpDvzB,EAAAA,EAAQwzB,QAAQ5B,EAAaA,GAAc3nB,KAAKqE,GAAK,GACrD,MACJ,IAAK,KACDtO,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQM,YACpDzzB,EAAAA,EAAQwzB,QAAQ5B,EAAaA,EAAa3nB,KAAKqE,GAAK,GACpD,MACJ,IAAK,KACDtO,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQO,YACpD,MACJ,IAAK,KACD1zB,EAAAA,EAAQkzB,UAAUtB,EAAaA,EAAauB,EAAAA,EAAQQ,YACpD3zB,EAAAA,EAAQqzB,QAAQzB,EAAaA,EAAa3nB,KAAKqE,IAC/C,MAGR,OADAukB,EAAMe,eAAehC,GACdiB,CACX,CAEA,K,2DC/HIlkB,EAAQmjB,EAAAA,EAAS14C,OAErB,CACIyf,SAAS,EAITk5B,cAAe,EAIfC,eAAgB,IACjB,WACCt3C,KAAKy3C,OACT,GAEA,CAIIA,MAAO,WASH,IARA,IAAIH,EAAiBt3C,KAAKs3C,eACtBD,EAAgBr3C,KAAKq3C,cACrBxzC,EAAa7D,KAAK6D,WAClBs1C,EAAY,GACZC,EAAY,GACZC,EAAU,GACVC,EAAQ,GAEH5mC,EAAI,EAAGA,GAAK4kC,EAAgB5kC,IAEjC,IADA,IAAI6mC,EAAI7mC,EAAI4kC,EACH7kC,EAAI,EAAGA,GAAK4kC,EAAe5kC,IAAK,CACrC,IAAIwvB,EAAIxvB,EAAI4kC,EASZ,GAPA8B,EAAUpuC,KAAK,CAAC,EAAIk3B,EAAI,EAAG,EAAIsX,EAAI,EAAG,IAClCH,GACAA,EAAUruC,KAAK,CAACk3B,EAAGsX,IAEnBF,GACAA,EAAQtuC,KAAK,CAAC,EAAG,EAAG,IAEpB0H,EAAI4kC,GAAiB3kC,EAAI4kC,EAAgB,CACzC,IAAIp2C,EAAIuR,EAAIC,GAAK2kC,EAAgB,GACjCiC,EAAMvuC,KAAK,CAAC7J,EAAGA,EAAI,EAAGA,EAAIm2C,EAAgB,IAC1CiC,EAAMvuC,KAAK,CAAC7J,EAAIm2C,EAAgB,EAAGn2C,EAAI,EAAGA,EAAIm2C,EAAgB,GAClE,CACJ,CAGJxzC,EAAWyR,SAASkkC,UAAUL,GAC9Bt1C,EAAW41C,UAAUD,UAAUJ,GAC/Bv1C,EAAW61C,OAAOF,UAAUH,GAE5Br5C,KAAK25C,qBAAqBL,GAE1Bt5C,KAAKa,YAAc,IAAIwhB,EAAAA,EACvBriB,KAAKa,YAAY6jB,IAAIC,KAAK,GAAI,EAAG,GACjC3kB,KAAKa,YAAYgkB,IAAIF,IAAI,EAAG,EAAG,EACnC,IAGJ,K,wGCxDIi1B,EAASxC,EAAAA,EAAS14C,OAA2C,CAC7Dyf,SAAS,EAITk5B,cAAe,GAIfC,eAAgB,GAKhBuC,SAAU,EAIVC,UAAqB,EAAVvqB,KAAKqE,GAKhBmmB,WAAY,EAIZC,YAAazqB,KAAKqE,GAKlBqmB,OAAQ,IAET,WACCj6C,KAAKy3C,OACT,GAEA,CAIIA,MAAO,WACH,IAAIH,EAAiBt3C,KAAKs3C,eACtBD,EAAgBr3C,KAAKq3C,cAErB6C,EAAel6C,KAAK6D,WAAWyR,SAC/B6kC,EAAen6C,KAAK6D,WAAW41C,UAC/BW,EAAap6C,KAAK6D,WAAW61C,OAE7Bv5C,GAAek3C,EAAgB,IAAMC,EAAiB,GAC1D4C,EAAalC,KAAK73C,GAClBg6C,EAAanC,KAAK73C,GAClBi6C,EAAWpC,KAAK73C,GAEhB,IAGIsS,EAAGC,EAAG2nC,EACN78B,EAAG88B,EACHp5C,EAAG6F,EAmCHwzC,EAAIC,EAAIC,EAAIC,EAxCZC,EAAcx6C,EAAc,MAASyb,YAAci6B,YACnDl6B,EAAU3b,KAAK2b,QAAU,IAAIg/B,EAAYtD,EAAgBC,EAAiB,GAM1E2C,EAASj6C,KAAKi6C,OACdJ,EAAW75C,KAAK65C,SAChBC,EAAY95C,KAAK85C,UACjBC,EAAa/5C,KAAK+5C,WAClBC,EAAch6C,KAAKg6C,YAGnBjC,GAFAkC,EAASj6C,KAAKi6C,OAER,IACNW,EAAK,GACLC,EAAS,EACTC,EAAU,EAAIb,EAClB,IAAKlzC,EAAI,EAAGA,GAAKuwC,EAAgBvwC,IAC7B,IAAK7F,EAAI,EAAGA,GAAKm2C,EAAen2C,IAC5Bsc,EAAItc,EAAIm2C,EACRiD,EAAIvzC,EAAIuwC,EAGR7kC,GAAKwnC,EAAS1qB,KAAKwrB,IAAIlB,EAAWr8B,EAAIs8B,GAAavqB,KAAKyrB,IAAIjB,EAAaO,EAAIN,GAC7EtnC,EAAIunC,EAAS1qB,KAAKwrB,IAAIhB,EAAaO,EAAIN,GACvCK,EAAIJ,EAAS1qB,KAAKyrB,IAAInB,EAAWr8B,EAAIs8B,GAAavqB,KAAKyrB,IAAIjB,EAAaO,EAAIN,GAE5EjC,EAAI,GAAKtlC,EAAGslC,EAAI,GAAKrlC,EAAGqlC,EAAI,GAAKsC,EACjCO,EAAG,GAAKp9B,EAAGo9B,EAAG,GAAKN,EACnBJ,EAAav1B,IAAIk2B,EAAQ9C,GACzBoC,EAAax1B,IAAIk2B,EAAQD,GACzB7C,EAAI,IAAM+C,EACV/C,EAAI,IAAM+C,EACV/C,EAAI,IAAM+C,EACVV,EAAWz1B,IAAIk2B,EAAQ9C,GACvB8C,IAMR,IAAI5zB,EAAMowB,EAAgB,EAEtB4D,EAAI,EACR,IAAKl0C,EAAI,EAAGA,EAAIuwC,EAAgBvwC,IAC5B,IAAK7F,EAAI,EAAGA,EAAIm2C,EAAen2C,IAC3Bs5C,EAAKzzC,EAAIkgB,EAAM/lB,EACfq5C,EAAMxzC,EAAIkgB,EAAM/lB,EAAI,EACpBw5C,GAAM3zC,EAAI,GAAKkgB,EAAM/lB,EAAI,EACzBu5C,GAAM1zC,EAAI,GAAKkgB,EAAM/lB,EAErBya,EAAQs/B,KAAOV,EACf5+B,EAAQs/B,KAAOT,EACf7+B,EAAQs/B,KAAOP,EAEf/+B,EAAQs/B,KAAOT,EACf7+B,EAAQs/B,KAAOR,EACf9+B,EAAQs/B,KAAOP,EAIvB16C,KAAKa,YAAc,IAAIwhB,EAAAA,EACvBriB,KAAKa,YAAYgkB,IAAIF,IAAIs1B,EAAQA,EAAQA,GACzCj6C,KAAKa,YAAY6jB,IAAIC,KAAKs1B,GAASA,GAASA,EAChD,IAGJ,K,yGCzIO,IAAIiB,EAAgB,KAGhBC,EAAmBz0C,MAKnB00C,EAAe7rB,KAAK8rB,M,uCCsB3BvE,EAAO,CAOXA,OAAc,WACV,IAAIp2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAQAo2C,MAAa,SAASr4B,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAo2C,KAAY,SAASp2C,EAAK+d,GAKtB,OAJA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAQAo2C,SAAgB,SAASp2C,GAKrB,OAJAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EASAo2C,UAAiB,SAASp2C,EAAK+d,GAE3B,GAAI/d,IAAQ+d,EAAG,CACX,IAAI68B,EAAK78B,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK46C,CACb,MACI56C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GAGf,OAAO/d,CACX,EASAo2C,OAAc,SAASp2C,EAAK+d,GACxB,IAAI88B,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GAGxCi9B,EAAMH,EAAKE,EAAKD,EAAKF,EAEzB,OAAKI,GAGLA,EAAM,EAAMA,EAEZh7C,EAAI,GAAM+6C,EAAKC,EACfh7C,EAAI,IAAM46C,EAAKI,EACfh7C,EAAI,IAAM86C,EAAKE,EACfh7C,EAAI,GAAM66C,EAAKG,EAERh7C,GATI,IAUf,EASAo2C,QAAe,SAASp2C,EAAK+d,GAEzB,IAAI88B,EAAK98B,EAAE,GAMX,OALA/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,GAAM66C,EAEH76C,CACX,EAQAo2C,YAAmB,SAAUr4B,GACzB,OAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,EAClC,EAUAq4B,SAAgB,SAAUp2C,EAAK+d,EAAGkI,GAC9B,IAAI40B,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GACxCk9B,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAAIm1B,EAAKn1B,EAAE,GAK5C,OAJAjmB,EAAI,GAAK66C,EAAKI,EAAKH,EAAKI,EACxBl7C,EAAI,GAAK46C,EAAKK,EAAKF,EAAKG,EACxBl7C,EAAI,GAAK66C,EAAKM,EAAKL,EAAKM,EACxBp7C,EAAI,GAAK46C,EAAKO,EAAKJ,EAAKK,EACjBp7C,CACX,GAMAo2C,EAAKiF,IAAMjF,EAAKp/B,SAUhBo/B,EAAKkF,OAAS,SAAUt7C,EAAK+d,EAAGkV,GAC5B,IAAI4nB,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GACxCwjB,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GAKjB,OAJAjzB,EAAI,GAAK66C,EAAMU,EAAIT,EAAKvZ,EACxBvhC,EAAI,GAAK46C,EAAMW,EAAIR,EAAKxZ,EACxBvhC,EAAI,GAAK66C,GAAMtZ,EAAIuZ,EAAKS,EACxBv7C,EAAI,GAAK46C,GAAMrZ,EAAIwZ,EAAKQ,EACjBv7C,CACX,EAUAo2C,EAAK/a,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAC1B,IAAIiB,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GACxCy9B,EAAK5B,EAAE,GAAI6B,EAAK7B,EAAE,GAKtB,OAJA55C,EAAI,GAAK66C,EAAKW,EACdx7C,EAAI,GAAK46C,EAAKY,EACdx7C,EAAI,GAAK86C,EAAKW,EACdz7C,EAAI,GAAK+6C,EAAKU,EACPz7C,CACX,EAQAo2C,EAAKsF,KAAO,SAAU39B,GAClB,OAAO8Q,KAAK8sB,KAAK9sB,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAChG,EAUAq4B,EAAKwF,IAAM,SAAU1Z,EAAG2Z,EAAGC,EAAG/9B,GAK1B,OAJAmkB,EAAE,GAAKnkB,EAAE,GAAGA,EAAE,GACd+9B,EAAE,GAAK/9B,EAAE,GACT+9B,EAAE,GAAK/9B,EAAE,GACT+9B,EAAE,GAAK/9B,EAAE,GAAKmkB,EAAE,GAAK4Z,EAAE,GAChB,CAAC5Z,EAAG2Z,EAAGC,EAClB,EAGA,K,uCCpNIzF,EAAQ,CAOZA,OAAe,WACX,IAAIr2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAO/B,OANAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAQAq2C,MAAc,SAASt4B,GACnB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAO/B,OANAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAq2C,KAAa,SAASr2C,EAAK+d,GAOvB,OANA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAQAq2C,SAAiB,SAASr2C,GAOtB,OANAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EASAq2C,OAAe,SAASr2C,EAAK+d,GACzB,IAAIg+B,EAAKh+B,EAAE,GAAIi+B,EAAKj+B,EAAE,GAAIk+B,EAAKl+B,EAAE,GAAIm+B,EAAKn+B,EAAE,GACxCo+B,EAAMp+B,EAAE,GAAIq+B,EAAMr+B,EAAE,GAEpBi9B,EAAMe,EAAKG,EAAKF,EAAKC,EACzB,OAAIjB,GAGJA,EAAM,EAAMA,EAEZh7C,EAAI,GAAKk8C,EAAKlB,EACdh7C,EAAI,IAAMg8C,EAAKhB,EACfh7C,EAAI,IAAMi8C,EAAKjB,EACfh7C,EAAI,GAAK+7C,EAAKf,EACdh7C,EAAI,IAAMi8C,EAAKG,EAAMF,EAAKC,GAAOnB,EACjCh7C,EAAI,IAAMg8C,EAAKG,EAAMJ,EAAKK,GAAOpB,EAC1Bh7C,GAVI,IAWf,EAQAq2C,YAAoB,SAAUt4B,GAC1B,OAAOA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,EAClC,EAUAs4B,SAAiB,SAAUr2C,EAAK+d,EAAGkI,GAC/B,IAAI40B,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GAAIs+B,EAAKt+B,EAAE,GAAIu+B,EAAKv+B,EAAE,GAC9Dk9B,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAAIm1B,EAAKn1B,EAAE,GAAIs2B,EAAKt2B,EAAE,GAAIu2B,EAAKv2B,EAAE,GAOlE,OANAjmB,EAAI,GAAK66C,EAAKI,EAAKH,EAAKI,EACxBl7C,EAAI,GAAK46C,EAAKK,EAAKF,EAAKG,EACxBl7C,EAAI,GAAK66C,EAAKM,EAAKL,EAAKM,EACxBp7C,EAAI,GAAK46C,EAAKO,EAAKJ,EAAKK,EACxBp7C,EAAI,GAAK66C,EAAK0B,EAAKzB,EAAK0B,EAAKH,EAC7Br8C,EAAI,GAAK46C,EAAK2B,EAAKxB,EAAKyB,EAAKF,EACtBt8C,CACX,GAMAq2C,EAAMgF,IAAMhF,EAAMr/B,SAWlBq/B,EAAMiF,OAAS,SAAUt7C,EAAK+d,EAAGkV,GAC7B,IAAI4nB,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GAAIs+B,EAAKt+B,EAAE,GAAIu+B,EAAKv+B,EAAE,GAC9DwjB,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GAOjB,OANAjzB,EAAI,GAAK66C,EAAMU,EAAIT,EAAKvZ,EACxBvhC,EAAI,GAAK46C,EAAMW,EAAIR,EAAKxZ,EACxBvhC,EAAI,GAAK66C,GAAMtZ,EAAIuZ,EAAKS,EACxBv7C,EAAI,GAAK46C,GAAMrZ,EAAIwZ,EAAKQ,EACxBv7C,EAAI,GAAKq8C,EACTr8C,EAAI,GAAKs8C,EACFt8C,CACX,EAUAq2C,EAAMhb,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAC3B,IAAIiB,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GAAIs+B,EAAKt+B,EAAE,GAAIu+B,EAAKv+B,EAAE,GAC9Dy9B,EAAK5B,EAAE,GAAI6B,EAAK7B,EAAE,GAOtB,OANA55C,EAAI,GAAK66C,EAAKW,EACdx7C,EAAI,GAAK46C,EAAKY,EACdx7C,EAAI,GAAK86C,EAAKW,EACdz7C,EAAI,GAAK+6C,EAAKU,EACdz7C,EAAI,GAAKq8C,EACTr8C,EAAI,GAAKs8C,EACFt8C,CACX,EAUAq2C,EAAMyB,UAAY,SAAS93C,EAAK+d,EAAG67B,GAC/B,IAAIiB,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GAAIs+B,EAAKt+B,EAAE,GAAIu+B,EAAKv+B,EAAE,GAC9Dy9B,EAAK5B,EAAE,GAAI6B,EAAK7B,EAAE,GAOtB,OANA55C,EAAI,GAAK66C,EACT76C,EAAI,GAAK46C,EACT56C,EAAI,GAAK86C,EACT96C,EAAI,GAAK+6C,EACT/6C,EAAI,GAAK66C,EAAKW,EAAKV,EAAKW,EAAKY,EAC7Br8C,EAAI,GAAK46C,EAAKY,EAAKT,EAAKU,EAAKa,EACtBt8C,CACX,EAQAq2C,EAAMqF,KAAO,SAAU39B,GACnB,OAAO8Q,KAAK8sB,KAAK9sB,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK,EAC7I,EAGA,K,uCCzNIu4B,EAAO,CAOXA,OAAc,WACV,IAAIt2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAU/B,OATAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EASAs2C,SAAgB,SAASt2C,EAAK+d,GAU1B,OATA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,IACJ/d,CACX,EAQAs2C,MAAa,SAASv4B,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAU/B,OATAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAs2C,KAAY,SAASt2C,EAAK+d,GAUtB,OATA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAQAs2C,SAAgB,SAASt2C,GAUrB,OATAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EASAs2C,UAAiB,SAASt2C,EAAK+d,GAE3B,GAAI/d,IAAQ+d,EAAG,CACX,IAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GACpC/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAKy8C,EACTz8C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK08C,EACT18C,EAAI,GAAK28C,CACb,MACI38C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GAGf,OAAO/d,CACX,EASAs2C,OAAc,SAASt2C,EAAK+d,GACxB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAEhCm/B,EAAMD,EAAMH,EAAMH,EAAMK,EACxBG,GAAOF,EAAMJ,EAAMF,EAAMI,EACzBK,EAAMJ,EAAMH,EAAMC,EAAMC,EAGxB/B,EAAM4B,EAAMM,EAAMT,EAAMU,EAAMT,EAAMU,EAExC,OAAKpC,GAGLA,EAAM,EAAMA,EAEZh7C,EAAI,GAAKk9C,EAAMlC,EACfh7C,EAAI,KAAOi9C,EAAMR,EAAMC,EAAMM,GAAOhC,EACpCh7C,EAAI,IAAM28C,EAAMF,EAAMC,EAAMI,GAAO9B,EACnCh7C,EAAI,GAAKm9C,EAAMnC,EACfh7C,EAAI,IAAMi9C,EAAML,EAAMF,EAAMK,GAAO/B,EACnCh7C,EAAI,KAAO28C,EAAMC,EAAMF,EAAMG,GAAO7B,EACpCh7C,EAAI,GAAKo9C,EAAMpC,EACfh7C,EAAI,KAAOg9C,EAAMJ,EAAMH,EAAMM,GAAO/B,EACpCh7C,EAAI,IAAM88C,EAAMF,EAAMH,EAAMI,GAAO7B,EAC5Bh7C,GAbI,IAcf,EASAs2C,QAAe,SAASt2C,EAAK+d,GACzB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAWpC,OATA/d,EAAI,GAAM88C,EAAMG,EAAMN,EAAMK,EAC5Bh9C,EAAI,GAAM08C,EAAMM,EAAMP,EAAMQ,EAC5Bj9C,EAAI,GAAMy8C,EAAME,EAAMD,EAAMI,EAC5B98C,EAAI,GAAM28C,EAAMI,EAAMF,EAAMI,EAC5Bj9C,EAAI,GAAM48C,EAAMK,EAAMP,EAAMK,EAC5B/8C,EAAI,GAAM08C,EAAMG,EAAMD,EAAMD,EAC5B38C,EAAI,GAAM68C,EAAMG,EAAMF,EAAMC,EAC5B/8C,EAAI,GAAMy8C,EAAMM,EAAMH,EAAMI,EAC5Bh9C,EAAI,GAAM48C,EAAME,EAAML,EAAMI,EACrB78C,CACX,EAQAs2C,YAAmB,SAAUv4B,GACzB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAEpC,OAAO6+B,GAAOK,EAAMH,EAAMH,EAAMK,GAAOP,IAAQQ,EAAMJ,EAAMF,EAAMI,GAAOL,GAAOM,EAAMH,EAAMC,EAAMC,EACrG,EAUAzG,SAAgB,SAAUt2C,EAAK+d,EAAGkI,GAC9B,IAAI22B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAEhCs/B,EAAMp3B,EAAE,GAAIi3B,EAAMj3B,EAAE,GAAIq3B,EAAMr3B,EAAE,GAChCs3B,EAAMt3B,EAAE,GAAIk3B,EAAMl3B,EAAE,GAAIu3B,EAAMv3B,EAAE,GAChCw3B,EAAMx3B,EAAE,GAAIm3B,EAAMn3B,EAAE,GAAIy3B,EAAMz3B,EAAE,GAapC,OAXAjmB,EAAI,GAAKq9C,EAAMT,EAAMM,EAAML,EAAMS,EAAMP,EACvC/8C,EAAI,GAAKq9C,EAAMZ,EAAMS,EAAMJ,EAAMQ,EAAMN,EACvCh9C,EAAI,GAAKq9C,EAAMX,EAAMQ,EAAMP,EAAMW,EAAML,EAEvCj9C,EAAI,GAAKu9C,EAAMX,EAAMO,EAAMN,EAAMW,EAAMT,EACvC/8C,EAAI,GAAKu9C,EAAMd,EAAMU,EAAML,EAAMU,EAAMR,EACvCh9C,EAAI,GAAKu9C,EAAMb,EAAMS,EAAMR,EAAMa,EAAMP,EAEvCj9C,EAAI,GAAKy9C,EAAMb,EAAMQ,EAAMP,EAAMa,EAAMX,EACvC/8C,EAAI,GAAKy9C,EAAMhB,EAAMW,EAAMN,EAAMY,EAAMV,EACvCh9C,EAAI,GAAKy9C,EAAMf,EAAMU,EAAMT,EAAMe,EAAMT,EAChCj9C,CACX,GAMAs2C,EAAK+E,IAAM/E,EAAKt/B,SAUhBs/B,EAAKwB,UAAY,SAAS93C,EAAK+d,EAAG67B,GAC9B,IAAIgD,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAChChM,EAAI6nC,EAAE,GAAI5nC,EAAI4nC,EAAE,GAapB,OAXA55C,EAAI,GAAK48C,EACT58C,EAAI,GAAKy8C,EACTz8C,EAAI,GAAK08C,EAET18C,EAAI,GAAK68C,EACT78C,EAAI,GAAK88C,EACT98C,EAAI,GAAK28C,EAET38C,EAAI,GAAK+R,EAAI6qC,EAAM5qC,EAAI6qC,EAAME,EAC7B/8C,EAAI,GAAK+R,EAAI0qC,EAAMzqC,EAAI8qC,EAAME,EAC7Bh9C,EAAI,GAAK+R,EAAI2qC,EAAM1qC,EAAI2qC,EAAMM,EACtBj9C,CACX,EAUAs2C,EAAKgF,OAAS,SAAUt7C,EAAK+d,EAAGkV,GAC5B,IAAI2pB,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,GAEhCwjB,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GAajB,OAXAjzB,EAAI,GAAKu7C,EAAIqB,EAAMrb,EAAIsb,EACvB78C,EAAI,GAAKu7C,EAAIkB,EAAMlb,EAAIub,EACvB98C,EAAI,GAAKu7C,EAAImB,EAAMnb,EAAIob,EAEvB38C,EAAI,GAAKu7C,EAAIsB,EAAMtb,EAAIqb,EACvB58C,EAAI,GAAKu7C,EAAIuB,EAAMvb,EAAIkb,EACvBz8C,EAAI,GAAKu7C,EAAIoB,EAAMpb,EAAImb,EAEvB18C,EAAI,GAAK+8C,EACT/8C,EAAI,GAAKg9C,EACTh9C,EAAI,GAAKi9C,EACFj9C,CACX,EAUAs2C,EAAKjb,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAC1B,IAAI7nC,EAAI6nC,EAAE,GAAI5nC,EAAI4nC,EAAE,GAapB,OAXA55C,EAAI,GAAK+R,EAAIgM,EAAE,GACf/d,EAAI,GAAK+R,EAAIgM,EAAE,GACf/d,EAAI,GAAK+R,EAAIgM,EAAE,GAEf/d,EAAI,GAAKgS,EAAI+L,EAAE,GACf/d,EAAI,GAAKgS,EAAI+L,EAAE,GACf/d,EAAI,GAAKgS,EAAI+L,EAAE,GAEf/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAs2C,EAAKqH,UAAY,SAAS39C,EAAK+d,GAY3B,OAXA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK,EAETA,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK,EAETA,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK,EACFA,CACX,EAUAs2C,EAAKsH,SAAW,SAAU59C,EAAK69C,GAC3B,IAAI9rC,EAAI8rC,EAAE,GAAI7rC,EAAI6rC,EAAE,GAAIlE,EAAIkE,EAAE,GAAIC,EAAID,EAAE,GACpCE,EAAKhsC,EAAIA,EACTisC,EAAKhsC,EAAIA,EACTisC,EAAKtE,EAAIA,EAETuE,EAAKnsC,EAAIgsC,EACTI,EAAKnsC,EAAI+rC,EACTK,EAAKpsC,EAAIgsC,EACTK,EAAK1E,EAAIoE,EACTO,EAAK3E,EAAIqE,EACTO,EAAK5E,EAAIsE,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAcb,OAZAj+C,EAAI,GAAK,EAAIo+C,EAAKG,EAClBv+C,EAAI,GAAKm+C,EAAKO,EACd1+C,EAAI,GAAKq+C,EAAKI,EAEdz+C,EAAI,GAAKm+C,EAAKO,EACd1+C,EAAI,GAAK,EAAIk+C,EAAKK,EAClBv+C,EAAI,GAAKs+C,EAAKE,EAEdx+C,EAAI,GAAKq+C,EAAKI,EACdz+C,EAAI,GAAKs+C,EAAKE,EACdx+C,EAAI,GAAK,EAAIk+C,EAAKE,EAEXp+C,CACX,EAUAs2C,EAAKqI,eAAiB,SAAU3+C,EAAK+d,GACjC,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAC7CghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAAKmhC,EAAMnhC,EAAE,IAE/Cs/B,EAAMT,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBS,EAAMV,EAAMiC,EAAMD,EAAM/B,EACxBsC,EAAM1C,EAAME,EAAMD,EAAMI,EACxBsC,EAAM3C,EAAMoC,EAAMD,EAAM9B,EACxBuC,EAAM3C,EAAMmC,EAAMD,EAAMjC,EACxB2C,EAAMvC,EAAMiC,EAAMhC,EAAM+B,EACxBQ,EAAMxC,EAAMkC,EAAMhC,EAAM8B,EACxBS,EAAMzC,EAAMmC,EAAMJ,EAAMC,EACxBU,EAAMzC,EAAMiC,EAAMhC,EAAM+B,EACxBzB,EAAMP,EAAMkC,EAAMJ,EAAME,EACxB7B,EAAMF,EAAMiC,EAAMJ,EAAMG,EAGxBjE,EAAMqC,EAAMF,EAAMD,EAAMK,EAAMD,EAAMmC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKtE,GAGLA,EAAM,EAAMA,EAEZh7C,EAAI,IAAM88C,EAAMK,EAAMR,EAAMY,EAAMsB,EAAMY,GAAOzE,EAC/Ch7C,EAAI,IAAM28C,EAAM6C,EAAM3C,EAAMM,EAAM0B,EAAMU,GAAOvE,EAC/Ch7C,EAAI,IAAM68C,EAAMU,EAAMT,EAAM0C,EAAMX,EAAMS,GAAOtE,EAE/Ch7C,EAAI,IAAM08C,EAAMa,EAAMd,EAAMU,EAAMyB,EAAMa,GAAOzE,EAC/Ch7C,EAAI,IAAM48C,EAAMO,EAAMT,EAAM8C,EAAMZ,EAAMW,GAAOvE,EAC/Ch7C,EAAI,IAAMy8C,EAAM+C,EAAM5C,EAAMW,EAAMqB,EAAMU,GAAOtE,EAE/Ch7C,EAAI,IAAMg/C,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAOnE,EAC/Ch7C,EAAI,IAAMi/C,EAAM3B,EAAMyB,EAAMM,EAAMH,EAAMhC,GAAOlC,EAC/Ch7C,EAAI,IAAM++C,EAAMK,EAAMJ,EAAM1B,EAAM4B,EAAM7B,GAAOrC,EAExCh7C,GAhBI,IAiBf,EAQAs2C,EAAKoF,KAAO,SAAU39B,GAClB,OAAO8Q,KAAK8sB,KAAK9sB,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GACpM,EAGA,K,uCChcI/Q,EAAO,CAOXA,OAAc,WACV,IAAIhN,EAAM,IAAIy6C,EAAAA,GAAiB,IAiB/B,OAhBAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,CACX,EAQAgN,MAAa,SAAS+Q,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,IAiB/B,OAhBAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACL/d,CACX,EASAgN,KAAY,SAAShN,EAAK+d,GAiBtB,OAhBA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACL/d,CACX,EAQAgN,SAAgB,SAAShN,GAiBrB,OAhBAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACHA,CACX,EASAgN,UAAiB,SAAShN,EAAK+d,GAE3B,GAAI/d,IAAQ+d,EAAG,CACX,IAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAChC4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GACpB+gC,EAAM/gC,EAAE,IAEZ/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,IACX/d,EAAI,GAAKy8C,EACTz8C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,IACX/d,EAAI,GAAK08C,EACT18C,EAAI,GAAK28C,EACT38C,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM4+C,EACV5+C,EAAI,IAAM6+C,EACV7+C,EAAI,IAAM8+C,CACd,MACI9+C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,IACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,IACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IAGhB,OAAO/d,CACX,EASAgN,OAAc,SAAShN,EAAK+d,GACxB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAC7CghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAAKmhC,EAAMnhC,EAAE,IAE/Cs/B,EAAMT,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBS,EAAMV,EAAMiC,EAAMD,EAAM/B,EACxBsC,EAAM1C,EAAME,EAAMD,EAAMI,EACxBsC,EAAM3C,EAAMoC,EAAMD,EAAM9B,EACxBuC,EAAM3C,EAAMmC,EAAMD,EAAMjC,EACxB2C,EAAMvC,EAAMiC,EAAMhC,EAAM+B,EACxBQ,EAAMxC,EAAMkC,EAAMhC,EAAM8B,EACxBS,EAAMzC,EAAMmC,EAAMJ,EAAMC,EACxBU,EAAMzC,EAAMiC,EAAMhC,EAAM+B,EACxBzB,EAAMP,EAAMkC,EAAMJ,EAAME,EACxB7B,EAAMF,EAAMiC,EAAMJ,EAAMG,EAGxBjE,EAAMqC,EAAMF,EAAMD,EAAMK,EAAMD,EAAMmC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE5E,OAAKtE,GAGLA,EAAM,EAAMA,EAEZh7C,EAAI,IAAM88C,EAAMK,EAAMR,EAAMY,EAAMsB,EAAMY,GAAOzE,EAC/Ch7C,EAAI,IAAM08C,EAAMa,EAAMd,EAAMU,EAAMyB,EAAMa,GAAOzE,EAC/Ch7C,EAAI,IAAMg/C,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAOnE,EAC/Ch7C,EAAI,IAAMi9C,EAAMmC,EAAMpC,EAAMqC,EAAMP,EAAMK,GAAOnE,EAC/Ch7C,EAAI,IAAM28C,EAAM6C,EAAM3C,EAAMM,EAAM0B,EAAMU,GAAOvE,EAC/Ch7C,EAAI,IAAM48C,EAAMO,EAAMT,EAAM8C,EAAMZ,EAAMW,GAAOvE,EAC/Ch7C,EAAI,IAAMi/C,EAAM3B,EAAMyB,EAAMM,EAAMH,EAAMhC,GAAOlC,EAC/Ch7C,EAAI,IAAM+8C,EAAMsC,EAAMpC,EAAMK,EAAMwB,EAAM5B,GAAOlC,EAC/Ch7C,EAAI,IAAM68C,EAAMU,EAAMT,EAAM0C,EAAMX,EAAMS,GAAOtE,EAC/Ch7C,EAAI,IAAMy8C,EAAM+C,EAAM5C,EAAMW,EAAMqB,EAAMU,GAAOtE,EAC/Ch7C,EAAI,KAAO++C,EAAMK,EAAMJ,EAAM1B,EAAM4B,EAAM7B,GAAOrC,EAChDh7C,EAAI,KAAOg9C,EAAMM,EAAMP,EAAMqC,EAAMN,EAAMzB,GAAOrC,EAChDh7C,EAAI,KAAO88C,EAAMyC,EAAM1C,EAAM4C,EAAM9C,EAAM2C,GAAOtE,EAChDh7C,EAAI,KAAO48C,EAAM6C,EAAMhD,EAAM8C,EAAM7C,EAAM4C,GAAOtE,EAChDh7C,EAAI,KAAOg/C,EAAM9B,EAAM6B,EAAMI,EAAMF,EAAM5B,GAAOrC,EAChDh7C,EAAI,KAAO+8C,EAAMoC,EAAMnC,EAAME,EAAMD,EAAMI,GAAOrC,EAEzCh7C,GArBI,IAsBf,EASAgN,QAAe,SAAShN,EAAK+d,GACzB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAC7CghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAAKmhC,EAAMnhC,EAAE,IAkBnD,OAhBA/d,EAAI,GAAQ88C,GAAOG,EAAMiC,EAAMJ,EAAMG,GAAOjC,GAAOL,EAAMuC,EAAML,EAAMI,GAAOD,GAAOrC,EAAMmC,EAAMD,EAAM5B,GACrGj9C,EAAI,KAAQy8C,GAAOQ,EAAMiC,EAAMJ,EAAMG,GAAOjC,GAAON,EAAMwC,EAAMN,EAAMK,GAAOD,GAAOtC,EAAMoC,EAAMF,EAAM3B,IACrGj9C,EAAI,GAAQy8C,GAAOE,EAAMuC,EAAML,EAAMI,GAAOnC,GAAOJ,EAAMwC,EAAMN,EAAMK,GAAOD,GAAOtC,EAAMmC,EAAMD,EAAMjC,GACrG38C,EAAI,KAAQy8C,GAAOE,EAAMmC,EAAMD,EAAM5B,GAAOH,GAAOJ,EAAMoC,EAAMF,EAAM3B,GAAOD,GAAON,EAAMmC,EAAMD,EAAMjC,IACrG38C,EAAI,KAAQ68C,GAAOI,EAAMiC,EAAMJ,EAAMG,GAAOlC,GAAOJ,EAAMuC,EAAML,EAAMI,GAAOF,GAAOpC,EAAMmC,EAAMD,EAAM5B,IACrGj9C,EAAI,GAAQ48C,GAAOK,EAAMiC,EAAMJ,EAAMG,GAAOlC,GAAOL,EAAMwC,EAAMN,EAAMK,GAAOF,GAAOrC,EAAMoC,EAAMF,EAAM3B,GACrGj9C,EAAI,KAAQ48C,GAAOD,EAAMuC,EAAML,EAAMI,GAAOpC,GAAOH,EAAMwC,EAAMN,EAAMK,GAAOF,GAAOrC,EAAMmC,EAAMD,EAAMjC,IACrG38C,EAAI,GAAQ48C,GAAOD,EAAMmC,EAAMD,EAAM5B,GAAOJ,GAAOH,EAAMoC,EAAMF,EAAM3B,GAAOF,GAAOL,EAAMmC,EAAMD,EAAMjC,GACrG38C,EAAI,GAAQ68C,GAAOG,EAAMkC,EAAMJ,EAAME,GAAOjC,GAAOD,EAAMoC,EAAML,EAAMG,GAAOD,GAAOjC,EAAMgC,EAAMD,EAAM7B,GACrGh9C,EAAI,KAAQ48C,GAAOI,EAAMkC,EAAMJ,EAAME,GAAOjC,GAAON,EAAMyC,EAAMN,EAAMI,GAAOD,GAAOtC,EAAMqC,EAAMF,EAAM5B,IACrGh9C,EAAI,IAAQ48C,GAAOE,EAAMoC,EAAML,EAAMG,GAAOnC,GAAOJ,EAAMyC,EAAMN,EAAMI,GAAOD,GAAOtC,EAAMoC,EAAMD,EAAM9B,GACrG98C,EAAI,MAAQ48C,GAAOE,EAAMgC,EAAMD,EAAM7B,GAAOH,GAAOJ,EAAMqC,EAAMF,EAAM5B,GAAOD,GAAON,EAAMoC,EAAMD,EAAM9B,IACrG98C,EAAI,MAAQ68C,GAAOG,EAAMiC,EAAMhC,EAAM+B,GAAOjC,GAAOD,EAAMmC,EAAMtC,EAAMqC,GAAOD,GAAOjC,EAAMG,EAAMN,EAAMK,IACrGh9C,EAAI,IAAQ48C,GAAOI,EAAMiC,EAAMhC,EAAM+B,GAAOjC,GAAON,EAAMwC,EAAMvC,EAAMsC,GAAOD,GAAOtC,EAAMQ,EAAMP,EAAMM,GACrGh9C,EAAI,MAAQ48C,GAAOE,EAAMmC,EAAMtC,EAAMqC,GAAOnC,GAAOJ,EAAMwC,EAAMvC,EAAMsC,GAAOD,GAAOtC,EAAME,EAAMD,EAAMI,IACrG98C,EAAI,IAAQ48C,GAAOE,EAAMG,EAAMN,EAAMK,GAAOH,GAAOJ,EAAMQ,EAAMP,EAAMM,GAAOD,GAAON,EAAME,EAAMD,EAAMI,GAC9F98C,CACX,EAQAgN,YAAmB,SAAU+Q,GACzB,IAAI6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAC7CghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAAKmhC,EAAMnhC,EAAE,IAE/Cs/B,EAAMT,EAAME,EAAML,EAAMI,EACxBK,EAAMN,EAAMD,EAAMD,EAAMG,EACxBS,EAAMV,EAAMiC,EAAMD,EAAM/B,EACxBsC,EAAM1C,EAAME,EAAMD,EAAMI,EACxBsC,EAAM3C,EAAMoC,EAAMD,EAAM9B,EACxBuC,EAAM3C,EAAMmC,EAAMD,EAAMjC,EACxB2C,EAAMvC,EAAMiC,EAAMhC,EAAM+B,EACxBQ,EAAMxC,EAAMkC,EAAMhC,EAAM8B,EACxBS,EAAMzC,EAAMmC,EAAMJ,EAAMC,EACxBU,EAAMzC,EAAMiC,EAAMhC,EAAM+B,EACxBzB,EAAMP,EAAMkC,EAAMJ,EAAME,EACxB7B,EAAMF,EAAMiC,EAAMJ,EAAMG,EAG5B,OAAO5B,EAAMF,EAAMD,EAAMK,EAAMD,EAAMmC,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,CAC7E,EAUAtyC,SAAgB,SAAUhN,EAAK+d,EAAGkI,GAC9B,IAAI22B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAC7CghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAAKmhC,EAAMnhC,EAAE,IAG/Ck9B,EAAMh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAAIm1B,EAAKn1B,EAAE,GAuB7C,OAtBAjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAAM3B,EAAG2D,EACvC/+C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAAM5B,EAAG4D,EACvCh/C,EAAI,GAAKi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAAM7B,EAAG6D,EACvCj/C,EAAI,GAAKi7C,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG8D,EAEvCjE,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAAIm1B,EAAKn1B,EAAE,GACxCjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAAM3B,EAAG2D,EACvC/+C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAAM5B,EAAG4D,EACvCh/C,EAAI,GAAKi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAAM7B,EAAG6D,EACvCj/C,EAAI,GAAKi7C,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG8D,EAEvCjE,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,IAAKm1B,EAAKn1B,EAAE,IACzCjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAAM3B,EAAG2D,EACvC/+C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAAM5B,EAAG4D,EACvCh/C,EAAI,IAAMi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAAM7B,EAAG6D,EACxCj/C,EAAI,IAAMi7C,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG8D,EAExCjE,EAAKh1B,EAAE,IAAKi1B,EAAKj1B,EAAE,IAAKk1B,EAAKl1B,EAAE,IAAKm1B,EAAKn1B,EAAE,IAC3CjmB,EAAI,IAAMi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAAM3B,EAAG2D,EACxC/+C,EAAI,IAAMi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAAM5B,EAAG4D,EACxCh/C,EAAI,IAAMi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAAM7B,EAAG6D,EACxCj/C,EAAI,IAAMi7C,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG2D,EAAM1D,EAAG8D,EACjCl/C,CACX,EAUAgN,eAAsB,SAAUhN,EAAK+d,EAAGkI,GACpC,IAAI22B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAChC8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAChCg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAChCghC,EAAMhhC,EAAE,IAAKihC,EAAMjhC,EAAE,IAAKkhC,EAAMlhC,EAAE,IAGlCk9B,EAAMh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAuBlC,OAtBAjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAC9B/8C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAC9Bh9C,EAAI,GAAKi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAG9BhC,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,GAC7BjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAC9B/8C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAC9Bh9C,EAAI,GAAKi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAG9BhC,EAAKh1B,EAAE,GAAIi1B,EAAKj1B,EAAE,GAAIk1B,EAAKl1B,EAAE,IAC7BjmB,EAAI,GAAKi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAC9B/8C,EAAI,GAAKi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAC9Bh9C,EAAI,IAAMi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAG/BhC,EAAKh1B,EAAE,IAAKi1B,EAAKj1B,EAAE,IAAKk1B,EAAKl1B,EAAE,IAC/BjmB,EAAI,IAAMi7C,EAAG2B,EAAM1B,EAAG2B,EAAM1B,EAAG4B,EAAMgC,EACrC/+C,EAAI,IAAMi7C,EAAGwB,EAAMvB,EAAG4B,EAAM3B,EAAG6B,EAAMgC,EACrCh/C,EAAI,IAAMi7C,EAAGyB,EAAMxB,EAAGyB,EAAMxB,EAAG8B,EAAMgC,EAE9Bj/C,CACX,GAMAgN,EAAKquC,IAAMruC,EAAKgK,SAMhBhK,EAAK0yC,UAAY1yC,EAAKwH,eAStBxH,EAAK8qC,UAAY,SAAU93C,EAAK+d,EAAG67B,GAC/B,IACIgD,EAAKH,EAAKC,EAAKkC,EACf/B,EAAKC,EAAKH,EAAKkC,EACf9B,EAAKC,EAAKC,EAAK6B,EAHf/sC,EAAI6nC,EAAE,GAAI5nC,EAAI4nC,EAAE,GAAID,EAAIC,EAAE,GAyB9B,OApBI77B,IAAM/d,GACNA,EAAI,IAAM+d,EAAE,GAAKhM,EAAIgM,EAAE,GAAK/L,EAAI+L,EAAE,GAAK47B,EAAI57B,EAAE,IAC7C/d,EAAI,IAAM+d,EAAE,GAAKhM,EAAIgM,EAAE,GAAK/L,EAAI+L,EAAE,GAAK47B,EAAI57B,EAAE,IAC7C/d,EAAI,IAAM+d,EAAE,GAAKhM,EAAIgM,EAAE,GAAK/L,EAAI+L,EAAE,IAAM47B,EAAI57B,EAAE,IAC9C/d,EAAI,IAAM+d,EAAE,GAAKhM,EAAIgM,EAAE,GAAK/L,EAAI+L,EAAE,IAAM47B,EAAI57B,EAAE,MAE9C6+B,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAE7C/d,EAAI,GAAK48C,EAAK58C,EAAI,GAAKy8C,EAAKz8C,EAAI,GAAK08C,EAAK18C,EAAI,GAAK4+C,EACnD5+C,EAAI,GAAK68C,EAAK78C,EAAI,GAAK88C,EAAK98C,EAAI,GAAK28C,EAAK38C,EAAI,GAAK6+C,EACnD7+C,EAAI,GAAK+8C,EAAK/8C,EAAI,GAAKg9C,EAAKh9C,EAAI,IAAMi9C,EAAKj9C,EAAI,IAAM8+C,EAErD9+C,EAAI,IAAM48C,EAAM7qC,EAAI8qC,EAAM7qC,EAAI+qC,EAAMpD,EAAI57B,EAAE,IAC1C/d,EAAI,IAAMy8C,EAAM1qC,EAAI+qC,EAAM9qC,EAAIgrC,EAAMrD,EAAI57B,EAAE,IAC1C/d,EAAI,IAAM08C,EAAM3qC,EAAI4qC,EAAM3qC,EAAIirC,EAAMtD,EAAI57B,EAAE,IAC1C/d,EAAI,IAAM4+C,EAAM7sC,EAAI8sC,EAAM7sC,EAAI8sC,EAAMnF,EAAI57B,EAAE,KAGvC/d,CACX,EAUAgN,EAAKquB,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAC1B,IAAI7nC,EAAI6nC,EAAE,GAAI5nC,EAAI4nC,EAAE,GAAID,EAAIC,EAAE,GAkB9B,OAhBA55C,EAAI,GAAK+d,EAAE,GAAKhM,EAChB/R,EAAI,GAAK+d,EAAE,GAAKhM,EAChB/R,EAAI,GAAK+d,EAAE,GAAKhM,EAChB/R,EAAI,GAAK+d,EAAE,GAAKhM,EAChB/R,EAAI,GAAK+d,EAAE,GAAK/L,EAChBhS,EAAI,GAAK+d,EAAE,GAAK/L,EAChBhS,EAAI,GAAK+d,EAAE,GAAK/L,EAChBhS,EAAI,GAAK+d,EAAE,GAAK/L,EAChBhS,EAAI,GAAK+d,EAAE,GAAK47B,EAChB35C,EAAI,GAAK+d,EAAE,GAAK47B,EAChB35C,EAAI,IAAM+d,EAAE,IAAM47B,EAClB35C,EAAI,IAAM+d,EAAE,IAAM47B,EAClB35C,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACL/d,CACX,EAWAgN,EAAKsuC,OAAS,SAAUt7C,EAAK+d,EAAGkV,EAAK0sB,GACjC,IAEIpe,EAAGga,EAAG1C,EACN+D,EAAKH,EAAKC,EAAKkC,EACf/B,EAAKC,EAAKH,EAAKkC,EACf9B,EAAKC,EAAKC,EAAK6B,EACfzB,EAAKH,EAAKI,EACVC,EAAKJ,EAAKK,EACVC,EAAKL,EAAKM,EARV3rC,EAAI4tC,EAAK,GAAI3tC,EAAI2tC,EAAK,GAAIhG,EAAIgG,EAAK,GACnCp5B,EAAMsI,KAAK8sB,KAAK5pC,EAAIA,EAAIC,EAAIA,EAAI2nC,EAAIA,GASxC,OAAI9qB,KAAK+wB,IAAIr5B,GAAOi0B,EAAAA,GAAwB,MAE5Cj0B,EAAM,EAAIA,EACVxU,GAAKwU,EACLvU,GAAKuU,EACLozB,GAAKpzB,EAELgb,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GACb4lB,EAAI,EAAI0C,EAERqB,EAAM7+B,EAAE,GAAI0+B,EAAM1+B,EAAE,GAAI2+B,EAAM3+B,EAAE,GAAI6gC,EAAM7gC,EAAE,GAC5C8+B,EAAM9+B,EAAE,GAAI++B,EAAM/+B,EAAE,GAAI4+B,EAAM5+B,EAAE,GAAI8gC,EAAM9gC,EAAE,GAC5Cg/B,EAAMh/B,EAAE,GAAIi/B,EAAMj/B,EAAE,GAAIk/B,EAAMl/B,EAAE,IAAK+gC,EAAM/gC,EAAE,IAG7Cs/B,EAAMtrC,EAAIA,EAAI8mC,EAAI0C,EAAG2B,EAAMlrC,EAAID,EAAI8mC,EAAIc,EAAIpY,EAAG+b,EAAM3D,EAAI5nC,EAAI8mC,EAAI7mC,EAAIuvB,EACpEgc,EAAMxrC,EAAIC,EAAI6mC,EAAIc,EAAIpY,EAAG4b,EAAMnrC,EAAIA,EAAI6mC,EAAI0C,EAAGiC,EAAM7D,EAAI3nC,EAAI6mC,EAAI9mC,EAAIwvB,EACpEkc,EAAM1rC,EAAI4nC,EAAId,EAAI7mC,EAAIuvB,EAAG6b,EAAMprC,EAAI2nC,EAAId,EAAI9mC,EAAIwvB,EAAGmc,EAAM/D,EAAIA,EAAId,EAAI0C,EAGpEv7C,EAAI,GAAK48C,EAAMS,EAAMR,EAAMK,EAAMH,EAAMO,EACvCt9C,EAAI,GAAKy8C,EAAMY,EAAMP,EAAMI,EAAMF,EAAMM,EACvCt9C,EAAI,GAAK08C,EAAMW,EAAMV,EAAMO,EAAMD,EAAMK,EACvCt9C,EAAI,GAAK4+C,EAAMvB,EAAMwB,EAAM3B,EAAM4B,EAAMxB,EACvCt9C,EAAI,GAAK48C,EAAMW,EAAMV,EAAMM,EAAMJ,EAAMS,EACvCx9C,EAAI,GAAKy8C,EAAMc,EAAMT,EAAMK,EAAMH,EAAMQ,EACvCx9C,EAAI,GAAK08C,EAAMa,EAAMZ,EAAMQ,EAAMF,EAAMO,EACvCx9C,EAAI,GAAK4+C,EAAMrB,EAAMsB,EAAM1B,EAAM2B,EAAMtB,EACvCx9C,EAAI,GAAK48C,EAAMa,EAAMZ,EAAMO,EAAML,EAAMW,EACvC19C,EAAI,GAAKy8C,EAAMgB,EAAMX,EAAMM,EAAMJ,EAAMU,EACvC19C,EAAI,IAAM08C,EAAMe,EAAMd,EAAMS,EAAMH,EAAMS,EACxC19C,EAAI,IAAM4+C,EAAMnB,EAAMoB,EAAMzB,EAAM0B,EAAMpB,EAEpC3/B,IAAM/d,IACNA,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,KAET/d,EACX,EAUAgN,EAAKorC,QAAU,SAAUp4C,EAAK+d,EAAGkV,GAC7B,IAAIsO,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GACb4pB,EAAM9+B,EAAE,GACR++B,EAAM/+B,EAAE,GACR4+B,EAAM5+B,EAAE,GACR8gC,EAAM9gC,EAAE,GACRg/B,EAAMh/B,EAAE,GACRi/B,EAAMj/B,EAAE,GACRk/B,EAAMl/B,EAAE,IACR+gC,EAAM/gC,EAAE,IAsBZ,OApBIA,IAAM/d,IACNA,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,KAIhB/d,EAAI,GAAK68C,EAAMtB,EAAIwB,EAAMxb,EACzBvhC,EAAI,GAAK88C,EAAMvB,EAAIyB,EAAMzb,EACzBvhC,EAAI,GAAK28C,EAAMpB,EAAI0B,EAAM1b,EACzBvhC,EAAI,GAAK6+C,EAAMtD,EAAIuD,EAAMvd,EACzBvhC,EAAI,GAAK+8C,EAAMxB,EAAIsB,EAAMtb,EACzBvhC,EAAI,GAAKg9C,EAAMzB,EAAIuB,EAAMvb,EACzBvhC,EAAI,IAAMi9C,EAAM1B,EAAIoB,EAAMpb,EAC1BvhC,EAAI,IAAM8+C,EAAMvD,EAAIsD,EAAMtd,EACnBvhC,CACX,EAUAgN,EAAKirC,QAAU,SAAUj4C,EAAK+d,EAAGkV,GAC7B,IAAIsO,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GACb2pB,EAAM7+B,EAAE,GACR0+B,EAAM1+B,EAAE,GACR2+B,EAAM3+B,EAAE,GACR6gC,EAAM7gC,EAAE,GACRg/B,EAAMh/B,EAAE,GACRi/B,EAAMj/B,EAAE,GACRk/B,EAAMl/B,EAAE,IACR+gC,EAAM/gC,EAAE,IAsBZ,OApBIA,IAAM/d,IACNA,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,KAIhB/d,EAAI,GAAK48C,EAAMrB,EAAIwB,EAAMxb,EACzBvhC,EAAI,GAAKy8C,EAAMlB,EAAIyB,EAAMzb,EACzBvhC,EAAI,GAAK08C,EAAMnB,EAAI0B,EAAM1b,EACzBvhC,EAAI,GAAK4+C,EAAMrD,EAAIuD,EAAMvd,EACzBvhC,EAAI,GAAK48C,EAAMrb,EAAIwb,EAAMxB,EACzBv7C,EAAI,GAAKy8C,EAAMlb,EAAIyb,EAAMzB,EACzBv7C,EAAI,IAAM08C,EAAMnb,EAAI0b,EAAM1B,EAC1Bv7C,EAAI,IAAM4+C,EAAMrd,EAAIud,EAAMvD,EACnBv7C,CACX,EAUAgN,EAAK6yC,QAAU,SAAU7/C,EAAK+d,EAAGkV,GAC7B,IAAIsO,EAAI1S,KAAKyrB,IAAIrnB,GACbsoB,EAAI1sB,KAAKwrB,IAAIpnB,GACb2pB,EAAM7+B,EAAE,GACR0+B,EAAM1+B,EAAE,GACR2+B,EAAM3+B,EAAE,GACR6gC,EAAM7gC,EAAE,GACR8+B,EAAM9+B,EAAE,GACR++B,EAAM/+B,EAAE,GACR4+B,EAAM5+B,EAAE,GACR8gC,EAAM9gC,EAAE,GAsBZ,OApBIA,IAAM/d,IACNA,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,GAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,IACZ/d,EAAI,IAAM+d,EAAE,KAIhB/d,EAAI,GAAK48C,EAAMrB,EAAIsB,EAAMtb,EACzBvhC,EAAI,GAAKy8C,EAAMlB,EAAIuB,EAAMvb,EACzBvhC,EAAI,GAAK08C,EAAMnB,EAAIoB,EAAMpb,EACzBvhC,EAAI,GAAK4+C,EAAMrD,EAAIsD,EAAMtd,EACzBvhC,EAAI,GAAK68C,EAAMtB,EAAIqB,EAAMrb,EACzBvhC,EAAI,GAAK88C,EAAMvB,EAAIkB,EAAMlb,EACzBvhC,EAAI,GAAK28C,EAAMpB,EAAImB,EAAMnb,EACzBvhC,EAAI,GAAK6+C,EAAMtD,EAAIqD,EAAMrd,EAClBvhC,CACX,EAiBAgN,EAAK8yC,wBAA0B,SAAU9/C,EAAK69C,EAAGjE,GAE7C,IAAI7nC,EAAI8rC,EAAE,GAAI7rC,EAAI6rC,EAAE,GAAIlE,EAAIkE,EAAE,GAAIC,EAAID,EAAE,GACpCE,EAAKhsC,EAAIA,EACTisC,EAAKhsC,EAAIA,EACTisC,EAAKtE,EAAIA,EAETuE,EAAKnsC,EAAIgsC,EACTgC,EAAKhuC,EAAIisC,EACTgC,EAAKjuC,EAAIksC,EACTG,EAAKpsC,EAAIgsC,EACTiC,EAAKjuC,EAAIisC,EACTM,EAAK5E,EAAIsE,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAmBb,OAjBAj+C,EAAI,GAAK,GAAKo+C,EAAKG,GACnBv+C,EAAI,GAAK+/C,EAAKrB,EACd1+C,EAAI,GAAKggD,EAAKvB,EACdz+C,EAAI,GAAK,EACTA,EAAI,GAAK+/C,EAAKrB,EACd1+C,EAAI,GAAK,GAAKk+C,EAAKK,GACnBv+C,EAAI,GAAKigD,EAAKzB,EACdx+C,EAAI,GAAK,EACTA,EAAI,GAAKggD,EAAKvB,EACdz+C,EAAI,GAAKigD,EAAKzB,EACdx+C,EAAI,IAAM,GAAKk+C,EAAKE,GACpBp+C,EAAI,IAAM,EACVA,EAAI,IAAM45C,EAAE,GACZ55C,EAAI,IAAM45C,EAAE,GACZ55C,EAAI,IAAM45C,EAAE,GACZ55C,EAAI,IAAM,EAEHA,CACX,EAEAgN,EAAK4wC,SAAW,SAAU59C,EAAK69C,GAC3B,IAAI9rC,EAAI8rC,EAAE,GAAI7rC,EAAI6rC,EAAE,GAAIlE,EAAIkE,EAAE,GAAIC,EAAID,EAAE,GACpCE,EAAKhsC,EAAIA,EACTisC,EAAKhsC,EAAIA,EACTisC,EAAKtE,EAAIA,EAETuE,EAAKnsC,EAAIgsC,EACTI,EAAKnsC,EAAI+rC,EACTK,EAAKpsC,EAAIgsC,EACTK,EAAK1E,EAAIoE,EACTO,EAAK3E,EAAIqE,EACTO,EAAK5E,EAAIsE,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAsBb,OApBAj+C,EAAI,GAAK,EAAIo+C,EAAKG,EAClBv+C,EAAI,GAAKm+C,EAAKO,EACd1+C,EAAI,GAAKq+C,EAAKI,EACdz+C,EAAI,GAAK,EAETA,EAAI,GAAKm+C,EAAKO,EACd1+C,EAAI,GAAK,EAAIk+C,EAAKK,EAClBv+C,EAAI,GAAKs+C,EAAKE,EACdx+C,EAAI,GAAK,EAETA,EAAI,GAAKq+C,EAAKI,EACdz+C,EAAI,GAAKs+C,EAAKE,EACdx+C,EAAI,IAAM,EAAIk+C,EAAKE,EACnBp+C,EAAI,IAAM,EAEVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAM,EAEHA,CACX,EAcAgN,EAAKgY,QAAU,SAAUhlB,EAAKsyB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GAC1D,IAAIonC,EAAK,GAAK3tB,EAAQD,GAClB6tB,EAAK,GAAK3tB,EAAMC,GAChB2tB,EAAK,GAAKvnC,EAAOC,GAiBrB,OAhBA9Y,EAAI,GAAa,EAAP6Y,EAAYqnC,EACtBlgD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAa,EAAP6Y,EAAYsnC,EACtBngD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAMuyB,EAAQD,GAAQ4tB,EAC1BlgD,EAAI,IAAMwyB,EAAMC,GAAU0tB,EAC1BngD,EAAI,KAAO8Y,EAAMD,GAAQunC,EACzBpgD,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAO8Y,EAAMD,EAAO,EAAKunC,EAC7BpgD,EAAI,IAAM,EACHA,CACX,EAYAgN,EAAKmmB,YAAc,SAAUnzB,EAAKqgD,EAAMrtB,EAAQna,EAAMC,GAClD,IAAIonB,EAAI,EAAMrR,KAAKyxB,IAAID,EAAO,GAC1BD,EAAK,GAAKvnC,EAAOC,GAiBrB,OAhBA9Y,EAAI,GAAKkgC,EAAIlN,EACbhzB,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAKkgC,EACTlgC,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,KAAO8Y,EAAMD,GAAQunC,EACzBpgD,EAAI,KAAO,EACXA,EAAI,IAAM,EACVA,EAAI,IAAM,EACVA,EAAI,IAAO,EAAI8Y,EAAMD,EAAQunC,EAC7BpgD,EAAI,IAAM,EACHA,CACX,EAcAgN,EAAK2lB,MAAQ,SAAU3yB,EAAKsyB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GACxD,IAAIynC,EAAK,GAAKjuB,EAAOC,GACjBiuB,EAAK,GAAK/tB,EAASD,GACnB4tB,EAAK,GAAKvnC,EAAOC,GAiBrB,OAhBA9Y,EAAI,IAAM,EAAIugD,EACdvgD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIwgD,EACdxgD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,IAAM,EAAIogD,EACdpgD,EAAI,IAAM,EACVA,EAAI,KAAOsyB,EAAOC,GAASguB,EAC3BvgD,EAAI,KAAOwyB,EAAMC,GAAU+tB,EAC3BxgD,EAAI,KAAO8Y,EAAMD,GAAQunC,EACzBpgD,EAAI,IAAM,EACHA,CACX,EAWAgN,EAAKyzC,OAAS,SAAUzgD,EAAK0gD,EAAKC,EAAQC,GACtC,IAAIC,EAAIC,EAAI/C,EAAIgD,EAAIC,EAAIhD,EAAIiD,EAAIC,EAAIjD,EAAI13B,EACpC46B,EAAOT,EAAI,GACXU,EAAOV,EAAI,GACXW,EAAOX,EAAI,GACXY,EAAMV,EAAG,GACTW,EAAMX,EAAG,GACTY,EAAMZ,EAAG,GACTa,EAAUd,EAAO,GACjBe,EAAUf,EAAO,GACjBgB,EAAUhB,EAAO,GAErB,OAAI9xB,KAAK+wB,IAAIuB,EAAOM,GAAWjH,EAAAA,IAC3B3rB,KAAK+wB,IAAIwB,EAAOM,GAAWlH,EAAAA,IAC3B3rB,KAAK+wB,IAAIyB,EAAOM,GAAWnH,EAAAA,GACpBxtC,EAAK+J,SAAS/W,IAGzBihD,EAAKE,EAAOM,EACZP,EAAKE,EAAOM,EACZzD,EAAKoD,EAAOM,EAEZp7B,EAAM,EAAIsI,KAAK8sB,KAAKsF,EAAKA,EAAKC,EAAKA,EAAKjD,EAAKA,GAC7CgD,GAAM16B,EACN26B,GAAM36B,EACN03B,GAAM13B,EAENs6B,EAAKU,EAAMtD,EAAKuD,EAAMN,EACtBJ,EAAKU,EAAMP,EAAKK,EAAMrD,EACtBF,EAAKuD,EAAMJ,EAAKK,EAAMN,EACtB16B,EAAMsI,KAAK8sB,KAAKkF,EAAKA,EAAKC,EAAKA,EAAK/C,EAAKA,GACpCx3B,GAKDA,EAAM,EAAIA,EACVs6B,GAAMt6B,EACNu6B,GAAMv6B,EACNw3B,GAAMx3B,IAPNs6B,EAAK,EACLC,EAAK,EACL/C,EAAK,GAQTgD,EAAKG,EAAKnD,EAAKE,EAAK6C,EACpBE,EAAK/C,EAAK4C,EAAKI,EAAKlD,EACpBC,EAAKiD,EAAKH,EAAKI,EAAKL,EAEpBt6B,EAAMsI,KAAK8sB,KAAKoF,EAAKA,EAAKC,EAAKA,EAAKhD,EAAKA,GACpCz3B,GAKDA,EAAM,EAAIA,EACVw6B,GAAMx6B,EACNy6B,GAAMz6B,EACNy3B,GAAMz3B,IAPNw6B,EAAK,EACLC,EAAK,EACLhD,EAAK,GAQTh+C,EAAI,GAAK6gD,EACT7gD,EAAI,GAAK+gD,EACT/gD,EAAI,GAAKihD,EACTjhD,EAAI,GAAK,EACTA,EAAI,GAAK8gD,EACT9gD,EAAI,GAAKghD,EACThhD,EAAI,GAAKkhD,EACTlhD,EAAI,GAAK,EACTA,EAAI,GAAK+9C,EACT/9C,EAAI,GAAKg+C,EACTh+C,EAAI,IAAMi+C,EACVj+C,EAAI,IAAM,EACVA,EAAI,MAAQ6gD,EAAKM,EAAOL,EAAKM,EAAOrD,EAAKsD,GACzCrhD,EAAI,MAAQ+gD,EAAKI,EAAOH,EAAKI,EAAOpD,EAAKqD,GACzCrhD,EAAI,MAAQihD,EAAKE,EAAOD,EAAKE,EAAOnD,EAAKoD,GACzCrhD,EAAI,IAAM,EAEHA,EACX,EAQAgN,EAAK0uC,KAAO,SAAU39B,GAClB,OAAO8Q,KAAK8sB,KAAK9sB,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,GAAI,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GAAK8Q,KAAKC,IAAI/Q,EAAE,IAAK,GACtV,EAEA,K,wEC54BIw4B,EAAO,CAOXA,OAAc,WACV,IAAIv2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,GAaAu2C,EAAKqL,WAAc,WACf,IAAIC,EAAUttC,EAAAA,EAAKtH,SACf60C,EAAYvtC,EAAAA,EAAKwtC,WAAW,EAAE,EAAE,GAChCC,EAAYztC,EAAAA,EAAKwtC,WAAW,EAAE,EAAE,GAEpC,OAAO,SAAS/hD,EAAK+d,EAAGkI,GACpB,IAAIg8B,EAAM1tC,EAAAA,EAAK0tC,IAAIlkC,EAAGkI,GACtB,OAAIg8B,GAAO,SACP1tC,EAAAA,EAAK2tC,MAAML,EAASC,EAAW/jC,GAC3BxJ,EAAAA,EAAK9T,OAAOohD,GAAW,MACvBttC,EAAAA,EAAK2tC,MAAML,EAASG,EAAWjkC,GACnCxJ,EAAAA,EAAK4tC,UAAUN,EAASA,GACxBtL,EAAK6L,aAAapiD,EAAK6hD,EAAShzB,KAAKqE,IAC9BlzB,GACAiiD,EAAM,SACbjiD,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,IAEPuU,EAAAA,EAAK2tC,MAAML,EAAS9jC,EAAGkI,GACvBjmB,EAAI,GAAK6hD,EAAQ,GACjB7hD,EAAI,GAAK6hD,EAAQ,GACjB7hD,EAAI,GAAK6hD,EAAQ,GACjB7hD,EAAI,GAAK,EAAIiiD,EACN1L,EAAK4L,UAAUniD,EAAKA,GAEnC,CACJ,CA7BmB,GAyCnBu2C,EAAK8L,QAAW,WACZ,IAAIC,EAAOhM,EAAAA,EAAKrpC,SAEhB,OAAO,SAASjN,EAAKuiD,EAAMhwB,EAAOquB,GAa9B,OAZA0B,EAAK,GAAK/vB,EAAM,GAChB+vB,EAAK,GAAK/vB,EAAM,GAChB+vB,EAAK,GAAK/vB,EAAM,GAEhB+vB,EAAK,GAAK1B,EAAG,GACb0B,EAAK,GAAK1B,EAAG,GACb0B,EAAK,GAAK1B,EAAG,GAEb0B,EAAK,IAAMC,EAAK,GAChBD,EAAK,IAAMC,EAAK,GAChBD,EAAK,IAAMC,EAAK,GAEThM,EAAK4L,UAAUniD,EAAKu2C,EAAKiM,SAASxiD,EAAKsiD,GAClD,CACJ,CAlBgB,GA2BhB/L,EAAKl2C,MAAQ81C,EAAAA,EAAK91C,MAYlBk2C,EAAKwL,WAAa5L,EAAAA,EAAK4L,WAUvBxL,EAAK9/B,KAAO0/B,EAAAA,EAAK1/B,KAajB8/B,EAAKtyB,IAAMkyB,EAAAA,EAAKlyB,IAQhBsyB,EAAKx/B,SAAW,SAAS/W,GAKrB,OAJAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAWAu2C,EAAK6L,aAAe,SAASpiD,EAAK2/C,EAAM1sB,GACpCA,GAAY,GACZ,IAAIsO,EAAI1S,KAAKyrB,IAAIrnB,GAKjB,OAJAjzB,EAAI,GAAKuhC,EAAIoe,EAAK,GAClB3/C,EAAI,GAAKuhC,EAAIoe,EAAK,GAClB3/C,EAAI,GAAKuhC,EAAIoe,EAAK,GAClB3/C,EAAI,GAAK6uB,KAAKwrB,IAAIpnB,GACXjzB,CACX,EAWAu2C,EAAKl1B,IAAM80B,EAAAA,EAAK90B,IAUhBk1B,EAAKv/B,SAAW,SAAShX,EAAK+d,EAAGkI,GAC7B,IAAIw8B,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAAI6kC,EAAK7kC,EAAE,GACxC8kC,EAAK58B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI88B,EAAK98B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAM5C,OAJAjmB,EAAI,GAAKyiD,EAAKO,EAAKJ,EAAKC,EAAKH,EAAKK,EAAKJ,EAAKG,EAC5C9iD,EAAI,GAAK0iD,EAAKM,EAAKJ,EAAKE,EAAKH,EAAKE,EAAKJ,EAAKM,EAC5C/iD,EAAI,GAAK2iD,EAAKK,EAAKJ,EAAKG,EAAKN,EAAKK,EAAKJ,EAAKG,EAC5C7iD,EAAI,GAAK4iD,EAAKI,EAAKP,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EACrC/iD,CACX,EAMAu2C,EAAK8E,IAAM9E,EAAKv/B,SAWhBu/B,EAAKlb,MAAQ8a,EAAAA,EAAK9a,MAUlBkb,EAAK6B,QAAU,SAAUp4C,EAAK+d,EAAGkV,GAC7BA,GAAO,GAEP,IAAIwvB,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAAI6kC,EAAK7kC,EAAE,GACxC8kC,EAAKh0B,KAAKyrB,IAAIrnB,GAAM+vB,EAAKn0B,KAAKwrB,IAAIpnB,GAMtC,OAJAjzB,EAAI,GAAKyiD,EAAKO,EAAKJ,EAAKC,EACxB7iD,EAAI,GAAK0iD,EAAKM,EAAKL,EAAKE,EACxB7iD,EAAI,GAAK2iD,EAAKK,EAAKN,EAAKG,EACxB7iD,EAAI,GAAK4iD,EAAKI,EAAKP,EAAKI,EACjB7iD,CACX,EAUAu2C,EAAK0B,QAAU,SAAUj4C,EAAK+d,EAAGkV,GAC7BA,GAAO,GAEP,IAAIwvB,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAAI6kC,EAAK7kC,EAAE,GACxC+kC,EAAKj0B,KAAKyrB,IAAIrnB,GAAM+vB,EAAKn0B,KAAKwrB,IAAIpnB,GAMtC,OAJAjzB,EAAI,GAAKyiD,EAAKO,EAAKL,EAAKG,EACxB9iD,EAAI,GAAK0iD,EAAKM,EAAKJ,EAAKE,EACxB9iD,EAAI,GAAK2iD,EAAKK,EAAKP,EAAKK,EACxB9iD,EAAI,GAAK4iD,EAAKI,EAAKN,EAAKI,EACjB9iD,CACX,EAUAu2C,EAAKsJ,QAAU,SAAU7/C,EAAK+d,EAAGkV,GAC7BA,GAAO,GAEP,IAAIwvB,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAAI6kC,EAAK7kC,EAAE,GACxCglC,EAAKl0B,KAAKyrB,IAAIrnB,GAAM+vB,EAAKn0B,KAAKwrB,IAAIpnB,GAMtC,OAJAjzB,EAAI,GAAKyiD,EAAKO,EAAKN,EAAKK,EACxB/iD,EAAI,GAAK0iD,EAAKM,EAAKP,EAAKM,EACxB/iD,EAAI,GAAK2iD,EAAKK,EAAKJ,EAAKG,EACxB/iD,EAAI,GAAK4iD,EAAKI,EAAKL,EAAKI,EACjB/iD,CACX,EAWAu2C,EAAK0M,WAAa,SAAUjjD,EAAK+d,GAC7B,IAAIhM,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAM9B,OAJA/d,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACThS,EAAI,GAAK25C,EACT35C,EAAI,GAAK6uB,KAAK8sB,KAAK9sB,KAAK+wB,IAAI,EAAM7tC,EAAIA,EAAIC,EAAIA,EAAI2nC,EAAIA,IAC/C35C,CACX,EAUAu2C,EAAK0L,IAAM9L,EAAAA,EAAK8L,IAYhB1L,EAAK1S,KAAOsS,EAAAA,EAAKtS,KAWjB0S,EAAK2M,MAAQ,SAAUljD,EAAK+d,EAAGkI,EAAG4yB,GAI9B,IAGWsK,EAAOC,EAAOC,EAAOC,EAAQC,EAHpCd,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAAI6kC,EAAK7kC,EAAE,GACxC8kC,EAAK58B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI88B,EAAK98B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAiC5C,OA5BAm9B,EAAQX,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAEtCI,EAAQ,IACTA,GAASA,EACTP,GAAOA,EACPC,GAAOA,EACPC,GAAOA,EACPC,GAAOA,GAGL,EAAMI,EAAS,MAEjBD,EAASt0B,KAAK20B,KAAKJ,GACnBC,EAASx0B,KAAKyrB,IAAI6I,GAClBG,EAASz0B,KAAKyrB,KAAK,EAAMzB,GAAKsK,GAASE,EACvCE,EAAS10B,KAAKyrB,IAAIzB,EAAIsK,GAASE,IAI/BC,EAAS,EAAMzK,EACf0K,EAAS1K,GAGb74C,EAAI,GAAKsjD,EAASb,EAAKc,EAASV,EAChC7iD,EAAI,GAAKsjD,EAASZ,EAAKa,EAAST,EAChC9iD,EAAI,GAAKsjD,EAASX,EAAKY,EAASR,EAChC/iD,EAAI,GAAKsjD,EAASV,EAAKW,EAASP,EAEzBhjD,CACX,EASAu2C,EAAKr/B,OAAS,SAASlX,EAAK+d,GACxB,IAAI88B,EAAK98B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI+8B,EAAK/8B,EAAE,GAAIg9B,EAAKh9B,EAAE,GACxCkkC,EAAMpH,EAAGA,EAAKD,EAAGA,EAAKE,EAAGA,EAAKC,EAAGA,EACjC0I,EAASxB,EAAM,EAAIA,EAAM,EAQ7B,OAJAjiD,EAAI,IAAM66C,EAAG4I,EACbzjD,EAAI,IAAM46C,EAAG6I,EACbzjD,EAAI,IAAM86C,EAAG2I,EACbzjD,EAAI,GAAK+6C,EAAG0I,EACLzjD,CACX,EAUAu2C,EAAKmN,UAAY,SAAU1jD,EAAK+d,GAK5B,OAJA/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAu2C,EAAK91C,OAAS01C,EAAAA,EAAK11C,OAMnB81C,EAAKhwB,IAAMgwB,EAAK91C,OAShB81C,EAAKoN,cAAgBxN,EAAAA,EAAKwN,cAM1BpN,EAAKqN,OAASrN,EAAKoN,cAUnBpN,EAAK4L,UAAYhM,EAAAA,EAAKgM,UAatB5L,EAAKiM,SAAW,SAASxiD,EAAK6yB,GAG1B,IACIgxB,EADAC,EAASjxB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAG7B,GAAKixB,EAAS,EAEVD,EAAQh1B,KAAK8sB,KAAKmI,EAAS,GAC3B9jD,EAAI,GAAK,GAAM6jD,EACfA,EAAQ,GAAIA,EACZ7jD,EAAI,IAAM6yB,EAAE,GAAGA,EAAE,IAAIgxB,EACrB7jD,EAAI,IAAM6yB,EAAE,GAAGA,EAAE,IAAIgxB,EACrB7jD,EAAI,IAAM6yB,EAAE,GAAGA,EAAE,IAAIgxB,MAClB,CAEH,IAAIrjD,EAAI,EACHqyB,EAAE,GAAKA,EAAE,KACZryB,EAAI,GACDqyB,EAAE,GAAKA,EAAI,EAAFryB,EAAIA,KAChBA,EAAI,GACN,IAAI6F,GAAK7F,EAAE,GAAG,EACVmZ,GAAKnZ,EAAE,GAAG,EAEdqjD,EAAQh1B,KAAK8sB,KAAK9oB,EAAI,EAAFryB,EAAIA,GAAGqyB,EAAI,EAAFxsB,EAAIA,GAAGwsB,EAAI,EAAFlZ,EAAIA,GAAK,GAC/C3Z,EAAIQ,GAAK,GAAMqjD,EACfA,EAAQ,GAAMA,EACd7jD,EAAI,IAAM6yB,EAAI,EAAFxsB,EAAIsT,GAAKkZ,EAAI,EAAFlZ,EAAItT,IAAMw9C,EACjC7jD,EAAIqG,IAAMwsB,EAAI,EAAFxsB,EAAI7F,GAAKqyB,EAAI,EAAFryB,EAAI6F,IAAMw9C,EACjC7jD,EAAI2Z,IAAMkZ,EAAI,EAAFlZ,EAAInZ,GAAKqyB,EAAI,EAAFryB,EAAImZ,IAAMkqC,CACrC,CAEA,OAAO7jD,CACX,EAEA,K,uCC9eIk2C,EAAO,CAOXA,OAAc,WACV,IAAIl2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAG/B,OAFAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAQAk2C,MAAa,SAASn4B,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAG/B,OAFAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EASAk2C,WAAkB,SAASnkC,EAAGC,GAC1B,IAAIhS,EAAM,IAAIy6C,EAAAA,GAAiB,GAG/B,OAFAz6C,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACFhS,CACX,EASAk2C,KAAY,SAASl2C,EAAK+d,GAGtB,OAFA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAUAk2C,IAAW,SAASl2C,EAAK+R,EAAGC,GAGxB,OAFAhS,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACFhS,CACX,EAUAk2C,IAAW,SAASl2C,EAAK+d,EAAGkI,GAGxB,OAFAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAUAk2C,SAAgB,SAASl2C,EAAK+d,EAAGkI,GAG7B,OAFAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,GAMAk2C,EAAKxZ,IAAMwZ,EAAK6N,SAUhB7N,EAAKl/B,SAAW,SAAShX,EAAK+d,EAAGkI,GAG7B,OAFAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAk2C,EAAKmF,IAAMnF,EAAKl/B,SAUhBk/B,EAAK8N,OAAS,SAAShkD,EAAK+d,EAAGkI,GAG3B,OAFAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAk2C,EAAK+N,IAAM/N,EAAK8N,OAUhB9N,EAAKlyB,IAAM,SAAShkB,EAAK+d,EAAGkI,GAGxB,OAFAjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAk2C,EAAK/xB,IAAM,SAASnkB,EAAK+d,EAAGkI,GAGxB,OAFAjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAk2C,EAAK7a,MAAQ,SAASr7B,EAAK+d,EAAGkI,GAG1B,OAFAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EACTjmB,CACX,EAWAk2C,EAAKgO,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAGnC,OAFAr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACjBr7B,CACX,EASAk2C,EAAKiO,SAAW,SAASpmC,EAAGkI,GACxB,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACjB,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAC7B,EAMAkkC,EAAKkO,KAAOlO,EAAKiO,SASjBjO,EAAKmO,gBAAkB,SAAStmC,EAAGkI,GAC/B,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACjB,OAAOhM,EAAEA,EAAIC,EAAEA,CACnB,EAMAkkC,EAAKoO,QAAUpO,EAAKmO,gBAQpBnO,EAAKz1C,OAAS,SAAUsd,GACpB,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACV,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAC7B,EAMAkkC,EAAK3vB,IAAM2vB,EAAKz1C,OAQhBy1C,EAAKyN,cAAgB,SAAU5lC,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACV,OAAOhM,EAAEA,EAAIC,EAAEA,CACnB,EAMAkkC,EAAK0N,OAAS1N,EAAKyN,cASnBzN,EAAKqO,OAAS,SAASvkD,EAAK+d,GAGxB,OAFA/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACL/d,CACX,EASAk2C,EAAKsO,QAAU,SAASxkD,EAAK+d,GAG3B,OAFA/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACV/d,CACT,EASAk2C,EAAKiM,UAAY,SAASniD,EAAK+d,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACNwI,EAAMxU,EAAEA,EAAIC,EAAEA,EAOlB,OANIuU,EAAM,IAENA,EAAM,EAAIsI,KAAK8sB,KAAKp1B,GACpBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,GAEbvmB,CACX,EASAk2C,EAAK+L,IAAM,SAAUlkC,EAAGkI,GACpB,OAAOlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,EAClC,EAWAiwB,EAAKgM,MAAQ,SAASliD,EAAK+d,EAAGkI,GAC1B,IAAI0zB,EAAI57B,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,GAG/B,OAFAjmB,EAAI,GAAKA,EAAI,GAAK,EAClBA,EAAI,GAAK25C,EACF35C,CACX,EAWAk2C,EAAKrS,KAAO,SAAU7jC,EAAK+d,EAAGkI,EAAG4yB,GAC7B,IAAI4J,EAAK1kC,EAAE,GACP2kC,EAAK3kC,EAAE,GAGX,OAFA/d,EAAI,GAAKyiD,EAAK5J,GAAK5yB,EAAE,GAAKw8B,GAC1BziD,EAAI,GAAK0iD,EAAK7J,GAAK5yB,EAAE,GAAKy8B,GACnB1iD,CACX,EASAk2C,EAAKyE,OAAS,SAAU36C,EAAKq7B,GACzBA,EAAQA,GAAS,EACjB,IAAIuF,EAAqB,EAAjB8Z,eAAuB7rB,KAAKqE,GAGpC,OAFAlzB,EAAI,GAAK6uB,KAAKwrB,IAAIzZ,GAAKvF,EACvBr7B,EAAI,GAAK6uB,KAAKyrB,IAAI1Z,GAAKvF,EAChBr7B,CACX,EAUAk2C,EAAKuO,cAAgB,SAASzkD,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GAGV,OAFA/d,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAC3BhS,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EACpBhS,CACX,EAUAk2C,EAAKwO,eAAiB,SAAS1kD,EAAK+d,EAAG8U,GACnC,IAAI9gB,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GAGV,OAFA/d,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GACjC7yB,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAC1B7yB,CACX,EAWAk2C,EAAKyO,cAAgB,SAAS3kD,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GAGV,OAFA/d,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GACjC7yB,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAC1B7yB,CACX,EAYAk2C,EAAKvhC,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GAGV,OAFA/d,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IACjC7yB,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IAC1B7yB,CACX,EAcAk2C,EAAK/a,QAAW,WACZ,IAAIypB,EAAM1O,EAAKjpC,SAEf,OAAO,SAAS8Q,EAAG8mC,EAAQ1K,EAAQ/vC,EAAO06C,EAAIC,GAC1C,IAAIvkD,EAAGghC,EAeP,IAdIqjB,IACAA,EAAS,GAGT1K,IACAA,EAAS,GAIT3Y,EADDp3B,EACKykB,KAAK7K,IAAK5Z,EAAQy6C,EAAU1K,EAAQp8B,EAAEtd,QAEtCsd,EAAEtd,OAGND,EAAI25C,EAAQ35C,EAAIghC,EAAGhhC,GAAKqkD,EACxBD,EAAI,GAAK7mC,EAAEvd,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAC5BskD,EAAGF,EAAKA,EAAKG,GACbhnC,EAAEvd,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAGhC,OAAO7mC,CACX,CACJ,CA3BgB,GA6BhB,K,uCCteIxJ,EAAO,CAOXA,OAAc,WACV,IAAIvU,EAAM,IAAIy6C,EAAAA,GAAiB,GAI/B,OAHAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAQAuU,MAAa,SAASwJ,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAI/B,OAHAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAUAuU,WAAkB,SAASxC,EAAGC,EAAG2nC,GAC7B,IAAI35C,EAAM,IAAIy6C,EAAAA,GAAiB,GAI/B,OAHAz6C,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACThS,EAAI,GAAK25C,EACF35C,CACX,EASAuU,KAAY,SAASvU,EAAK+d,GAItB,OAHA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAWAuU,IAAW,SAASvU,EAAK+R,EAAGC,EAAG2nC,GAI3B,OAHA35C,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACThS,EAAI,GAAK25C,EACF35C,CACX,EAUAuU,IAAW,SAASvU,EAAK+d,EAAGkI,GAIxB,OAHAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAUAuU,SAAgB,SAASvU,EAAK+d,EAAGkI,GAI7B,OAHAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,GAMAuU,EAAKmoB,IAAMnoB,EAAKwvC,SAUhBxvC,EAAKyC,SAAW,SAAShX,EAAK+d,EAAGkI,GAI7B,OAHAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAuU,EAAK8mC,IAAM9mC,EAAKyC,SAUhBzC,EAAKyvC,OAAS,SAAShkD,EAAK+d,EAAGkI,GAI3B,OAHAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAuU,EAAK0vC,IAAM1vC,EAAKyvC,OAUhBzvC,EAAKyP,IAAM,SAAShkB,EAAK+d,EAAGkI,GAIxB,OAHAjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAuU,EAAK4P,IAAM,SAASnkB,EAAK+d,EAAGkI,GAIxB,OAHAjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAuU,EAAK8mB,MAAQ,SAASr7B,EAAK+d,EAAGkI,GAI1B,OAHAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EACTjmB,CACX,EAWAuU,EAAK2vC,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAInC,OAHAr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACjBr7B,CACX,EASAuU,EAAK4vC,SAAW,SAASpmC,EAAGkI,GACxB,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACb47B,EAAI1zB,EAAE,GAAKlI,EAAE,GACjB,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EACnC,EAMAplC,EAAK6vC,KAAO7vC,EAAK4vC,SASjB5vC,EAAK8vC,gBAAkB,SAAStmC,EAAGkI,GAC/B,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACb47B,EAAI1zB,EAAE,GAAKlI,EAAE,GACjB,OAAOhM,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,CACzB,EAMAplC,EAAK+vC,QAAU/vC,EAAK8vC,gBAQpB9vC,EAAK9T,OAAS,SAAUsd,GACpB,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACV,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EACnC,EAMAplC,EAAKgS,IAAMhS,EAAK9T,OAQhB8T,EAAKovC,cAAgB,SAAU5lC,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACV,OAAOhM,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,CACzB,EAMAplC,EAAKqvC,OAASrvC,EAAKovC,cASnBpvC,EAAKgwC,OAAS,SAASvkD,EAAK+d,GAIxB,OAHA/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACL/d,CACX,EASAuU,EAAKiwC,QAAU,SAASxkD,EAAK+d,GAI3B,OAHA/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACV/d,CACT,EASAuU,EAAK4tC,UAAY,SAASniD,EAAK+d,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACNwI,EAAMxU,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAQxB,OAPIpzB,EAAM,IAENA,EAAM,EAAIsI,KAAK8sB,KAAKp1B,GACpBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,GAEbvmB,CACX,EASAuU,EAAK0tC,IAAM,SAAUlkC,EAAGkI,GACpB,OAAOlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,EAChD,EAUA1R,EAAK2tC,MAAQ,SAASliD,EAAK+d,EAAGkI,GAC1B,IAAIw8B,EAAK1kC,EAAE,GAAI2kC,EAAK3kC,EAAE,GAAI4kC,EAAK5kC,EAAE,GAC7B8kC,EAAK58B,EAAE,GAAI68B,EAAK78B,EAAE,GAAI88B,EAAK98B,EAAE,GAKjC,OAHAjmB,EAAI,GAAK0iD,EAAKK,EAAKJ,EAAKG,EACxB9iD,EAAI,GAAK2iD,EAAKE,EAAKJ,EAAKM,EACxB/iD,EAAI,GAAKyiD,EAAKK,EAAKJ,EAAKG,EACjB7iD,CACX,EAWAuU,EAAKsvB,KAAO,SAAU7jC,EAAK+d,EAAGkI,EAAG4yB,GAC7B,IAAI4J,EAAK1kC,EAAE,GACP2kC,EAAK3kC,EAAE,GACP4kC,EAAK5kC,EAAE,GAIX,OAHA/d,EAAI,GAAKyiD,EAAK5J,GAAK5yB,EAAE,GAAKw8B,GAC1BziD,EAAI,GAAK0iD,EAAK7J,GAAK5yB,EAAE,GAAKy8B,GAC1B1iD,EAAI,GAAK2iD,EAAK9J,GAAK5yB,EAAE,GAAK08B,GACnB3iD,CACX,EASAuU,EAAKomC,OAAS,SAAU36C,EAAKq7B,GACzBA,EAAQA,GAAS,EAEjB,IAAIuF,EAAqB,GAAjB8Z,EAAAA,EAAAA,MAAuB7rB,KAAKqE,GAChCymB,EAAsB,GAAjBe,EAAAA,EAAAA,MAAwB,EAC7BsK,EAASn2B,KAAK8sB,KAAK,EAAIhC,EAAEA,GAAKte,EAKlC,OAHAr7B,EAAI,GAAK6uB,KAAKwrB,IAAIzZ,GAAKokB,EACvBhlD,EAAI,GAAK6uB,KAAKyrB,IAAI1Z,GAAKokB,EACvBhlD,EAAI,GAAK25C,EAAIte,EACNr7B,CACX,EAWAuU,EAAKI,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAC1B+/B,EAAIjrB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IAAM8mB,EAAI9mB,EAAE,IAK5C,OAJAirB,EAAIA,GAAK,EACT99C,EAAI,IAAM6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,KAAOirB,EACpD99C,EAAI,IAAM6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,KAAOirB,EACpD99C,EAAI,IAAM6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IAAM8mB,EAAI9mB,EAAE,KAAOirB,EAC9C99C,CACX,EAUAuU,EAAKowC,cAAgB,SAAS3kD,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAI9B,OAHA/d,EAAI,GAAK+R,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,GACrC7yB,EAAI,GAAK+R,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,GACrC7yB,EAAI,GAAK+R,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,GAC9B7yB,CACX,EAUAuU,EAAK0wC,cAAgB,SAASjlD,EAAK+d,EAAG8/B,GAGlC,IAAI9rC,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAC1BmnC,EAAKrH,EAAE,GAAIsH,EAAKtH,EAAE,GAAIuH,EAAKvH,EAAE,GAAIwH,EAAKxH,EAAE,GAGxCyH,EAAKD,EAAKtzC,EAAIozC,EAAKxL,EAAIyL,EAAKpzC,EAC5BuzC,EAAKF,EAAKrzC,EAAIozC,EAAKrzC,EAAImzC,EAAKvL,EAC5B6L,EAAKH,EAAK1L,EAAIuL,EAAKlzC,EAAImzC,EAAKpzC,EAC5B0zC,GAAMP,EAAKnzC,EAAIozC,EAAKnzC,EAAIozC,EAAKzL,EAMjC,OAHA35C,EAAI,GAAKslD,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/CnlD,EAAI,GAAKulD,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/CplD,EAAI,GAAKwlD,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EACxCllD,CACX,EAUAuU,EAAK6jC,QAAU,SAASp4C,EAAK+d,EAAGkI,EAAGs1B,GAChC,IAAI7a,EAAI,GAAIE,EAAE,GAgBb,OAdEF,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAChBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAClBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAGd2a,EAAE,GAAKF,EAAE,GACTE,EAAE,GAAKF,EAAE,GAAG7R,KAAKwrB,IAAIkB,GAAK7a,EAAE,GAAG7R,KAAKyrB,IAAIiB,GACxC3a,EAAE,GAAKF,EAAE,GAAG7R,KAAKyrB,IAAIiB,GAAK7a,EAAE,GAAG7R,KAAKwrB,IAAIkB,GAGxCv7C,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAEbjmB,CACX,EAUAuU,EAAK0jC,QAAU,SAASj4C,EAAK+d,EAAGkI,EAAGs1B,GAC/B,IAAI7a,EAAI,GAAIE,EAAE,GAgBd,OAdAF,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAChBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAChBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAGhB2a,EAAE,GAAKF,EAAE,GAAG7R,KAAKyrB,IAAIiB,GAAK7a,EAAE,GAAG7R,KAAKwrB,IAAIkB,GACxC3a,EAAE,GAAKF,EAAE,GACTE,EAAE,GAAKF,EAAE,GAAG7R,KAAKwrB,IAAIkB,GAAK7a,EAAE,GAAG7R,KAAKyrB,IAAIiB,GAGxCv7C,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAEXjmB,CACX,EAUAuU,EAAKsrC,QAAU,SAAS7/C,EAAK+d,EAAGkI,EAAGs1B,GAC/B,IAAI7a,EAAI,GAAIE,EAAE,GAgBd,OAdAF,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAChBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAChBya,EAAE,GAAK3iB,EAAE,GAAKkI,EAAE,GAGhB2a,EAAE,GAAKF,EAAE,GAAG7R,KAAKwrB,IAAIkB,GAAK7a,EAAE,GAAG7R,KAAKyrB,IAAIiB,GACxC3a,EAAE,GAAKF,EAAE,GAAG7R,KAAKyrB,IAAIiB,GAAK7a,EAAE,GAAG7R,KAAKwrB,IAAIkB,GACxC3a,EAAE,GAAKF,EAAE,GAGT1gC,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAClBjmB,EAAI,GAAK4gC,EAAE,GAAK3a,EAAE,GAEXjmB,CACX,EAcAuU,EAAK4mB,QAAW,WACZ,IAAIypB,EAAMrwC,EAAKtH,SAEf,OAAO,SAAS8Q,EAAG8mC,EAAQ1K,EAAQ/vC,EAAO06C,EAAIC,GAC1C,IAAIvkD,EAAGghC,EAeP,IAdIqjB,IACAA,EAAS,GAGT1K,IACAA,EAAS,GAIT3Y,EADDp3B,EACKykB,KAAK7K,IAAK5Z,EAAQy6C,EAAU1K,EAAQp8B,EAAEtd,QAEtCsd,EAAEtd,OAGND,EAAI25C,EAAQ35C,EAAIghC,EAAGhhC,GAAKqkD,EACxBD,EAAI,GAAK7mC,EAAEvd,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAC7CskD,EAAGF,EAAKA,EAAKG,GACbhnC,EAAEvd,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAGjD,OAAO7mC,CACX,CACJ,CA3BgB,GAmChBxJ,EAAKmxC,MAAQ,SAAS3nC,EAAGkI,GAErB,IAAI0/B,EAAQpxC,EAAKwtC,WAAWhkC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IACtC6nC,EAAQrxC,EAAKwtC,WAAW97B,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAE1C1R,EAAK4tC,UAAUwD,EAAOA,GACtBpxC,EAAK4tC,UAAUyD,EAAOA,GAEtB,IAAIC,EAAStxC,EAAK0tC,IAAI0D,EAAOC,GAE7B,OAAGC,EAAS,EACD,EAEAh3B,KAAK20B,KAAKqC,EAEzB,EAEA,K,uCC5mBW1P,EAAO,CAOlBA,OAAc,WACV,IAAIn2C,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,CACX,EAQAm2C,MAAa,SAASp4B,GAClB,IAAI/d,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAWAm2C,WAAkB,SAASpkC,EAAGC,EAAG2nC,EAAGmE,GAChC,IAAI99C,EAAM,IAAIy6C,EAAAA,GAAiB,GAK/B,OAJAz6C,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACThS,EAAI,GAAK25C,EACT35C,EAAI,GAAK89C,EACF99C,CACX,EASAm2C,KAAY,SAASn2C,EAAK+d,GAKtB,OAJA/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACX/d,EAAI,GAAK+d,EAAE,GACJ/d,CACX,EAYAm2C,IAAW,SAASn2C,EAAK+R,EAAGC,EAAG2nC,EAAGmE,GAK9B,OAJA99C,EAAI,GAAK+R,EACT/R,EAAI,GAAKgS,EACThS,EAAI,GAAK25C,EACT35C,EAAI,GAAK89C,EACF99C,CACX,EAUAm2C,IAAW,SAASn2C,EAAK+d,EAAGkI,GAKxB,OAJAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAUAm2C,SAAgB,SAASn2C,EAAK+d,EAAGkI,GAK7B,OAJAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,GAMAm2C,EAAKzZ,IAAMyZ,EAAK4N,SAUhB5N,EAAKn/B,SAAW,SAAShX,EAAK+d,EAAGkI,GAK7B,OAJAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAm2C,EAAKkF,IAAMlF,EAAKn/B,SAUhBm/B,EAAK6N,OAAS,SAAShkD,EAAK+d,EAAGkI,GAK3B,OAJAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GAClBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAAE,GACXjmB,CACX,EAMAm2C,EAAK8N,IAAM9N,EAAK6N,OAUhB7N,EAAKnyB,IAAM,SAAShkB,EAAK+d,EAAGkI,GAKxB,OAJAjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK7K,IAAIjG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAm2C,EAAKhyB,IAAM,SAASnkB,EAAK+d,EAAGkI,GAKxB,OAJAjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IAC1BjmB,EAAI,GAAK6uB,KAAK1K,IAAIpG,EAAE,GAAIkI,EAAE,IACnBjmB,CACX,EAUAm2C,EAAK9a,MAAQ,SAASr7B,EAAK+d,EAAGkI,GAK1B,OAJAjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EAChBjmB,EAAI,GAAK+d,EAAE,GAAKkI,EACTjmB,CACX,EAWAm2C,EAAK+N,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAKnC,OAJAr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACxBr7B,EAAI,GAAK+d,EAAE,GAAMkI,EAAE,GAAKoV,EACjBr7B,CACX,EASAm2C,EAAKgO,SAAW,SAASpmC,EAAGkI,GACxB,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACb47B,EAAI1zB,EAAE,GAAKlI,EAAE,GACb+/B,EAAI73B,EAAE,GAAKlI,EAAE,GACjB,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAAImE,EAAEA,EACzC,EAMA3H,EAAKiO,KAAOjO,EAAKgO,SASjBhO,EAAKkO,gBAAkB,SAAStmC,EAAGkI,GAC/B,IAAIlU,EAAIkU,EAAE,GAAKlI,EAAE,GACb/L,EAAIiU,EAAE,GAAKlI,EAAE,GACb47B,EAAI1zB,EAAE,GAAKlI,EAAE,GACb+/B,EAAI73B,EAAE,GAAKlI,EAAE,GACjB,OAAOhM,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAAImE,EAAEA,CAC/B,EAMA3H,EAAKmO,QAAUnO,EAAKkO,gBAQpBlO,EAAK11C,OAAS,SAAUsd,GACpB,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACN+/B,EAAI//B,EAAE,GACV,OAAO8Q,KAAK8sB,KAAK5pC,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAAImE,EAAEA,EACzC,EAMA3H,EAAK5vB,IAAM4vB,EAAK11C,OAQhB01C,EAAKwN,cAAgB,SAAU5lC,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACN+/B,EAAI//B,EAAE,GACV,OAAOhM,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAAImE,EAAEA,CAC/B,EAMA3H,EAAKyN,OAASzN,EAAKwN,cASnBxN,EAAKoO,OAAS,SAASvkD,EAAK+d,GAKxB,OAJA/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACZ/d,EAAI,IAAM+d,EAAE,GACL/d,CACX,EASAm2C,EAAKqO,QAAU,SAASxkD,EAAK+d,GAK3B,OAJA/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACjB/d,EAAI,GAAK,EAAM+d,EAAE,GACV/d,CACT,EASAm2C,EAAKgM,UAAY,SAASniD,EAAK+d,GAC3B,IAAIhM,EAAIgM,EAAE,GACN/L,EAAI+L,EAAE,GACN47B,EAAI57B,EAAE,GACN+/B,EAAI//B,EAAE,GACNwI,EAAMxU,EAAEA,EAAIC,EAAEA,EAAI2nC,EAAEA,EAAImE,EAAEA,EAQ9B,OAPIv3B,EAAM,IACNA,EAAM,EAAIsI,KAAK8sB,KAAKp1B,GACpBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,EAChBvmB,EAAI,GAAK+d,EAAE,GAAKwI,GAEbvmB,CACX,EASAm2C,EAAK8L,IAAM,SAAUlkC,EAAGkI,GACpB,OAAOlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,GAAKlI,EAAE,GAAKkI,EAAE,EAC9D,EAWAkwB,EAAKtS,KAAO,SAAU7jC,EAAK+d,EAAGkI,EAAG4yB,GAC7B,IAAI4J,EAAK1kC,EAAE,GACP2kC,EAAK3kC,EAAE,GACP4kC,EAAK5kC,EAAE,GACP6kC,EAAK7kC,EAAE,GAKX,OAJA/d,EAAI,GAAKyiD,EAAK5J,GAAK5yB,EAAE,GAAKw8B,GAC1BziD,EAAI,GAAK0iD,EAAK7J,GAAK5yB,EAAE,GAAKy8B,GAC1B1iD,EAAI,GAAK2iD,EAAK9J,GAAK5yB,EAAE,GAAK08B,GAC1B3iD,EAAI,GAAK4iD,EAAK/J,GAAK5yB,EAAE,GAAK28B,GACnB5iD,CACX,EASAm2C,EAAKwE,OAAS,SAAU36C,EAAKq7B,GAUzB,OATAA,EAAQA,GAAS,EAGjBr7B,EAAI,IAAK06C,EAAAA,EAAAA,MACT16C,EAAI,IAAK06C,EAAAA,EAAAA,MACT16C,EAAI,IAAK06C,EAAAA,EAAAA,MACT16C,EAAI,IAAK06C,EAAAA,EAAAA,MACTvE,EAAKgM,UAAUniD,EAAKA,GACpBm2C,EAAK9a,MAAMr7B,EAAKA,EAAKq7B,GACdr7B,CACX,EAUAm2C,EAAKxhC,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAClC,IAAI9gB,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAAI+/B,EAAI//B,EAAE,GAKxC,OAJA/d,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,IAAMirB,EAClD99C,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,GAAK8mB,EAAI9mB,EAAE,IAAMirB,EAClD99C,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IAAM8mB,EAAI9mB,EAAE,IAAMirB,EACnD99C,EAAI,GAAK6yB,EAAE,GAAK9gB,EAAI8gB,EAAE,GAAK7gB,EAAI6gB,EAAE,IAAM8mB,EAAI9mB,EAAE,IAAMirB,EAC5C99C,CACX,EAUAm2C,EAAK8O,cAAgB,SAASjlD,EAAK+d,EAAG8/B,GAClC,IAAI9rC,EAAIgM,EAAE,GAAI/L,EAAI+L,EAAE,GAAI47B,EAAI57B,EAAE,GAC1BmnC,EAAKrH,EAAE,GAAIsH,EAAKtH,EAAE,GAAIuH,EAAKvH,EAAE,GAAIwH,EAAKxH,EAAE,GAGxCyH,EAAKD,EAAKtzC,EAAIozC,EAAKxL,EAAIyL,EAAKpzC,EAC5BuzC,EAAKF,EAAKrzC,EAAIozC,EAAKrzC,EAAImzC,EAAKvL,EAC5B6L,EAAKH,EAAK1L,EAAIuL,EAAKlzC,EAAImzC,EAAKpzC,EAC5B0zC,GAAMP,EAAKnzC,EAAIozC,EAAKnzC,EAAIozC,EAAKzL,EAMjC,OAHA35C,EAAI,GAAKslD,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EAC/CnlD,EAAI,GAAKulD,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EAC/CplD,EAAI,GAAKwlD,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EACxCllD,CACX,EAcAm2C,EAAKhb,QAAW,WACZ,IAAIypB,EAAMzO,EAAKlpC,SAEf,OAAO,SAAS8Q,EAAG8mC,EAAQ1K,EAAQ/vC,EAAO06C,EAAIC,GAC1C,IAAIvkD,EAAGghC,EAeP,IAdIqjB,IACAA,EAAS,GAGT1K,IACAA,EAAS,GAIT3Y,EADDp3B,EACKykB,KAAK7K,IAAK5Z,EAAQy6C,EAAU1K,EAAQp8B,EAAEtd,QAEtCsd,EAAEtd,OAGND,EAAI25C,EAAQ35C,EAAIghC,EAAGhhC,GAAKqkD,EACxBD,EAAI,GAAK7mC,EAAEvd,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAAIokD,EAAI,GAAK7mC,EAAEvd,EAAE,GAC9DskD,EAAGF,EAAKA,EAAKG,GACbhnC,EAAEvd,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAAI7mC,EAAEvd,EAAE,GAAKokD,EAAI,GAGlE,OAAO7mC,CACX,CACJ,CA3BgB,GA6BhB,K,uCC3gBI+nC,EAAetjC,EAAAA,EAAMxkB,OAAO,CAE5BiB,YAAY,GAEb,CAECyF,KAAM,gBAEN0gB,iBAAkB,CACd2gC,kBAAmB,CACfrhD,KAAM,KACNC,MAAO,SAASqhD,GACZ,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAGktB,EAAWltB,EAAM,GAAGktB,EAAWltB,EAAM,GAAGktB,EAC7D,MAWZ,K,iDCtBIC,EAAsB1jC,EAAAA,EAAMxkB,OAAO,CAMnCmoD,QAAS,KAKTlnD,YAAY,EAEZmnD,oBAAqB,KACrBC,YAAa,MAE2B,CAExC3hD,KAAM,wBAON4hD,UAAW,SAAU9iD,EAAU4Y,GAC3B,GAAK5Y,EAAS8I,eAAe,0BAA7B,CAIKhN,KAAK+mD,cACN/mD,KAAK8mD,oBAAsBG,EAAAA,EAAYC,6BACvClnD,KAAK+mD,YAAcE,EAAAA,EAAYE,cAAcjjD,EAAUlE,KAAK8mD,sBAEhE,IAAID,EAAU7mD,KAAK6mD,QACnB,IAAIA,EAAQO,cAAZ,CAIA,IAAI1qB,EAASuqB,EAAAA,EAAYI,wBACrBnjD,EAAU2iD,EAAS,CACfS,YAAY,EACZ93C,MAAOsN,EACPrN,OAAQqN,GACT9c,KAAK8mD,oBAAqB9mD,KAAK+mD,aAEtC/mD,KAAK6mD,QAAUnqB,EAAO6qB,eACtBvnD,KAAK6mD,QAAQO,eAAgB,EAE7BP,EAAQlnC,QAAQzb,EAZhB,CARA,MAFIwN,QAAQ0K,KAAK,uCAuBrB,EAEAorC,cAAe,WACX,OAAOxnD,KAAK+mD,WAChB,EAEAjhC,iBAAkB,CACd2hC,yBAA0B,CACtBriD,KAAM,KACNC,MAAO,SAAUqhD,GACb,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAGktB,EAAWltB,EAAM,GAAGktB,EAAWltB,EAAM,GAAGktB,EAC7D,GAGJe,2BAA4B,CACxBtiD,KAAM,IACNC,MAAO,SAAUqhD,GACb,OAAOA,EAASG,OACpB,GAGJc,8BAA+B,CAC3BviD,KAAM,IACNC,MAAO,SAAUqhD,GACb,OAAOA,EAASK,WACpB,MAWZ,K,gDC1FIa,EAAiB1kC,EAAAA,EAAMxkB,OAAO,CAE9BiB,YAAY,EAOZkoD,aAAc,KAEf,WACC7nD,KAAK8nD,oBAAsB,IAAItkD,EAAAA,EAAOC,aAAa,GACvD,GAAG,CAEC2B,KAAM,mBAEN0gB,iBAAkB,CACdiiC,oBAAqB,CACjB3iD,KAAM,KACNC,MAAO,SAAUqhD,GACb,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EACnE,GAGJqB,2BAA4B,CACxB5iD,KAAM,KACNC,MAAO,SAAUqhD,GAEb,IADA,IAAIuB,EAAqBvB,EAASoB,oBACzB5mD,EAAI,EAAGA,EAAIwlD,EAASmB,aAAa1mD,OAAQD,IAC9C+mD,EAAmB/mD,GAAKwlD,EAASmB,aAAa3mD,GAElD,OAAO+mD,CACX,MAWZ,K,gDCtCIC,EAAmBhlC,EAAAA,EAAMxkB,OAA6C,CAItEypD,WAAY,KAIZC,iBAAkB,EAMlBC,cAAe,EAMfC,sBAAuB,IACxB,CAECljD,KAAM,oBAEN0gB,iBAAkB,CACdyiC,0BAA2B,CACvBnjD,KAAM,KACNC,MAAO,SAAUqhD,GAGb,OAFAA,EAAS8B,MAAQ9B,EAAS8B,OAAS,IAAI/P,EAAAA,EAEhCiO,EAAS8B,MAAMrxC,KAAKuvC,EAAStxC,eAAeilC,GAAGwI,YAAYoC,SAASr+C,KAC/E,GAEJ6hD,sBAAuB,CACnBrjD,KAAM,KACNC,MAAO,SAAUqhD,GACb,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EACnE,IAOR5lD,MAAO,WACH,IAAI2iB,EAAQR,EAAAA,EAAMviB,UAAUI,MAAMH,KAAKZ,MAGvC,OAFA0jB,EAAMykC,WAAanoD,KAAKmoD,WACxBzkC,EAAM0kC,iBAAmBpoD,KAAKooD,iBACvB1kC,CACX,IAGJ,K,uCCjEIglC,EAAaxlC,EAAAA,EAAMxkB,OAAuC,CAI1DiqD,MAAO,IAKPhpD,YAAY,GACb,CAECyF,KAAM,cAEN0gB,iBAAkB,CACd8iC,mBAAoB,CAChBxjD,KAAM,KACNC,MAAO,SAASqhD,GACZ,OAAOA,EAASmC,mBAAmBjiD,KACvC,GAEJkiD,gBAAiB,CACb1jD,KAAM,KACNC,MAAO,SAASqhD,GACZ,OAAOA,EAASiC,KACpB,GAEJI,gBAAiB,CACb3jD,KAAM,KACNC,MAAO,SAASqhD,GACZ,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EACnE,IAOR5lD,MAAO,WACH,IAAI2iB,EAAQR,EAAAA,EAAMviB,UAAUI,MAAMH,KAAKZ,MAEvC,OADA0jB,EAAMilC,MAAQ3oD,KAAK2oD,MACZjlC,CACX,IAGJ,K,gDC9CIslC,EAAY9lC,EAAAA,EAAMxkB,OAAoC,CAItDiqD,MAAO,GAIPM,WAAY,GAIZC,cAAe,GAIfC,cAAe,EAIfhB,WAAY,KAIZC,iBAAkB,GACnB,CAEChjD,KAAM,aAEN0gB,iBAAkB,CACdsjC,kBAAmB,CACfhkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,OAAOA,EAASmC,mBAAmBjiD,KACvC,GAEJyiD,eAAgB,CACZjkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,OAAOA,EAASiC,KACpB,GAEJW,0BAA2B,CACvBlkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,OAAOn3B,KAAKwrB,IAAI2L,EAASuC,WAAa15B,KAAKqE,GAAK,IACpD,GAEJ21B,6BAA8B,CAC1BnkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,OAAOn3B,KAAKwrB,IAAI2L,EAASwC,cAAgB35B,KAAKqE,GAAK,IACvD,GAEJ41B,uBAAwB,CACpBpkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,OAAOA,EAASyC,aACpB,GAEJM,mBAAoB,CAChBrkD,KAAM,KACNC,MAAO,SAAUqhD,GAGb,OAFAA,EAAS8B,MAAQ9B,EAAS8B,OAAS,IAAI/P,EAAAA,EAEhCiO,EAAS8B,MAAMrxC,KAAKuvC,EAAStxC,eAAeilC,GAAG4K,SAASr+C,KACnE,GAEJ8iD,eAAgB,CACZtkD,KAAM,KACNC,MAAO,SAAUqhD,GACb,IAAIjtB,EAAQitB,EAASjtB,MACjBktB,EAAYD,EAASC,UACzB,MAAO,CAACltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EAAWltB,EAAM,GAAKktB,EACnE,IAOR5lD,MAAO,WACH,IAAI2iB,EAAQR,EAAAA,EAAMviB,UAAUI,MAAMH,KAAKZ,MAOvC,OANA0jB,EAAMilC,MAAQ3oD,KAAK2oD,MACnBjlC,EAAMulC,WAAajpD,KAAKipD,WACxBvlC,EAAMwlC,cAAgBlpD,KAAKkpD,cAC3BxlC,EAAMylC,cAAgBnpD,KAAKmpD,cAC3BzlC,EAAMykC,WAAanoD,KAAKmoD,WACxBzkC,EAAM0kC,iBAAmBpoD,KAAKooD,iBACvB1kC,CACX,IAGJ,K,gDCjGIimC,EAAU10C,EAAAA,EAAK0P,IACfilC,EAAW30C,EAAAA,EAAKkC,KAShBkL,EAAc,SAAUqC,EAAKG,GAM7B7kB,KAAK0kB,IAAMA,GAAO,IAAI+zB,EAAAA,EAAQ7zB,IAAUA,IAAUA,KAMlD5kB,KAAK6kB,IAAMA,GAAO,IAAI4zB,EAAAA,GAAS7zB,KAAWA,KAAWA,KAErD5kB,KAAK6pD,SAAW,IACpB,EAEAxnC,EAAY1hB,UAAY,CAEpB8oB,YAAapH,EAKbynC,mBAAoB,SAAUD,GAC1B,GAAIA,EAAS1oD,OAAS,EAAG,CACrB,IAAIujB,EAAM1kB,KAAK0kB,IACXG,EAAM7kB,KAAK6kB,IACXklC,EAASrlC,EAAI9d,MACbojD,EAASnlC,EAAIje,MACjBgjD,EAASG,EAAQF,EAAS,IAC1BD,EAASI,EAAQH,EAAS,IAC1B,IAAK,IAAI3oD,EAAI,EAAGA,EAAI2oD,EAAS1oD,OAAQD,IAAK,CACtC,IAAI6L,EAAS88C,EAAS3oD,GAElB6L,EAAO,GAAKg9C,EAAO,KAAMA,EAAO,GAAKh9C,EAAO,IAC5CA,EAAO,GAAKg9C,EAAO,KAAMA,EAAO,GAAKh9C,EAAO,IAC5CA,EAAO,GAAKg9C,EAAO,KAAMA,EAAO,GAAKh9C,EAAO,IAE5CA,EAAO,GAAKi9C,EAAO,KAAMA,EAAO,GAAKj9C,EAAO,IAC5CA,EAAO,GAAKi9C,EAAO,KAAMA,EAAO,GAAKj9C,EAAO,IAC5CA,EAAO,GAAKi9C,EAAO,KAAMA,EAAO,GAAKj9C,EAAO,GACpD,CACA2X,EAAIuT,QAAS,EACbpT,EAAIoT,QAAS,CACjB,CACJ,EAMAn3B,MAAO,SAAUmpD,GACb,IAAIvlC,EAAM1kB,KAAK0kB,IACXG,EAAM7kB,KAAK6kB,IAKf,OAJA5P,EAAAA,EAAKyP,IAAIA,EAAI9d,MAAO8d,EAAI9d,MAAOqjD,EAAKvlC,IAAI9d,OACxCqO,EAAAA,EAAK4P,IAAIA,EAAIje,MAAOie,EAAIje,MAAOqjD,EAAKplC,IAAIje,OACxC8d,EAAIuT,QAAS,EACbpT,EAAIoT,QAAS,EACNj4B,IACX,EAMAkqD,aAAc,SAAUD,GACpB,IAAIvlC,EAAM1kB,KAAK0kB,IACXG,EAAM7kB,KAAK6kB,IAKf,OAJA5P,EAAAA,EAAK4P,IAAIH,EAAI9d,MAAO8d,EAAI9d,MAAOqjD,EAAKvlC,IAAI9d,OACxCqO,EAAAA,EAAKyP,IAAIG,EAAIje,MAAOie,EAAIje,MAAOqjD,EAAKplC,IAAIje,OACxC8d,EAAIuT,QAAS,EACbpT,EAAIoT,QAAS,EACNj4B,IACX,EAOAylB,qBAAsB,SAAUwkC,GAC5B,IAAIE,EAAOnqD,KAAK0kB,IAAI9d,MAChBwjD,EAAOpqD,KAAK6kB,IAAIje,MAEhByjD,EAAQJ,EAAKvlC,IAAI9d,MACjB0jD,EAAQL,EAAKplC,IAAIje,MAErB,QAAUujD,EAAK,GAAKG,EAAM,IAAMH,EAAK,GAAKG,EAAM,IAAMH,EAAK,GAAKG,EAAM,IAC/DF,EAAK,GAAKC,EAAM,IAAMD,EAAK,GAAKC,EAAM,IAAMD,EAAK,GAAKC,EAAM,GACvE,EAOAE,mBAAoB,SAAUN,GAE1B,IAAIE,EAAOnqD,KAAK0kB,IAAI9d,MAChBwjD,EAAOpqD,KAAK6kB,IAAIje,MAEhByjD,EAAQJ,EAAKvlC,IAAI9d,MACjB0jD,EAAQL,EAAKplC,IAAIje,MAErB,OAAOujD,EAAK,IAAME,EAAM,IAAMF,EAAK,IAAME,EAAM,IAAMF,EAAK,IAAME,EAAM,IAC/DD,EAAK,IAAME,EAAM,IAAMF,EAAK,IAAME,EAAM,IAAMF,EAAK,IAAME,EAAM,EAC1E,EAOAE,aAAc,SAAUppB,GACpB,IAAI+oB,EAAOnqD,KAAK0kB,IAAI9d,MAChBwjD,EAAOpqD,KAAK6kB,IAAIje,MAEhB6jD,EAAKrpB,EAAEx6B,MAEX,OAAOujD,EAAK,IAAMM,EAAG,IAAMN,EAAK,IAAMM,EAAG,IAAMN,EAAK,IAAMM,EAAG,IACtDL,EAAK,IAAMK,EAAG,IAAML,EAAK,IAAMK,EAAG,IAAML,EAAK,IAAMK,EAAG,EACjE,EAKAC,SAAU,WACN,IAAIP,EAAOnqD,KAAK0kB,IAAI9d,MAChBwjD,EAAOpqD,KAAK6kB,IAAIje,MACpB,OAAO8jD,SAASP,EAAK,KAAOO,SAASP,EAAK,KAAOO,SAASP,EAAK,KACxDO,SAASN,EAAK,KAAOM,SAASN,EAAK,KAAOM,SAASN,EAAK,GACnE,EAMAlR,eAAgB,SAAU5+B,GACtBta,KAAKwlB,cAAcxlB,KAAMsa,EAC7B,EAOAkL,cAAgB,WAEZ,IAAImlC,EAAK11C,EAAAA,EAAKtH,SACVi9C,EAAK31C,EAAAA,EAAKtH,SACVk9C,EAAK51C,EAAAA,EAAKtH,SACVm9C,EAAK71C,EAAAA,EAAKtH,SACVo9C,EAAK91C,EAAAA,EAAKtH,SACVq9C,EAAK/1C,EAAAA,EAAKtH,SAEd,OAAO,SAAUuR,EAAQ5E,GACrB,IAAIoK,EAAMxF,EAAOwF,IAAI9d,MACjBie,EAAM3F,EAAO2F,IAAIje,MAEjB2sB,EAAIjZ,EAAO1T,MAwBf,OAtBA+jD,EAAG,GAAKp3B,EAAE,GAAK7O,EAAI,GAAIimC,EAAG,GAAKp3B,EAAE,GAAK7O,EAAI,GAAIimC,EAAG,GAAKp3B,EAAE,GAAK7O,EAAI,GACjEkmC,EAAG,GAAKr3B,EAAE,GAAK1O,EAAI,GAAI+lC,EAAG,GAAKr3B,EAAE,GAAK1O,EAAI,GAAI+lC,EAAG,GAAKr3B,EAAE,GAAK1O,EAAI,GAEjEgmC,EAAG,GAAKt3B,EAAE,GAAK7O,EAAI,GAAImmC,EAAG,GAAKt3B,EAAE,GAAK7O,EAAI,GAAImmC,EAAG,GAAKt3B,EAAE,GAAK7O,EAAI,GACjEomC,EAAG,GAAKv3B,EAAE,GAAK1O,EAAI,GAAIimC,EAAG,GAAKv3B,EAAE,GAAK1O,EAAI,GAAIimC,EAAG,GAAKv3B,EAAE,GAAK1O,EAAI,GAEjEkmC,EAAG,GAAKx3B,EAAE,GAAK7O,EAAI,GAAIqmC,EAAG,GAAKx3B,EAAE,GAAK7O,EAAI,GAAIqmC,EAAG,GAAKx3B,EAAE,IAAM7O,EAAI,GAClEsmC,EAAG,GAAKz3B,EAAE,GAAK1O,EAAI,GAAImmC,EAAG,GAAKz3B,EAAE,GAAK1O,EAAI,GAAImmC,EAAG,GAAKz3B,EAAE,IAAM1O,EAAI,GAElEH,EAAM1kB,KAAK0kB,IAAI9d,MACfie,EAAM7kB,KAAK6kB,IAAIje,MACf8d,EAAI,GAAK6K,KAAK7K,IAAIimC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK7K,IAAImmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK7K,IAAIqmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IACtF7O,EAAI,GAAK6K,KAAK7K,IAAIimC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK7K,IAAImmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK7K,IAAIqmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IACtF7O,EAAI,GAAK6K,KAAK7K,IAAIimC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK7K,IAAImmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK7K,IAAIqmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IAEtF1O,EAAI,GAAK0K,KAAK1K,IAAI8lC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK1K,IAAIgmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK1K,IAAIkmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IACtF1O,EAAI,GAAK0K,KAAK1K,IAAI8lC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK1K,IAAIgmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK1K,IAAIkmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IACtF1O,EAAI,GAAK0K,KAAK1K,IAAI8lC,EAAG,GAAIC,EAAG,IAAMr7B,KAAK1K,IAAIgmC,EAAG,GAAIC,EAAG,IAAMv7B,KAAK1K,IAAIkmC,EAAG,GAAIC,EAAG,IAAMz3B,EAAE,IAEtFvzB,KAAK0kB,IAAIuT,QAAS,EAClBj4B,KAAK6kB,IAAIoT,QAAS,EAEXj4B,IACX,CACJ,CAvCgB,GA6ChB2lB,gBAAiB,SAAUrL,GACvB,IAAIoK,EAAM1kB,KAAK0kB,IAAI9d,MACfie,EAAM7kB,KAAK6kB,IAAIje,MAEf2sB,EAAIjZ,EAAO1T,MAEXqkD,EAAMvmC,EAAI,GACVwmC,EAAMxmC,EAAI,GACVymC,EAAMzmC,EAAI,GAEV0mC,EAAMvmC,EAAI,GACVwmC,EAAMxmC,EAAI,GACVymC,EAAM5mC,EAAI,GAEV6mC,EAAM1mC,EAAI,GACV2mC,EAAM3mC,EAAI,GACV4mC,EAAM5mC,EAAI,GAEd,GAAc,IAAV0O,EAAE,IACF7O,EAAI,GAAK6O,EAAE,GAAK03B,EAAM13B,EAAE,IACxB7O,EAAI,GAAK6O,EAAE,GAAK23B,EAAM33B,EAAE,IACxB1O,EAAI,GAAK0O,EAAE,IAAM43B,EAAM53B,EAAE,IAEzB1O,EAAI,GAAK0O,EAAE,GAAKg4B,EAAMh4B,EAAE,IACxB1O,EAAI,GAAK0O,EAAE,GAAKi4B,EAAMj4B,EAAE,IACxB7O,EAAI,GAAK6O,EAAE,IAAMk4B,EAAMl4B,EAAE,QAExB,CACD,IAAIirB,GAAK,EAAI2M,EACbzmC,EAAI,GAAK6O,EAAE,GAAK03B,EAAMzM,EACtB95B,EAAI,GAAK6O,EAAE,GAAK23B,EAAM1M,EACtB35B,EAAI,IAAM0O,EAAE,IAAM43B,EAAM53B,EAAE,KAAOirB,EAEjCA,GAAK,EAAI8M,EACTzmC,EAAI,GAAK0O,EAAE,GAAK63B,EAAM5M,EACtB35B,EAAI,GAAK0O,EAAE,GAAK83B,EAAM7M,EAEtBA,GAAK,EAAIiN,EACT/mC,EAAI,IAAM6O,EAAE,IAAMk4B,EAAMl4B,EAAE,KAAOirB,CACrC,CAIA,OAHAx+C,KAAK0kB,IAAIuT,QAAS,EAClBj4B,KAAK6kB,IAAIoT,QAAS,EAEXj4B,IACX,EAEA0rD,eAAgB,WACZ,IAAI7B,EAAW7pD,KAAK6pD,SACpB,IAAKA,EAAU,CAEXA,EAAW,GACX,IAAK,IAAI3oD,EAAI,EAAGA,EAAI,EAAGA,IACnB2oD,EAAS3oD,GAAK+T,EAAAA,EAAKwtC,WAAW,EAAG,EAAG,GAOxCziD,KAAK6pD,SAAWA,CACpB,CACA,IAAInlC,EAAM1kB,KAAK0kB,IAAI9d,MACfie,EAAM7kB,KAAK6kB,IAAIje,MAenB,OAZA+iD,EAAQE,EAAS,GAAInlC,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACzCilC,EAAQE,EAAS,GAAInlC,EAAI,GAAIG,EAAI,GAAIH,EAAI,IAEzCilC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIH,EAAI,GAAIA,EAAI,IACzCilC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIA,EAAI,GAAIH,EAAI,IAGzCilC,EAAQE,EAAS,GAAInlC,EAAI,GAAIA,EAAI,GAAIG,EAAI,IACzC8kC,EAAQE,EAAS,GAAInlC,EAAI,GAAIG,EAAI,GAAIA,EAAI,IACzC8kC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIH,EAAI,GAAIG,EAAI,IACzC8kC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAElC7kB,IACX,EAKAmX,KAAM,SAAU8yC,GACZ,IAAIvlC,EAAM1kB,KAAK0kB,IACXG,EAAM7kB,KAAK6kB,IAKf,OAJA+kC,EAASllC,EAAI9d,MAAOqjD,EAAKvlC,IAAI9d,OAC7BgjD,EAAS/kC,EAAIje,MAAOqjD,EAAKplC,IAAIje,OAC7B8d,EAAIuT,QAAS,EACbpT,EAAIoT,QAAS,EACNj4B,IACX,EAMAe,MAAO,WACH,IAAIF,EAAc,IAAIwhB,EAEtB,OADAxhB,EAAYsW,KAAKnX,MACVa,CACX,GAGJ,K,sEChTI8oD,EAAU10C,EAAAA,EAAK0P,IACfilC,EAAW30C,EAAAA,EAAKkC,KAChBw0C,EAAmB12C,EAAAA,EAAKI,cACxBu2C,EAAUr8B,KAAK7K,IACfmnC,EAAUt8B,KAAK1K,IAKfinC,EAAU,WAMV9rD,KAAK03C,OAAS,GAEd,IAAK,IAAIx2C,EAAI,EAAGA,EAAI,EAAGA,IACnBlB,KAAK03C,OAAO3sC,KAAK,IAAIkpB,EAAAA,GAOzBj0B,KAAKa,YAAc,IAAIwhB,EAAAA,EAMvBriB,KAAK6pD,SAAW,GAChB,IAAS3oD,EAAI,EAAGA,EAAI,EAAGA,IACnBlB,KAAK6pD,SAAS3oD,GAAK+T,EAAAA,EAAKwtC,WAAW,EAAG,EAAG,EAEjD,EAEAqJ,EAAQnrD,UAAY,CAOhBorD,kBAAmB,SAASx0C,GAExB,IAAImgC,EAAS13C,KAAK03C,OACdnkB,EAAIhc,EAAiB3Q,MACrBolD,EAAKz4B,EAAE,GAAIyN,EAAKzN,EAAE,GAAI0N,EAAK1N,EAAE,GAAI04B,EAAK14B,EAAE,GACxC24B,EAAK34B,EAAE,GAAI44B,EAAK54B,EAAE,GAAI64B,EAAK74B,EAAE,GAAI84B,EAAK94B,EAAE,GACxC+4B,EAAK/4B,EAAE,GAAIg5B,EAAKh5B,EAAE,GAAIi5B,EAAMj5B,EAAE,IAAKk5B,EAAMl5B,EAAE,IAC3Cm5B,EAAMn5B,EAAE,IAAKo5B,EAAMp5B,EAAE,IAAKq5B,EAAMr5B,EAAE,IAAKs5B,EAAMt5B,EAAE,IAGnDo2B,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKD,EAAIK,EAAKH,EAAIO,EAAMH,GACxD5U,EAAO,GAAGmN,WAAagI,EAAMH,GAC7BhV,EAAO,GAAGmL,YAEV8G,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKD,EAAIK,EAAKH,EAAIO,EAAMH,GACxD5U,EAAO,GAAGmN,WAAagI,EAAMH,GAC7BhV,EAAO,GAAGmL,YAEV8G,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKjrB,EAAIqrB,EAAKF,EAAIM,EAAMF,GACxD7U,EAAO,GAAGmN,WAAagI,EAAMF,GAC7BjV,EAAO,GAAGmL,YAEV8G,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKjrB,EAAIqrB,EAAKF,EAAIM,EAAMF,GACxD7U,EAAO,GAAGmN,WAAagI,EAAMF,GAC7BjV,EAAO,GAAGmL,YAEV8G,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKhrB,EAAIorB,EAAKD,EAAIK,EAAMD,GACxD9U,EAAO,GAAGmN,WAAagI,EAAMD,GAC7BlV,EAAO,GAAGmL,YAEV8G,EAAQjS,EAAO,GAAGgC,OAAO9yC,MAAOqlD,EAAKhrB,EAAIorB,EAAKD,EAAIK,EAAMD,GACxD9U,EAAO,GAAGmN,WAAagI,EAAMD,GAC7BlV,EAAO,GAAGmL,YAGV,IAAIhiD,EAAcb,KAAKa,YACnBgpD,EAAW7pD,KAAK6pD,SACpB,GAAY,IAARgD,EAAY,CACZ,IAAIn5B,EAASy4B,EAAKH,EACdc,GAASF,GAAOJ,EAAM,GACtBO,GAAQH,GAAOJ,EAAM,GACrBQ,GAAQD,EAAOZ,EACfc,GAASH,EAAQX,EAErBtrD,EAAY6jB,IAAIC,KAAKqoC,EAAOt5B,GAASs5B,EAAMD,GAC3ClsD,EAAYgkB,IAAIF,IAAIqoC,EAAOt5B,EAAQs5B,EAAMF,GAIzCnD,EAAQE,EAAS,IAAKmD,EAAOt5B,GAASs5B,EAAMD,GAC5CpD,EAAQE,EAAS,IAAKmD,EAAOt5B,EAAQs5B,EAAMD,GAE3CpD,EAAQE,EAAS,GAAImD,EAAOt5B,GAASs5B,EAAMD,GAC3CpD,EAAQE,EAAS,GAAImD,EAAOt5B,EAAQs5B,EAAMD,GAE1CpD,EAAQE,EAAS,IAAKoD,EAAQv5B,GAASu5B,EAAOH,GAC9CnD,EAAQE,EAAS,IAAKoD,EAAQv5B,EAAQu5B,EAAOH,GAC7CnD,EAAQE,EAAS,GAAIoD,EAAQv5B,GAASu5B,EAAOH,GAC7CnD,EAAQE,EAAS,GAAIoD,EAAQv5B,EAAQu5B,EAAOH,EAChD,KACK,CACD,IAAI95B,IAAS,EAAI05B,GAAOV,EACpB/4B,GAAS,EAAIy5B,GAAOV,EACpB94B,GAAO,EAAIy5B,GAAOR,EAClBh5B,IAAW,EAAIw5B,GAAOR,EACtB5yC,IAAS,EAAIqzC,GAAOJ,EACpBhzC,GAAO,EAAIozC,GAAOJ,EAGtB3rD,EAAY6jB,IAAIC,IAAI4K,KAAK7K,IAAIsO,EAAMC,GAAQ1D,KAAK7K,IAAIyO,EAAQD,GAAM3D,KAAK7K,IAAIlL,EAAKD,IAChF1Y,EAAYgkB,IAAIF,IAAI4K,KAAK1K,IAAIoO,EAAOD,GAAOzD,KAAK1K,IAAIqO,EAAKC,GAAS5D,KAAK1K,IAAItL,EAAMC,IAEjF,IAAIkL,EAAM7jB,EAAY6jB,IAAI9d,MACtBie,EAAMhkB,EAAYgkB,IAAIje,MAG1B+iD,EAAQE,EAAS,GAAInlC,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACzCilC,EAAQE,EAAS,GAAInlC,EAAI,GAAIG,EAAI,GAAIH,EAAI,IAEzCilC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIH,EAAI,GAAIA,EAAI,IACzCilC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIA,EAAI,GAAIH,EAAI,IAEzCilC,EAAQE,EAAS,GAAInlC,EAAI,GAAIA,EAAI,GAAIG,EAAI,IACzC8kC,EAAQE,EAAS,GAAInlC,EAAI,GAAIG,EAAI,GAAIA,EAAI,IACzC8kC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIH,EAAI,GAAIG,EAAI,IACzC8kC,EAAQE,EAAS,GAAIhlC,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAC7C,CACJ,EASAqoC,0BAA4B,WAExB,IAAIC,EAAUl4C,EAAAA,EAAKtH,SAEnB,OAAO,SAASs8C,EAAM3vC,GAClB,IAAIuvC,EAAW7pD,KAAK6pD,SAEhBqC,EAAK5xC,EAAO1T,MACZ8d,EAAMulC,EAAKvlC,IACXG,EAAMolC,EAAKplC,IACXklC,EAASrlC,EAAI9d,MACbojD,EAASnlC,EAAIje,MACb0zC,EAAIuP,EAAS,GACjB8B,EAAiBwB,EAAS7S,EAAG4R,GAC7BtC,EAASG,EAAQoD,GACjBvD,EAASI,EAAQmD,GAEjB,IAAK,IAAIjsD,EAAI,EAAGA,EAAI,EAAGA,IACnBo5C,EAAIuP,EAAS3oD,GACbyqD,EAAiBwB,EAAS7S,EAAG4R,GAE7BnC,EAAO,GAAK6B,EAAQuB,EAAQ,GAAIpD,EAAO,IACvCA,EAAO,GAAK6B,EAAQuB,EAAQ,GAAIpD,EAAO,IACvCA,EAAO,GAAK6B,EAAQuB,EAAQ,GAAIpD,EAAO,IAEvCC,EAAO,GAAK6B,EAAQsB,EAAQ,GAAInD,EAAO,IACvCA,EAAO,GAAK6B,EAAQsB,EAAQ,GAAInD,EAAO,IACvCA,EAAO,GAAK6B,EAAQsB,EAAQ,GAAInD,EAAO,IAM3C,OAHAtlC,EAAIuT,QAAS,EACbpT,EAAIoT,QAAS,EAENgyB,CACX,CACJ,CAnC4B,IAqChC,K,uCChLImD,EAAU,WAQVptD,KAAK4G,MAAQkwC,EAAAA,EAAKnpC,SAOlB3N,KAAKi4B,QAAS,CAClB,EAEAm1B,EAAQzsD,UAAY,CAEhB8oB,YAAa2jC,EAMbC,SAAU,SAAUrvC,GAChB,IAAK,IAAI9c,EAAI,EAAGA,EAAIlB,KAAK4G,MAAMzF,OAAQD,IACnClB,KAAK4G,MAAM1F,GAAK8c,EAAI9c,GAGxB,OADAlB,KAAKi4B,QAAS,EACPj4B,IACX,EAKAe,MAAO,WACH,OAAQ,IAAIqsD,GAAWj2C,KAAKnX,KAChC,EAOAmX,KAAM,SAASwP,GAGX,OAFAmwB,EAAAA,EAAK3/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAstD,QAAS,WAGL,OAFAxW,EAAAA,EAAKwW,QAAQttD,KAAK4G,MAAO5G,KAAK4G,OAC9B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAutD,YAAa,WACT,OAAOzW,EAAAA,EAAKyW,YAAYvtD,KAAK4G,MACjC,EAMA6Q,SAAU,WAGN,OAFAq/B,EAAAA,EAAKr/B,SAASzX,KAAK4G,OACnB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA4X,OAAQ,WAGJ,OAFAk/B,EAAAA,EAAKl/B,OAAO5X,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAASp1B,GAGV,OAFAmwB,EAAAA,EAAKiF,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAwtD,QAAS,SAAS/uC,GAGd,OAFAq4B,EAAAA,EAAKiF,IAAI/7C,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAASiP,GAGf,OAFAmwB,EAAAA,EAAKp/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAytD,aAAc,SAAShvC,GAGnB,OAFAq4B,EAAAA,EAAKp/B,SAAS1X,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAg8C,OAAQ,SAASroB,GAGb,OAFAmjB,EAAAA,EAAKkF,OAAOh8C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACpC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAASue,GAGZ,OAFAxD,EAAAA,EAAK/a,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OACrC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAKA0a,UAAW,WAGP,OAFAo8B,EAAAA,EAAKp8B,UAAU1a,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAEAiL,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAQJwmD,EAAQE,QAAU,SAAS5sD,EAAK+d,GAG5B,OAFAq4B,EAAAA,EAAKwW,QAAQ5sD,EAAIkG,MAAO6X,EAAE7X,OAC1BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA0sD,EAAQj2C,KAAO,SAASzW,EAAK+d,GAGzB,OAFAq4B,EAAAA,EAAK3/B,KAAKzW,EAAIkG,MAAO6X,EAAE7X,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA0sD,EAAQG,YAAc,SAAS9uC,GAC3B,OAAOq4B,EAAAA,EAAKyW,YAAY9uC,EAAE7X,MAC9B,EAMAwmD,EAAQ31C,SAAW,SAAS/W,GAGxB,OAFAo2C,EAAAA,EAAKr/B,SAAS/W,EAAIkG,OAClBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA0sD,EAAQx1C,OAAS,SAASlX,EAAK+d,GAG3B,OAFAq4B,EAAAA,EAAKl/B,OAAOlX,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA0sD,EAAQrR,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG3B,OAFAmwB,EAAAA,EAAKiF,IAAIr7C,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASA0sD,EAAQ11C,SAAW01C,EAAQrR,IAQ3BqR,EAAQpR,OAAS,SAASt7C,EAAK+d,EAAGkV,GAG9B,OAFAmjB,EAAAA,EAAKkF,OAAOt7C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GAChCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA0sD,EAAQrxB,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAG7B,OAFAxD,EAAAA,EAAK/a,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA0sD,EAAQ1yC,UAAY,SAASha,EAAK+d,GAG9B,OAFAq4B,EAAAA,EAAKp8B,UAAUha,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,uCCxRIitD,EAAW,WAOX3tD,KAAK4G,MAAQmwC,EAAAA,EAAMppC,SAOnB3N,KAAKi4B,QAAS,CAClB,EAEA01B,EAAShtD,UAAY,CAEjB8oB,YAAakkC,EAMbN,SAAU,SAAUrvC,GAChB,IAAK,IAAI9c,EAAI,EAAGA,EAAIlB,KAAK4G,MAAMzF,OAAQD,IACnClB,KAAK4G,MAAM1F,GAAK8c,EAAI9c,GAGxB,OADAlB,KAAKi4B,QAAS,EACPj4B,IACX,EAKAe,MAAO,WACH,OAAQ,IAAI4sD,GAAYx2C,KAAKnX,KACjC,EAOAmX,KAAM,SAASwP,GAGX,OAFAowB,EAAAA,EAAM5/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACzB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAutD,YAAa,WACT,OAAOxW,EAAAA,EAAMwW,YAAYvtD,KAAK4G,MAClC,EAMA6Q,SAAU,WAGN,OAFAs/B,EAAAA,EAAMt/B,SAASzX,KAAK4G,OACpB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA4X,OAAQ,WAGJ,OAFAm/B,EAAAA,EAAMn/B,OAAO5X,KAAK4G,MAAO5G,KAAK4G,OAC9B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAASp1B,GAGV,OAFAowB,EAAAA,EAAMgF,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACpC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAwtD,QAAS,SAAS7mC,GAGd,OAFAowB,EAAAA,EAAMgF,IAAI/7C,KAAK4G,MAAO+f,EAAE/f,MAAO5G,KAAK4G,OACpC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAASiP,GAGf,OAFAowB,EAAAA,EAAMr/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACzC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAytD,aAAc,SAAS9mC,GAGnB,OAFAowB,EAAAA,EAAMr/B,SAAS1X,KAAK4G,MAAO+f,EAAE/f,MAAO5G,KAAK4G,OACzC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAg8C,OAAQ,SAASroB,GAGb,OAFAojB,EAAAA,EAAMiF,OAAOh8C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAASkG,GAGZ,OAFA8U,EAAAA,EAAMhb,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAOq7B,EAAEr7B,OACtC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAw4C,UAAW,SAAS8B,GAGhB,OAFAvD,EAAAA,EAAMyB,UAAUx4C,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OAC1C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAEAiL,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAQJ+mD,EAASx2C,KAAO,SAASzW,EAAK+d,GAG1B,OAFAs4B,EAAAA,EAAM5/B,KAAKzW,EAAIkG,MAAO6X,EAAE7X,OACxBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMAitD,EAASJ,YAAc,SAAS9uC,GAC5B,OAAOs4B,EAAAA,EAAMwW,YAAY9uC,EAAE7X,MAC/B,EAMA+mD,EAASl2C,SAAW,SAAS/W,GAGzB,OAFAq2C,EAAAA,EAAMt/B,SAAS/W,EAAIkG,OACnBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAitD,EAAS/1C,OAAS,SAASlX,EAAK+d,GAG5B,OAFAs4B,EAAAA,EAAMn/B,OAAOlX,EAAIkG,MAAO6X,EAAE7X,OAC1BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAitD,EAAS5R,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG5B,OAFAowB,EAAAA,EAAMgF,IAAIr7C,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAChClG,EAAIu3B,QAAS,EACNv3B,CACX,EASAitD,EAASj2C,SAAWi2C,EAAS5R,IAQ7B4R,EAAS3R,OAAS,SAASt7C,EAAK+d,EAAGkV,GAG/B,OAFAojB,EAAAA,EAAMiF,OAAOt7C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQAitD,EAAS5xB,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAG9B,OAFAvD,EAAAA,EAAMhb,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OAClClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAitD,EAASnV,UAAY,SAAS93C,EAAK+d,EAAG67B,GAGlC,OAFAvD,EAAAA,EAAMyB,UAAU93C,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACtClG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,uCCtQIktD,EAAU,WAQV5tD,KAAK4G,MAAQowC,EAAAA,EAAKrpC,SAOlB3N,KAAKi4B,QAAS,CAClB,EAEA21B,EAAQjtD,UAAY,CAEhB8oB,YAAamkC,EAMbP,SAAU,SAAUrvC,GAChB,IAAK,IAAI9c,EAAI,EAAGA,EAAIlB,KAAK4G,MAAMzF,OAAQD,IACnClB,KAAK4G,MAAM1F,GAAK8c,EAAI9c,GAGxB,OADAlB,KAAKi4B,QAAS,EACPj4B,IACX,EAKAstD,QAAS,WAGL,OAFAtW,EAAAA,EAAKsW,QAAQttD,KAAK4G,MAAO5G,KAAK4G,OAC9B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAQ,IAAI6sD,GAAWz2C,KAAKnX,KAChC,EAOAmX,KAAM,SAAUwP,GAGZ,OAFAqwB,EAAAA,EAAK7/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAutD,YAAa,WACT,OAAOvW,EAAAA,EAAKuW,YAAYvtD,KAAK4G,MACjC,EAOAy3C,UAAW,SAAU5/B,GAGjB,OAFAu4B,EAAAA,EAAKqH,UAAUr+C,KAAK4G,MAAO6X,EAAE7X,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA6tD,SAAU,SAAUpvC,GAGhB,OAFAu4B,EAAAA,EAAK6W,SAAS7tD,KAAK4G,MAAO6X,EAAE7X,OAC5B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAs+C,SAAU,SAAUC,GAGhB,OAFAvH,EAAAA,EAAKsH,SAASt+C,KAAK4G,MAAO23C,EAAE33C,OAC5B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAyX,SAAU,WAGN,OAFAu/B,EAAAA,EAAKv/B,SAASzX,KAAK4G,OACnB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA4X,OAAQ,WAGJ,OAFAo/B,EAAAA,EAAKp/B,OAAO5X,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAAUp1B,GAGX,OAFAqwB,EAAAA,EAAK+E,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAwtD,QAAS,SAAU/uC,GAGf,OAFAu4B,EAAAA,EAAK+E,IAAI/7C,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAAUiP,GAGhB,OAFAqwB,EAAAA,EAAKt/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAytD,aAAc,SAAUhvC,GAGpB,OAFAu4B,EAAAA,EAAKt/B,SAAS1X,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAg8C,OAAQ,SAAUroB,GAGd,OAFAqjB,EAAAA,EAAKgF,OAAOh8C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACpC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAAUue,GAGb,OAFAtD,EAAAA,EAAKjb,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OACrC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAw4C,UAAW,SAAU8B,GAGjB,OAFAtD,EAAAA,EAAKwB,UAAUx4C,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OACzC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAKAq/C,eAAgB,SAAU5gC,GAGtB,OAFAu4B,EAAAA,EAAKqI,eAAer/C,KAAK4G,MAAO6X,EAAE7X,OAClC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA0a,UAAW,WAGP,OAFAs8B,EAAAA,EAAKt8B,UAAU1a,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAEAiL,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAOJgnD,EAAQN,QAAU,SAAU5sD,EAAK+d,GAG7B,OAFAu4B,EAAAA,EAAKsW,QAAQ5sD,EAAIkG,MAAO6X,EAAE7X,OAC1BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQz2C,KAAO,SAAUzW,EAAK+d,GAG1B,OAFAu4B,EAAAA,EAAK7/B,KAAKzW,EAAIkG,MAAO6X,EAAE7X,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMAktD,EAAQL,YAAc,SAAU9uC,GAC5B,OAAOu4B,EAAAA,EAAKuW,YAAY9uC,EAAE7X,MAC9B,EAMAgnD,EAAQn2C,SAAW,SAAU/W,GAGzB,OAFAs2C,EAAAA,EAAKv/B,SAAS/W,EAAIkG,OAClBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQh2C,OAAS,SAAUlX,EAAK+d,GAE5B,OADAu4B,EAAAA,EAAKp/B,OAAOlX,EAAIkG,MAAO6X,EAAE7X,OAClBlG,CACX,EAQAktD,EAAQ7R,IAAM,SAAUr7C,EAAK+d,EAAGkI,GAG5B,OAFAqwB,EAAAA,EAAK+E,IAAIr7C,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASAktD,EAAQl2C,SAAWk2C,EAAQ7R,IAO3B6R,EAAQvP,UAAY,SAAU39C,EAAK+d,GAG/B,OAFAu4B,EAAAA,EAAKqH,UAAU39C,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQC,SAAW,SAAUntD,EAAK+d,GAG9B,OAFAu4B,EAAAA,EAAK6W,SAASntD,EAAIkG,MAAO6X,EAAE7X,OAC3BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQtP,SAAW,SAAU59C,EAAK69C,GAG9B,OAFAvH,EAAAA,EAAKsH,SAAS59C,EAAIkG,MAAO23C,EAAE33C,OAC3BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQvO,eAAiB,SAAU3+C,EAAK+d,GAGpC,OAFAu4B,EAAAA,EAAKqI,eAAe3+C,EAAIkG,MAAO6X,EAAE7X,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAktD,EAAQ5R,OAAS,SAAUt7C,EAAK+d,EAAGkV,GAG/B,OAFAqjB,EAAAA,EAAKgF,OAAOt7C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GAChCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQAktD,EAAQ7xB,MAAQ,SAAUr7B,EAAK+d,EAAG67B,GAG9B,OAFAtD,EAAAA,EAAKjb,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAktD,EAAQlzC,UAAY,SAAUha,EAAK+d,GAG/B,OAFAu4B,EAAAA,EAAKt8B,UAAUha,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAktD,EAAQpV,UAAY,SAAU93C,EAAK+d,EAAG67B,GAGlC,OAFAtD,EAAAA,EAAKwB,UAAU93C,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACrClG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,iFCjYI4kB,EAAU,WAEVtlB,KAAK8tD,OAAS,IAAIrV,EAAAA,EAClBz4C,KAAK+tD,OAAS,IAAItV,EAAAA,EAClBz4C,KAAKguD,OAAS,IAAIvV,EAAAA,EAQlBz4C,KAAK4G,MAAQ8G,EAAAA,EAAKC,SAOlB3N,KAAKi4B,QAAS,CAClB,EAEA3S,EAAQ3kB,UAAY,CAEhB8oB,YAAanE,EAMb+nC,SAAU,SAAUrvC,GAChB,IAAK,IAAI9c,EAAI,EAAGA,EAAIlB,KAAK4G,MAAMzF,OAAQD,IACnClB,KAAK4G,MAAM1F,GAAK8c,EAAI9c,GAGxB,OADAlB,KAAKi4B,QAAS,EACPj4B,IACX,EAKAstD,QAAS,WAGL,OAFA5/C,EAAAA,EAAK4/C,QAAQttD,KAAK4G,MAAO5G,KAAK4G,OAC9B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAQ,IAAIukB,GAAWnO,KAAKnX,KAChC,EAOAmX,KAAM,SAASsH,GAGX,OAFA/Q,EAAAA,EAAKyJ,KAAKnX,KAAK4G,MAAO6X,EAAE7X,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAutD,YAAa,WACT,OAAO7/C,EAAAA,EAAK6/C,YAAYvtD,KAAK4G,MACjC,EAOA03C,SAAU,SAASC,GAGf,OAFA7wC,EAAAA,EAAK4wC,SAASt+C,KAAK4G,MAAO23C,EAAE33C,OAC5B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQAwgD,wBAAyB,SAASjC,EAAGjE,GAGjC,OAFA5sC,EAAAA,EAAK8yC,wBAAwBxgD,KAAK4G,MAAO23C,EAAE33C,MAAO0zC,EAAE1zC,OACpD5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQAq+C,UAAW,SAAS4P,GAEhB,OADA3oC,EAAQ+4B,UAAUr+C,KAAMiuD,GACjBjuD,IACX,EAYA0lB,QAAS,SAAUsN,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GAG/C,OAFA9L,EAAAA,EAAKgY,QAAQ1lB,KAAK4G,MAAOosB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GACzDxZ,KAAKi4B,QAAS,EACPj4B,IACX,EAMAyX,SAAU,WAGN,OAFA/J,EAAAA,EAAK+J,SAASzX,KAAK4G,OACnB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA4X,OAAQ,WAGJ,OAFAlK,EAAAA,EAAKkK,OAAO5X,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EASAmhD,OAAQ,SAASC,EAAKC,EAAQC,GAG1B,OAFA5zC,EAAAA,EAAKyzC,OAAOnhD,KAAK4G,MAAOw6C,EAAIx6C,MAAOy6C,EAAOz6C,MAAO06C,EAAG16C,OACpD5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAASp1B,GAGV,OAFAjZ,EAAAA,EAAKquC,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAwtD,QAAS,SAAS/uC,GAGd,OAFA/Q,EAAAA,EAAKquC,IAAI/7C,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAASiP,GAGf,OAFAjZ,EAAAA,EAAKgK,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAytD,aAAc,SAAShvC,GAGnB,OAFA/Q,EAAAA,EAAKgK,SAAS1X,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAYAqzB,MAAO,SAASL,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GAG5C,OAFA9L,EAAAA,EAAK2lB,MAAMrzB,KAAK4G,MAAOosB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GACvDxZ,KAAKi4B,QAAS,EACPj4B,IACX,EASA6zB,YAAa,SAASktB,EAAMrtB,EAAQna,EAAMC,GAGtC,OAFA9L,EAAAA,EAAKmmB,YAAY7zB,KAAK4G,MAAOm6C,EAAMrtB,EAAQna,EAAMC,GACjDxZ,KAAKi4B,QAAS,EACPj4B,IACX,EASAg8C,OAAQ,SAASroB,EAAK0sB,GAGlB,OAFA3yC,EAAAA,EAAKsuC,OAAOh8C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,EAAK0sB,EAAKz5C,OAC9C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA84C,QAAS,SAASnlB,GAGd,OAFAjmB,EAAAA,EAAKorC,QAAQ94C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAQA24C,QAAS,SAAShlB,GAGd,OAFAjmB,EAAAA,EAAKirC,QAAQ34C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAQAugD,QAAS,SAAS5sB,GAGd,OAFAjmB,EAAAA,EAAK6yC,QAAQvgD,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAQA+7B,MAAO,SAASue,GAGZ,OAFA5sC,EAAAA,EAAKquB,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OACrC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQAw4C,UAAW,SAAS8B,GAGhB,OAFA5sC,EAAAA,EAAK8qC,UAAUx4C,KAAK4G,MAAO5G,KAAK4G,MAAO0zC,EAAE1zC,OACzC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA0a,UAAW,WAGP,OAFAhN,EAAAA,EAAKgN,UAAU1a,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EASAkuD,gBAAkB,WAEd,IAAIz7C,EAAIwC,EAAAA,EAAKtH,SACT+E,EAAIuC,EAAAA,EAAKtH,SACT0sC,EAAIplC,EAAAA,EAAKtH,SAETs+C,EAAKjV,EAAAA,EAAKrpC,SAEd,OAAO,SAASouB,EAAOoyB,EAAU74C,GAE7B,IAAI84C,EAAKpuD,KAAK4G,MACdqO,EAAAA,EAAK0P,IAAIlS,EAAG27C,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAC7Bn5C,EAAAA,EAAK0P,IAAIjS,EAAG07C,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAC7Bn5C,EAAAA,EAAK0P,IAAI01B,EAAG+T,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAE7B,IAAIC,EAAKp5C,EAAAA,EAAK9T,OAAOsR,GACjB67C,EAAKr5C,EAAAA,EAAK9T,OAAOuR,GACjB67C,EAAKt5C,EAAAA,EAAK9T,OAAOk5C,GAGjBqB,EAAM17C,KAAKutD,cACX7R,EAAM,IACN2S,GAAMA,GAGNtyB,GACAA,EAAMpX,IAAI0pC,EAAIC,EAAIC,GAGtBj5C,EAASqP,IAAIypC,EAAG,IAAKA,EAAG,IAAKA,EAAG,KAEhCpX,EAAAA,EAAK6W,SAAS5B,EAAImC,GAMlBnC,EAAG,IAAMoC,EACTpC,EAAG,IAAMoC,EACTpC,EAAG,IAAMoC,EAETpC,EAAG,IAAMqC,EACTrC,EAAG,IAAMqC,EACTrC,EAAG,IAAMqC,EAETrC,EAAG,IAAMsC,EACTtC,EAAG,IAAMsC,EACTtC,EAAG,IAAMsC,EAETtX,EAAAA,EAAKiM,SAASiL,EAASvnD,MAAOqlD,GAC9BhV,EAAAA,EAAK4L,UAAUsL,EAASvnD,MAAOunD,EAASvnD,OAExCunD,EAASl2B,QAAS,EAClB3iB,EAAS2iB,QAAS,CACtB,CACJ,CAvDkB,GAyDlBhtB,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAGJ,IAAIokB,EAAiBjiB,OAAOiiB,eAE5B,GAAIA,EAAgB,CAChB,IAAIgS,EAAQ1X,EAAQ3kB,UAQpBqqB,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,IAAI+uC,EAAKpuD,KAAK4G,MAEd,OADA5G,KAAKguD,OAAOrpC,IAAIypC,EAAG,GAAIA,EAAG,GAAIA,EAAG,KAC1BpuD,KAAKguD,MAChB,EACArpC,IAAK,SAAU21B,GAGX,IAAI8T,EAAKpuD,KAAK4G,MACd0zC,EAAIA,EAAE1zC,MACNwnD,EAAG,GAAK9T,EAAE,GACV8T,EAAG,GAAK9T,EAAE,GACV8T,EAAG,IAAM9T,EAAE,GAEXt6C,KAAKi4B,QAAS,CAClB,IAUJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,IAAI+uC,EAAKpuD,KAAK4G,MAEd,OADA5G,KAAK+tD,OAAOppC,IAAIypC,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAC1BpuD,KAAK+tD,MAChB,EACAppC,IAAK,SAAU21B,GACX,IAAI8T,EAAKpuD,KAAK4G,MACd0zC,EAAIA,EAAE1zC,MACNwnD,EAAG,GAAK9T,EAAE,GACV8T,EAAG,GAAK9T,EAAE,GACV8T,EAAG,GAAK9T,EAAE,GAEVt6C,KAAKi4B,QAAS,CAClB,IAUJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,IAAI+uC,EAAKpuD,KAAK4G,MAEd,OADA5G,KAAK8tD,OAAOnpC,IAAIypC,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAC1BpuD,KAAK8tD,MAChB,EACAnpC,IAAK,SAAU21B,GACX,IAAI8T,EAAKpuD,KAAK4G,MACd0zC,EAAIA,EAAE1zC,MACNwnD,EAAG,GAAK9T,EAAE,GACV8T,EAAG,GAAK9T,EAAE,GACV8T,EAAG,GAAK9T,EAAE,GAEVt6C,KAAKi4B,QAAS,CAClB,GAER,CAOA3S,EAAQgoC,QAAU,SAAS5sD,EAAK+d,GAG5B,OAFA/Q,EAAAA,EAAK4/C,QAAQ5sD,EAAIkG,MAAO6X,EAAE7X,OAC1BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA4kB,EAAQnO,KAAO,SAASzW,EAAK+d,GAGzB,OAFA/Q,EAAAA,EAAKyJ,KAAKzW,EAAIkG,MAAO6X,EAAE7X,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA4kB,EAAQioC,YAAc,SAAS9uC,GAC3B,OAAO/Q,EAAAA,EAAK6/C,YAAY9uC,EAAE7X,MAC9B,EAMA0e,EAAQ7N,SAAW,SAAS/W,GAGxB,OAFAgN,EAAAA,EAAK+J,SAAS/W,EAAIkG,OAClBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAYA4kB,EAAQ+N,MAAQ,SAAS3yB,EAAKsyB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GAG1D,OAFA9L,EAAAA,EAAK2lB,MAAM3yB,EAAIkG,MAAOosB,EAAMC,EAAOE,EAAQD,EAAK3Z,EAAMC,GACtD9Y,EAAIu3B,QAAS,EACNv3B,CACX,EAUA4kB,EAAQuO,YAAc,SAASnzB,EAAKqgD,EAAMrtB,EAAQna,EAAMC,GAGpD,OAFA9L,EAAAA,EAAKmmB,YAAYnzB,EAAIkG,MAAOm6C,EAAMrtB,EAAQna,EAAMC,GAChD9Y,EAAIu3B,QAAS,EACNv3B,CACX,EASA4kB,EAAQ67B,OAAS,SAASzgD,EAAK0gD,EAAKC,EAAQC,GAGxC,OAFA5zC,EAAAA,EAAKyzC,OAAOzgD,EAAIkG,MAAOw6C,EAAIx6C,MAAOy6C,EAAOz6C,MAAO06C,EAAG16C,OACnDlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA4kB,EAAQ1N,OAAS,SAASlX,EAAK+d,GAG3B,OAFA/Q,EAAAA,EAAKkK,OAAOlX,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQy2B,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG3B,OAFAjZ,EAAAA,EAAKquC,IAAIr7C,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASA4kB,EAAQ5N,SAAW4N,EAAQy2B,IAO3Bz2B,EAAQg5B,SAAW,SAAS59C,EAAK69C,GAG7B,OAFA7wC,EAAAA,EAAK4wC,SAAS59C,EAAIkG,MAAO23C,EAAE33C,OAC3BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQk7B,wBAA0B,SAAS9/C,EAAK69C,EAAGjE,GAG/C,OAFA5sC,EAAAA,EAAK8yC,wBAAwB9/C,EAAIkG,MAAO23C,EAAE33C,MAAO0zC,EAAE1zC,OACnDlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA4kB,EAAQ+4B,UAAY,SAAS6N,EAAI+B,GAC7B/B,EAAGj0B,QAAS,EACRg2B,EAAMA,EAAIrnD,MACVslD,EAAKA,EAAGtlD,MAUZ,OARAslD,EAAG,GAAK+B,EAAI,GACZ/B,EAAG,GAAK+B,EAAI,GACZ/B,EAAG,IAAM+B,EAAI,GAEb/B,EAAG,GAAK+B,EAAI,GACZ/B,EAAG,GAAK+B,EAAI,GACZ/B,EAAG,IAAM+B,EAAI,GAEN/B,CACX,EASA5mC,EAAQ02B,OAAS,SAASt7C,EAAK+d,EAAGkV,EAAK0sB,GAGnC,OAFA3yC,EAAAA,EAAKsuC,OAAOt7C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,EAAK0sB,EAAKz5C,OAC1ClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQwzB,QAAU,SAASp4C,EAAK+d,EAAGkV,GAG/B,OAFAjmB,EAAAA,EAAKorC,QAAQp4C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQqzB,QAAU,SAASj4C,EAAK+d,EAAGkV,GAG/B,OAFAjmB,EAAAA,EAAKirC,QAAQj4C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQi7B,QAAU,SAAS7/C,EAAK+d,EAAGkV,GAG/B,OAFAjmB,EAAAA,EAAK6yC,QAAQ7/C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQyW,MAAQ,SAASr7B,EAAK+d,EAAG67B,GAG7B,OAFA5sC,EAAAA,EAAKquB,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA4kB,EAAQ5K,UAAY,SAASha,EAAK+d,GAG9B,OAFA/Q,EAAAA,EAAKgN,UAAUha,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA4kB,EAAQkzB,UAAY,SAAS93C,EAAK+d,EAAG67B,GAGjC,OAFA5sC,EAAAA,EAAK8qC,UAAU93C,EAAIkG,MAAO6X,EAAE7X,MAAO0zC,EAAE1zC,OACrClG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,sECnsBIuzB,EAAQ,SAASylB,EAAQmL,GAKzB7kD,KAAK05C,OAASA,GAAU,IAAIjB,EAAAA,EAAQ,EAAG,EAAG,GAM1Cz4C,KAAK6kD,SAAWA,GAAY,CAChC,EAEA5wB,EAAMtzB,UAAY,CAEd8oB,YAAawK,EAObu6B,gBAAiB,SAASC,GACtB,OAAOx5C,EAAAA,EAAK0tC,IAAI8L,EAAM7nD,MAAO5G,KAAK05C,OAAO9yC,OAAS5G,KAAK6kD,QAC3D,EAQA6J,aAAc,SAASD,EAAO/tD,GACrBA,IACDA,EAAM,IAAI+3C,EAAAA,GAEd,IAAIkW,EAAI3uD,KAAKwuD,gBAAgBC,GAG7B,OAFAx5C,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAO6nD,EAAM7nD,MAAO5G,KAAK05C,OAAO9yC,OAAQ+nD,GAC7DjuD,EAAIu3B,QAAS,EACNv3B,CACX,EAKAmiD,UAAW,WACP,IAAI+L,EAAS,EAAI35C,EAAAA,EAAKgS,IAAIjnB,KAAK05C,OAAO9yC,OACtCqO,EAAAA,EAAK8mB,MAAM/7B,KAAK05C,OAAO9yC,MAAOgoD,GAC9B5uD,KAAK6kD,UAAY+J,CACrB,EAOAC,iBAAkB,SAASnpC,GAKvB,IAHA,IAAIopC,EAASppC,EAAQmkC,SACjBnQ,EAAS15C,KAAK05C,OAAO9yC,MACrBmoD,EAAU95C,EAAAA,EAAK0tC,IAAImM,EAAO,GAAGloD,MAAO8yC,GAAU15C,KAAK6kD,SAC9C3jD,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAK+T,EAAAA,EAAK0tC,IAAImM,EAAO5tD,GAAG0F,MAAO8yC,GAAU15C,KAAK6kD,UAAakK,EACvD,OAAO,CAGnB,EAUAC,cAAgB,WACZ,IAAIC,EAAKh6C,EAAAA,EAAKtH,SACd,OAAO,SAAS1D,EAAOC,EAAKxJ,GACxB,IAAIwuD,EAAKlvD,KAAKwuD,gBAAgBvkD,GAC1BklD,EAAKnvD,KAAKwuD,gBAAgBtkD,GAC9B,GAAKglD,EAAK,GAAKC,EAAK,GAAOD,EAAK,GAAKC,EAAK,EACtC,OAAO,KAGX,IAAIC,EAAKpvD,KAAK05C,OAAO9yC,MACjB+nD,EAAI3uD,KAAK6kD,SACTwK,EAAKplD,EAAMrD,MAEfqO,EAAAA,EAAKmoB,IAAI6xB,EAAI/kD,EAAItD,MAAOqD,EAAMrD,OAC9BqO,EAAAA,EAAK4tC,UAAUoM,EAAIA,GAEnB,IAAInU,EAAU7lC,EAAAA,EAAK0tC,IAAIyM,EAAIH,GAE3B,GAAgB,IAAZnU,EACA,OAAO,KAENp6C,IACDA,EAAM,IAAI+3C,EAAAA,GAEd,IAAIc,GAAKtkC,EAAAA,EAAK0tC,IAAIyM,EAAIC,GAAMV,GAAK7T,EAGjC,OAFA7lC,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOyoD,EAAIJ,GAAK1V,GACrC74C,EAAIu3B,QAAS,EACNv3B,CACX,CACJ,CA7BgB,GAoChBw4C,eAAiB,WACb,IAAIoW,EAAmB5hD,EAAAA,EAAKC,SACxB4hD,EAAW1Y,EAAAA,EAAKlpC,SAChB6hD,EAAU3Y,EAAAA,EAAKlpC,SAEnB,OADA6hD,EAAQ,GAAK,EACN,SAAStD,GACZA,EAAKA,EAAGtlD,MAERqO,EAAAA,EAAK8mB,MAAMyzB,EAASxvD,KAAK05C,OAAO9yC,MAAO5G,KAAK6kD,UAC5ChO,EAAAA,EAAKxhC,cAAcm6C,EAASA,EAAStD,GACrClsD,KAAK6kD,SAAW5vC,EAAAA,EAAK0tC,IAAI6M,EAASxvD,KAAK05C,OAAO9yC,OAE9C8G,EAAAA,EAAKkK,OAAO03C,EAAkBpD,GAC9Bx+C,EAAAA,EAAKgN,UAAU40C,EAAkBA,GACjCC,EAAS,GAAK,EACdt6C,EAAAA,EAAKkC,KAAKo4C,EAAUvvD,KAAK05C,OAAO9yC,OAChCiwC,EAAAA,EAAKxhC,cAAck6C,EAAUA,EAAUD,GACvCr6C,EAAAA,EAAKkC,KAAKnX,KAAK05C,OAAO9yC,MAAO2oD,EACjC,CACJ,CAnBiB,GAyBjBp4C,KAAM,SAASghC,GACXljC,EAAAA,EAAKkC,KAAKnX,KAAK05C,OAAO9yC,MAAOuxC,EAAMuB,OAAO9yC,OAC1C5G,KAAK05C,OAAOzhB,QAAS,EACrBj4B,KAAK6kD,SAAW1M,EAAM0M,QAC1B,EAMA9jD,MAAO,WACH,IAAIo3C,EAAQ,IAAIlkB,EAEhB,OADAkkB,EAAMhhC,KAAKnX,MACJm4C,CACX,GAGJ,K,kDC3JIsX,EAAa,SAAUh9C,EAAGC,EAAG2nC,EAAGmE,GAEhC/rC,EAAIA,GAAK,EACTC,EAAIA,GAAK,EACT2nC,EAAIA,GAAK,EACTmE,OAAUh6C,IAANg6C,EAAkB,EAAIA,EAS1Bx+C,KAAK4G,MAAQqwC,EAAAA,EAAKwL,WAAWhwC,EAAGC,EAAG2nC,EAAGmE,GAStCx+C,KAAKi4B,QAAS,CAClB,EAEAw3B,EAAW9uD,UAAY,CAEnB8oB,YAAagmC,EAOb1tC,IAAK,SAAU4E,GAGX,OAFAswB,EAAAA,EAAKl1B,IAAI/hB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA2jD,WAAY,WAGR,OAFA1M,EAAAA,EAAK0M,WAAW3jD,KAAK4G,MAAO5G,KAAK4G,OACjC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAUA2kB,IAAK,SAAUlS,EAAGC,EAAG2nC,EAAGmE,GAMpB,OALAx+C,KAAK4G,MAAM,GAAK6L,EAChBzS,KAAK4G,MAAM,GAAK8L,EAChB1S,KAAK4G,MAAM,GAAKyzC,EAChBr6C,KAAK4G,MAAM,GAAK43C,EAChBx+C,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqtD,SAAU,SAAUrvC,GAOhB,OANAhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GAEpBhe,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAO,IAAI0uD,EAAWzvD,KAAKyS,EAAGzS,KAAK0S,EAAG1S,KAAKq6C,EAAGr6C,KAAKw+C,EACvD,EAQA4F,UAAW,WAGP,OAFAnN,EAAAA,EAAKmN,UAAUpkD,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAmX,KAAM,SAAUwP,GAGZ,OAFAswB,EAAAA,EAAK9/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2iD,IAAK,SAAUh8B,GACX,OAAOswB,EAAAA,EAAK0L,IAAI3iD,KAAK4G,MAAO+f,EAAE/f,MAClC,EAOAs8C,SAAU,SAAU3vB,GAGhB,OAFA0jB,EAAAA,EAAKiM,SAASljD,KAAK4G,MAAO2sB,EAAE3sB,OAC5B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA6tD,SAAW,WACP,IAAI5B,EAAKjV,EAAAA,EAAKrpC,SACd,OAAO,SAAU4lB,GAMb,OALAyjB,EAAAA,EAAK6W,SAAS5B,EAAI14B,EAAE3sB,OAEpBowC,EAAAA,EAAKt8B,UAAUuxC,EAAIA,GACnBhV,EAAAA,EAAKiM,SAASljD,KAAK4G,MAAOqlD,GAC1BjsD,KAAKi4B,QAAS,EACPj4B,IACX,CACJ,CAVW,GAgBXyX,SAAU,WAGN,OAFAw/B,EAAAA,EAAKx/B,SAASzX,KAAK4G,OACnB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAKA4X,OAAQ,WAGJ,OAFAq/B,EAAAA,EAAKr/B,OAAO5X,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAKAinB,IAAK,WACD,OAAOgwB,EAAAA,EAAKhwB,IAAIjnB,KAAK4G,MACzB,EAMAzF,OAAQ,WACJ,OAAO81C,EAAAA,EAAK91C,OAAOnB,KAAK4G,MAC5B,EASA29B,KAAM,SAAU9lB,EAAGkI,EAAG4yB,GAGlB,OAFAtC,EAAAA,EAAK1S,KAAKvkC,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACxCv5C,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAAUp1B,GAGX,OAFAswB,EAAAA,EAAK8E,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAwtD,QAAS,SAAU/uC,GAGf,OAFAw4B,EAAAA,EAAKv/B,SAAS1X,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAAUiP,GAGhB,OAFAswB,EAAAA,EAAKv/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQAytD,aAAc,SAAUhvC,GAGpB,OAFAw4B,EAAAA,EAAKv/B,SAAS1X,KAAK4G,MAAO6X,EAAE7X,MAAO5G,KAAK4G,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA6iD,UAAW,WAGP,OAFA5L,EAAAA,EAAK4L,UAAU7iD,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA84C,QAAS,SAAUnlB,GAGf,OAFAsjB,EAAAA,EAAK6B,QAAQ94C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAOA24C,QAAS,SAAUhlB,GAGf,OAFAsjB,EAAAA,EAAK0B,QAAQ34C,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAOAugD,QAAS,SAAU5sB,GAGf,OAFAsjB,EAAAA,EAAKsJ,QAAQvgD,KAAK4G,MAAO5G,KAAK4G,MAAO+sB,GACrC3zB,KAAKi4B,QAAS,EACPj4B,IACX,EASAsiD,WAAY,SAAU7jC,EAAGkI,GAGrB,OAFAswB,EAAAA,EAAKqL,WAAWtiD,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACvC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA+iD,QAAS,SAAUE,EAAMhwB,EAAOquB,GAG5B,OAFArK,EAAAA,EAAK8L,QAAQ/iD,KAAK4G,MAAOq8C,EAAKr8C,MAAOqsB,EAAMrsB,MAAO06C,EAAG16C,OACrD5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA8iD,aAAc,SAAUzC,EAAM1sB,GAG1B,OAFAsjB,EAAAA,EAAK6L,aAAa9iD,KAAK4G,MAAOy5C,EAAKz5C,MAAO+sB,GAC1C3zB,KAAKi4B,QAAS,EACPj4B,IACX,EAQA4jD,MAAO,SAAUnlC,EAAGkI,EAAG4yB,GAGnB,OAFAtC,EAAAA,EAAK2M,MAAM5jD,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACzCv5C,KAAKi4B,QAAS,EACPj4B,IACX,EAMAskD,OAAQ,WACJ,OAAOrN,EAAAA,EAAKqN,OAAOtkD,KAAK4G,MAC5B,EAMAy9C,cAAe,WACX,OAAOpN,EAAAA,EAAKoN,cAAcrkD,KAAK4G,MACnC,EAOA8oD,UAAW,SAAUpV,EAAGqV,GACpB,OAAOF,EAAWC,UAAU1vD,KAAMs6C,EAAGqV,EACzC,EAEA1kD,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAGJ,IAAIokB,EAAiBjiB,OAAOiiB,eAE5B,GAAIA,EAAgB,CAEhB,IAAIgS,EAAQyyB,EAAW9uD,UAOvBqqB,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,GAER,CAUAw3B,EAAW1tC,IAAM,SAAUrhB,EAAK+d,EAAGkI,GAG/B,OAFAswB,EAAAA,EAAKl1B,IAAIrhB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAUA+uD,EAAW9qC,IAAM,SAAUjkB,EAAK+R,EAAGC,EAAG2nC,EAAGmE,GACrCvH,EAAAA,EAAKtyB,IAAIjkB,EAAIkG,MAAO6L,EAAGC,EAAG2nC,EAAGmE,GAC7B99C,EAAIu3B,QAAS,CACjB,EAOAw3B,EAAWt4C,KAAO,SAAUzW,EAAKimB,GAG7B,OAFAswB,EAAAA,EAAK9/B,KAAKzW,EAAIkG,MAAO+f,EAAE/f,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+uD,EAAW9L,WAAa,SAAUjjD,EAAK+d,GAGnC,OAFAw4B,EAAAA,EAAK0M,WAAWjjD,EAAIkG,MAAO6X,EAAE7X,OAC7BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+uD,EAAWrL,UAAY,SAAU1jD,EAAK+d,GAGlC,OAFAw4B,EAAAA,EAAKmN,UAAU1jD,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA+uD,EAAWh4C,SAAW,SAAU/W,GAG5B,OAFAu2C,EAAAA,EAAKx/B,SAAS/W,EAAIkG,OAClBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+uD,EAAW73C,OAAS,SAAUlX,EAAK+d,GAG/B,OAFAw4B,EAAAA,EAAKr/B,OAAOlX,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+uD,EAAW9M,IAAM,SAAUlkC,EAAGkI,GAC1B,OAAOswB,EAAAA,EAAK0L,IAAIlkC,EAAE7X,MAAO+f,EAAE/f,MAC/B,EAMA6oD,EAAWxoC,IAAM,SAAUxI,GACvB,OAAOw4B,EAAAA,EAAK91C,OAAOsd,EAAE7X,MACzB,EAWA6oD,EAAWlrB,KAAO,SAAU7jC,EAAK+d,EAAGkI,EAAG4yB,GAGnC,OAFAtC,EAAAA,EAAK1S,KAAK7jC,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACvC74C,EAAIu3B,QAAS,EACNv3B,CACX,EASA+uD,EAAW7L,MAAQ,SAAUljD,EAAK+d,EAAGkI,EAAG4yB,GAGpC,OAFAtC,EAAAA,EAAK2M,MAAMljD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACxC74C,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAW1T,IAAM,SAAUr7C,EAAK+d,EAAGkI,GAG/B,OAFAswB,EAAAA,EAAKv/B,SAAShX,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EASA+uD,EAAW/3C,SAAW+3C,EAAW1T,IAQjC0T,EAAW3W,QAAU,SAAUp4C,EAAK+d,EAAGkV,GAGnC,OAFAsjB,EAAAA,EAAK6B,QAAQp4C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAW9W,QAAU,SAAUj4C,EAAK+d,EAAGkV,GAGnC,OAFAsjB,EAAAA,EAAK0B,QAAQj4C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAWlP,QAAU,SAAU7/C,EAAK+d,EAAGkV,GAGnC,OAFAsjB,EAAAA,EAAKsJ,QAAQ7/C,EAAIkG,MAAO6X,EAAE7X,MAAO+sB,GACjCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAW3M,aAAe,SAAUpiD,EAAK2/C,EAAM1sB,GAG3C,OAFAsjB,EAAAA,EAAK6L,aAAapiD,EAAIkG,MAAOy5C,EAAKz5C,MAAO+sB,GACzCjzB,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+uD,EAAW5M,UAAY,SAAUniD,EAAK+d,GAGlC,OAFAw4B,EAAAA,EAAK4L,UAAUniD,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA+uD,EAAWnL,OAAS,SAAU7lC,GAC1B,OAAOw4B,EAAAA,EAAKqN,OAAO7lC,EAAE7X,MACzB,EAOA6oD,EAAWpL,cAAgBoL,EAAWnL,OAOtCmL,EAAWvM,SAAW,SAAUxiD,EAAK6yB,GAGjC,OAFA0jB,EAAAA,EAAKiM,SAASxiD,EAAIkG,MAAO2sB,EAAE3sB,OAC3BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASA+uD,EAAW1M,QAAU,SAAUriD,EAAKuiD,EAAMhwB,EAAOquB,GAG7C,OAFArK,EAAAA,EAAK8L,QAAQriD,EAAIkG,MAAOq8C,EAAKr8C,MAAOqsB,EAAMrsB,MAAO06C,EAAG16C,OACpDlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAWnN,WAAa,SAAU5hD,EAAK+d,EAAGkI,GAGtC,OAFAswB,EAAAA,EAAKqL,WAAW5hD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACtClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+uD,EAAWC,UAAY,SAAUhvD,EAAK45C,EAAGqV,GAErCjvD,EAAIu3B,QAAS,EAEbqiB,EAAIA,EAAE1zC,MACN,IAAI4rB,EAAS9xB,EAAIkG,MACbgpD,EAAKrgC,KAAKwrB,IAAIT,EAAE,GAAK,GACrBuV,EAAKtgC,KAAKwrB,IAAIT,EAAE,GAAK,GACrBwV,EAAKvgC,KAAKwrB,IAAIT,EAAE,GAAK,GACrByV,EAAKxgC,KAAKyrB,IAAIV,EAAE,GAAK,GACrB0V,EAAKzgC,KAAKyrB,IAAIV,EAAE,GAAK,GACrB2V,EAAK1gC,KAAKyrB,IAAIV,EAAE,GAAK,GAErBqV,GAASA,GAAS,OAAO3kD,cAM7B,OAAQ2kD,GACJ,IAAK,MACDn9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MACJ,IAAK,MACDz9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MACJ,IAAK,MACDz9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MACJ,IAAK,MACDz9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MACJ,IAAK,MACDz9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MACJ,IAAK,MACDz9B,EAAO,GAAKu9B,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACrCz9B,EAAO,GAAKo9B,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACrCz9B,EAAO,GAAKo9B,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACrCt9B,EAAO,GAAKo9B,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACrC,MAEZ,EAEA,K,gDClwBIC,EAAU,KAQVC,EAAM,SAAUC,EAAQC,GAIxBrwD,KAAKowD,OAASA,GAAU,IAAI3X,EAAAA,EAI5Bz4C,KAAKqwD,UAAYA,GAAa,IAAI5X,EAAAA,CACtC,EAEA0X,EAAIxvD,UAAY,CAEZ8oB,YAAa0mC,EASbG,eAAgB,SAAUnY,EAAOz3C,GAC7B,IAAI0uD,EAAKjX,EAAMuB,OAAO9yC,MAClB+nD,EAAIxW,EAAM0M,SACVwK,EAAKrvD,KAAKowD,OAAOxpD,MACjBqoD,EAAKjvD,KAAKqwD,UAAUzpD,MAEpBk0C,EAAU7lC,EAAAA,EAAK0tC,IAAIyM,EAAIH,GAE3B,GAAgB,IAAZnU,EACA,OAAO,KAENp6C,IACDA,EAAM,IAAI+3C,EAAAA,GAEd,IAAIc,GAAKtkC,EAAAA,EAAK0tC,IAAIyM,EAAIC,GAAMV,GAAK7T,EAGjC,OAFA7lC,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOyoD,EAAIJ,GAAK1V,GACrC74C,EAAIu3B,QAAS,EACNv3B,CACX,EAMA6vD,mBAAoB,SAAUpY,GAE1B,IAAIwW,EAAI15C,EAAAA,EAAK0tC,IAAIxK,EAAMuB,OAAO9yC,MAAO5G,KAAKqwD,UAAUzpD,OACpDqO,EAAAA,EAAK2vC,YAAY5kD,KAAKqwD,UAAUzpD,MAAO5G,KAAKqwD,UAAUzpD,MAAOuxC,EAAMuB,OAAO9yC,MAAY,GAAJ+nD,GAClF3uD,KAAKqwD,UAAUp4B,QAAS,CAC5B,EAEAu2B,gBAAkB,WACd,IAAIlU,EAAIrlC,EAAAA,EAAKtH,SACb,OAAO,SAAU8gD,GACbx5C,EAAAA,EAAKmoB,IAAIkd,EAAGmU,EAAOzuD,KAAKowD,OAAOxpD,OAE/B,IAAI+f,EAAI1R,EAAAA,EAAK0tC,IAAIrI,EAAGt6C,KAAKqwD,UAAUzpD,OACnC,GAAI+f,EAAI,EACJ,OAAO1R,EAAAA,EAAK4vC,SAAS7kD,KAAKowD,OAAOxpD,MAAO6nD,GAG5C,IAAIoB,EAAK56C,EAAAA,EAAKu7C,WAAWlW,GAEzB,OAAO/qB,KAAK8sB,KAAKwT,EAAKlpC,EAAIA,EAC9B,CACJ,CAdkB,GAuBlB8pC,gBAAkB,WACd,IAAInW,EAAIrlC,EAAAA,EAAKtH,SACb,OAAO,SAAU0zC,EAAQpH,EAAQv5C,GAC7B,IAAI0vD,EAASpwD,KAAKowD,OAAOxpD,MACrBypD,EAAYrwD,KAAKqwD,UAAUzpD,MAC/By6C,EAASA,EAAOz6C,MAChBqO,EAAAA,EAAKmoB,IAAIkd,EAAG+G,EAAQ+O,GAEpB,IAAIzpC,EAAI1R,EAAAA,EAAK0tC,IAAIrI,EAAG+V,GAEhBR,EAAK56C,EAAAA,EAAKovC,cAAc/J,GAExBoW,EAAKb,EAAKlpC,EAAIA,EAEdgqC,EAAK1W,EAASA,EAElB,KAAIyW,EAAKC,GAAT,CAIA,IAAIlyC,EAAI8Q,KAAK8sB,KAAKsU,EAAKD,GAEnBE,EAAKjqC,EAAIlI,EAEToyC,EAAKlqC,EAAIlI,EAKb,OAHK/d,IACDA,EAAM,IAAI+3C,EAAAA,GAEVmY,EAAK,EACDC,EAAK,EACE,MAGP57C,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOwpD,EAAQC,EAAWQ,GACxCnwD,IAIXuU,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOwpD,EAAQC,EAAWO,GACxClwD,EAtBX,CAwBJ,CACJ,CA3CkB,GAoDlB+kB,qBAAsB,SAAUwkC,EAAMvpD,GAClC,IASIowD,EAAMC,EAAMC,EAAOC,EAAOC,EAAOC,EATjCC,EAAMpxD,KAAKqwD,UAAUzpD,MACrBwpD,EAASpwD,KAAKowD,OAAOxpD,MACrB8d,EAAMulC,EAAKvlC,IAAI9d,MACfie,EAAMolC,EAAKplC,IAAIje,MAEfyqD,EAAU,EAAID,EAAI,GAClBE,EAAU,EAAIF,EAAI,GAClBG,EAAU,EAAIH,EAAI,GAoBtB,GAjBIC,GAAW,GACXP,GAAQpsC,EAAI,GAAK0rC,EAAO,IAAMiB,EAC9BN,GAAQlsC,EAAI,GAAKurC,EAAO,IAAMiB,IAG9BN,GAAQrsC,EAAI,GAAK0rC,EAAO,IAAMiB,EAC9BP,GAAQjsC,EAAI,GAAKurC,EAAO,IAAMiB,GAE9BC,GAAW,GACXN,GAAStsC,EAAI,GAAK0rC,EAAO,IAAMkB,EAC/BL,GAASpsC,EAAI,GAAKurC,EAAO,IAAMkB,IAG/BL,GAASvsC,EAAI,GAAK0rC,EAAO,IAAMkB,EAC/BN,GAASnsC,EAAI,GAAKurC,EAAO,IAAMkB,GAG9BR,EAAOG,GAAWD,EAAQD,EAC3B,OAAO,KAmBX,IAhBIC,EAAQF,GAAQA,IAASA,KACzBA,EAAOE,IAEPC,EAAQF,GAAQA,IAASA,KACzBA,EAAOE,GAGPM,GAAW,GACXL,GAASxsC,EAAI,GAAK0rC,EAAO,IAAMmB,EAC/BJ,GAAStsC,EAAI,GAAKurC,EAAO,IAAMmB,IAG/BJ,GAASzsC,EAAI,GAAK0rC,EAAO,IAAMmB,EAC/BL,GAASrsC,EAAI,GAAKurC,EAAO,IAAMmB,GAG9BT,EAAOK,GAAWD,EAAQH,EAC3B,OAAO,KASX,IANIG,EAAQJ,GAAQA,IAASA,KACzBA,EAAOI,IAEPC,EAAQJ,GAAQA,IAASA,KACzBA,EAAOI,GAEPJ,EAAO,EACP,OAAO,KAGX,IAAIxX,EAAIuX,GAAQ,EAAIA,EAAOC,EAM3B,OAJKrwD,IACDA,EAAM,IAAI+3C,EAAAA,GAEdxjC,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOwpD,EAAQgB,EAAK7X,GAClC74C,CACX,EAaA8wD,kBAAoB,WAEhB,IAAIC,EAAMx8C,EAAAA,EAAKtH,SACX+jD,EAAMz8C,EAAAA,EAAKtH,SACXgkD,EAAK18C,EAAAA,EAAKtH,SACVikD,EAAS38C,EAAAA,EAAKtH,SAElB,OAAO,SAAU8Q,EAAGkI,EAAGs1B,EAAG4V,EAAanxD,EAAKoxD,GACxC,IAAIV,EAAMpxD,KAAKqwD,UAAUzpD,MACrBwpD,EAASpwD,KAAKowD,OAAOxpD,MACzB6X,EAAIA,EAAE7X,MACN+f,EAAIA,EAAE/f,MACNq1C,EAAIA,EAAEr1C,MAENqO,EAAAA,EAAKmoB,IAAIq0B,EAAK9qC,EAAGlI,GACjBxJ,EAAAA,EAAKmoB,IAAIs0B,EAAKzV,EAAGx9B,GAEjBxJ,EAAAA,EAAK2tC,MAAMgP,EAAQF,EAAKN,GAExB,IAAI1V,EAAMzmC,EAAAA,EAAK0tC,IAAI8O,EAAKG,GAExB,GAAIC,GACA,GAAInW,GAAOwU,EACP,OAAO,UAIX,GAAIxU,GAAOwU,GAAWxU,EAAMwU,EACxB,OAAO,KAIfj7C,EAAAA,EAAKmoB,IAAIu0B,EAAIvB,EAAQ3xC,GACrB,IAAIjB,EAAIvI,EAAAA,EAAK0tC,IAAIiP,EAAQD,GAAMjW,EAC/B,GAAIl+B,EAAI,GAAKA,EAAI,EACb,OAAO,KAGXvI,EAAAA,EAAK2tC,MAAMgP,EAAQH,EAAKE,GACxB,IAAIrX,EAAIrlC,EAAAA,EAAK0tC,IAAIyO,EAAKQ,GAAUlW,EAEhC,GAAIpB,EAAI,GAAKA,EAAI,GAAM98B,EAAI88B,EAAI,EAC3B,OAAO,KAGXrlC,EAAAA,EAAK2tC,MAAMgP,EAAQH,EAAKC,GACxB,IAAInY,GAAKtkC,EAAAA,EAAK0tC,IAAIgP,EAAIC,GAAUlW,EAEhC,OAAInC,EAAI,EACG,MAGN74C,IACDA,EAAM,IAAI+3C,EAAAA,GAEVqZ,GACArZ,EAAAA,EAAQ9zB,IAAImtC,EAAe,EAAIt0C,EAAI88B,EAAI98B,EAAG88B,GAE9CrlC,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAOwpD,EAAQgB,EAAK7X,GAElC74C,EACX,CACJ,CA9DoB,GAoEpBw4C,eAAgB,SAAU5+B,GACtBm+B,EAAAA,EAAQ12B,IAAI/hB,KAAKqwD,UAAWrwD,KAAKqwD,UAAWrwD,KAAKowD,QACjD3X,EAAAA,EAAQpjC,cAAcrV,KAAKowD,OAAQpwD,KAAKowD,OAAQ91C,GAChDm+B,EAAAA,EAAQpjC,cAAcrV,KAAKqwD,UAAWrwD,KAAKqwD,UAAW/1C,GAEtDm+B,EAAAA,EAAQrb,IAAIp9B,KAAKqwD,UAAWrwD,KAAKqwD,UAAWrwD,KAAKowD,QACjD3X,EAAAA,EAAQoK,UAAU7iD,KAAKqwD,UAAWrwD,KAAKqwD,UAC3C,EAMAl5C,KAAM,SAAU46C,GACZtZ,EAAAA,EAAQthC,KAAKnX,KAAKowD,OAAQ2B,EAAI3B,QAC9B3X,EAAAA,EAAQthC,KAAKnX,KAAKqwD,UAAW0B,EAAI1B,UACrC,EAMAtvD,MAAO,WACH,IAAIgxD,EAAM,IAAI5B,EAEd,OADA4B,EAAI56C,KAAKnX,MACF+xD,CACX,GAGJ,K,uCCtTIvxC,EAAU,SAAS/N,EAAGC,GAEtBD,EAAIA,GAAK,EACTC,EAAIA,GAAK,EAST1S,KAAK4G,MAAQgwC,EAAAA,EAAK6L,WAAWhwC,EAAGC,GAShC1S,KAAKi4B,QAAS,CAClB,EAwWA,GAtWAzX,EAAQ7f,UAAY,CAEhB8oB,YAAajJ,EAObuB,IAAK,SAAS4E,GAGV,OAFAiwB,EAAAA,EAAK70B,IAAI/hB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA2kB,IAAK,SAASlS,EAAGC,GAIb,OAHA1S,KAAK4G,MAAM,GAAK6L,EAChBzS,KAAK4G,MAAM,GAAK8L,EAChB1S,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqtD,SAAU,SAASrvC,GAKf,OAJAhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GAEpBhe,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAO,IAAIyf,EAAQxgB,KAAKyS,EAAGzS,KAAK0S,EACpC,EAOAyE,KAAM,SAASwP,GAGX,OAFAiwB,EAAAA,EAAKz/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA4iD,MAAO,SAASliD,EAAKimB,GAGjB,OAFAiwB,EAAAA,EAAKgM,MAAMliD,EAAIkG,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNj4B,IACX,EAOA8kD,KAAM,SAASn+B,GACX,OAAOiwB,EAAAA,EAAKkO,KAAK9kD,KAAK4G,MAAO+f,EAAE/f,MACnC,EAOAi+C,SAAU,SAASl+B,GACf,OAAOiwB,EAAAA,EAAKiO,SAAS7kD,KAAK4G,MAAO+f,EAAE/f,MACvC,EAOA+9C,IAAK,SAASh+B,GAGV,OAFAiwB,EAAAA,EAAK+N,IAAI3kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kD,OAAQ,SAAS/9B,GAGb,OAFAiwB,EAAAA,EAAK8N,OAAO1kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACtC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2iD,IAAK,SAASh8B,GACV,OAAOiwB,EAAAA,EAAK+L,IAAI3iD,KAAK4G,MAAO+f,EAAE/f,MAClC,EAMAqgB,IAAK,WACD,OAAO2vB,EAAAA,EAAK3vB,IAAIjnB,KAAK4G,MACzB,EAMAzF,OAAQ,WACJ,OAAOy1C,EAAAA,EAAKz1C,OAAOnB,KAAK4G,MAC5B,EASA29B,KAAM,SAAS9lB,EAAGkI,EAAG4yB,GAGjB,OAFA3C,EAAAA,EAAKrS,KAAKvkC,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACxCv5C,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kB,IAAK,SAASiC,GAGV,OAFAiwB,EAAAA,EAAKlyB,IAAI1kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA6kB,IAAK,SAAS8B,GAGV,OAFAiwB,EAAAA,EAAK/xB,IAAI7kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAASp1B,GAGV,OAFAiwB,EAAAA,EAAKmF,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAASiP,GAGf,OAFAiwB,EAAAA,EAAKl/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAilD,OAAQ,WAGJ,OAFArO,EAAAA,EAAKqO,OAAOjlD,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA6iD,UAAW,WAGP,OAFAjM,EAAAA,EAAKiM,UAAU7iD,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAq7C,OAAQ,SAAStf,GAGb,OAFA6a,EAAAA,EAAKyE,OAAOr7C,KAAK4G,MAAOm1B,GACxB/7B,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAASkG,GAGZ,OAFA2U,EAAAA,EAAK7a,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAOq7B,GACnCjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAQA4kD,YAAa,SAASj+B,EAAGsb,GAGrB,OAFA2U,EAAAA,EAAKgO,YAAY5kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,MAAOq7B,GAClDjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAOAglD,QAAS,SAASr+B,GACd,OAAOiwB,EAAAA,EAAKoO,QAAQhlD,KAAK4G,MAAO+f,EAAE/f,MACtC,EAOAm+C,gBAAiB,SAASp+B,GACtB,OAAOiwB,EAAAA,EAAKmO,gBAAgB/kD,KAAK4G,MAAO+f,EAAE/f,MAC9C,EAMA09C,OAAQ,WACJ,OAAO1N,EAAAA,EAAK0N,OAAOtkD,KAAK4G,MAC5B,EAMAy9C,cAAe,WACX,OAAOzN,EAAAA,EAAKyN,cAAcrkD,KAAK4G,MACnC,EAOAw2B,IAAK,SAASzW,GAGV,OAFAiwB,EAAAA,EAAKxZ,IAAIp9B,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAykD,SAAU,SAAS99B,GAGf,OAFAiwB,EAAAA,EAAK6N,SAASzkD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAmlD,cAAe,SAAS5xB,GAGpB,OAFAqjB,EAAAA,EAAKuO,cAAcnlD,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAolD,eAAgB,SAAS7xB,GAGrB,OAFAqjB,EAAAA,EAAKwO,eAAeplD,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC9C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqlD,cAAe,SAAS9xB,GAGpB,OAFAqjB,EAAAA,EAAKyO,cAAcrlD,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqV,cAAe,SAASke,GAGpB,OAFAqjB,EAAAA,EAAKvhC,cAAcrV,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAEAiL,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAIAmC,OAAOiiB,eAAgB,CAEvB,IAAIgS,EAAQxc,EAAQ7f,UAOpBoI,OAAOiiB,eAAegS,EAAO,IAAK,CAC9B3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJlvB,OAAOiiB,eAAegS,EAAO,IAAK,CAC9B3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,GAER,CAUAzX,EAAQuB,IAAM,SAASrhB,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAK70B,IAAIrhB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQmE,IAAM,SAASjkB,EAAK+R,EAAGC,GAG3B,OAFAkkC,EAAAA,EAAKjyB,IAAIjkB,EAAIkG,MAAO6L,EAAGC,GACvBhS,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQrJ,KAAO,SAASzW,EAAKimB,GAGzB,OAFAiwB,EAAAA,EAAKz/B,KAAKzW,EAAIkG,MAAO+f,EAAE/f,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQoiC,MAAQ,SAASliD,EAAK+d,EAAGkI,GAG7B,OAFAiwB,EAAAA,EAAKgM,MAAMliD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA8f,EAAQskC,KAAO,SAASrmC,EAAGkI,GACvB,OAAOiwB,EAAAA,EAAKiO,SAASpmC,EAAE7X,MAAO+f,EAAE/f,MACpC,EAOA4Z,EAAQqkC,SAAWrkC,EAAQskC,KAO3BtkC,EAAQmkC,IAAM,SAASjkD,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAK8N,OAAOhkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAClClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQkkC,OAASlkC,EAAQmkC,IAMzBnkC,EAAQmiC,IAAM,SAASlkC,EAAGkI,GACtB,OAAOiwB,EAAAA,EAAK+L,IAAIlkC,EAAE7X,MAAO+f,EAAE/f,MAC/B,EAMA4Z,EAAQyG,IAAM,SAASN,GACnB,OAAOiwB,EAAAA,EAAKz1C,OAAOwlB,EAAE/f,MACzB,EAWA4Z,EAAQ+jB,KAAO,SAAS7jC,EAAK+d,EAAGkI,EAAG4yB,GAG/B,OAFA3C,EAAAA,EAAKrS,KAAK7jC,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACvC74C,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQkE,IAAM,SAAShkB,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAKlyB,IAAIhkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQqE,IAAM,SAASnkB,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAK/xB,IAAInkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQu7B,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAKl/B,SAAShX,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQ9I,SAAW8I,EAAQu7B,IAM3Bv7B,EAAQykC,OAAS,SAASvkD,EAAK+d,GAG3B,OAFAm4B,EAAAA,EAAKqO,OAAOvkD,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA8f,EAAQqiC,UAAY,SAASniD,EAAK+d,GAG9B,OAFAm4B,EAAAA,EAAKiM,UAAUniD,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA8f,EAAQ66B,OAAS,SAAS36C,EAAKq7B,GAG3B,OAFA6a,EAAAA,EAAKyE,OAAO36C,EAAIkG,MAAOm1B,GACvBr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQub,MAAQ,SAASr7B,EAAK+d,EAAGsd,GAG7B,OAFA6a,EAAAA,EAAK7a,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAOm1B,GAC/Br7B,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQokC,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAGtC,OAFA6a,EAAAA,EAAKgO,YAAYlkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAOm1B,GAC9Cr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAMA8f,EAAQwkC,QAAU,SAASvmC,EAAGkI,GAC1B,OAAOiwB,EAAAA,EAAKoO,QAAQvmC,EAAE7X,MAAO+f,EAAE/f,MACnC,EAOA4Z,EAAQukC,gBAAkBvkC,EAAQwkC,QAMlCxkC,EAAQ8jC,OAAS,SAAS7lC,GACtB,OAAOm4B,EAAAA,EAAK0N,OAAO7lC,EAAE7X,MACzB,EAMA4Z,EAAQ6jC,cAAgB7jC,EAAQ8jC,OAQhC9jC,EAAQ4c,IAAM,SAAS18B,EAAK+d,EAAGkI,GAG3B,OAFAiwB,EAAAA,EAAK6N,SAAS/jD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA8f,EAAQikC,SAAWjkC,EAAQ4c,IAO3B5c,EAAQ2kC,cAAgB,SAASzkD,EAAK+d,EAAG8U,GAGrC,OAFAqjB,EAAAA,EAAKuO,cAAczkD,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQ4kC,eAAiB,SAAS1kD,EAAK+d,EAAG8U,GAGtC,OAFAqjB,EAAAA,EAAKwO,eAAe1kD,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OAC1ClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQ6kC,cAAgB,SAAS3kD,EAAK+d,EAAG8U,GAGrC,OAFAqjB,EAAAA,EAAKyO,cAAc3kD,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA8f,EAAQnL,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAGrC,OAFAqjB,EAAAA,EAAKvhC,cAAc3U,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,qCC/sBI+3C,EAAU,SAAShmC,EAAGC,EAAG2nC,GAEzB5nC,EAAIA,GAAK,EACTC,EAAIA,GAAK,EACT2nC,EAAIA,GAAK,EASTr6C,KAAK4G,MAAQqO,EAAAA,EAAKwtC,WAAWhwC,EAAGC,EAAG2nC,GASnCr6C,KAAKi4B,QAAS,CAClB,EAEAwgB,EAAQ93C,UAAY,CAEhB8oB,YAAagvB,EAOb12B,IAAK,SAAU4E,GAGX,OAFA1R,EAAAA,EAAK8M,IAAI/hB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EASA2kB,IAAK,SAAUlS,EAAGC,EAAG2nC,GAKjB,OAJAr6C,KAAK4G,MAAM,GAAK6L,EAChBzS,KAAK4G,MAAM,GAAK8L,EAChB1S,KAAK4G,MAAM,GAAKyzC,EAChBr6C,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqtD,SAAU,SAAUrvC,GAMhB,OALAhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GAEpBhe,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAO,IAAI03C,EAAQz4C,KAAKyS,EAAGzS,KAAK0S,EAAG1S,KAAKq6C,EAC5C,EAOAljC,KAAM,SAAUwP,GAGZ,OAFA1R,EAAAA,EAAKkC,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAQA4iD,MAAO,SAAUnkC,EAAGkI,GAGhB,OAFA1R,EAAAA,EAAK2tC,MAAM5iD,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAClC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA8kD,KAAM,SAAUn+B,GACZ,OAAO1R,EAAAA,EAAK6vC,KAAK9kD,KAAK4G,MAAO+f,EAAE/f,MACnC,EAOAi+C,SAAU,SAAUl+B,GAChB,OAAO1R,EAAAA,EAAK4vC,SAAS7kD,KAAK4G,MAAO+f,EAAE/f,MACvC,EAOA+9C,IAAK,SAAUh+B,GAGX,OAFA1R,EAAAA,EAAK0vC,IAAI3kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kD,OAAQ,SAAU/9B,GAGd,OAFA1R,EAAAA,EAAKyvC,OAAO1kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACtC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2iD,IAAK,SAAUh8B,GACX,OAAO1R,EAAAA,EAAK0tC,IAAI3iD,KAAK4G,MAAO+f,EAAE/f,MAClC,EAMAqgB,IAAK,WACD,OAAOhS,EAAAA,EAAKgS,IAAIjnB,KAAK4G,MACzB,EAMAzF,OAAQ,WACJ,OAAO8T,EAAAA,EAAK9T,OAAOnB,KAAK4G,MAC5B,EAQA29B,KAAM,SAAU9lB,EAAGkI,EAAG4yB,GAGlB,OAFAtkC,EAAAA,EAAKsvB,KAAKvkC,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACxCv5C,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kB,IAAK,SAAUiC,GAGX,OAFA1R,EAAAA,EAAKyP,IAAI1kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA6kB,IAAK,SAAU8B,GAGX,OAFA1R,EAAAA,EAAK4P,IAAI7kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAAUp1B,GAGX,OAFA1R,EAAAA,EAAK8mC,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAAUiP,GAGhB,OAFA1R,EAAAA,EAAKyC,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAilD,OAAQ,WAGJ,OAFAhwC,EAAAA,EAAKgwC,OAAOjlD,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA6iD,UAAW,WAGP,OAFA5tC,EAAAA,EAAK4tC,UAAU7iD,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAq7C,OAAQ,SAAUtf,GAGd,OAFA9mB,EAAAA,EAAKomC,OAAOr7C,KAAK4G,MAAOm1B,GACxB/7B,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAAUkG,GAGb,OAFAhtB,EAAAA,EAAK8mB,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAOq7B,GACnCjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAQA4kD,YAAa,SAAUj+B,EAAGsb,GAGtB,OAFAhtB,EAAAA,EAAK2vC,YAAY5kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,MAAOq7B,GAClDjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAOAglD,QAAS,SAAUr+B,GACf,OAAO1R,EAAAA,EAAK+vC,QAAQhlD,KAAK4G,MAAO+f,EAAE/f,MACtC,EAOAm+C,gBAAiB,SAAUp+B,GACvB,OAAO1R,EAAAA,EAAK8vC,gBAAgB/kD,KAAK4G,MAAO+f,EAAE/f,MAC9C,EAMA09C,OAAQ,WACJ,OAAOrvC,EAAAA,EAAKqvC,OAAOtkD,KAAK4G,MAC5B,EAMAy9C,cAAe,WACX,OAAOpvC,EAAAA,EAAKovC,cAAcrkD,KAAK4G,MACnC,EAOAw2B,IAAK,SAAUzW,GAGX,OAFA1R,EAAAA,EAAKmoB,IAAIp9B,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAykD,SAAU,SAAU99B,GAGhB,OAFA1R,EAAAA,EAAKwvC,SAASzkD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqlD,cAAe,SAAU9xB,GAGrB,OAFAte,EAAAA,EAAKowC,cAAcrlD,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqV,cAAe,SAAUke,GAGrB,OAFAte,EAAAA,EAAKI,cAAcrV,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA2lD,cAAe,SAAUpH,GAGrB,OAFAtpC,EAAAA,EAAK0wC,cAAc3lD,KAAK4G,MAAO5G,KAAK4G,MAAO23C,EAAE33C,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2lB,gBAAiB,SAAU4N,GACvB,IAAI+mB,EAAIt6C,KAAK4G,MAIb,GAHA2sB,EAAIA,EAAE3sB,MAGQ,IAAV2sB,EAAE,IAAW,CACb,IAAIirB,GAAK,EAAIlE,EAAE,GACfA,EAAE,GAAK/mB,EAAE,GAAK+mB,EAAE,GAAKkE,EACrBlE,EAAE,GAAK/mB,EAAE,GAAK+mB,EAAE,GAAKkE,EACrBlE,EAAE,IAAM/mB,EAAE,IAAM+mB,EAAE,GAAK/mB,EAAE,KAAOirB,CACpC,MAEIlE,EAAE,GAAK/mB,EAAE,GAAK+mB,EAAE,GAAK/mB,EAAE,IACvB+mB,EAAE,GAAK/mB,EAAE,GAAK+mB,EAAE,GAAK/mB,EAAE,IACvB+mB,EAAE,GAAK/mB,EAAE,IAAM+mB,EAAE,GAAK/mB,EAAE,IAI5B,OAFAvzB,KAAKi4B,QAAS,EAEPj4B,IACX,EAEAgyD,cAAe,SAASzT,EAAGoR,GACvBlX,EAAQuZ,cAAchyD,KAAMu+C,EAAGoR,EACnC,EAEAsC,cAAe,SAAU1+B,EAAGo8B,GACxBlX,EAAQwZ,cAAcjyD,KAAMuzB,EAAGo8B,EACnC,EAEA1kD,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAGJ,IAAIokB,EAAiBjiB,OAAOiiB,eAE5B,GAAIA,EAAgB,CAEhB,IAAIgS,EAAQyb,EAAQ93C,UAOpBqqB,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,GAER,CA4SA,SAASi6B,EAAMhrD,EAAKwd,EAAKG,GACrB,OAAO3d,EAAMwd,EAAMA,EAAOxd,EAAM2d,EAAMA,EAAM3d,CAChD,CAnSAuxC,EAAQ12B,IAAM,SAASrhB,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAK8M,IAAIrhB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASA+3C,EAAQ9zB,IAAM,SAASjkB,EAAK+R,EAAGC,EAAG2nC,GAC9BplC,EAAAA,EAAK0P,IAAIjkB,EAAIkG,MAAO6L,EAAGC,EAAG2nC,GAC1B35C,EAAIu3B,QAAS,CACjB,EAOAwgB,EAAQthC,KAAO,SAASzW,EAAKimB,GAGzB,OAFA1R,EAAAA,EAAKkC,KAAKzW,EAAIkG,MAAO+f,EAAE/f,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQmK,MAAQ,SAASliD,EAAK+d,EAAGkI,GAG7B,OAFA1R,EAAAA,EAAK2tC,MAAMliD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACjClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+3C,EAAQqM,KAAO,SAASrmC,EAAGkI,GACvB,OAAO1R,EAAAA,EAAK4vC,SAASpmC,EAAE7X,MAAO+f,EAAE/f,MACpC,EAQA6xC,EAAQoM,SAAWpM,EAAQqM,KAQ3BrM,EAAQkM,IAAM,SAASjkD,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAKyvC,OAAOhkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAClClG,EAAIu3B,QAAS,EACNv3B,CACX,EASA+3C,EAAQiM,OAASjM,EAAQkM,IAOzBlM,EAAQkK,IAAM,SAASlkC,EAAGkI,GACtB,OAAO1R,EAAAA,EAAK0tC,IAAIlkC,EAAE7X,MAAO+f,EAAE/f,MAC/B,EAMA6xC,EAAQxxB,IAAM,SAASN,GACnB,OAAO1R,EAAAA,EAAK9T,OAAOwlB,EAAE/f,MACzB,EAWA6xC,EAAQlU,KAAO,SAAS7jC,EAAK+d,EAAGkI,EAAG4yB,GAG/B,OAFAtkC,EAAAA,EAAKsvB,KAAK7jC,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACvC74C,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+3C,EAAQ/zB,IAAM,SAAShkB,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAKyP,IAAIhkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQ5zB,IAAM,SAASnkB,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAK4P,IAAInkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+3C,EAAQsD,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAKyC,SAAShX,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQ/gC,SAAW+gC,EAAQsD,IAM3BtD,EAAQwM,OAAS,SAASvkD,EAAK+d,GAG3B,OAFAxJ,EAAAA,EAAKgwC,OAAOvkD,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA+3C,EAAQoK,UAAY,SAASniD,EAAK+d,GAG9B,OAFAxJ,EAAAA,EAAK4tC,UAAUniD,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAMA+3C,EAAQ4C,OAAS,SAAS36C,EAAKq7B,GAG3B,OAFA9mB,EAAAA,EAAKomC,OAAO36C,EAAIkG,MAAOm1B,GACvBr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+3C,EAAQ1c,MAAQ,SAASr7B,EAAK+d,EAAGsd,GAG7B,OAFA9mB,EAAAA,EAAK8mB,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAOm1B,GAC/Br7B,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQmM,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAGtC,OAFA9mB,EAAAA,EAAK2vC,YAAYlkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAOm1B,GAC9Cr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAMA+3C,EAAQuM,QAAU,SAASvmC,EAAGkI,GAC1B,OAAO1R,EAAAA,EAAK+vC,QAAQvmC,EAAE7X,MAAO+f,EAAE/f,MACnC,EAOA6xC,EAAQsM,gBAAkBtM,EAAQuM,QAKlCvM,EAAQ6L,OAAS,SAAS7lC,GACtB,OAAOxJ,EAAAA,EAAKqvC,OAAO7lC,EAAE7X,MACzB,EAMA6xC,EAAQ4L,cAAgB5L,EAAQ6L,OAQhC7L,EAAQrb,IAAM,SAAS18B,EAAK+d,EAAGkI,GAG3B,OAFA1R,EAAAA,EAAKwvC,SAAS/jD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQgM,SAAWhM,EAAQrb,IAQ3Bqb,EAAQ4M,cAAgB,SAAS3kD,EAAK+d,EAAG8U,GAGrC,OAFAte,EAAAA,EAAKowC,cAAc3kD,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQA+3C,EAAQpjC,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAGrC,OAFAte,EAAAA,EAAKI,cAAc3U,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAOA+3C,EAAQkN,cAAgB,SAASjlD,EAAK+d,EAAG8/B,GAGrC,OAFAtpC,EAAAA,EAAK0wC,cAAcjlD,EAAIkG,MAAO6X,EAAE7X,MAAO23C,EAAE33C,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAKA,IAAIyxD,EAAQ5iC,KAAK4iC,MACbC,EAAO7iC,KAAK6iC,KACZ9R,EAAM/wB,KAAK+wB,IAMf7H,EAAQuZ,cAAgB,SAAUtxD,EAAK69C,EAAGoR,GACtCjvD,EAAIu3B,QAAS,EACbsmB,EAAIA,EAAE33C,MAEN,IAAI4rB,EAAS9xB,EAAIkG,MACb6L,EAAI8rC,EAAE,GAAI7rC,EAAI6rC,EAAE,GAAIlE,EAAIkE,EAAE,GAAIC,EAAID,EAAE,GACpCE,EAAKhsC,EAAIA,EACTisC,EAAKhsC,EAAIA,EACTisC,EAAKtE,EAAIA,EACTgY,EAAK7T,EAAIA,EAETmR,GAASA,GAAS,OAAO3kD,cAE7B,OAAQ2kD,GACJ,IAAK,MACDn9B,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI+rC,EAAI9rC,EAAI2nC,GAAKgY,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAKz/C,EAAI4nC,EAAI3nC,EAAI8rC,IAAM,EAAG,IACjDhsB,EAAO,GAAK2/B,EAAM,GAAK9X,EAAImE,EAAI/rC,EAAIC,GAAK2/C,EAAK5T,EAAKC,EAAKC,GACvD,MACJ,IAAK,MACDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAKz/C,EAAI+rC,EAAI9rC,EAAI2nC,IAAM,EAAG,IACjD7nB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI4nC,EAAI3nC,EAAI8rC,GAAK6T,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAIC,EAAI2nC,EAAImE,GAAK6T,EAAK5T,EAAKC,EAAKC,GACvD,MACJ,IAAK,MACDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAKz/C,EAAI+rC,EAAI9rC,EAAI2nC,IAAM,EAAG,IACjD7nB,EAAO,GAAK2/B,EAAM,GAAKz/C,EAAI8rC,EAAInE,EAAI5nC,GAAK4/C,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK2/B,EAAM,GAAK9X,EAAImE,EAAI/rC,EAAIC,GAAK2/C,EAAK5T,EAAKC,EAAKC,GACvD,MACJ,IAAK,MACDnsB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI+rC,EAAInE,EAAI3nC,GAAK2/C,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAKx/C,EAAI8rC,EAAI/rC,EAAI4nC,IAAM,EAAG,IACjD7nB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAIC,EAAI2nC,EAAImE,GAAK6T,EAAK5T,EAAKC,EAAKC,GACvD,MACJ,IAAK,MACDnsB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI+rC,EAAInE,EAAI3nC,GAAK2/C,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK2/B,EAAM,GAAKz/C,EAAI8rC,EAAI/rC,EAAI4nC,GAAKgY,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAKz/C,EAAIC,EAAI2nC,EAAImE,IAAM,EAAG,IACjD,MACJ,IAAK,MACDhsB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI+rC,EAAI9rC,EAAI2nC,GAAKgY,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK2/B,EAAM,GAAK1/C,EAAI4nC,EAAI3nC,EAAI8rC,GAAK6T,EAAK5T,EAAKC,EAAKC,GACvDnsB,EAAO,GAAK4/B,EAAKF,EAAM,GAAK7X,EAAImE,EAAI/rC,EAAIC,IAAM,EAAG,IACjD,MACJ,QACIhB,QAAQ0K,KAAK,iBAAmBuzC,GAExC,OAAOjvD,CACX,EAMA+3C,EAAQwZ,cAAgB,SAAUvxD,EAAK6yB,EAAGo8B,GAEtC,IAAI2C,EAAK/+B,EAAE3sB,MACP6lD,EAAM6F,EAAG,GAAI5F,EAAM4F,EAAG,GAAI3F,EAAM2F,EAAG,GACnCC,EAAMD,EAAG,GAAIE,EAAMF,EAAG,GAAIG,EAAMH,EAAG,GACnCI,EAAMJ,EAAG,GAAIK,EAAML,EAAG,GAAIM,EAAMN,EAAG,GACnC9/B,EAAS9xB,EAAIkG,MAEb+oD,GAASA,GAAS,OAAO3kD,cAE7B,OAAQ2kD,GACJ,IAAK,MACDn9B,EAAO,GAAK4/B,EAAKF,EAAMvF,GAAM,EAAG,IAC5BrM,EAAIqM,GAAO,QACXn6B,EAAO,GAAK2/B,GAAOM,EAAKG,GACxBpgC,EAAO,GAAK2/B,GAAOzF,EAAKD,KAGxBj6B,EAAO,GAAK2/B,EAAMQ,EAAKH,GACvBhgC,EAAO,GAAK,GAEhB,MACJ,IAAK,MACDA,EAAO,GAAK4/B,GAAMF,EAAMO,GAAM,EAAG,IAC7BnS,EAAImS,GAAO,QACXjgC,EAAO,GAAK2/B,EAAMxF,EAAKiG,GACvBpgC,EAAO,GAAK2/B,EAAMI,EAAKC,KAGvBhgC,EAAO,GAAK2/B,GAAOO,EAAKjG,GACxBj6B,EAAO,GAAK,GAEhB,MACJ,IAAK,MACDA,EAAO,GAAK4/B,EAAKF,EAAMS,GAAM,EAAG,IAC5BrS,EAAIqS,GAAO,QACXngC,EAAO,GAAK2/B,GAAOO,EAAKE,GACxBpgC,EAAO,GAAK2/B,GAAOzF,EAAK8F,KAGxBhgC,EAAO,GAAK,EACZA,EAAO,GAAK2/B,EAAMI,EAAK9F,IAE3B,MACJ,IAAK,MACDj6B,EAAO,GAAK4/B,GAAMF,EAAMQ,GAAM,EAAG,IAC7BpS,EAAIoS,GAAO,QACXlgC,EAAO,GAAK2/B,EAAMQ,EAAKC,GACvBpgC,EAAO,GAAK2/B,EAAMI,EAAK9F,KAGvBj6B,EAAO,GAAK,EACZA,EAAO,GAAK2/B,GAAOzF,EAAK8F,IAE5B,MACJ,IAAK,MACDhgC,EAAO,GAAK4/B,EAAKF,EAAMK,GAAM,EAAG,IAC5BjS,EAAIiS,GAAO,QACX//B,EAAO,GAAK2/B,GAAOM,EAAKD,GACxBhgC,EAAO,GAAK2/B,GAAOO,EAAKjG,KAGxBj6B,EAAO,GAAK,EACZA,EAAO,GAAK2/B,EAAMxF,EAAKiG,IAE3B,MACJ,IAAK,MACDpgC,EAAO,GAAK4/B,GAAMF,EAAMxF,GAAM,EAAG,IAC7BpM,EAAIoM,GAAO,QACXl6B,EAAO,GAAK2/B,EAAMQ,EAAKH,GACvBhgC,EAAO,GAAK2/B,EAAMxF,EAAKF,KAGvBj6B,EAAO,GAAK2/B,GAAOM,EAAKG,GACxBpgC,EAAO,GAAK,GAEhB,MACJ,QACI9gB,QAAQ0K,KAAK,iBAAmBuzC,GAIxC,OAFAjvD,EAAIu3B,QAAS,EAENv3B,CACX,EAEAqI,OAAO8pD,iBAAiBpa,EAAS,CAM7BC,WAAY,CACRr5B,IAAK,WACD,OAAO,IAAIo5B,EAAQ,EAAG,EAAG,EAC7B,GAOJG,WAAY,CACRv5B,IAAK,WACD,OAAO,IAAIo5B,GAAS,EAAG,EAAG,EAC9B,GAOJI,WAAY,CACRx5B,IAAK,WACD,OAAO,IAAIo5B,EAAQ,EAAG,EAAG,EAC7B,GAOJM,WAAY,CACR15B,IAAK,WACD,OAAO,IAAIo5B,EAAQ,GAAI,EAAG,EAC9B,GAOJO,WAAY,CACR35B,IAAK,WACD,OAAO,IAAIo5B,EAAQ,EAAG,EAAG,EAC7B,GAMJQ,WAAY,CACR55B,IAAK,WACD,OAAO,IAAIo5B,EAAQ,EAAG,GAAI,EAC9B,GAOJqa,GAAI,CACAzzC,IAAK,WACD,OAAO,IAAIo5B,EAAQ,EAAG,EAAG,EAC7B,GAOJ5T,KAAM,CACFxlB,IAAK,WACD,OAAO,IAAIo5B,CACf,KAIR,K,uCC79BIsa,EAAU,SAAStgD,EAAGC,EAAG2nC,EAAGmE,GAE5B/rC,EAAIA,GAAK,EACTC,EAAIA,GAAK,EACT2nC,EAAIA,GAAK,EACTmE,EAAIA,GAAK,EASTx+C,KAAK4G,MAAQiwC,EAAAA,EAAK4L,WAAWhwC,EAAGC,EAAG2nC,EAAGmE,GAStCx+C,KAAKi4B,QAAS,CAClB,EAEA86B,EAAQpyD,UAAY,CAEhB8oB,YAAaspC,EAObhxC,IAAK,SAAS4E,GAGV,OAFAkwB,EAAAA,EAAK90B,IAAI/hB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAUA2kB,IAAK,SAASlS,EAAGC,EAAG2nC,EAAGmE,GAMnB,OALAx+C,KAAK4G,MAAM,GAAK6L,EAChBzS,KAAK4G,MAAM,GAAK8L,EAChB1S,KAAK4G,MAAM,GAAKyzC,EAChBr6C,KAAK4G,MAAM,GAAK43C,EAChBx+C,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqtD,SAAU,SAASrvC,GAOf,OANAhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GACpBhe,KAAK4G,MAAM,GAAKoX,EAAI,GAEpBhe,KAAKi4B,QAAS,EACPj4B,IACX,EAMAe,MAAO,WACH,OAAO,IAAIgyD,EAAQ/yD,KAAKyS,EAAGzS,KAAK0S,EAAG1S,KAAKq6C,EAAGr6C,KAAKw+C,EACpD,EAOArnC,KAAM,SAASwP,GAGX,OAFAkwB,EAAAA,EAAK1/B,KAAKnX,KAAK4G,MAAO+f,EAAE/f,OACxB5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA8kD,KAAM,SAASn+B,GACX,OAAOkwB,EAAAA,EAAKiO,KAAK9kD,KAAK4G,MAAO+f,EAAE/f,MACnC,EAOAi+C,SAAU,SAASl+B,GACf,OAAOkwB,EAAAA,EAAKgO,SAAS7kD,KAAK4G,MAAO+f,EAAE/f,MACvC,EAOA+9C,IAAK,SAASh+B,GAGV,OAFAkwB,EAAAA,EAAK8N,IAAI3kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kD,OAAQ,SAAS/9B,GAGb,OAFAkwB,EAAAA,EAAK6N,OAAO1kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACtC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2iD,IAAK,SAASh8B,GACV,OAAOkwB,EAAAA,EAAK8L,IAAI3iD,KAAK4G,MAAO+f,EAAE/f,MAClC,EAMAqgB,IAAK,WACD,OAAO4vB,EAAAA,EAAK5vB,IAAIjnB,KAAK4G,MACzB,EAMAzF,OAAQ,WACJ,OAAO01C,EAAAA,EAAK11C,OAAOnB,KAAK4G,MAC5B,EAQA29B,KAAM,SAAS9lB,EAAGkI,EAAG4yB,GAGjB,OAFA1C,EAAAA,EAAKtS,KAAKvkC,KAAK4G,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACxCv5C,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0kB,IAAK,SAASiC,GAGV,OAFAkwB,EAAAA,EAAKnyB,IAAI1kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA6kB,IAAK,SAAS8B,GAGV,OAFAkwB,EAAAA,EAAKhyB,IAAI7kB,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7C,IAAK,SAASp1B,GAGV,OAFAkwB,EAAAA,EAAKkF,IAAI/7C,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA0X,SAAU,SAASiP,GAGf,OAFAkwB,EAAAA,EAAKn/B,SAAS1X,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMAilD,OAAQ,WAGJ,OAFApO,EAAAA,EAAKoO,OAAOjlD,KAAK4G,MAAO5G,KAAK4G,OAC7B5G,KAAKi4B,QAAS,EACPj4B,IACX,EAMA6iD,UAAW,WAGP,OAFAhM,EAAAA,EAAKgM,UAAU7iD,KAAK4G,MAAO5G,KAAK4G,OAChC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAq7C,OAAQ,SAAStf,GAGb,OAFA8a,EAAAA,EAAKwE,OAAOr7C,KAAK4G,MAAOm1B,GACxB/7B,KAAKi4B,QAAS,EACPj4B,IACX,EAOA+7B,MAAO,SAASkG,GAGZ,OAFA4U,EAAAA,EAAK9a,MAAM/7B,KAAK4G,MAAO5G,KAAK4G,MAAOq7B,GACnCjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAOA4kD,YAAa,SAASj+B,EAAGsb,GAGrB,OAFA4U,EAAAA,EAAK+N,YAAY5kD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,MAAOq7B,GAClDjiC,KAAKi4B,QAAS,EACPj4B,IACX,EAOAglD,QAAS,SAASr+B,GACd,OAAOkwB,EAAAA,EAAKmO,QAAQhlD,KAAK4G,MAAO+f,EAAE/f,MACtC,EAOAm+C,gBAAiB,SAASp+B,GACtB,OAAOkwB,EAAAA,EAAKkO,gBAAgB/kD,KAAK4G,MAAO+f,EAAE/f,MAC9C,EAMA09C,OAAQ,WACJ,OAAOzN,EAAAA,EAAKyN,OAAOtkD,KAAK4G,MAC5B,EAMAy9C,cAAe,WACX,OAAOxN,EAAAA,EAAKwN,cAAcrkD,KAAK4G,MACnC,EAOAw2B,IAAK,SAASzW,GAGV,OAFAkwB,EAAAA,EAAKzZ,IAAIp9B,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACnC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAykD,SAAU,SAAS99B,GAGf,OAFAkwB,EAAAA,EAAK4N,SAASzkD,KAAK4G,MAAO5G,KAAK4G,MAAO+f,EAAE/f,OACxC5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOAqV,cAAe,SAASke,GAGpB,OAFAsjB,EAAAA,EAAKxhC,cAAcrV,KAAK4G,MAAO5G,KAAK4G,MAAO2sB,EAAE3sB,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAOA2lD,cAAe,SAASpH,GAGpB,OAFA1H,EAAAA,EAAK8O,cAAc3lD,KAAK4G,MAAO5G,KAAK4G,MAAO23C,EAAE33C,OAC7C5G,KAAKi4B,QAAS,EACPj4B,IACX,EAEAiL,SAAU,WACN,MAAO,IAAMvE,MAAM/F,UAAUsC,KAAKrC,KAAKZ,KAAK4G,MAAO,KAAO,GAC9D,EAEA8mD,QAAS,WACL,OAAOhnD,MAAM/F,UAAUqnB,MAAMpnB,KAAKZ,KAAK4G,MAC3C,GAGJ,IAAIokB,EAAiBjiB,OAAOiiB,eAE5B,GAAIA,EAAgB,CAEhB,IAAIgS,EAAQ+1B,EAAQpyD,UAOpBqqB,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,IASJjN,EAAegS,EAAO,IAAK,CACvB3d,IAAK,WACD,OAAOrf,KAAK4G,MAAM,EACtB,EACA+d,IAAK,SAAUtf,GACXrF,KAAK4G,MAAM,GAAKvB,EAChBrF,KAAKi4B,QAAS,CAClB,GAER,CAUA86B,EAAQhxC,IAAM,SAASrhB,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAK90B,IAAIrhB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EASAqyD,EAAQpuC,IAAM,SAASjkB,EAAK+R,EAAGC,EAAG2nC,EAAGmE,GACjC3H,EAAAA,EAAKlyB,IAAIjkB,EAAIkG,MAAO6L,EAAGC,EAAG2nC,EAAGmE,GAC7B99C,EAAIu3B,QAAS,CACjB,EAOA86B,EAAQ57C,KAAO,SAASzW,EAAKimB,GAGzB,OAFAkwB,EAAAA,EAAK1/B,KAAKzW,EAAIkG,MAAO+f,EAAE/f,OACvBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAqyD,EAAQjO,KAAO,SAASrmC,EAAGkI,GACvB,OAAOkwB,EAAAA,EAAKgO,SAASpmC,EAAE7X,MAAO+f,EAAE/f,MACpC,EAQAmsD,EAAQlO,SAAWkO,EAAQjO,KAQ3BiO,EAAQpO,IAAM,SAASjkD,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAK6N,OAAOhkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAClClG,EAAIu3B,QAAS,EACNv3B,CACX,EASAqyD,EAAQrO,OAASqO,EAAQpO,IAOzBoO,EAAQpQ,IAAM,SAASlkC,EAAGkI,GACtB,OAAOkwB,EAAAA,EAAK8L,IAAIlkC,EAAE7X,MAAO+f,EAAE/f,MAC/B,EAMAmsD,EAAQ9rC,IAAM,SAASN,GACnB,OAAOkwB,EAAAA,EAAK11C,OAAOwlB,EAAE/f,MACzB,EAWAmsD,EAAQxuB,KAAO,SAAS7jC,EAAK+d,EAAGkI,EAAG4yB,GAG/B,OAFA1C,EAAAA,EAAKtS,KAAK7jC,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAO2yC,GACvC74C,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQruC,IAAM,SAAShkB,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAKnyB,IAAIhkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQluC,IAAM,SAASnkB,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAKhyB,IAAInkB,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OAC/BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQhX,IAAM,SAASr7C,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAKn/B,SAAShX,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EASAqyD,EAAQr7C,SAAWq7C,EAAQhX,IAO3BgX,EAAQ9N,OAAS,SAASvkD,EAAK+d,GAG3B,OAFAo4B,EAAAA,EAAKoO,OAAOvkD,EAAIkG,MAAO6X,EAAE7X,OACzBlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAqyD,EAAQlQ,UAAY,SAASniD,EAAK+d,GAG9B,OAFAo4B,EAAAA,EAAKgM,UAAUniD,EAAIkG,MAAO6X,EAAE7X,OAC5BlG,EAAIu3B,QAAS,EACNv3B,CACX,EAOAqyD,EAAQ1X,OAAS,SAAS36C,EAAKq7B,GAG3B,OAFA8a,EAAAA,EAAKwE,OAAO36C,EAAIkG,MAAOm1B,GACvBr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQh3B,MAAQ,SAASr7B,EAAK+d,EAAGsd,GAG7B,OAFA8a,EAAAA,EAAK9a,MAAMr7B,EAAIkG,MAAO6X,EAAE7X,MAAOm1B,GAC/Br7B,EAAIu3B,QAAS,EACNv3B,CACX,EASAqyD,EAAQnO,YAAc,SAASlkD,EAAK+d,EAAGkI,EAAGoV,GAGtC,OAFA8a,EAAAA,EAAK+N,YAAYlkD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,MAAOm1B,GAC9Cr7B,EAAIu3B,QAAS,EACNv3B,CACX,EAOAqyD,EAAQ/N,QAAU,SAASvmC,EAAGkI,GAC1B,OAAOkwB,EAAAA,EAAKmO,QAAQvmC,EAAE7X,MAAO+f,EAAE/f,MACnC,EAQAmsD,EAAQhO,gBAAkBgO,EAAQ/N,QAMlC+N,EAAQzO,OAAS,SAAS7lC,GACtB,OAAOo4B,EAAAA,EAAKyN,OAAO7lC,EAAE7X,MACzB,EAMAmsD,EAAQ1O,cAAgB0O,EAAQzO,OAQhCyO,EAAQ31B,IAAM,SAAS18B,EAAK+d,EAAGkI,GAG3B,OAFAkwB,EAAAA,EAAK4N,SAAS/jD,EAAIkG,MAAO6X,EAAE7X,MAAO+f,EAAE/f,OACpClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQtO,SAAWsO,EAAQ31B,IAQ3B21B,EAAQ19C,cAAgB,SAAS3U,EAAK+d,EAAG8U,GAGrC,OAFAsjB,EAAAA,EAAKxhC,cAAc3U,EAAIkG,MAAO6X,EAAE7X,MAAO2sB,EAAE3sB,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAQAqyD,EAAQpN,cAAgB,SAASjlD,EAAK+d,EAAG8/B,GAGrC,OAFA1H,EAAAA,EAAK8O,cAAcjlD,EAAIkG,MAAO6X,EAAE7X,MAAO23C,EAAE33C,OACzClG,EAAIu3B,QAAS,EACNv3B,CACX,EAEA,K,sBC9sBA,IAAI2uB,EAAW,CAEfA,aAAwB,SAAUhqB,GAC9B,OAAiC,KAAzBA,EAASA,EAAQ,EAC7B,EAEAgqB,eAA0B,SAAUhqB,GAShC,OARAA,IACAA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,GAClBA,IAEOA,CACX,EAEAgqB,kBAA6B,SAAUhqB,GACnC,OAAOkqB,KAAKC,IAAK,EAAGD,KAAKE,MAAOF,KAAKG,IAAKrqB,GAAUkqB,KAAKI,KAC7D,GAEA,K","sources":["webpack://d1/./node_modules/claygl/src/Renderable.js","webpack://d1/./node_modules/claygl/src/core/GLInfo.js","webpack://d1/./node_modules/claygl/src/gpu/GLProgram.js","webpack://d1/./node_modules/claygl/src/gpu/ProgramManager.js","webpack://d1/./node_modules/claygl/src/Renderer.js","webpack://d1/./node_modules/claygl/src/Scene.js","webpack://d1/./node_modules/claygl/src/Shader.js","webpack://d1/./node_modules/claygl/src/Texture.js","webpack://d1/./node_modules/claygl/src/Texture2D.js","webpack://d1/./node_modules/claygl/src/TextureCube.js","webpack://d1/./node_modules/claygl/src/camera/Orthographic.js","webpack://d1/./node_modules/claygl/src/camera/Perspective.js","webpack://d1/./node_modules/claygl/src/compositor/Pass.js","webpack://d1/./node_modules/claygl/src/compositor/TexturePool.js","webpack://d1/./node_modules/claygl/src/compositor/CompositorNode.js","webpack://d1/./node_modules/claygl/src/compositor/Graph.js","webpack://d1/./node_modules/claygl/src/compositor/Compositor.js","webpack://d1/./node_modules/claygl/src/compositor/SceneNode.js","webpack://d1/./node_modules/claygl/src/compositor/TextureNode.js","webpack://d1/./node_modules/claygl/src/compositor/FilterNode.js","webpack://d1/./node_modules/claygl/src/createCompositor.js","webpack://d1/./node_modules/claygl/src/compositor/createCompositor.js","webpack://d1/./node_modules/claygl/src/core/mixin/extend.js","webpack://d1/./node_modules/claygl/src/core/Base.js","webpack://d1/./node_modules/claygl/src/core/Cache.js","webpack://d1/./node_modules/claygl/src/core/LinkedList.js","webpack://d1/./node_modules/claygl/src/core/LRU.js","webpack://d1/./node_modules/claygl/src/core/color.js","webpack://d1/./node_modules/claygl/src/core/glenum.js","webpack://d1/./node_modules/claygl/src/core/mixin/notifier.js","webpack://d1/./node_modules/claygl/src/core/util.js","webpack://d1/./node_modules/claygl/src/core/request.js","webpack://d1/./node_modules/claygl/src/core/vendor.js","webpack://d1/./node_modules/claygl/src/glmatrix/index.js","webpack://d1/./node_modules/claygl/src/dep/glmatrix.js","webpack://d1/./node_modules/claygl/src/geometry/Cube.js","webpack://d1/./node_modules/claygl/src/geometry/Plane.js","webpack://d1/./node_modules/claygl/src/geometry/Sphere.js","webpack://d1/./node_modules/claygl/src/glmatrix/common.js","webpack://d1/./node_modules/claygl/src/glmatrix/mat2.js","webpack://d1/./node_modules/claygl/src/glmatrix/mat2d.js","webpack://d1/./node_modules/claygl/src/glmatrix/mat3.js","webpack://d1/./node_modules/claygl/src/glmatrix/mat4.js","webpack://d1/./node_modules/claygl/src/glmatrix/quat.js","webpack://d1/./node_modules/claygl/src/glmatrix/vec2.js","webpack://d1/./node_modules/claygl/src/glmatrix/vec3.js","webpack://d1/./node_modules/claygl/src/glmatrix/vec4.js","webpack://d1/./node_modules/claygl/src/light/Ambient.js","webpack://d1/./node_modules/claygl/src/light/AmbientCubemap.js","webpack://d1/./node_modules/claygl/src/light/AmbientSH.js","webpack://d1/./node_modules/claygl/src/light/Directional.js","webpack://d1/./node_modules/claygl/src/light/Point.js","webpack://d1/./node_modules/claygl/src/light/Spot.js","webpack://d1/./node_modules/claygl/src/math/BoundingBox.js","webpack://d1/./node_modules/claygl/src/math/Frustum.js","webpack://d1/./node_modules/claygl/src/math/Matrix2.js","webpack://d1/./node_modules/claygl/src/math/Matrix2d.js","webpack://d1/./node_modules/claygl/src/math/Matrix3.js","webpack://d1/./node_modules/claygl/src/math/Matrix4.js","webpack://d1/./node_modules/claygl/src/math/Plane.js","webpack://d1/./node_modules/claygl/src/math/Quaternion.js","webpack://d1/./node_modules/claygl/src/math/Ray.js","webpack://d1/./node_modules/claygl/src/math/Vector2.js","webpack://d1/./node_modules/claygl/src/math/Vector3.js","webpack://d1/./node_modules/claygl/src/math/Vector4.js","webpack://d1/./node_modules/claygl/src/math/util.js"],"sourcesContent":["import Node from './Node';\nimport glenum from './core/glenum';\n\n/**\n * @constructor\n * @alias clay.Renderable\n * @extends clay.Node\n */\nvar Renderable = Node.extend(/** @lends clay.Renderable# */ {\n    /**\n     * @type {clay.Material}\n     */\n    material: null,\n\n    /**\n     * @type {clay.Geometry}\n     */\n    geometry: null,\n\n    /**\n     * @type {number}\n     */\n    mode: glenum.TRIANGLES,\n\n    _renderInfo: null\n},\n/** @lends clay.Renderable.prototype */\n{\n\n    __program: null,\n\n    /**\n     * Group of received light.\n     */\n    lightGroup: 0,\n    /**\n     * Render order, Nodes with smaller value renders before nodes with larger values.\n     * @type {Number}\n     */\n    renderOrder: 0,\n\n    /**\n     * Used when mode is LINES, LINE_STRIP or LINE_LOOP\n     * @type {number}\n     */\n    // lineWidth: 1,\n\n    /**\n     * If enable culling\n     * @type {boolean}\n     */\n    culling: true,\n    /**\n     * Specify which side of polygon will be culled.\n     * Possible values:\n     *  + {@link clay.Renderable.BACK}\n     *  + {@link clay.Renderable.FRONT}\n     *  + {@link clay.Renderable.FRONT_AND_BACK}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace\n     * @type {number}\n     */\n    cullFace: glenum.BACK,\n    /**\n     * Specify which side is front face.\n     * Possible values:\n     *  + {@link clay.Renderable.CW}\n     *  + {@link clay.Renderable.CCW}\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace\n     * @type {number}\n     */\n    frontFace: glenum.CCW,\n\n    /**\n     * If enable software frustum culling\n     * @type {boolean}\n     */\n    frustumCulling: true,\n    /**\n     * @type {boolean}\n     */\n    receiveShadow: true,\n    /**\n     * @type {boolean}\n     */\n    castShadow: true,\n    /**\n     * @type {boolean}\n     */\n    ignorePicking: false,\n    /**\n     * @type {boolean}\n     */\n    ignorePreZ: false,\n\n    /**\n     * @type {boolean}\n     */\n    ignoreGBuffer: false,\n\n    /**\n     * @return {boolean}\n     */\n    isRenderable: function() {\n        // TODO Shader ?\n        return this.geometry && this.material && this.material.shader && !this.invisible\n            && this.geometry.vertexCount > 0;\n    },\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    beforeRender: function (_gl) {},\n\n    /**\n     * Before render hook\n     * @type {Function}\n     */\n    afterRender: function (_gl, renderStat) {},\n\n    getBoundingBox: function (filter, out) {\n        out = Node.prototype.getBoundingBox.call(this, filter, out);\n        if (this.geometry && this.geometry.boundingBox) {\n            out.union(this.geometry.boundingBox);\n        }\n\n        return out;\n    },\n\n    /**\n     * Clone a new renderable\n     * @function\n     * @return {clay.Renderable}\n     */\n    clone: (function() {\n        var properties = [\n            'castShadow', 'receiveShadow',\n            'mode', 'culling', 'cullFace', 'frontFace',\n            'frustumCulling',\n            'renderOrder', 'lineWidth',\n            'ignorePicking', 'ignorePreZ', 'ignoreGBuffer'\n        ];\n        return function() {\n            var renderable = Node.prototype.clone.call(this);\n\n            renderable.geometry = this.geometry;\n            renderable.material = this.material;\n\n            for (var i = 0; i < properties.length; i++) {\n                var name = properties[i];\n                // Try not to overwrite the prototype property\n                if (renderable[name] !== this[name]) {\n                    renderable[name] = this[name];\n                }\n            }\n\n            return renderable;\n        };\n    })()\n});\n\n/**\n * @type {number}\n */\nRenderable.POINTS = glenum.POINTS;\n/**\n * @type {number}\n */\nRenderable.LINES = glenum.LINES;\n/**\n * @type {number}\n */\nRenderable.LINE_LOOP = glenum.LINE_LOOP;\n/**\n * @type {number}\n */\nRenderable.LINE_STRIP = glenum.LINE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLES = glenum.TRIANGLES;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_STRIP = glenum.TRIANGLE_STRIP;\n/**\n * @type {number}\n */\nRenderable.TRIANGLE_FAN = glenum.TRIANGLE_FAN;\n/**\n * @type {number}\n */\nRenderable.BACK = glenum.BACK;\n/**\n * @type {number}\n */\nRenderable.FRONT = glenum.FRONT;\n/**\n * @type {number}\n */\nRenderable.FRONT_AND_BACK = glenum.FRONT_AND_BACK;\n/**\n * @type {number}\n */\nRenderable.CW = glenum.CW;\n/**\n * @type {number}\n */\nRenderable.CCW = glenum.CCW;\n\nexport default Renderable;\n","var EXTENSION_LIST = [\n    'OES_texture_float',\n    'OES_texture_half_float',\n    'OES_texture_float_linear',\n    'OES_texture_half_float_linear',\n    'OES_standard_derivatives',\n    'OES_vertex_array_object',\n    'OES_element_index_uint',\n    'WEBGL_compressed_texture_s3tc',\n    'WEBGL_depth_texture',\n    'EXT_texture_filter_anisotropic',\n    'EXT_shader_texture_lod',\n    'WEBGL_draw_buffers',\n    'EXT_frag_depth',\n    'EXT_sRGB',\n    'ANGLE_instanced_arrays'\n];\n\nvar PARAMETER_NAMES = [\n    'MAX_TEXTURE_SIZE',\n    'MAX_CUBE_MAP_TEXTURE_SIZE'\n];\n\nfunction GLInfo(_gl) {\n    var extensions = {};\n    var parameters = {};\n\n    // Get webgl extension\n    for (var i = 0; i < EXTENSION_LIST.length; i++) {\n        var extName = EXTENSION_LIST[i];\n        createExtension(extName);\n    }\n    // Get parameters\n    for (var i = 0; i < PARAMETER_NAMES.length; i++) {\n        var name = PARAMETER_NAMES[i];\n        parameters[name] = _gl.getParameter(_gl[name]);\n    }\n\n    this.getExtension = function (name) {\n        if (!(name in extensions)) {\n            createExtension(name);\n        }\n        return extensions[name];\n    };\n\n    this.getParameter = function (name) {\n        return parameters[name];\n    };\n\n    function createExtension(name) {\n        if (_gl.getExtension) {\n            var ext = _gl.getExtension(name);\n            if (!ext) {\n                ext = _gl.getExtension('MOZ_' + name);\n            }\n            if (!ext) {\n                ext = _gl.getExtension('WEBKIT_' + name);\n            }\n            extensions[name] = ext;\n        }\n    }\n}\n\nexport default GLInfo;\n","import vendor from '../core/vendor';\nimport Base from '../core/Base';\n\nvar SHADER_STATE_TO_ENABLE = 1;\nvar SHADER_STATE_KEEP_ENABLE = 2;\nvar SHADER_STATE_PENDING = 3;\n\n// Enable attribute operation is global to all programs\n// Here saved the list of all enabled attribute index\n// http://www.mjbshaw.com/2013/03/webgl-fixing-invalidoperation.html\nvar enabledAttributeList = {};\n\n// some util functions\nfunction addLineNumbers(string) {\n    var chunks = string.split('\\n');\n    for (var i = 0, il = chunks.length; i < il; i ++) {\n        // Chrome reports shader errors on lines\n        // starting counting from 1\n        chunks[i] = (i + 1) + ': ' + chunks[i];\n    }\n    return chunks.join('\\n');\n}\n\n// Return true or error msg if error happened\nfunction checkShaderErrorMsg(_gl, shader, shaderString) {\n    if (!_gl.getShaderParameter(shader, _gl.COMPILE_STATUS)) {\n        return [_gl.getShaderInfoLog(shader), addLineNumbers(shaderString)].join('\\n');\n    }\n}\n\nvar tmpFloat32Array16 = new vendor.Float32Array(16);\n\nvar GLProgram = Base.extend({\n\n    uniformSemantics: {},\n    attributes: {}\n\n}, function () {\n    this._locations = {};\n\n    this._textureSlot = 0;\n\n    this._program = null;\n}, {\n\n    bind: function (renderer) {\n        this._textureSlot = 0;\n        renderer.gl.useProgram(this._program);\n    },\n\n    hasUniform: function (symbol) {\n        var location = this._locations[symbol];\n        return location !== null && location !== undefined;\n    },\n\n    useTextureSlot: function (renderer, texture, slot) {\n        if (texture) {\n            renderer.gl.activeTexture(renderer.gl.TEXTURE0 + slot);\n            // Maybe texture is not loaded yet;\n            if (texture.isRenderable()) {\n                texture.bind(renderer);\n            }\n            else {\n                // Bind texture to null\n                texture.unbind(renderer);\n            }\n        }\n    },\n\n    currentTextureSlot: function () {\n        return this._textureSlot;\n    },\n\n    resetTextureSlot: function (slot) {\n        this._textureSlot = slot || 0;\n    },\n\n    takeCurrentTextureSlot: function (renderer, texture) {\n        var textureSlot = this._textureSlot;\n\n        this.useTextureSlot(renderer, texture, textureSlot);\n\n        this._textureSlot++;\n\n        return textureSlot;\n    },\n\n    setUniform: function (_gl, type, symbol, value) {\n        var locationMap = this._locations;\n        var location = locationMap[symbol];\n        // Uniform is not existed in the shader\n        if (location === null || location === undefined) {\n            return false;\n        }\n\n        switch (type) {\n            case 'm4':\n                if (!(value instanceof Float32Array)) {\n                    // Use Float32Array is much faster than array when uniformMatrix4fv.\n                    for (var i = 0; i < value.length; i++) {\n                        tmpFloat32Array16[i] = value[i];\n                    }\n                    value = tmpFloat32Array16;\n                }\n                _gl.uniformMatrix4fv(location, false, value);\n                break;\n            case '2i':\n                _gl.uniform2i(location, value[0], value[1]);\n                break;\n            case '2f':\n                _gl.uniform2f(location, value[0], value[1]);\n                break;\n            case '3i':\n                _gl.uniform3i(location, value[0], value[1], value[2]);\n                break;\n            case '3f':\n                _gl.uniform3f(location, value[0], value[1], value[2]);\n                break;\n            case '4i':\n                _gl.uniform4i(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '4f':\n                _gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n                break;\n            case '1i':\n                _gl.uniform1i(location, value);\n                break;\n            case '1f':\n                _gl.uniform1f(location, value);\n                break;\n            case '1fv':\n                _gl.uniform1fv(location, value);\n                break;\n            case '1iv':\n                _gl.uniform1iv(location, value);\n                break;\n            case '2iv':\n                _gl.uniform2iv(location, value);\n                break;\n            case '2fv':\n                _gl.uniform2fv(location, value);\n                break;\n            case '3iv':\n                _gl.uniform3iv(location, value);\n                break;\n            case '3fv':\n                _gl.uniform3fv(location, value);\n                break;\n            case '4iv':\n                _gl.uniform4iv(location, value);\n                break;\n            case '4fv':\n                _gl.uniform4fv(location, value);\n                break;\n            case 'm2':\n            case 'm2v':\n                _gl.uniformMatrix2fv(location, false, value);\n                break;\n            case 'm3':\n            case 'm3v':\n                _gl.uniformMatrix3fv(location, false, value);\n                break;\n            case 'm4v':\n                // Raw value\n                if (Array.isArray(value) && Array.isArray(value[0])) {\n                    var array = new vendor.Float32Array(value.length * 16);\n                    var cursor = 0;\n                    for (var i = 0; i < value.length; i++) {\n                        var item = value[i];\n                        for (var j = 0; j < 16; j++) {\n                            array[cursor++] = item[j];\n                        }\n                    }\n                    _gl.uniformMatrix4fv(location, false, array);\n                }\n                else {   // ArrayBufferView\n                    _gl.uniformMatrix4fv(location, false, value);\n                }\n                break;\n        }\n        return true;\n    },\n\n    setUniformOfSemantic: function (_gl, semantic, val) {\n        var semanticInfo = this.uniformSemantics[semantic];\n        if (semanticInfo) {\n            return this.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, val);\n        }\n        return false;\n    },\n\n    // Used for creating VAO\n    // Enable the attributes passed in and disable the rest\n    // Example Usage:\n    // enableAttributes(renderer, [\"position\", \"texcoords\"])\n    enableAttributes: function (renderer, attribList, vao) {\n        var _gl = renderer.gl;\n        var program = this._program;\n\n        var locationMap = this._locations;\n\n        var enabledAttributeListInContext;\n        if (vao) {\n            enabledAttributeListInContext = vao.__enabledAttributeList;\n        }\n        else {\n            enabledAttributeListInContext = enabledAttributeList[renderer.__uid__];\n        }\n        if (!enabledAttributeListInContext) {\n            // In vertex array object context\n            // PENDING Each vao object needs to enable attributes again?\n            if (vao) {\n                enabledAttributeListInContext\n                    = vao.__enabledAttributeList\n                    = [];\n            }\n            else {\n                enabledAttributeListInContext\n                    = enabledAttributeList[renderer.__uid__]\n                    = [];\n            }\n        }\n        var locationList = [];\n        for (var i = 0; i < attribList.length; i++) {\n            var symbol = attribList[i];\n            if (!this.attributes[symbol]) {\n                locationList[i] = -1;\n                continue;\n            }\n            var location = locationMap[symbol];\n            if (location == null) {\n                location = _gl.getAttribLocation(program, symbol);\n                // Attrib location is a number from 0 to ...\n                if (location === -1) {\n                    locationList[i] = -1;\n                    continue;\n                }\n                locationMap[symbol] = location;\n            }\n            locationList[i] = location;\n\n            if (!enabledAttributeListInContext[location]) {\n                enabledAttributeListInContext[location] = SHADER_STATE_TO_ENABLE;\n            }\n            else {\n                enabledAttributeListInContext[location] = SHADER_STATE_KEEP_ENABLE;\n            }\n        }\n\n        for (var i = 0; i < enabledAttributeListInContext.length; i++) {\n            switch(enabledAttributeListInContext[i]){\n                case SHADER_STATE_TO_ENABLE:\n                    _gl.enableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                case SHADER_STATE_KEEP_ENABLE:\n                    enabledAttributeListInContext[i] = SHADER_STATE_PENDING;\n                    break;\n                // Expired\n                case SHADER_STATE_PENDING:\n                    _gl.disableVertexAttribArray(i);\n                    enabledAttributeListInContext[i] = 0;\n                    break;\n            }\n        }\n\n        return locationList;\n    },\n\n    getAttribLocation: function (_gl, symbol) {\n        var locationMap = this._locations;\n\n        var location = locationMap[symbol];\n        if (location == null) {\n            location = _gl.getAttribLocation(this._program, symbol);\n            locationMap[symbol] = location;\n        }\n\n        return location;\n    },\n\n    buildProgram: function (_gl, shader, vertexShaderCode, fragmentShaderCode) {\n        var vertexShader = _gl.createShader(_gl.VERTEX_SHADER);\n        var program = _gl.createProgram();\n\n        _gl.shaderSource(vertexShader, vertexShaderCode);\n        _gl.compileShader(vertexShader);\n\n        var fragmentShader = _gl.createShader(_gl.FRAGMENT_SHADER);\n        _gl.shaderSource(fragmentShader, fragmentShaderCode);\n        _gl.compileShader(fragmentShader);\n\n        var msg = checkShaderErrorMsg(_gl, vertexShader, vertexShaderCode);\n        if (msg) {\n            return msg;\n        }\n        msg = checkShaderErrorMsg(_gl, fragmentShader, fragmentShaderCode);\n        if (msg) {\n            return msg;\n        }\n\n        _gl.attachShader(program, vertexShader);\n        _gl.attachShader(program, fragmentShader);\n        // Force the position bind to location 0;\n        if (shader.attributeSemantics['POSITION']) {\n            _gl.bindAttribLocation(program, 0, shader.attributeSemantics['POSITION'].symbol);\n        }\n        else {\n            // Else choose an attribute and bind to location 0;\n            var keys = Object.keys(this.attributes);\n            _gl.bindAttribLocation(program, 0, keys[0]);\n        }\n\n        _gl.linkProgram(program);\n\n        _gl.deleteShader(vertexShader);\n        _gl.deleteShader(fragmentShader);\n\n        this._program = program;\n\n        // Save code.\n        this.vertexCode = vertexShaderCode;\n        this.fragmentCode = fragmentShaderCode;\n\n        if (!_gl.getProgramParameter(program, _gl.LINK_STATUS)) {\n            return 'Could not link program\\n' + _gl.getProgramInfoLog(program);\n        }\n\n        // Cache uniform locations\n        for (var i = 0; i < shader.uniforms.length; i++) {\n            var uniformSymbol = shader.uniforms[i];\n            this._locations[uniformSymbol] = _gl.getUniformLocation(program, uniformSymbol);\n        }\n\n    }\n});\n\nexport default GLProgram;","import GLProgram from './GLProgram';\n\nvar loopRegex = /for\\s*?\\(int\\s*?_idx_\\s*\\=\\s*([\\w-]+)\\;\\s*_idx_\\s*<\\s*([\\w-]+);\\s*_idx_\\s*\\+\\+\\s*\\)\\s*\\{\\{([\\s\\S]+?)(?=\\}\\})\\}\\}/g;\n\nfunction unrollLoop(shaderStr, defines, lightsNumbers) {\n    // Loop unroll from three.js, https://github.com/mrdoob/three.js/blob/master/src/renderers/webgl/WebGLProgram.js#L175\n    // In some case like shadowMap in loop use 'i' to index value much slower.\n\n    // Loop use _idx_ and increased with _idx_++ will be unrolled\n    // Use {{ }} to match the pair so the if statement will not be affected\n    // Write like following\n    // for (int _idx_ = 0; _idx_ < 4; _idx_++) {{\n    //     vec3 color = texture2D(textures[_idx_], uv).rgb;\n    // }}\n    function replace(match, start, end, snippet) {\n        var unroll = '';\n        // Try to treat as define\n        if (isNaN(start)) {\n            if (start in defines) {\n                start = defines[start];\n            }\n            else {\n                start = lightNumberDefines[start];\n            }\n        }\n        if (isNaN(end)) {\n            if (end in defines) {\n                end = defines[end];\n            }\n            else {\n                end = lightNumberDefines[end];\n            }\n        }\n        // TODO Error checking\n\n        for (var idx = parseInt(start); idx < parseInt(end); idx++) {\n            // PENDING Add scope?\n            unroll += '{'\n                + snippet\n                    .replace(/float\\s*\\(\\s*_idx_\\s*\\)/g, idx.toFixed(1))\n                    .replace(/_idx_/g, idx)\n            + '}';\n        }\n\n        return unroll;\n    }\n\n    var lightNumberDefines = {};\n    for (var lightType in lightsNumbers) {\n        lightNumberDefines[lightType + '_COUNT'] = lightsNumbers[lightType];\n    }\n    return shaderStr.replace(loopRegex, replace);\n}\n\nfunction getDefineCode(defines, lightsNumbers, enabledTextures) {\n    var defineStr = [];\n    if (lightsNumbers) {\n        for (var lightType in lightsNumbers) {\n            var count = lightsNumbers[lightType];\n            if (count > 0) {\n                defineStr.push('#define ' + lightType.toUpperCase() + '_COUNT ' + count);\n            }\n        }\n    }\n    if (enabledTextures) {\n        for (var i = 0; i < enabledTextures.length; i++) {\n            var symbol = enabledTextures[i];\n            defineStr.push('#define ' + symbol.toUpperCase() + '_ENABLED');\n        }\n    }\n    // Custom Defines\n    for (var symbol in defines) {\n        var value = defines[symbol];\n        if (value === null) {\n            defineStr.push('#define ' + symbol);\n        }\n        else{\n            defineStr.push('#define ' + symbol + ' ' + value.toString());\n        }\n    }\n    return defineStr.join('\\n');\n}\n\nfunction getExtensionCode(exts) {\n    // Extension declaration must before all non-preprocessor codes\n    // TODO vertex ? extension enum ?\n    var extensionStr = [];\n    for (var i = 0; i < exts.length; i++) {\n        extensionStr.push('#extension GL_' + exts[i] + ' : enable');\n    }\n    return extensionStr.join('\\n');\n}\n\nfunction getPrecisionCode(precision) {\n    return ['precision', precision, 'float'].join(' ') + ';\\n'\n        + ['precision', precision, 'int'].join(' ') + ';\\n'\n        // depth texture may have precision problem on iOS device.\n        + ['precision', precision, 'sampler2D'].join(' ') + ';\\n';\n}\n\nfunction ProgramManager(renderer) {\n    this._renderer = renderer;\n    this._cache = {};\n}\n\nProgramManager.prototype.getProgram = function (renderable, material, scene) {\n    var cache = this._cache;\n\n    var isSkinnedMesh = renderable.isSkinnedMesh && renderable.isSkinnedMesh();\n    var isInstancedMesh = renderable.isInstancedMesh && renderable.isInstancedMesh();\n    var key = 's' + material.shader.shaderID + 'm' + material.getProgramKey();\n    if (scene) {\n        key += 'se' + scene.getProgramKey(renderable.lightGroup);\n    }\n    if (isSkinnedMesh) {\n        key += ',sk' + renderable.joints.length;\n    }\n    if (isInstancedMesh) {\n        key += ',is';\n    }\n    var program = cache[key];\n\n    if (program) {\n        return program;\n    }\n\n    var lightsNumbers = scene ? scene.getLightsNumbers(renderable.lightGroup) : {};\n    var renderer = this._renderer;\n    var _gl = renderer.gl;\n    var enabledTextures = material.getEnabledTextures();\n    var extraDefineCode = '';\n    if (isSkinnedMesh) {\n        var skinDefines = {\n            SKINNING: null,\n            JOINT_COUNT: renderable.joints.length\n        };\n        if (renderable.joints.length > renderer.getMaxJointNumber()) {\n            skinDefines.USE_SKIN_MATRICES_TEXTURE = null;\n        }\n        // TODO Add skinning code?\n        extraDefineCode += '\\n' + getDefineCode(skinDefines) + '\\n';\n    }\n    if (isInstancedMesh) {\n        extraDefineCode += '\\n#define INSTANCING\\n';\n    }\n    // TODO Optimize key generation\n    // VERTEX\n    var vertexDefineStr = extraDefineCode + getDefineCode(material.vertexDefines, lightsNumbers, enabledTextures);\n    // FRAGMENT\n    var fragmentDefineStr = extraDefineCode + getDefineCode(material.fragmentDefines, lightsNumbers, enabledTextures);\n\n    var vertexCode = vertexDefineStr + '\\n' + material.shader.vertex;\n\n    var extensions = [\n        'OES_standard_derivatives',\n        'EXT_shader_texture_lod'\n    ].filter(function (ext) {\n        return renderer.getGLExtension(ext) != null;\n    });\n\n    if (extensions.indexOf('EXT_shader_texture_lod') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_TEXTURE_LOD';\n    }\n    if (extensions.indexOf('OES_standard_derivatives') >= 0) {\n        fragmentDefineStr += '\\n#define SUPPORT_STANDARD_DERIVATIVES';\n    }\n\n    var fragmentCode = getExtensionCode(extensions) + '\\n'\n        + getPrecisionCode(material.precision) + '\\n'\n        + fragmentDefineStr + '\\n'\n        + material.shader.fragment;\n\n    var finalVertexCode = unrollLoop(vertexCode, material.vertexDefines, lightsNumbers);\n    var finalFragmentCode = unrollLoop(fragmentCode, material.fragmentDefines, lightsNumbers);\n\n    var program = new GLProgram();\n    program.uniformSemantics = material.shader.uniformSemantics;\n    program.attributes = material.shader.attributes;\n    var errorMsg = program.buildProgram(_gl, material.shader, finalVertexCode, finalFragmentCode);\n    program.__error = errorMsg;\n\n    cache[key] = program;\n\n    return program;\n};\n\nexport default ProgramManager;","// TODO Resources like shader, texture, geometry reference management\n// Trace and find out which shader, texture, geometry can be destroyed\nimport Base from './core/Base';\nimport GLInfo from './core/GLInfo';\nimport glenum from './core/glenum';\nimport vendor from './core/vendor';\n\nimport Material from './Material';\nimport Vector2 from './math/Vector2';\nimport ProgramManager from './gpu/ProgramManager';\n\n// Light header\nimport Shader from './Shader';\n\nimport prezEssl from './shader/source/prez.glsl.js';\nShader['import'](prezEssl);\n\nimport mat4 from './glmatrix/mat4';\nimport vec3 from './glmatrix/vec3';\n\nvar mat4Create = mat4.create;\n\nvar errorShader = {};\n\nfunction defaultGetMaterial(renderable) {\n    return renderable.material;\n}\nfunction defaultGetUniform(renderable, material, symbol) {\n    return material.uniforms[symbol].value;\n}\nfunction defaultIsMaterialChanged(renderabled, prevRenderable, material, prevMaterial) {\n    return material !== prevMaterial;\n}\nfunction defaultIfRender(renderable) {\n    return true;\n}\n\nfunction noop() {}\n\nvar attributeBufferTypeMap = {\n    float: glenum.FLOAT,\n    byte: glenum.BYTE,\n    ubyte: glenum.UNSIGNED_BYTE,\n    short: glenum.SHORT,\n    ushort: glenum.UNSIGNED_SHORT\n};\n\nfunction VertexArrayObject(availableAttributes, availableAttributeSymbols, indicesBuffer) {\n    this.availableAttributes = availableAttributes;\n    this.availableAttributeSymbols = availableAttributeSymbols;\n    this.indicesBuffer = indicesBuffer;\n\n    this.vao = null;\n}\n\nfunction PlaceHolderTexture(renderer) {\n    var blankCanvas;\n    var webglTexture;\n    this.bind = function (renderer) {\n        if (!blankCanvas) {\n            // TODO Environment not support createCanvas.\n            blankCanvas = vendor.createCanvas();\n            blankCanvas.width = blankCanvas.height = 1;\n            blankCanvas.getContext('2d');\n        }\n\n        var gl = renderer.gl;\n        var firstBind = !webglTexture;\n        if (firstBind) {\n            webglTexture = gl.createTexture();\n        }\n        gl.bindTexture(gl.TEXTURE_2D, webglTexture);\n        if (firstBind) {\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, blankCanvas);\n        }\n    };\n    this.unbind = function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    };\n    this.isRenderable = function () {\n        return true;\n    };\n}\n/**\n * @constructor clay.Renderer\n * @extends clay.core.Base\n */\nvar Renderer = Base.extend(function () {\n    return /** @lends clay.Renderer# */ {\n\n        /**\n         * @type {HTMLCanvasElement}\n         * @readonly\n         */\n        canvas: null,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _width: 100,\n\n        /**\n         * Canvas width, set by resize method\n         * @type {number}\n         * @private\n         */\n        _height: 100,\n\n        /**\n         * Device pixel ratio, set by setDevicePixelRatio method\n         * Specially for high defination display\n         * @see http://www.khronos.org/webgl/wiki/HandlingHighDPI\n         * @type {number}\n         * @private\n         */\n        devicePixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1.0,\n\n        /**\n         * Clear color\n         * @type {number[]}\n         */\n        clearColor: [0.0, 0.0, 0.0, 0.0],\n\n        /**\n         * Default:\n         *     _gl.COLOR_BUFFER_BIT | _gl.DEPTH_BUFFER_BIT | _gl.STENCIL_BUFFER_BIT\n         * @type {number}\n         */\n        clearBit: 17664,\n\n        // Settings when getting context\n        // http://www.khronos.org/registry/webgl/specs/latest/#2.4\n\n        /**\n         * If enable alpha, default true\n         * @type {boolean}\n         */\n        alpha: true,\n        /**\n         * If enable depth buffer, default true\n         * @type {boolean}\n         */\n        depth: true,\n        /**\n         * If enable stencil buffer, default false\n         * @type {boolean}\n         */\n        stencil: false,\n        /**\n         * If enable antialias, default true\n         * @type {boolean}\n         */\n        antialias: true,\n        /**\n         * If enable premultiplied alpha, default true\n         * @type {boolean}\n         */\n        premultipliedAlpha: true,\n        /**\n         * If preserve drawing buffer, default false\n         * @type {boolean}\n         */\n        preserveDrawingBuffer: false,\n        /**\n         * If throw context error, usually turned on in debug mode\n         * @type {boolean}\n         */\n        throwError: true,\n        /**\n         * WebGL Context created from given canvas\n         * @type {WebGLRenderingContext}\n         */\n        gl: null,\n        /**\n         * Renderer viewport, read-only, can be set by setViewport method\n         * @type {Object}\n         */\n        viewport: {},\n\n        /**\n         * Max joint number\n         * @type {number}\n         */\n        maxJointNumber: 20,\n\n        // Set by FrameBuffer#bind\n        __currentFrameBuffer: null,\n\n        _viewportStack: [],\n        _clearStack: [],\n\n        _sceneRendering: null\n    };\n}, function () {\n\n    if (!this.canvas) {\n        this.canvas = vendor.createCanvas();\n    }\n    var canvas = this.canvas;\n    try {\n        var opts = {\n            alpha: this.alpha,\n            depth: this.depth,\n            stencil: this.stencil,\n            antialias: this.antialias,\n            premultipliedAlpha: this.premultipliedAlpha,\n            preserveDrawingBuffer: this.preserveDrawingBuffer\n        };\n\n        this.gl = canvas.getContext('webgl', opts)\n            || canvas.getContext('experimental-webgl', opts);\n\n        if (!this.gl) {\n            throw new Error();\n        }\n\n        this._glinfo = new GLInfo(this.gl);\n\n        if (this.gl.targetRenderer) {\n            console.error('Already created a renderer');\n        }\n        this.gl.targetRenderer = this;\n\n        this.resize();\n    }\n    catch (e) {\n        throw 'Error creating WebGL Context ' + e;\n    }\n\n    // Init managers\n    this._programMgr = new ProgramManager(this);\n\n    this._placeholderTexture = new PlaceHolderTexture(this);\n},\n/** @lends clay.Renderer.prototype. **/\n{\n    /**\n     * Resize the canvas\n     * @param {number} width\n     * @param {number} height\n     */\n    resize: function(width, height) {\n        var canvas = this.canvas;\n        // http://www.khronos.org/webgl/wiki/HandlingHighDPI\n        // set the display size of the canvas.\n        var dpr = this.devicePixelRatio;\n        if (width != null) {\n            if (canvas.style) {\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n            }\n            // set the size of the drawingBuffer\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            this._width = width;\n            this._height = height;\n        }\n        else {\n            this._width = canvas.width / dpr;\n            this._height = canvas.height / dpr;\n        }\n\n        this.setViewport(0, 0, this._width, this._height);\n    },\n\n    /**\n     * Get renderer width\n     * @return {number}\n     */\n    getWidth: function () {\n        return this._width;\n    },\n\n    /**\n     * Get renderer height\n     * @return {number}\n     */\n    getHeight: function () {\n        return this._height;\n    },\n\n    /**\n     * Get viewport aspect,\n     * @return {number}\n     */\n    getViewportAspect: function () {\n        var viewport = this.viewport;\n        return viewport.width / viewport.height;\n    },\n\n    /**\n     * Set devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    setDevicePixelRatio: function(devicePixelRatio) {\n        this.devicePixelRatio = devicePixelRatio;\n        this.resize(this._width, this._height);\n    },\n\n    /**\n     * Get devicePixelRatio\n     * @param {number} devicePixelRatio\n     */\n    getDevicePixelRatio: function () {\n        return this.devicePixelRatio;\n    },\n\n    /**\n     * Get WebGL extension\n     * @param {string} name\n     * @return {object}\n     */\n    getGLExtension: function (name) {\n        return this._glinfo.getExtension(name);\n    },\n\n    /**\n     * Get WebGL parameter\n     * @param {string} name\n     * @return {*}\n     */\n    getGLParameter: function (name) {\n        return this._glinfo.getParameter(name);\n    },\n\n    /**\n     * Set rendering viewport\n     * @param {number|Object} x\n     * @param {number} [y]\n     * @param {number} [width]\n     * @param {number} [height]\n     * @param {number} [devicePixelRatio]\n     *        Defaultly use the renderere devicePixelRatio\n     *        It needs to be 1 when setViewport is called by frameBuffer\n     *\n     * @example\n     *  setViewport(0,0,width,height,1)\n     *  setViewport({\n     *      x: 0,\n     *      y: 0,\n     *      width: width,\n     *      height: height,\n     *      devicePixelRatio: 1\n     *  })\n     */\n    setViewport: function (x, y, width, height, dpr) {\n\n        if (typeof x === 'object') {\n            var obj = x;\n\n            x = obj.x;\n            y = obj.y;\n            width = obj.width;\n            height = obj.height;\n            dpr = obj.devicePixelRatio;\n        }\n        dpr = dpr || this.devicePixelRatio;\n\n        this.gl.viewport(\n            x * dpr, y * dpr, width * dpr, height * dpr\n        );\n        // Use a fresh new object, not write property.\n        this.viewport = {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            devicePixelRatio: dpr\n        };\n    },\n\n    /**\n     * Push current viewport into a stack\n     */\n    saveViewport: function () {\n        this._viewportStack.push(this.viewport);\n    },\n\n    /**\n     * Pop viewport from stack, restore in the renderer\n     */\n    restoreViewport: function () {\n        if (this._viewportStack.length > 0) {\n            this.setViewport(this._viewportStack.pop());\n        }\n    },\n\n    /**\n     * Push current clear into a stack\n     */\n    saveClear: function () {\n        this._clearStack.push({\n            clearBit: this.clearBit,\n            clearColor: this.clearColor\n        });\n    },\n\n    /**\n     * Pop clear from stack, restore in the renderer\n     */\n    restoreClear: function () {\n        if (this._clearStack.length > 0) {\n            var opt = this._clearStack.pop();\n            this.clearColor = opt.clearColor;\n            this.clearBit = opt.clearBit;\n        }\n    },\n\n    bindSceneRendering: function (scene) {\n        this._sceneRendering = scene;\n    },\n\n    /**\n     * Render the scene in camera to the screen or binded offline framebuffer\n     * @param  {clay.Scene}       scene\n     * @param  {clay.Camera}      camera\n     * @param  {boolean}     [notUpdateScene] If not call the scene.update methods in the rendering, default true\n     * @param  {boolean}     [preZ]           If use preZ optimization, default false\n     * @return {IRenderInfo}\n     */\n    render: function(scene, camera, notUpdateScene, preZ) {\n        var _gl = this.gl;\n\n        var clearColor = this.clearColor;\n\n        if (this.clearBit) {\n\n            // Must set depth and color mask true before clear\n            _gl.colorMask(true, true, true, true);\n            _gl.depthMask(true);\n            var viewport = this.viewport;\n            var needsScissor = false;\n            var viewportDpr = viewport.devicePixelRatio;\n            if (viewport.width !== this._width || viewport.height !== this._height\n                || (viewportDpr && viewportDpr !== this.devicePixelRatio)\n                || viewport.x || viewport.y\n            ) {\n                needsScissor = true;\n                // http://stackoverflow.com/questions/11544608/how-to-clear-a-rectangle-area-in-webgl\n                // Only clear the viewport\n                _gl.enable(_gl.SCISSOR_TEST);\n                _gl.scissor(viewport.x * viewportDpr, viewport.y * viewportDpr, viewport.width * viewportDpr, viewport.height * viewportDpr);\n            }\n            _gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n            _gl.clear(this.clearBit);\n            if (needsScissor) {\n                _gl.disable(_gl.SCISSOR_TEST);\n            }\n        }\n\n        // If the scene have been updated in the prepass like shadow map\n        // There is no need to update it again\n        if (!notUpdateScene) {\n            scene.update(false);\n        }\n        scene.updateLights();\n\n        camera = camera || scene.getMainCamera();\n        if (!camera) {\n            console.error('Can\\'t find camera in the scene.');\n            return;\n        }\n        camera.update();\n        var renderList = scene.updateRenderList(camera, true);\n\n        this._sceneRendering = scene;\n\n        var opaqueList = renderList.opaque;\n        var transparentList = renderList.transparent;\n        var sceneMaterial = scene.material;\n\n        scene.trigger('beforerender', this, scene, camera, renderList);\n\n        // Render pre z\n        if (preZ) {\n            this.renderPreZ(opaqueList, scene, camera);\n            _gl.depthFunc(_gl.LEQUAL);\n        }\n        else {\n            _gl.depthFunc(_gl.LESS);\n        }\n\n        // Update the depth of transparent list.\n        var worldViewMat = mat4Create();\n        var posViewSpace = vec3.create();\n        for (var i = 0; i < transparentList.length; i++) {\n            var renderable = transparentList[i];\n            mat4.multiplyAffine(worldViewMat, camera.viewMatrix.array, renderable.worldTransform.array);\n            vec3.transformMat4(posViewSpace, renderable.position.array, worldViewMat);\n            renderable.__depth = posViewSpace[2];\n        }\n\n        // Render opaque list\n        this.renderPass(opaqueList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.opaqueSortCompare\n        });\n\n        this.renderPass(transparentList, camera, {\n            getMaterial: function (renderable) {\n                return sceneMaterial || renderable.material;\n            },\n            sortCompare: this.transparentSortCompare\n        });\n\n        scene.trigger('afterrender', this, scene, camera, renderList);\n\n        // Cleanup\n        this._sceneRendering = null;\n    },\n\n    getProgram: function (renderable, renderMaterial, scene) {\n        renderMaterial = renderMaterial || renderable.material;\n        return this._programMgr.getProgram(renderable, renderMaterial, scene);\n    },\n\n    validateProgram: function (program) {\n        if (program.__error) {\n            var errorMsg = program.__error;\n            if (errorShader[program.__uid__]) {\n                return;\n            }\n            errorShader[program.__uid__] = true;\n\n            if (this.throwError) {\n                throw new Error(errorMsg);\n            }\n            else {\n                this.trigger('error', errorMsg);\n            }\n\n        }\n\n    },\n\n    updatePrograms: function (list, scene, passConfig) {\n        var getMaterial = (passConfig && passConfig.getMaterial) || defaultGetMaterial;\n        scene = scene || null;\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var renderMaterial = getMaterial.call(this, renderable);\n            if (i > 0) {\n                var prevRenderable = list[i - 1];\n                var prevJointsLen = prevRenderable.joints ? prevRenderable.joints.length : 0;\n                var jointsLen = renderable.joints ? renderable.joints.length : 0;\n                // Keep program not change if joints, material, lightGroup are same of two renderables.\n                if (jointsLen === prevJointsLen\n                    && renderable.material === prevRenderable.material\n                    && renderable.lightGroup === prevRenderable.lightGroup\n                ) {\n                    renderable.__program = prevRenderable.__program;\n                    continue;\n                }\n            }\n\n            var program = this._programMgr.getProgram(renderable, renderMaterial, scene);\n\n            this.validateProgram(program);\n\n            renderable.__program = program;\n        }\n    },\n\n    /**\n     * Render a single renderable list in camera in sequence\n     * @param {clay.Renderable[]} list List of all renderables.\n     * @param {clay.Camera} [camera] Camera provide view matrix and porjection matrix. It can be null.\n     * @param {Object} [passConfig]\n     * @param {Function} [passConfig.getMaterial] Get renderable material.\n     * @param {Function} [passConfig.getUniform] Get material uniform value.\n     * @param {Function} [passConfig.isMaterialChanged] If material changed.\n     * @param {Function} [passConfig.beforeRender] Before render each renderable.\n     * @param {Function} [passConfig.afterRender] After render each renderable\n     * @param {Function} [passConfig.ifRender] If render the renderable.\n     * @param {Function} [passConfig.sortCompare] Sort compare function.\n     * @return {IRenderInfo}\n     */\n    renderPass: function(list, camera, passConfig) {\n        this.trigger('beforerenderpass', this, list, camera, passConfig);\n\n        passConfig = passConfig || {};\n        passConfig.getMaterial = passConfig.getMaterial || defaultGetMaterial;\n        passConfig.getUniform = passConfig.getUniform || defaultGetUniform;\n        // PENDING Better solution?\n        passConfig.isMaterialChanged = passConfig.isMaterialChanged || defaultIsMaterialChanged;\n        passConfig.beforeRender = passConfig.beforeRender || noop;\n        passConfig.afterRender = passConfig.afterRender || noop;\n\n        var ifRenderObject = passConfig.ifRender || defaultIfRender;\n\n        this.updatePrograms(list, this._sceneRendering, passConfig);\n        if (passConfig.sortCompare) {\n            list.sort(passConfig.sortCompare);\n        }\n\n        // Some common builtin uniforms\n        var viewport = this.viewport;\n        var vDpr = viewport.devicePixelRatio;\n        var viewportUniform = [\n            viewport.x * vDpr, viewport.y * vDpr,\n            viewport.width * vDpr, viewport.height * vDpr\n        ];\n        var windowDpr = this.devicePixelRatio;\n        var windowSizeUniform = this.__currentFrameBuffer\n            ? [this.__currentFrameBuffer.getTextureWidth(), this.__currentFrameBuffer.getTextureHeight()]\n            : [this._width * windowDpr, this._height * windowDpr];\n        // DEPRECATED\n        var viewportSizeUniform = [\n            viewportUniform[2], viewportUniform[3]\n        ];\n        var time = Date.now();\n\n        // Calculate view and projection matrix\n        if (camera) {\n            mat4.copy(matrices.VIEW, camera.viewMatrix.array);\n            mat4.copy(matrices.PROJECTION, camera.projectionMatrix.array);\n            mat4.copy(matrices.VIEWINVERSE, camera.worldTransform.array);\n        }\n        else {\n            mat4.identity(matrices.VIEW);\n            mat4.identity(matrices.PROJECTION);\n            mat4.identity(matrices.VIEWINVERSE);\n        }\n        mat4.multiply(matrices.VIEWPROJECTION, matrices.PROJECTION, matrices.VIEW);\n        mat4.invert(matrices.PROJECTIONINVERSE, matrices.PROJECTION);\n        mat4.invert(matrices.VIEWPROJECTIONINVERSE, matrices.VIEWPROJECTION);\n\n        var _gl = this.gl;\n        var scene = this._sceneRendering;\n\n        var prevMaterial;\n        var prevProgram;\n        var prevRenderable;\n\n        // Status\n        var depthTest, depthMask;\n        var culling, cullFace, frontFace;\n        var transparent;\n        var drawID;\n        var currentVAO;\n        var materialTakesTextureSlot;\n\n        // var vaoExt = this.getGLExtension('OES_vertex_array_object');\n        // not use vaoExt, some platforms may mess it up.\n        var vaoExt = null;\n\n        for (var i = 0; i < list.length; i++) {\n            var renderable = list[i];\n            var isSceneNode = renderable.worldTransform != null;\n            var worldM;\n\n            if (!ifRenderObject(renderable)) {\n                continue;\n            }\n\n            // Skinned mesh will transformed to joint space. Ignore the mesh transform\n            if (isSceneNode) {\n                worldM = (renderable.isSkinnedMesh && renderable.isSkinnedMesh())\n                    // TODO\n                    ? (renderable.offsetMatrix ? renderable.offsetMatrix.array :matrices.IDENTITY)\n                    : renderable.worldTransform.array;\n            }\n            var geometry = renderable.geometry;\n            var material = passConfig.getMaterial.call(this, renderable);\n\n            var program = renderable.__program;\n            var shader = material.shader;\n\n            var currentDrawID = geometry.__uid__ + '-' + program.__uid__;\n            var drawIDChanged = currentDrawID !== drawID;\n            drawID = currentDrawID;\n            if (drawIDChanged && vaoExt) {\n                // TODO Seems need to be bound to null immediately (or before bind another program?) if vao is changed\n                vaoExt.bindVertexArrayOES(null);\n            }\n            if (isSceneNode) {\n                mat4.copy(matrices.WORLD, worldM);\n                mat4.multiply(matrices.WORLDVIEWPROJECTION, matrices.VIEWPROJECTION, worldM);\n                mat4.multiplyAffine(matrices.WORLDVIEW, matrices.VIEW, worldM);\n                if (shader.matrixSemantics.WORLDINVERSE ||\n                    shader.matrixSemantics.WORLDINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDINVERSE, worldM);\n                }\n                if (shader.matrixSemantics.WORLDVIEWINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDVIEWINVERSE, matrices.WORLDVIEW);\n                }\n                if (shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSE ||\n                    shader.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE) {\n                    mat4.invert(matrices.WORLDVIEWPROJECTIONINVERSE, matrices.WORLDVIEWPROJECTION);\n                }\n            }\n\n            // Before render hook\n            renderable.beforeRender && renderable.beforeRender(this);\n            passConfig.beforeRender.call(this, renderable, material, prevMaterial);\n\n            var programChanged = program !== prevProgram;\n            if (programChanged) {\n                // Set lights number\n                program.bind(this);\n                // Set some common uniforms\n                program.setUniformOfSemantic(_gl, 'VIEWPORT', viewportUniform);\n                program.setUniformOfSemantic(_gl, 'WINDOW_SIZE', windowSizeUniform);\n                if (camera) {\n                    program.setUniformOfSemantic(_gl, 'NEAR', camera.near);\n                    program.setUniformOfSemantic(_gl, 'FAR', camera.far);\n                }\n                program.setUniformOfSemantic(_gl, 'DEVICEPIXELRATIO', vDpr);\n                program.setUniformOfSemantic(_gl, 'TIME', time);\n                // DEPRECATED\n                program.setUniformOfSemantic(_gl, 'VIEWPORT_SIZE', viewportSizeUniform);\n\n                // Set lights uniforms\n                // TODO needs optimized\n                if (scene) {\n                    scene.setLightUniforms(program, renderable.lightGroup, this);\n                }\n            }\n            else {\n                program = prevProgram;\n            }\n\n            // Program changes also needs reset the materials.\n            if (programChanged || passConfig.isMaterialChanged(\n                renderable, prevRenderable, material, prevMaterial\n            )) {\n                if (material.depthTest !== depthTest) {\n                    material.depthTest ? _gl.enable(_gl.DEPTH_TEST) : _gl.disable(_gl.DEPTH_TEST);\n                    depthTest = material.depthTest;\n                }\n                if (material.depthMask !== depthMask) {\n                    _gl.depthMask(material.depthMask);\n                    depthMask = material.depthMask;\n                }\n                if (material.transparent !== transparent) {\n                    material.transparent ? _gl.enable(_gl.BLEND) : _gl.disable(_gl.BLEND);\n                    transparent = material.transparent;\n                }\n                // TODO cache blending\n                if (material.transparent) {\n                    if (material.blend) {\n                        material.blend(_gl);\n                    }\n                    else {\n                        // Default blend function\n                        _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n                        _gl.blendFuncSeparate(_gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n                    }\n                }\n\n                materialTakesTextureSlot = this._bindMaterial(\n                    renderable, material, program,\n                    prevRenderable || null, prevMaterial || null, prevProgram || null,\n                    passConfig.getUniform\n                );\n                prevMaterial = material;\n            }\n\n            var matrixSemanticKeys = shader.matrixSemanticKeys;\n\n            if (isSceneNode) {\n                for (var k = 0; k < matrixSemanticKeys.length; k++) {\n                    var semantic = matrixSemanticKeys[k];\n                    var semanticInfo = shader.matrixSemantics[semantic];\n                    var matrix = matrices[semantic];\n                    if (semanticInfo.isTranspose) {\n                        var matrixNoTranspose = matrices[semanticInfo.semanticNoTranspose];\n                        mat4.transpose(matrix, matrixNoTranspose);\n                    }\n                    program.setUniform(_gl, semanticInfo.type, semanticInfo.symbol, matrix);\n                }\n            }\n\n            if (renderable.cullFace !== cullFace) {\n                cullFace = renderable.cullFace;\n                _gl.cullFace(cullFace);\n            }\n            if (renderable.frontFace !== frontFace) {\n                frontFace = renderable.frontFace;\n                _gl.frontFace(frontFace);\n            }\n            if (renderable.culling !== culling) {\n                culling = renderable.culling;\n                culling ? _gl.enable(_gl.CULL_FACE) : _gl.disable(_gl.CULL_FACE);\n            }\n            // TODO Not update skeleton in each renderable.\n            this._updateSkeleton(renderable, program, materialTakesTextureSlot);\n            if (drawIDChanged) {\n                currentVAO = this._bindVAO(vaoExt, shader, geometry, program);\n            }\n            this._renderObject(renderable, currentVAO, program);\n\n            // After render hook\n            passConfig.afterRender(this, renderable);\n            renderable.afterRender && renderable.afterRender(this);\n\n            prevProgram = program;\n            prevRenderable = renderable;\n        }\n\n        // TODO Seems need to be bound to null immediately if vao is changed?\n        if (vaoExt) {\n            vaoExt.bindVertexArrayOES(null);\n        }\n\n        this.trigger('afterrenderpass', this, list, camera, passConfig);\n    },\n\n    getMaxJointNumber: function () {\n        return this.maxJointNumber;\n    },\n\n    _updateSkeleton: function (object, program, slot) {\n        var _gl = this.gl;\n        var skeleton = object.skeleton;\n        // Set pose matrices of skinned mesh\n        if (skeleton) {\n            // TODO Update before culling.\n            skeleton.update();\n            if (object.joints.length > this.getMaxJointNumber()) {\n                var skinMatricesTexture = skeleton.getSubSkinMatricesTexture(object.__uid__, object.joints);\n                program.useTextureSlot(this, skinMatricesTexture, slot);\n                program.setUniform(_gl, '1i', 'skinMatricesTexture', slot);\n                program.setUniform(_gl, '1f', 'skinMatricesTextureSize', skinMatricesTexture.width);\n            }\n            else {\n                var skinMatricesArray = skeleton.getSubSkinMatrices(object.__uid__, object.joints);\n                program.setUniformOfSemantic(_gl, 'SKIN_MATRIX', skinMatricesArray);\n            }\n        }\n    },\n\n    _renderObject: function (renderable, vao, program) {\n        var _gl = this.gl;\n        var geometry = renderable.geometry;\n\n        var glDrawMode = renderable.mode;\n        if (glDrawMode == null) {\n            glDrawMode = 0x0004;\n        }\n\n        var ext = null;\n        var isInstanced = renderable.isInstancedMesh && renderable.isInstancedMesh();\n        if (isInstanced) {\n            ext = this.getGLExtension('ANGLE_instanced_arrays');\n            if (!ext) {\n                console.warn('Device not support ANGLE_instanced_arrays extension');\n                return;\n            }\n        }\n\n        var instancedAttrLocations;\n        if (isInstanced) {\n            instancedAttrLocations = this._bindInstancedAttributes(renderable, program, ext);\n        }\n\n        if (vao.indicesBuffer) {\n            var uintExt = this.getGLExtension('OES_element_index_uint');\n            var useUintExt = uintExt && (geometry.indices instanceof Uint32Array);\n            var indicesType = useUintExt ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\n\n            if (isInstanced) {\n                ext.drawElementsInstancedANGLE(\n                    glDrawMode, vao.indicesBuffer.count, indicesType, 0, renderable.getInstanceCount()\n                );\n            }\n            else {\n                _gl.drawElements(glDrawMode, vao.indicesBuffer.count, indicesType, 0);\n            }\n        }\n        else {\n            if (isInstanced) {\n                ext.drawArraysInstancedANGLE(glDrawMode, 0, geometry.vertexCount, renderable.getInstanceCount());\n            }\n            else {\n                // FIXME Use vertex number in buffer\n                // vertexCount may get the wrong value when geometry forget to mark dirty after update\n                _gl.drawArrays(glDrawMode, 0, geometry.vertexCount);\n            }\n        }\n\n        if (isInstanced) {\n            for (var i = 0; i < instancedAttrLocations.length; i++) {\n                _gl.disableVertexAttribArray(instancedAttrLocations[i]);\n            }\n        }\n    },\n\n    _bindInstancedAttributes: function (renderable, program, ext) {\n        var _gl = this.gl;\n        var instancedBuffers = renderable.getInstancedAttributesBuffers(this);\n        var locations = [];\n\n        for (var i = 0; i < instancedBuffers.length; i++) {\n            var bufferObj = instancedBuffers[i];\n            var location = program.getAttribLocation(_gl, bufferObj.symbol);\n            if (location < 0) {\n                continue;\n            }\n\n            var glType = attributeBufferTypeMap[bufferObj.type] || _gl.FLOAT;;\n            _gl.enableVertexAttribArray(location);  // TODO\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, bufferObj.buffer);\n            _gl.vertexAttribPointer(location, bufferObj.size, glType, false, 0, 0);\n            ext.vertexAttribDivisorANGLE(location, bufferObj.divisor);\n\n            locations.push(location);\n        }\n\n        return locations;\n    },\n\n    _bindMaterial: function (renderable, material, program, prevRenderable, prevMaterial, prevProgram, getUniformValue) {\n        var _gl = this.gl;\n        // PENDING Same texture in different material take different slot?\n\n        // May use shader of other material if shader code are same\n        var sameProgram = prevProgram === program;\n\n        var currentTextureSlot = program.currentTextureSlot();\n        var enabledUniforms = material.getEnabledUniforms();\n        var textureUniforms = material.getTextureUniforms();\n        var placeholderTexture = this._placeholderTexture;\n\n        for (var u = 0; u < textureUniforms.length; u++) {\n            var symbol = textureUniforms[u];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = material.uniforms[symbol].type;\n            // Not use `instanceof` to determine if a value is texture in Material#bind.\n            // Use type instead, in some case texture may be in different namespaces.\n            // TODO Duck type validate.\n            if (uniformType === 't' && uniformValue) {\n                // Reset slot\n                uniformValue.__slot = -1;\n            }\n            else if (uniformType === 'tv') {\n                for (var i = 0; i < uniformValue.length; i++) {\n                    if (uniformValue[i]) {\n                        uniformValue[i].__slot = -1;\n                    }\n                }\n            }\n        }\n\n        placeholderTexture.__slot = -1;\n\n        // Set uniforms\n        for (var u = 0; u < enabledUniforms.length; u++) {\n            var symbol = enabledUniforms[u];\n            var uniform = material.uniforms[symbol];\n            var uniformValue = getUniformValue(renderable, material, symbol);\n            var uniformType = uniform.type;\n            var isTexture = uniformType === 't';\n\n            if (isTexture) {\n                if (!uniformValue || !uniformValue.isRenderable()) {\n                    uniformValue = placeholderTexture;\n                }\n            }\n            // PENDING\n            // When binding two materials with the same shader\n            // Many uniforms will be be set twice even if they have the same value\n            // So add a evaluation to see if the uniform is really needed to be set\n            if (prevMaterial && sameProgram) {\n                var prevUniformValue = getUniformValue(prevRenderable, prevMaterial, symbol);\n                if (isTexture) {\n                    if (!prevUniformValue || !prevUniformValue.isRenderable()) {\n                        prevUniformValue = placeholderTexture;\n                    }\n                }\n\n                if (prevUniformValue === uniformValue) {\n                    if (isTexture) {\n                        // Still take the slot to make sure same texture in different materials have same slot.\n                        program.takeCurrentTextureSlot(this, null);\n                    }\n                    else if (uniformType === 'tv' && uniformValue) {\n                        for (var i = 0; i < uniformValue.length; i++) {\n                            program.takeCurrentTextureSlot(this, null);\n                        }\n                    }\n                    continue;\n                }\n            }\n\n            if (uniformValue == null) {\n                continue;\n            }\n            else if (isTexture) {\n                if (uniformValue.__slot < 0) {\n                    var slot = program.currentTextureSlot();\n                    var res = program.setUniform(_gl, '1i', symbol, slot);\n                    if (res) { // Texture uniform is enabled\n                        program.takeCurrentTextureSlot(this, uniformValue);\n                        uniformValue.__slot = slot;\n                    }\n                }\n                // Multiple uniform use same texture..\n                else {\n                    program.setUniform(_gl, '1i', symbol, uniformValue.__slot);\n                }\n            }\n            else if (Array.isArray(uniformValue)) {\n                if (uniformValue.length === 0) {\n                    continue;\n                }\n                // Texture Array\n                if (uniformType === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n\n                    var arr = [];\n                    for (var i = 0; i < uniformValue.length; i++) {\n                        var texture = uniformValue[i];\n\n                        if (texture.__slot < 0) {\n                            var slot = program.currentTextureSlot();\n                            arr.push(slot);\n                            program.takeCurrentTextureSlot(this, texture);\n                            texture.__slot = slot;\n                        }\n                        else {\n                            arr.push(texture.__slot);\n                        }\n                    }\n\n                    program.setUniform(_gl, '1iv', symbol, arr);\n                }\n                else {\n                    program.setUniform(_gl, uniform.type, symbol, uniformValue);\n                }\n            }\n            else{\n                program.setUniform(_gl, uniform.type, symbol, uniformValue);\n            }\n        }\n        var newSlot = program.currentTextureSlot();\n        // Texture slot maybe used out of material.\n        program.resetTextureSlot(currentTextureSlot);\n        return newSlot;\n    },\n\n    _bindVAO: function (vaoExt, shader, geometry, program) {\n        var isStatic = !geometry.dynamic;\n        var _gl = this.gl;\n\n        var vaoId = this.__uid__ + '-' + program.__uid__;\n        var vao = geometry.__vaoCache[vaoId];\n        if (!vao) {\n            var chunks = geometry.getBufferChunks(this);\n            if (!chunks || !chunks.length) {  // Empty mesh\n                return;\n            }\n            var chunk = chunks[0];\n            var attributeBuffers = chunk.attributeBuffers;\n            var indicesBuffer = chunk.indicesBuffer;\n\n            var availableAttributes = [];\n            var availableAttributeSymbols = [];\n            for (var a = 0; a < attributeBuffers.length; a++) {\n                var attributeBufferInfo = attributeBuffers[a];\n                var name = attributeBufferInfo.name;\n                var semantic = attributeBufferInfo.semantic;\n                var symbol;\n                if (semantic) {\n                    var semanticInfo = shader.attributeSemantics[semantic];\n                    symbol = semanticInfo && semanticInfo.symbol;\n                }\n                else {\n                    symbol = name;\n                }\n                if (symbol && program.attributes[symbol]) {\n                    availableAttributes.push(attributeBufferInfo);\n                    availableAttributeSymbols.push(symbol);\n                }\n            }\n\n            vao = new VertexArrayObject(\n                availableAttributes,\n                availableAttributeSymbols,\n                indicesBuffer\n            );\n\n            if (isStatic) {\n                geometry.__vaoCache[vaoId] = vao;\n            }\n        }\n\n        var needsBindAttributes = true;\n\n        // Create vertex object array cost a lot\n        // So we don't use it on the dynamic object\n        if (vaoExt && isStatic) {\n            // Use vertex array object\n            // http://blog.tojicode.com/2012/10/oesvertexarrayobject-extension.html\n            if (vao.vao == null) {\n                vao.vao = vaoExt.createVertexArrayOES();\n            }\n            else {\n                needsBindAttributes = false;\n            }\n            vaoExt.bindVertexArrayOES(vao.vao);\n        }\n\n        var availableAttributes = vao.availableAttributes;\n        var indicesBuffer = vao.indicesBuffer;\n\n        if (needsBindAttributes) {\n            var locationList = program.enableAttributes(this, vao.availableAttributeSymbols, (vaoExt && isStatic && vao));\n            // Setting attributes;\n            for (var a = 0; a < availableAttributes.length; a++) {\n                var location = locationList[a];\n                if (location === -1) {\n                    continue;\n                }\n                var attributeBufferInfo = availableAttributes[a];\n                var buffer = attributeBufferInfo.buffer;\n                var size = attributeBufferInfo.size;\n                var glType = attributeBufferTypeMap[attributeBufferInfo.type] || _gl.FLOAT;\n\n                _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n                _gl.vertexAttribPointer(location, size, glType, false, 0, 0);\n            }\n\n            if (geometry.isUseIndices()) {\n                _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, indicesBuffer.buffer);\n            }\n        }\n\n        return vao;\n    },\n\n    renderPreZ: function (list, scene, camera) {\n        var _gl = this.gl;\n        var preZPassMaterial = this._prezMaterial || new Material({\n            shader: new Shader(Shader.source('clay.prez.vertex'), Shader.source('clay.prez.fragment'))\n        });\n        this._prezMaterial = preZPassMaterial;\n\n        _gl.colorMask(false, false, false, false);\n        _gl.depthMask(true);\n\n        // Status\n        this.renderPass(list, camera, {\n            ifRender: function (renderable) {\n                return !renderable.ignorePreZ;\n            },\n            isMaterialChanged: function (renderable, prevRenderable) {\n                var matA = renderable.material;\n                var matB = prevRenderable.material;\n                return matA.get('diffuseMap') !== matB.get('diffuseMap')\n                    || (matA.get('alphaCutoff') || 0) !== (matB.get('alphaCutoff') || 0);\n            },\n            getUniform: function (renderable, depthMaterial, symbol) {\n                if (symbol === 'alphaMap') {\n                    return renderable.material.get('diffuseMap');\n                }\n                else if (symbol === 'alphaCutoff') {\n                    if (renderable.material.isDefined('fragment', 'ALPHA_TEST')\n                        && renderable.material.get('diffuseMap')\n                    ) {\n                        var alphaCutoff = renderable.material.get('alphaCutoff');\n                        return alphaCutoff || 0;\n                    }\n                    return 0;\n                }\n                else if (symbol === 'uvRepeat') {\n                    return renderable.material.get('uvRepeat');\n                }\n                else if (symbol === 'uvOffset') {\n                    return renderable.material.get('uvOffset');\n                }\n                else {\n                    return depthMaterial.get(symbol);\n                }\n            },\n            getMaterial: function () {\n                return preZPassMaterial;\n            },\n            sort: this.opaqueSortCompare\n        });\n\n        _gl.colorMask(true, true, true, true);\n        _gl.depthMask(true);\n    },\n\n    /**\n     * Dispose given scene, including all geometris, textures and shaders in the scene\n     * @param {clay.Scene} scene\n     */\n    disposeScene: function(scene) {\n        this.disposeNode(scene, true, true);\n        scene.dispose();\n    },\n\n    /**\n     * Dispose given node, including all geometries, textures and shaders attached on it or its descendant\n     * @param {clay.Node} node\n     * @param {boolean} [disposeGeometry=false] If dispose the geometries used in the descendant mesh\n     * @param {boolean} [disposeTexture=false] If dispose the textures used in the descendant mesh\n     */\n    disposeNode: function(root, disposeGeometry, disposeTexture) {\n        // Dettached from parent\n        if (root.getParent()) {\n            root.getParent().remove(root);\n        }\n        var disposedMap = {};\n        root.traverse(function(node) {\n            var material = node.material;\n            if (node.geometry && disposeGeometry) {\n                node.geometry.dispose(this);\n            }\n            if (disposeTexture && material && !disposedMap[material.__uid__]) {\n                var textureUniforms = material.getTextureUniforms();\n                for (var u = 0; u < textureUniforms.length; u++) {\n                    var uniformName = textureUniforms[u];\n                    var val = material.uniforms[uniformName].value;\n                    var uniformType = material.uniforms[uniformName].type;\n                    if (!val) {\n                        continue;\n                    }\n                    if (uniformType === 't') {\n                        val.dispose && val.dispose(this);\n                    }\n                    else if (uniformType === 'tv') {\n                        for (var k = 0; k < val.length; k++) {\n                            if (val[k]) {\n                                val[k].dispose && val[k].dispose(this);\n                            }\n                        }\n                    }\n                }\n                disposedMap[material.__uid__] = true;\n            }\n            // Particle system and AmbientCubemap light need to dispose\n            if (node.dispose) {\n                node.dispose(this);\n            }\n        }, this);\n    },\n\n    /**\n     * Dispose given geometry\n     * @param {clay.Geometry} geometry\n     */\n    disposeGeometry: function(geometry) {\n        geometry.dispose(this);\n    },\n\n    /**\n     * Dispose given texture\n     * @param {clay.Texture} texture\n     */\n    disposeTexture: function(texture) {\n        texture.dispose(this);\n    },\n\n    /**\n     * Dispose given frame buffer\n     * @param {clay.FrameBuffer} frameBuffer\n     */\n    disposeFrameBuffer: function(frameBuffer) {\n        frameBuffer.dispose(this);\n    },\n\n    /**\n     * Dispose renderer\n     */\n    dispose: function () {},\n\n    /**\n     * Convert screen coords to normalized device coordinates(NDC)\n     * Screen coords can get from mouse event, it is positioned relative to canvas element\n     * NDC can be used in ray casting with Camera.prototype.castRay methods\n     *\n     * @param  {number}       x\n     * @param  {number}       y\n     * @param  {clay.Vector2} [out]\n     * @return {clay.Vector2}\n     */\n    screenToNDC: function(x, y, out) {\n        if (!out) {\n            out = new Vector2();\n        }\n        // Invert y;\n        y = this._height - y;\n\n        var viewport = this.viewport;\n        var arr = out.array;\n        arr[0] = (x - viewport.x) / viewport.width;\n        arr[0] = arr[0] * 2 - 1;\n        arr[1] = (y - viewport.y) / viewport.height;\n        arr[1] = arr[1] * 2 - 1;\n\n        return out;\n    }\n});\n\n/**\n * Opaque renderables compare function\n * @param  {clay.Renderable} x\n * @param  {clay.Renderable} y\n * @return {boolean}\n * @static\n */\nRenderer.opaqueSortCompare = Renderer.prototype.opaqueSortCompare = function(x, y) {\n    // Priority renderOrder -> program -> material -> geometry\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__program === y.__program) {\n            if (x.material === y.material) {\n                return x.geometry.__uid__ - y.geometry.__uid__;\n            }\n            return x.material.__uid__ - y.material.__uid__;\n        }\n        if (x.__program && y.__program) {\n            return x.__program.__uid__ - y.__program.__uid__;\n        }\n        return 0;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n/**\n * Transparent renderables compare function\n * @param  {clay.Renderable} a\n * @param  {clay.Renderable} b\n * @return {boolean}\n * @static\n */\nRenderer.transparentSortCompare = Renderer.prototype.transparentSortCompare = function(x, y) {\n    // Priority renderOrder -> depth -> program -> material -> geometry\n\n    if (x.renderOrder === y.renderOrder) {\n        if (x.__depth === y.__depth) {\n            if (x.__program === y.__program) {\n                if (x.material === y.material) {\n                    return x.geometry.__uid__ - y.geometry.__uid__;\n                }\n                return x.material.__uid__ - y.material.__uid__;\n            }\n            if (x.__program  && y.__program) {\n                return x.__program.__uid__ - y.__program.__uid__;\n            }\n            return 0;\n        }\n        // Depth is negative\n        // So farther object has smaller depth value\n        return x.__depth - y.__depth;\n    }\n    return x.renderOrder - y.renderOrder;\n};\n\n// Temporary variables\nvar matrices = {\n    IDENTITY: mat4Create(),\n\n    WORLD: mat4Create(),\n    VIEW: mat4Create(),\n    PROJECTION: mat4Create(),\n    WORLDVIEW: mat4Create(),\n    VIEWPROJECTION: mat4Create(),\n    WORLDVIEWPROJECTION: mat4Create(),\n\n    WORLDINVERSE: mat4Create(),\n    VIEWINVERSE: mat4Create(),\n    PROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWINVERSE: mat4Create(),\n    VIEWPROJECTIONINVERSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSE: mat4Create(),\n\n    WORLDTRANSPOSE: mat4Create(),\n    VIEWTRANSPOSE: mat4Create(),\n    PROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWTRANSPOSE: mat4Create(),\n    VIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONTRANSPOSE: mat4Create(),\n    WORLDINVERSETRANSPOSE: mat4Create(),\n    VIEWINVERSETRANSPOSE: mat4Create(),\n    PROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWINVERSETRANSPOSE: mat4Create(),\n    VIEWPROJECTIONINVERSETRANSPOSE: mat4Create(),\n    WORLDVIEWPROJECTIONINVERSETRANSPOSE: mat4Create()\n};\n\n/**\n * @name clay.Renderer.COLOR_BUFFER_BIT\n * @type {number}\n */\nRenderer.COLOR_BUFFER_BIT = glenum.COLOR_BUFFER_BIT;\n/**\n * @name clay.Renderer.DEPTH_BUFFER_BIT\n * @type {number}\n */\nRenderer.DEPTH_BUFFER_BIT = glenum.DEPTH_BUFFER_BIT;\n/**\n * @name clay.Renderer.STENCIL_BUFFER_BIT\n * @type {number}\n */\nRenderer.STENCIL_BUFFER_BIT = glenum.STENCIL_BUFFER_BIT;\n\nexport default Renderer;\n","import Node from './Node';\nimport Light from './Light';\nimport Camera from './Camera';\nimport BoundingBox from './math/BoundingBox';\nimport util from './core/util';\nimport mat4 from './glmatrix/mat4';\nimport LRUCache from './core/LRU';\nimport Matrix4 from './math/Matrix4';\n\nvar IDENTITY = mat4.create();\nvar WORLDVIEW = mat4.create();\n\nvar programKeyCache = {};\n\nfunction getProgramKey(lightNumbers) {\n    var defineStr = [];\n    var lightTypes = Object.keys(lightNumbers);\n    lightTypes.sort();\n    for (var i = 0; i < lightTypes.length; i++) {\n        var lightType = lightTypes[i];\n        defineStr.push(lightType + ' ' + lightNumbers[lightType]);\n    }\n    var key = defineStr.join('\\n');\n\n    if (programKeyCache[key]) {\n        return programKeyCache[key];\n    }\n\n    var id = util.genGUID();\n    programKeyCache[key] = id;\n    return id;\n}\n\nfunction RenderList() {\n\n    this.opaque = [];\n    this.transparent = [];\n\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n}\n\nRenderList.prototype.startCount = function () {\n    this._opaqueCount = 0;\n    this._transparentCount = 0;\n};\n\nRenderList.prototype.add = function (object, isTransparent) {\n    if (isTransparent) {\n        this.transparent[this._transparentCount++] = object;\n    }\n    else {\n        this.opaque[this._opaqueCount++] = object;\n    }\n};\n\nRenderList.prototype.endCount = function () {\n    this.transparent.length = this._transparentCount;\n    this.opaque.length = this._opaqueCount;\n};\n\n/**\n * @typedef {Object} clay.Scene.RenderList\n * @property {Array.<clay.Renderable>} opaque\n * @property {Array.<clay.Renderable>} transparent\n */\n\n/**\n * @constructor clay.Scene\n * @extends clay.Node\n */\nvar Scene = Node.extend(function () {\n    return /** @lends clay.Scene# */ {\n        /**\n         * Global material of scene\n         * @type {clay.Material}\n         */\n        material: null,\n\n        lights: [],\n\n        /**\n         * Scene bounding box in view space.\n         * Used when camera needs to adujst the near and far plane automatically\n         * so that the view frustum contains the visible objects as tightly as possible.\n         * Notice:\n         *  It is updated after rendering (in the step of frustum culling passingly). So may be not so accurate, but saves a lot of calculation\n         *\n         * @type {clay.BoundingBox}\n         */\n        viewBoundingBoxLastFrame: new BoundingBox(),\n\n        // Uniforms for shadow map.\n        shadowUniforms: {},\n\n        _cameraList: [],\n\n        // Properties to save the light information in the scene\n        // Will be set in the render function\n        _lightUniforms: {},\n\n        _previousLightNumber: {},\n\n        _lightNumber: {\n            // groupId: {\n                // POINT_LIGHT: 0,\n                // DIRECTIONAL_LIGHT: 0,\n                // SPOT_LIGHT: 0,\n                // AMBIENT_LIGHT: 0,\n                // AMBIENT_SH_LIGHT: 0\n            // }\n        },\n\n        _lightProgramKeys: {},\n\n        _nodeRepository: {},\n\n        _renderLists: new LRUCache(20)\n\n    };\n}, function () {\n    this._scene = this;\n},\n/** @lends clay.Scene.prototype. */\n{\n\n    // Add node to scene\n    addToScene: function (node) {\n        if (node instanceof Camera) {\n            if (this._cameraList.length > 0) {\n                console.warn('Found multiple camera in one scene. Use the fist one.');\n            }\n            this._cameraList.push(node);\n        }\n        else if (node instanceof Light) {\n            this.lights.push(node);\n        }\n        if (node.name) {\n            this._nodeRepository[node.name] = node;\n        }\n    },\n\n    // Remove node from scene\n    removeFromScene: function (node) {\n        var idx;\n        if (node instanceof Camera) {\n            idx = this._cameraList.indexOf(node);\n            if (idx >= 0) {\n                this._cameraList.splice(idx, 1);\n            }\n        }\n        else if (node instanceof Light) {\n            idx = this.lights.indexOf(node);\n            if (idx >= 0) {\n                this.lights.splice(idx, 1);\n            }\n        }\n        if (node.name) {\n            delete this._nodeRepository[node.name];\n        }\n    },\n\n    /**\n     * Get node by name\n     * @param  {string} name\n     * @return {Node}\n     * @DEPRECATED\n     */\n    getNode: function (name) {\n        return this._nodeRepository[name];\n    },\n\n    /**\n     * Set main camera of the scene.\n     * @param {claygl.Camera} camera\n     */\n    setMainCamera: function (camera) {\n        var idx = this._cameraList.indexOf(camera);\n        if (idx >= 0) {\n            this._cameraList.splice(idx, 1);\n        }\n        this._cameraList.unshift(camera);\n    },\n    /**\n     * Get main camera of the scene.\n     */\n    getMainCamera: function () {\n        return this._cameraList[0];\n    },\n\n    getLights: function () {\n        return this.lights;\n    },\n\n    updateLights: function () {\n        var lights = this.lights;\n        this._previousLightNumber = this._lightNumber;\n\n        var lightNumber = {};\n        for (var i = 0; i < lights.length; i++) {\n            var light = lights[i];\n            if (light.invisible) {\n                continue;\n            }\n            var group = light.group;\n            if (!lightNumber[group]) {\n                lightNumber[group] = {};\n            }\n            // User can use any type of light\n            lightNumber[group][light.type] = lightNumber[group][light.type] || 0;\n            lightNumber[group][light.type]++;\n        }\n        this._lightNumber = lightNumber;\n\n        for (var groupId in lightNumber) {\n            this._lightProgramKeys[groupId] = getProgramKey(lightNumber[groupId]);\n        }\n\n        this._updateLightUniforms();\n    },\n\n    /**\n     * Clone a node and it's children, including mesh, camera, light, etc.\n     * Unlike using `Node#clone`. It will clone skeleton and remap the joints. Material will also be cloned.\n     *\n     * @param {clay.Node} node\n     * @return {clay.Node}\n     */\n    cloneNode: function (node) {\n        var newNode = node.clone();\n        var clonedNodesMap = {};\n        function buildNodesMap(sNode, tNode) {\n            clonedNodesMap[sNode.__uid__] = tNode;\n\n            for (var i = 0; i < sNode._children.length; i++) {\n                var sChild = sNode._children[i];\n                var tChild = tNode._children[i];\n                buildNodesMap(sChild, tChild);\n            }\n        }\n        buildNodesMap(node, newNode);\n\n        newNode.traverse(function (newChild) {\n            if (newChild.skeleton) {\n                newChild.skeleton = newChild.skeleton.clone(clonedNodesMap);\n            }\n            if (newChild.material) {\n                newChild.material = newChild.material.clone();\n            }\n        });\n\n        return newNode;\n    },\n\n    /**\n     * Traverse the scene and add the renderable object to the render list.\n     * It needs camera for the frustum culling.\n     *\n     * @param {clay.Camera} camera\n     * @param {boolean} updateSceneBoundingBox\n     * @return {clay.Scene.RenderList}\n     */\n    updateRenderList: function (camera, updateSceneBoundingBox) {\n        var id = camera.__uid__;\n        var renderList = this._renderLists.get(id);\n        if (!renderList) {\n            renderList = new RenderList();\n            this._renderLists.put(id, renderList);\n        }\n        renderList.startCount();\n\n        if (updateSceneBoundingBox) {\n            this.viewBoundingBoxLastFrame.min.set(Infinity, Infinity, Infinity);\n            this.viewBoundingBoxLastFrame.max.set(-Infinity, -Infinity, -Infinity);\n        }\n\n        var sceneMaterialTransparent = this.material && this.material.transparent || false;\n        this._doUpdateRenderList(this, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n\n        renderList.endCount();\n\n        return renderList;\n    },\n\n    /**\n     * Get render list. Used after {@link clay.Scene#updateRenderList}\n     * @param {clay.Camera} camera\n     * @return {clay.Scene.RenderList}\n     */\n    getRenderList: function (camera) {\n        return this._renderLists.get(camera.__uid__);\n    },\n\n    _doUpdateRenderList: function (parent, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox) {\n        if (parent.invisible) {\n            return;\n        }\n        // TODO Optimize\n        for (var i = 0; i < parent._children.length; i++) {\n            var child = parent._children[i];\n\n            if (child.isRenderable()) {\n                // Frustum culling\n                var worldM = child.isSkinnedMesh() ? IDENTITY : child.worldTransform.array;\n                var geometry = child.geometry;\n\n                mat4.multiplyAffine(WORLDVIEW, camera.viewMatrix.array, worldM);\n                if (updateSceneBoundingBox && !geometry.boundingBox || !this.isFrustumCulled(child, camera, WORLDVIEW)) {\n                    renderList.add(child, child.material.transparent || sceneMaterialTransparent);\n                }\n            }\n            if (child._children.length > 0) {\n                this._doUpdateRenderList(child, camera, sceneMaterialTransparent, renderList, updateSceneBoundingBox);\n            }\n        }\n    },\n\n    /**\n     * If an scene object is culled by camera frustum\n     *\n     * Object can be a renderable or a light\n     *\n     * @param {clay.Node} object\n     * @param {clay.Camera} camera\n     * @param {Array.<number>} worldViewMat represented with array\n     * @param {Array.<number>} projectionMat represented with array\n     */\n    isFrustumCulled: (function () {\n        // Frustum culling\n        // http://www.cse.chalmers.se/~uffe/vfc_bbox.pdf\n        var cullingBoundingBox = new BoundingBox();\n        var cullingMatrix = new Matrix4();\n        return function(object, camera, worldViewMat) {\n            // Bounding box can be a property of object(like light) or renderable.geometry\n            // PENDING\n            var geoBBox = object.boundingBox;\n            if (!geoBBox) {\n                if (object.skeleton && object.skeleton.boundingBox) {\n                    geoBBox = object.skeleton.boundingBox;\n                }\n                else {\n                    geoBBox = object.geometry.boundingBox;\n                }\n            }\n\n            if (!geoBBox) {\n                return false;\n            }\n\n            cullingMatrix.array = worldViewMat;\n            cullingBoundingBox.transformFrom(geoBBox, cullingMatrix);\n\n            // Passingly update the scene bounding box\n            // FIXME exclude very large mesh like ground plane or terrain ?\n            // FIXME Only rendererable which cast shadow ?\n\n            // FIXME boundingBox becomes much larger after transformd.\n            if (object.castShadow) {\n                this.viewBoundingBoxLastFrame.union(cullingBoundingBox);\n            }\n            // Ignore frustum culling if object is skinned mesh.\n            if (object.frustumCulling)  {\n                if (!cullingBoundingBox.intersectBoundingBox(camera.frustum.boundingBox)) {\n                    return true;\n                }\n\n                cullingMatrix.array = camera.projectionMatrix.array;\n                if (\n                    cullingBoundingBox.max.array[2] > 0 &&\n                    cullingBoundingBox.min.array[2] < 0\n                ) {\n                    // Clip in the near plane\n                    cullingBoundingBox.max.array[2] = -1e-20;\n                }\n\n                cullingBoundingBox.applyProjection(cullingMatrix);\n\n                var min = cullingBoundingBox.min.array;\n                var max = cullingBoundingBox.max.array;\n\n                if (\n                    max[0] < -1 || min[0] > 1\n                    || max[1] < -1 || min[1] > 1\n                    || max[2] < -1 || min[2] > 1\n                ) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    })(),\n\n    _updateLightUniforms: function () {\n        var lights = this.lights;\n        // Put the light cast shadow before the light not cast shadow\n        lights.sort(lightSortFunc);\n\n        var lightUniforms = this._lightUniforms;\n        for (var group in lightUniforms) {\n            for (var symbol in lightUniforms[group]) {\n                lightUniforms[group][symbol].value.length = 0;\n            }\n        }\n        for (var i = 0; i < lights.length; i++) {\n\n            var light = lights[i];\n\n            if (light.invisible) {\n                continue;\n            }\n\n            var group = light.group;\n\n            for (var symbol in light.uniformTemplates) {\n                var uniformTpl = light.uniformTemplates[symbol];\n                var value = uniformTpl.value(light);\n                if (value == null) {\n                    continue;\n                }\n                if (!lightUniforms[group]) {\n                    lightUniforms[group] = {};\n                }\n                if (!lightUniforms[group][symbol]) {\n                    lightUniforms[group][symbol] = {\n                        type: '',\n                        value: []\n                    };\n                }\n                var lu = lightUniforms[group][symbol];\n                lu.type = uniformTpl.type + 'v';\n                switch (uniformTpl.type) {\n                    case '1i':\n                    case '1f':\n                    case 't':\n                        lu.value.push(value);\n                        break;\n                    case '2f':\n                    case '3f':\n                    case '4f':\n                        for (var j = 0; j < value.length; j++) {\n                            lu.value.push(value[j]);\n                        }\n                        break;\n                    default:\n                        console.error('Unkown light uniform type ' + uniformTpl.type);\n                }\n            }\n        }\n    },\n\n    getLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            lightGroups.push(groupId);\n        }\n        return lightGroups;\n    },\n\n    getNumberChangedLightGroups: function () {\n        var lightGroups = [];\n        for (var groupId in this._lightNumber) {\n            if (this.isLightNumberChanged(groupId)) {\n                lightGroups.push(groupId);\n            }\n        }\n        return lightGroups;\n    },\n\n    // Determine if light group is different with since last frame\n    // Used to determine whether to update shader and scene's uniforms in Renderer.render\n    isLightNumberChanged: function (lightGroup) {\n        var prevLightNumber = this._previousLightNumber;\n        var currentLightNumber = this._lightNumber;\n        // PENDING Performance\n        for (var type in currentLightNumber[lightGroup]) {\n            if (!prevLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        for (var type in prevLightNumber[lightGroup]) {\n            if (!currentLightNumber[lightGroup]) {\n                return true;\n            }\n            if (currentLightNumber[lightGroup][type] !== prevLightNumber[lightGroup][type]) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    getLightsNumbers: function (lightGroup) {\n        return this._lightNumber[lightGroup];\n    },\n\n    getProgramKey: function (lightGroup) {\n        return this._lightProgramKeys[lightGroup];\n    },\n\n    setLightUniforms: (function () {\n        function setUniforms(uniforms, program, renderer) {\n            for (var symbol in uniforms) {\n                var lu = uniforms[symbol];\n                if (lu.type === 'tv') {\n                    if (!program.hasUniform(symbol)) {\n                        continue;\n                    }\n                    var texSlots = [];\n                    for (var i = 0; i < lu.value.length; i++) {\n                        var texture = lu.value[i];\n                        var slot = program.takeCurrentTextureSlot(renderer, texture);\n                        texSlots.push(slot);\n                    }\n                    program.setUniform(renderer.gl, '1iv', symbol, texSlots);\n                }\n                else {\n                    program.setUniform(renderer.gl, lu.type, symbol, lu.value);\n                }\n            }\n        }\n\n        return function (program, lightGroup, renderer) {\n            setUniforms(this._lightUniforms[lightGroup], program, renderer);\n            // Set shadows\n            setUniforms(this.shadowUniforms, program, renderer);\n        };\n    })(),\n\n    /**\n     * Dispose self, clear all the scene objects\n     * But resources of gl like texuture, shader will not be disposed.\n     * Mostly you should use disposeScene method in Renderer to do dispose.\n     */\n    dispose: function () {\n        this.material = null;\n        this._opaqueList = [];\n        this._transparentList = [];\n\n        this.lights = [];\n\n        this._lightUniforms = {};\n\n        this._lightNumber = {};\n        this._nodeRepository = {};\n    }\n});\n\nfunction lightSortFunc(a, b) {\n    if (b.castShadow && !a.castShadow) {\n        return true;\n    }\n}\n\nexport default Scene;\n","/**\n * Mainly do the parse and compile of shader string\n * Support shader code chunk import and export\n * Support shader semantics\n * http://www.nvidia.com/object/using_sas.html\n * https://github.com/KhronosGroup/collada2json/issues/45\n */\nimport util from './core/util';\nimport vendor from './core/vendor';\n\nvar uniformRegex = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nvar attributeRegex = /attribute\\s+(float|int|vec2|vec3|vec4)\\s+([\\s\\S]*?);/g;\n// Only parse number define.\nvar defineRegex = /#define\\s+(\\w+)?(\\s+[\\d-.]+)?\\s*;?\\s*\\n/g;\n\nvar uniformTypeMap = {\n    'bool': '1i',\n    'int': '1i',\n    'sampler2D': 't',\n    'samplerCube': 't',\n    'float': '1f',\n    'vec2': '2f',\n    'vec3': '3f',\n    'vec4': '4f',\n    'ivec2': '2i',\n    'ivec3': '3i',\n    'ivec4': '4i',\n    'mat2': 'm2',\n    'mat3': 'm3',\n    'mat4': 'm4'\n};\n\nfunction createZeroArray(len) {\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n        arr[i] = 0;\n    }\n    return arr;\n}\n\nvar uniformValueConstructor = {\n    'bool': function () { return true; },\n    'int': function () { return 0; },\n    'float': function () { return 0; },\n    'sampler2D': function () { return null; },\n    'samplerCube': function () { return null; },\n\n    'vec2': function () { return createZeroArray(2); },\n    'vec3': function () { return createZeroArray(3); },\n    'vec4': function () { return createZeroArray(4); },\n\n    'ivec2': function () { return createZeroArray(2); },\n    'ivec3': function () { return createZeroArray(3); },\n    'ivec4': function () { return createZeroArray(4); },\n\n    'mat2': function () { return createZeroArray(4); },\n    'mat3': function () { return createZeroArray(9); },\n    'mat4': function () { return createZeroArray(16); },\n\n    'array': function () { return []; }\n};\n\nvar attributeSemantics = [\n    'POSITION',\n    'NORMAL',\n    'BINORMAL',\n    'TANGENT',\n    'TEXCOORD',\n    'TEXCOORD_0',\n    'TEXCOORD_1',\n    'COLOR',\n    // Skinning\n    // https://github.com/KhronosGroup/glTF/blob/master/specification/README.md#semantics\n    'JOINT',\n    'WEIGHT'\n];\nvar uniformSemantics = [\n    'SKIN_MATRIX',\n    // Information about viewport\n    'VIEWPORT_SIZE',\n    'VIEWPORT',\n    'DEVICEPIXELRATIO',\n    // Window size for window relative coordinate\n    // https://www.opengl.org/sdk/docs/man/html/gl_FragCoord.xhtml\n    'WINDOW_SIZE',\n    // Infomation about camera\n    'NEAR',\n    'FAR',\n    // Time\n    'TIME'\n];\nvar matrixSemantics = [\n    'WORLD',\n    'VIEW',\n    'PROJECTION',\n    'WORLDVIEW',\n    'VIEWPROJECTION',\n    'WORLDVIEWPROJECTION',\n    'WORLDINVERSE',\n    'VIEWINVERSE',\n    'PROJECTIONINVERSE',\n    'WORLDVIEWINVERSE',\n    'VIEWPROJECTIONINVERSE',\n    'WORLDVIEWPROJECTIONINVERSE',\n    'WORLDTRANSPOSE',\n    'VIEWTRANSPOSE',\n    'PROJECTIONTRANSPOSE',\n    'WORLDVIEWTRANSPOSE',\n    'VIEWPROJECTIONTRANSPOSE',\n    'WORLDVIEWPROJECTIONTRANSPOSE',\n    'WORLDINVERSETRANSPOSE',\n    'VIEWINVERSETRANSPOSE',\n    'PROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWINVERSETRANSPOSE',\n    'VIEWPROJECTIONINVERSETRANSPOSE',\n    'WORLDVIEWPROJECTIONINVERSETRANSPOSE'\n];\n\nvar attributeSizeMap = {\n    // WebGL does not support integer attributes\n    'vec4': 4,\n    'vec3': 3,\n    'vec2': 2,\n    'float': 1\n};\n\n\nvar shaderIDCache = {};\nvar shaderCodeCache = {};\n\nfunction getShaderID(vertex, fragment) {\n    var key = 'vertex:' + vertex + 'fragment:' + fragment;\n    if (shaderIDCache[key]) {\n        return shaderIDCache[key];\n    }\n    var id = util.genGUID();\n    shaderIDCache[key] = id;\n\n    shaderCodeCache[id] = {\n        vertex: vertex,\n        fragment: fragment\n    };\n\n    return id;\n}\n\nfunction removeComment(code) {\n    return code.replace(/[ \\t]*\\/\\/.*\\n/g, '' )   // remove //\n        .replace(/[ \\t]*\\/\\*[\\s\\S]*?\\*\\//g, '' ); // remove /* */\n}\n\nfunction logSyntaxError() {\n    console.error('Wrong uniform/attributes syntax');\n}\n\nfunction parseDeclarations(type, line) {\n    var speratorsRegexp = /[,=\\(\\):]/;\n    var tokens = line\n        // Convert `symbol: [1,2,3]` to `symbol: vec3(1,2,3)`\n        .replace(/:\\s*\\[\\s*(.*)\\s*\\]/g, '=' + type + '($1)')\n        .replace(/\\s+/g, '')\n        .split(/(?=[,=\\(\\):])/g);\n\n    var newTokens = [];\n    for (var i = 0; i < tokens.length; i++) {\n        if (tokens[i].match(speratorsRegexp)) {\n            newTokens.push(\n                tokens[i].charAt(0),\n                tokens[i].slice(1)\n            );\n        }\n        else {\n            newTokens.push(tokens[i]);\n        }\n    }\n    tokens = newTokens;\n\n    var TYPE_SYMBOL = 0;\n    var TYPE_ASSIGN = 1;\n    var TYPE_VEC = 2;\n    var TYPE_ARR = 3;\n    var TYPE_SEMANTIC = 4;\n    var TYPE_NORMAL = 5;\n\n    var opType = TYPE_SYMBOL;\n    var declarations = {};\n    var declarationValue = null;\n    var currentDeclaration;\n\n    addSymbol(tokens[0]);\n\n    function addSymbol(symbol) {\n        if (!symbol) {\n            logSyntaxError();\n        }\n        var arrResult = symbol.match(/\\[(.*?)\\]/);\n        currentDeclaration = symbol.replace(/\\[(.*?)\\]/, '');\n        declarations[currentDeclaration] = {};\n        if (arrResult) {\n            declarations[currentDeclaration].isArray = true;\n            declarations[currentDeclaration].arraySize = arrResult[1];\n        }\n    }\n\n    for (var i = 1; i < tokens.length; i++) {\n        var token = tokens[i];\n        if (!token) {   // Empty token;\n            continue;\n        }\n        if (token === '=') {\n            if (opType !== TYPE_SYMBOL\n            && opType !== TYPE_ARR) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_ASSIGN;\n\n            continue;\n        }\n        else if (token === ':') {\n            opType = TYPE_SEMANTIC;\n\n            continue;\n        }\n        else if (token === ',') {\n            if (opType === TYPE_VEC) {\n                if (!(declarationValue instanceof Array)) {\n                    logSyntaxError();\n                    break;\n                }\n                declarationValue.push(+tokens[++i]);\n            }\n            else {\n                opType = TYPE_NORMAL;\n            }\n\n            continue;\n        }\n        else if (token === ')') {\n            declarations[currentDeclaration].value = new vendor.Float32Array(declarationValue);\n            declarationValue = null;\n            opType = TYPE_NORMAL;\n            continue;\n        }\n        else if (token === '(') {\n            if (opType !== TYPE_VEC) {\n                logSyntaxError();\n                break;\n            }\n            if (!(declarationValue instanceof Array)) {\n                logSyntaxError();\n                break;\n            }\n            declarationValue.push(+tokens[++i]);\n            continue;\n        }\n        else if (token.indexOf('vec') >= 0) {\n            if (opType !== TYPE_ASSIGN\n            // Compatitable with old syntax `symbol: [1,2,3]`\n            && opType !== TYPE_SEMANTIC) {\n                logSyntaxError();\n                break;\n            }\n            opType = TYPE_VEC;\n            declarationValue = [];\n            continue;\n        }\n        else if (opType === TYPE_ASSIGN) {\n            if (type === 'bool') {\n                declarations[currentDeclaration].value = token === 'true';\n            }\n            else {\n                declarations[currentDeclaration].value = parseFloat(token);\n            }\n            declarationValue = null;\n            continue;\n        }\n        else if (opType === TYPE_SEMANTIC) {\n            var semantic = token;\n            if (attributeSemantics.indexOf(semantic) >= 0\n                || uniformSemantics.indexOf(semantic) >= 0\n                || matrixSemantics.indexOf(semantic) >= 0\n            ) {\n                declarations[currentDeclaration].semantic = semantic;\n            }\n            else if (semantic === 'ignore' || semantic === 'unconfigurable') {\n                declarations[currentDeclaration].ignore = true;\n            }\n            else {\n                // Try to parse as a default tvalue.\n                if (type === 'bool') {\n                    declarations[currentDeclaration].value = semantic === 'true';\n                }\n                else {\n                    declarations[currentDeclaration].value = parseFloat(semantic);\n                }\n            }\n            continue;\n        }\n\n        // treat as symbol.\n        addSymbol(token);\n        opType = TYPE_SYMBOL;\n    }\n\n    return declarations;\n}\n\n\n/**\n * @constructor\n * @extends clay.core.Base\n * @alias clay.Shader\n * @param {string} vertex\n * @param {string} fragment\n * @example\n * // Create a phong shader\n * var shader = new clay.Shader(\n *      clay.Shader.source('clay.standard.vertex'),\n *      clay.Shader.source('clay.standard.fragment')\n * );\n */\nfunction Shader(vertex, fragment) {\n    // First argument can be { vertex, fragment }\n    if (typeof vertex === 'object') {\n        fragment = vertex.fragment;\n        vertex = vertex.vertex;\n    }\n\n    vertex = removeComment(vertex);\n    fragment = removeComment(fragment);\n\n    this._shaderID = getShaderID(vertex, fragment);\n\n    this._vertexCode = Shader.parseImport(vertex);\n    this._fragmentCode = Shader.parseImport(fragment);\n\n    /**\n     * @readOnly\n     */\n    this.attributeSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.uniformSemantics = {};\n    /**\n     * @readOnly\n     */\n    this.matrixSemanticKeys = [];\n    /**\n     * @readOnly\n     */\n    this.uniformTemplates = {};\n    /**\n     * @readOnly\n     */\n    this.attributes = {};\n    /**\n     * @readOnly\n     */\n    this.textures = {};\n    /**\n     * @readOnly\n     */\n    this.vertexDefines = {};\n    /**\n     * @readOnly\n     */\n    this.fragmentDefines = {};\n\n    this._parseAttributes();\n    this._parseUniforms();\n    this._parseDefines();\n}\n\nShader.prototype = {\n\n    constructor: Shader,\n\n    // Create a new uniform instance for material\n    createUniforms: function () {\n        var uniforms = {};\n\n        for (var symbol in this.uniformTemplates){\n            var uniformTpl = this.uniformTemplates[symbol];\n            uniforms[symbol] = {\n                type: uniformTpl.type,\n                value: uniformTpl.value()\n            };\n        }\n\n        return uniforms;\n    },\n\n    _parseImport: function () {\n        this._vertexCode = Shader.parseImport(this.vertex);\n        this._fragmentCode = Shader.parseImport(this.fragment);\n    },\n\n    _addSemanticUniform: function (symbol, uniformType, semantic) {\n        // This case is only for SKIN_MATRIX\n        // TODO\n        if (attributeSemantics.indexOf(semantic) >= 0) {\n            this.attributeSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n        else if (matrixSemantics.indexOf(semantic) >= 0) {\n            var isTranspose = false;\n            var semanticNoTranspose = semantic;\n            if (semantic.match(/TRANSPOSE$/)) {\n                isTranspose = true;\n                semanticNoTranspose = semantic.slice(0, -9);\n            }\n            this.matrixSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType,\n                isTranspose: isTranspose,\n                semanticNoTranspose: semanticNoTranspose\n            };\n        }\n        else if (uniformSemantics.indexOf(semantic) >= 0) {\n            this.uniformSemantics[semantic] = {\n                symbol: symbol,\n                type: uniformType\n            };\n        }\n    },\n\n    _addMaterialUniform: function (symbol, type, uniformType, defaultValueFunc, isArray, materialUniforms) {\n        materialUniforms[symbol] = {\n            type: uniformType,\n            value: isArray ? uniformValueConstructor['array'] : (defaultValueFunc || uniformValueConstructor[type]),\n            semantic: null\n        };\n    },\n\n    _parseUniforms: function () {\n        var uniforms = {};\n        var self = this;\n        var shaderType = 'vertex';\n        this._uniformList = [];\n\n        this._vertexCode = this._vertexCode.replace(uniformRegex, _uniformParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(uniformRegex, _uniformParser);\n\n        self.matrixSemanticKeys = Object.keys(this.matrixSemantics);\n\n        function makeDefaultValueFunc(value) {\n            return value != null ? function () { return value; } : null;\n        }\n\n        function _uniformParser(str, type, content) {\n            var declaredUniforms = parseDeclarations(type, content);\n            var uniformMainStr = [];\n            for (var symbol in declaredUniforms) {\n\n                var uniformInfo = declaredUniforms[symbol];\n                var semantic = uniformInfo.semantic;\n                var tmpStr = symbol;\n                var uniformType = uniformTypeMap[type];\n                var defaultValueFunc = makeDefaultValueFunc(declaredUniforms[symbol].value);\n                if (declaredUniforms[symbol].isArray) {\n                    tmpStr += '[' + declaredUniforms[symbol].arraySize + ']';\n                    uniformType += 'v';\n                }\n\n                uniformMainStr.push(tmpStr);\n\n                self._uniformList.push(symbol);\n\n                if (!uniformInfo.ignore) {\n                    if (type === 'sampler2D' || type === 'samplerCube') {\n                        // Texture is default disabled\n                        self.textures[symbol] = {\n                            shaderType: shaderType,\n                            type: type\n                        };\n                    }\n\n                    if (semantic) {\n                        // TODO Should not declare multiple symbols if have semantic.\n                        self._addSemanticUniform(symbol, uniformType, semantic);\n                    }\n                    else {\n                        self._addMaterialUniform(\n                            symbol, type, uniformType, defaultValueFunc,\n                            declaredUniforms[symbol].isArray, uniforms\n                        );\n                    }\n                }\n            }\n            return uniformMainStr.length > 0\n                ? 'uniform ' + type + ' ' + uniformMainStr.join(',') + ';\\n' : '';\n        }\n\n        this.uniformTemplates = uniforms;\n    },\n\n    _parseAttributes: function () {\n        var attributes = {};\n        var self = this;\n        this._vertexCode = this._vertexCode.replace(attributeRegex, _attributeParser);\n\n        function _attributeParser(str, type, content) {\n            var declaredAttributes = parseDeclarations(type, content);\n\n            var size = attributeSizeMap[type] || 1;\n            var attributeMainStr = [];\n            for (var symbol in declaredAttributes) {\n                var semantic = declaredAttributes[symbol].semantic;\n                attributes[symbol] = {\n                    // TODO Can only be float\n                    type: 'float',\n                    size: size,\n                    semantic: semantic || null\n                };\n                // TODO Should not declare multiple symbols if have semantic.\n                if (semantic) {\n                    if (attributeSemantics.indexOf(semantic) < 0) {\n                        throw new Error('Unkown semantic \"' + semantic + '\"');\n                    }\n                    else {\n                        self.attributeSemantics[semantic] = {\n                            symbol: symbol,\n                            type: type\n                        };\n                    }\n                }\n                attributeMainStr.push(symbol);\n            }\n\n            return 'attribute ' + type + ' ' + attributeMainStr.join(',') + ';\\n';\n        }\n\n        this.attributes = attributes;\n    },\n\n    _parseDefines: function () {\n        var self = this;\n        var shaderType = 'vertex';\n        this._vertexCode = this._vertexCode.replace(defineRegex, _defineParser);\n        shaderType = 'fragment';\n        this._fragmentCode = this._fragmentCode.replace(defineRegex, _defineParser);\n\n        function _defineParser(str, symbol, value) {\n            var defines = shaderType === 'vertex' ? self.vertexDefines : self.fragmentDefines;\n            if (!defines[symbol]) { // Haven't been defined by user\n                if (value === 'false') {\n                    defines[symbol] = false;\n                }\n                else if (value === 'true') {\n                    defines[symbol] = true;\n                }\n                else {\n                    defines[symbol] = value\n                        // If can parse to float\n                        ? (isNaN(parseFloat(value)) ? value.trim() : parseFloat(value))\n                        : null;\n                }\n            }\n            return '';\n        }\n    },\n\n    /**\n     * Clone a new shader\n     * @return {clay.Shader}\n     */\n    clone: function () {\n        var code = shaderCodeCache[this._shaderID];\n        var shader = new Shader(code.vertex, code.fragment);\n        return shader;\n    }\n};\n\nif (Object.defineProperty) {\n    Object.defineProperty(Shader.prototype, 'shaderID', {\n        get: function () {\n            return this._shaderID;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'vertex', {\n        get: function () {\n            return this._vertexCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'fragment', {\n        get: function () {\n            return this._fragmentCode;\n        }\n    });\n    Object.defineProperty(Shader.prototype, 'uniforms', {\n        get: function () {\n            return this._uniformList;\n        }\n    });\n}\n\nvar importRegex = /(@import)\\s*([0-9a-zA-Z_\\-\\.]*)/g;\nShader.parseImport = function (shaderStr) {\n    shaderStr = shaderStr.replace(importRegex, function (str, importSymbol, importName) {\n        var str = Shader.source(importName);\n        if (str) {\n            // Recursively parse\n            return Shader.parseImport(str);\n        }\n        else {\n            console.error('Shader chunk \"' + importName + '\" not existed in library');\n            return '';\n        }\n    });\n    return shaderStr;\n};\n\nvar exportRegex = /(@export)\\s*([0-9a-zA-Z_\\-\\.]*)\\s*\\n([\\s\\S]*?)@end/g;\n\n/**\n * Import shader source\n * @param  {string} shaderStr\n * @memberOf clay.Shader\n */\nShader['import'] = function (shaderStr) {\n    shaderStr.replace(exportRegex, function (str, exportSymbol, exportName, code) {\n        var code = code.replace(/(^[\\s\\t\\xa0\\u3000]+)|([\\u3000\\xa0\\s\\t]+\\x24)/g, '');\n        if (code) {\n            var parts = exportName.split('.');\n            var obj = Shader.codes;\n            var i = 0;\n            var key;\n            while (i < parts.length - 1) {\n                key = parts[i++];\n                if (!obj[key]) {\n                    obj[key] = {};\n                }\n                obj = obj[key];\n            }\n            key = parts[i];\n            obj[key] = code;\n        }\n        return code;\n    });\n};\n\n/**\n * Library to store all the loaded shader codes\n * @type {Object}\n * @readOnly\n * @memberOf clay.Shader\n */\nShader.codes = {};\n\n/**\n * Get shader source\n * @param  {string} name\n * @return {string}\n */\nShader.source = function (name) {\n    var parts = name.split('.');\n    var obj = Shader.codes;\n    var i = 0;\n    while (obj && i < parts.length) {\n        var key = parts[i++];\n        obj = obj[key];\n    }\n    if (typeof obj !== 'string') {\n        // FIXME Use default instead\n        console.error('Shader \"' + name + '\" not existed in library');\n        return '';\n    }\n    return obj;\n};\n\nexport default Shader;\n","/**\n * Base class for all textures like compressed texture, texture2d, texturecube\n * TODO mapping\n */\nimport Base from './core/Base';\nimport glenum from './core/glenum';\nimport Cache from './core/Cache';\n\n/**\n * @constructor\n * @alias clay.Texture\n * @extends clay.core.Base\n */\nvar Texture = Base.extend( /** @lends clay.Texture# */ {\n    /**\n     * Texture width, readonly when the texture source is image\n     * @type {number}\n     */\n    width: 512,\n    /**\n     * Texture height, readonly when the texture source is image\n     * @type {number}\n     */\n    height: 512,\n    /**\n     * Texel data type.\n     * Possible values:\n     *  + {@link clay.Texture.UNSIGNED_BYTE}\n     *  + {@link clay.Texture.HALF_FLOAT}\n     *  + {@link clay.Texture.FLOAT}\n     *  + {@link clay.Texture.UNSIGNED_INT_24_8_WEBGL}\n     *  + {@link clay.Texture.UNSIGNED_INT}\n     * @type {number}\n     */\n    type: glenum.UNSIGNED_BYTE,\n    /**\n     * Format of texel data\n     * Possible values:\n     *  + {@link clay.Texture.RGBA}\n     *  + {@link clay.Texture.DEPTH_COMPONENT}\n     *  + {@link clay.Texture.DEPTH_STENCIL}\n     * @type {number}\n     */\n    format: glenum.RGBA,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapS: glenum.REPEAT,\n    /**\n     * Texture wrap. Default to be REPEAT.\n     * Possible values:\n     *  + {@link clay.Texture.CLAMP_TO_EDGE}\n     *  + {@link clay.Texture.REPEAT}\n     *  + {@link clay.Texture.MIRRORED_REPEAT}\n     * @type {number}\n     */\n    wrapT: glenum.REPEAT,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_NEAREST}\n     *  + {@link clay.Texture.NEAREST_MIPMAP_LINEAR}\n     *  + {@link clay.Texture.LINEAR_MIPMAP_LINEAR}\n     * @type {number}\n     */\n    minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n    /**\n     * Possible values:\n     *  + {@link clay.Texture.NEAREST}\n     *  + {@link clay.Texture.LINEAR}\n     * @type {number}\n     */\n    magFilter: glenum.LINEAR,\n    /**\n     * If enable mimap.\n     * @type {boolean}\n     */\n    useMipmap: true,\n\n    /**\n     * Anisotropic filtering, enabled if value is larger than 1\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EXT_texture_filter_anisotropic\n     * @type {number}\n     */\n    anisotropic: 1,\n    // pixelStorei parameters, not available when texture is used as render target\n    // http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml\n    /**\n     * If flip in y axis for given image source\n     * @type {boolean}\n     * @default true\n     */\n    flipY: true,\n\n    /**\n     * A flag to indicate if texture source is sRGB\n     */\n    sRGB: true,\n    /**\n     * @type {number}\n     * @default 4\n     */\n    unpackAlignment: 4,\n    /**\n     * @type {boolean}\n     * @default false\n     */\n    premultiplyAlpha: false,\n\n    /**\n     * Dynamic option for texture like video\n     * @type {boolean}\n     */\n    dynamic: false,\n\n    NPOT: false,\n\n    // PENDING\n    // Init it here to avoid deoptimization when it's assigned in application dynamically\n    __used: 0\n\n}, function () {\n    this._cache = new Cache();\n},\n/** @lends clay.Texture.prototype */\n{\n\n    getWebGLTexture: function (renderer) {\n        var _gl = renderer.gl;\n        var cache = this._cache;\n        cache.use(renderer.__uid__);\n\n        if (cache.miss('webgl_texture')) {\n            // In a new gl context, create new texture and set dirty true\n            cache.put('webgl_texture', _gl.createTexture());\n        }\n        if (this.dynamic) {\n            this.update(renderer);\n        }\n        else if (cache.isDirty()) {\n            this.update(renderer);\n            cache.fresh();\n        }\n\n        return cache.get('webgl_texture');\n    },\n\n    bind: function () {},\n    unbind: function () {},\n\n    /**\n     * Mark texture is dirty and update in the next frame\n     */\n    dirty: function () {\n        if (this._cache) {\n            this._cache.dirtyAll();\n        }\n    },\n\n    update: function (renderer) {},\n\n    // Update the common parameters of texture\n    updateCommon: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n        _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n        _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n\n        // Use of none-power of two texture\n        // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences\n        if (this.format === glenum.DEPTH_COMPONENT) {\n            this.useMipmap = false;\n        }\n\n        var sRGBExt = renderer.getGLExtension('EXT_sRGB');\n        // Fallback\n        if (this.format === Texture.SRGB && !sRGBExt) {\n            this.format = Texture.RGB;\n        }\n        if (this.format === Texture.SRGB_ALPHA && !sRGBExt) {\n            this.format = Texture.RGBA;\n        }\n\n        this.NPOT = !this.isPowerOfTwo();\n    },\n\n    getAvailableWrapS: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapS;\n    },\n    getAvailableWrapT: function () {\n        if (this.NPOT) {\n            return glenum.CLAMP_TO_EDGE;\n        }\n        return this.wrapT;\n    },\n    getAvailableMinFilter: function () {\n        var minFilter = this.minFilter;\n        if (this.NPOT || !this.useMipmap) {\n            if (minFilter === glenum.NEAREST_MIPMAP_NEAREST ||\n                minFilter === glenum.NEAREST_MIPMAP_LINEAR\n            ) {\n                return glenum.NEAREST;\n            }\n            else if (minFilter === glenum.LINEAR_MIPMAP_LINEAR ||\n                minFilter === glenum.LINEAR_MIPMAP_NEAREST\n            ) {\n                return glenum.LINEAR;\n            }\n            else {\n                return minFilter;\n            }\n        }\n        else {\n            return minFilter;\n        }\n    },\n    getAvailableMagFilter: function () {\n        return this.magFilter;\n    },\n\n    nextHighestPowerOfTwo: function (x) {\n        --x;\n        for (var i = 1; i < 32; i <<= 1) {\n            x = x | x >> i;\n        }\n        return x + 1;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n\n        var cache = this._cache;\n\n        cache.use(renderer.__uid__);\n\n        var webglTexture = cache.get('webgl_texture');\n        if (webglTexture){\n            renderer.gl.deleteTexture(webglTexture);\n        }\n        cache.deleteContext(renderer.__uid__);\n\n    },\n    /**\n     * Test if image of texture is valid and loaded.\n     * @return {boolean}\n     */\n    isRenderable: function () {},\n\n    /**\n     * Test if texture size is power of two\n     * @return {boolean}\n     */\n    isPowerOfTwo: function () {}\n});\n\nObject.defineProperty(Texture.prototype, 'width', {\n    get: function () {\n        return this._width;\n    },\n    set: function (value) {\n        this._width = value;\n    }\n});\nObject.defineProperty(Texture.prototype, 'height', {\n    get: function () {\n        return this._height;\n    },\n    set: function (value) {\n        this._height = value;\n    }\n});\n\n/* DataType */\n\n/**\n * @type {number}\n */\nTexture.BYTE = glenum.BYTE;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_BYTE = glenum.UNSIGNED_BYTE;\n/**\n * @type {number}\n */\nTexture.SHORT = glenum.SHORT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_SHORT = glenum.UNSIGNED_SHORT;\n/**\n * @type {number}\n */\nTexture.INT = glenum.INT;\n/**\n * @type {number}\n */\nTexture.UNSIGNED_INT = glenum.UNSIGNED_INT;\n/**\n * @type {number}\n */\nTexture.FLOAT = glenum.FLOAT;\n/**\n * @type {number}\n */\nTexture.HALF_FLOAT = 0x8D61;\n\n/**\n * UNSIGNED_INT_24_8_WEBGL for WEBGL_depth_texture extension\n * @type {number}\n */\nTexture.UNSIGNED_INT_24_8_WEBGL = 34042;\n\n/* PixelFormat */\n/**\n * @type {number}\n */\nTexture.DEPTH_COMPONENT = glenum.DEPTH_COMPONENT;\n/**\n * @type {number}\n */\nTexture.DEPTH_STENCIL = glenum.DEPTH_STENCIL;\n/**\n * @type {number}\n */\nTexture.ALPHA = glenum.ALPHA;\n/**\n * @type {number}\n */\nTexture.RGB = glenum.RGB;\n/**\n * @type {number}\n */\nTexture.RGBA = glenum.RGBA;\n/**\n * @type {number}\n */\nTexture.LUMINANCE = glenum.LUMINANCE;\n/**\n * @type {number}\n */\nTexture.LUMINANCE_ALPHA = glenum.LUMINANCE_ALPHA;\n\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB = 0x8C40;\n/**\n * @see https://www.khronos.org/registry/webgl/extensions/EXT_sRGB/\n * @type {number}\n */\nTexture.SRGB_ALPHA = 0x8C42;\n\n/* Compressed Texture */\nTexture.COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;\nTexture.COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;\nTexture.COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;\nTexture.COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;\n\n/* TextureMagFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST = glenum.NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR = glenum.LINEAR;\n\n/* TextureMinFilter */\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_NEAREST = glenum.NEAREST_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_NEAREST = glenum.LINEAR_MIPMAP_NEAREST;\n/**\n * @type {number}\n */\nTexture.NEAREST_MIPMAP_LINEAR = glenum.NEAREST_MIPMAP_LINEAR;\n/**\n * @type {number}\n */\nTexture.LINEAR_MIPMAP_LINEAR = glenum.LINEAR_MIPMAP_LINEAR;\n\n/* TextureWrapMode */\n/**\n * @type {number}\n */\nTexture.REPEAT = glenum.REPEAT;\n/**\n * @type {number}\n */\nTexture.CLAMP_TO_EDGE = glenum.CLAMP_TO_EDGE;\n/**\n * @type {number}\n */\nTexture.MIRRORED_REPEAT = glenum.MIRRORED_REPEAT;\n\n\nexport default Texture;\n","import Texture from './Texture';\nimport glenum from './core/glenum';\nimport vendor from './core/vendor';\nimport mathUtil from './math/util';\nvar isPowerOfTwo = mathUtil.isPowerOfTwo;\n\nfunction nearestPowerOfTwo(val) {\n    return Math.pow(2, Math.round(Math.log(val) / Math.LN2));\n}\nfunction convertTextureToPowerOfTwo(texture, canvas) {\n    // var canvas = document.createElement('canvas');\n    var width = nearestPowerOfTwo(texture.width);\n    var height = nearestPowerOfTwo(texture.height);\n    canvas = canvas || document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    var ctx = canvas.getContext('2d');\n    ctx.drawImage(texture.image, 0, 0, width, height);\n\n    return canvas;\n}\n\n/**\n * @constructor clay.Texture2D\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'diffuseMap')\n *     });\n *     var diffuseMap = new clay.Texture2D();\n *     diffuseMap.load('assets/textures/diffuse.jpg');\n *     mat.set('diffuseMap', diffuseMap);\n *     ...\n *     diffuseMap.success(function () {\n *         // Wait for the diffuse texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar Texture2D = Texture.extend(function () {\n    return /** @lends clay.Texture2D# */ {\n        /**\n         * @type {?HTMLImageElement|HTMLCanvasElemnet}\n         */\n        // TODO mark dirty when assigned.\n        image: null,\n        /**\n         * Pixels data. Will be ignored if image is set.\n         * @type {?Uint8Array|Float32Array}\n         */\n        pixels: null,\n        /**\n         * @type {Array.<Object>}\n         * @example\n         *     [{\n         *         image: mipmap0,\n         *         pixels: null\n         *     }, {\n         *         image: mipmap1,\n         *         pixels: null\n         *     }, ....]\n         */\n        mipmaps: [],\n\n        /**\n         * If convert texture to power-of-two\n         * @type {boolean}\n         */\n        convertToPOT: false\n    };\n}, {\n\n    textureType: 'texture2D',\n\n    update: function (renderer) {\n\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        // Convert to pot is only available when using image/canvas/video element.\n        var convertToPOT = !!(this.convertToPOT\n            && !this.mipmaps.length && this.image\n            && (this.wrapS === Texture.REPEAT || this.wrapT === Texture.REPEAT)\n            && this.NPOT\n        );\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_S, convertToPOT ? this.wrapS : this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_WRAP_T, convertToPOT ? this.wrapT : this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MAG_FILTER, convertToPOT ? this.magFilter : this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_2D, _gl.TEXTURE_MIN_FILTER, convertToPOT ? this.minFilter : this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_2D, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = glenum.FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType, false);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType, convertToPOT);\n\n            if (this.useMipmap && (!this.NPOT || convertToPOT)) {\n                _gl.generateMipmap(_gl.TEXTURE_2D);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_2D, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType, convertToPOT) {\n        if (data.image) {\n            var imgData = data.image;\n            if (convertToPOT) {\n                this._potCanvas = convertTextureToPowerOfTwo(this, this._potCanvas);\n                imgData = this._potCanvas;\n            }\n            _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, glFormat, glType, imgData);\n        }\n        else {\n            // Can be used as a blank texture when writing render to texture(RTT)\n            if (\n                glFormat <= Texture.COMPRESSED_RGBA_S3TC_DXT5_EXT\n                && glFormat >= Texture.COMPRESSED_RGB_S3TC_DXT1_EXT\n            ) {\n                _gl.compressedTexImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, data.pixels);\n            }\n            else {\n                // Is a render target if pixels is null\n                _gl.texImage2D(_gl.TEXTURE_2D, level, glFormat, width, height, 0, glFormat, glType, data.pixels);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.Texture2D.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_2D, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_2D);\n        }\n    },\n\n    isPowerOfTwo: function () {\n        return isPowerOfTwo(this.width) && isPowerOfTwo(this.height);\n    },\n\n    isRenderable: function () {\n        if (this.image) {\n            return this.image.width > 0 && this.image.height > 0;\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_2D, null);\n    },\n\n    load: function (src, crossOrigin) {\n        var image = vendor.createImage();\n        if (crossOrigin) {\n            image.crossOrigin = crossOrigin;\n        }\n        var self = this;\n        image.onload = function () {\n            self.dirty();\n            self.trigger('success', self);\n        };\n        image.onerror = function () {\n            self.trigger('error', self);\n        };\n\n        image.src = src;\n        this.image = image;\n\n        return this;\n    }\n});\n\nObject.defineProperty(Texture2D.prototype, 'width', {\n    get: function () {\n        if (this.image) {\n            return this.image.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(Texture2D.prototype, 'height', {\n    get: function () {\n        if (this.image) {\n            return this.image.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\n\nexport default Texture2D;\n","import Texture from './Texture';\nimport glenum from './core/glenum';\nimport util from './core/util';\nimport mathUtil from './math/util';\nimport vendor from './core/vendor';\nvar isPowerOfTwo = mathUtil.isPowerOfTwo;\n\nvar targetList = ['px', 'nx', 'py', 'ny', 'pz', 'nz'];\n\n/**\n * @constructor clay.TextureCube\n * @extends clay.Texture\n *\n * @example\n *     ...\n *     var mat = new clay.Material({\n *         shader: clay.shader.library.get('clay.phong', 'environmentMap')\n *     });\n *     var envMap = new clay.TextureCube();\n *     envMap.load({\n *         'px': 'assets/textures/sky/px.jpg',\n *         'nx': 'assets/textures/sky/nx.jpg'\n *         'py': 'assets/textures/sky/py.jpg'\n *         'ny': 'assets/textures/sky/ny.jpg'\n *         'pz': 'assets/textures/sky/pz.jpg'\n *         'nz': 'assets/textures/sky/nz.jpg'\n *     });\n *     mat.set('environmentMap', envMap);\n *     ...\n *     envMap.success(function () {\n *         // Wait for the sky texture loaded\n *         animation.on('frame', function (frameTime) {\n *             renderer.render(scene, camera);\n *         });\n *     });\n */\nvar TextureCube = Texture.extend(function () {\n    return /** @lends clay.TextureCube# */{\n\n        /**\n         * @type {boolean}\n         * @default false\n         */\n        // PENDING cubemap should not flipY in default.\n        // flipY: false,\n\n        /**\n         * @type {Object}\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} px\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nx\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} py\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} ny\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} pz\n         * @property {?HTMLImageElement|HTMLCanvasElemnet} nz\n         */\n        image: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n        /**\n         * Pixels data of each side. Will be ignored if images are set.\n         * @type {Object}\n         * @property {?Uint8Array} px\n         * @property {?Uint8Array} nx\n         * @property {?Uint8Array} py\n         * @property {?Uint8Array} ny\n         * @property {?Uint8Array} pz\n         * @property {?Uint8Array} nz\n         */\n        pixels: {\n            px: null,\n            nx: null,\n            py: null,\n            ny: null,\n            pz: null,\n            nz: null\n        },\n\n        /**\n         * @type {Array.<Object>}\n         */\n        mipmaps: []\n    };\n}, {\n\n    textureType: 'textureCube',\n\n    update: function (renderer) {\n        var _gl = renderer.gl;\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n\n        this.updateCommon(renderer);\n\n        var glFormat = this.format;\n        var glType = this.type;\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_S, this.getAvailableWrapS());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_WRAP_T, this.getAvailableWrapT());\n\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MAG_FILTER, this.getAvailableMagFilter());\n        _gl.texParameteri(_gl.TEXTURE_CUBE_MAP, _gl.TEXTURE_MIN_FILTER, this.getAvailableMinFilter());\n\n        var anisotropicExt = renderer.getGLExtension('EXT_texture_filter_anisotropic');\n        if (anisotropicExt && this.anisotropic > 1) {\n            _gl.texParameterf(_gl.TEXTURE_CUBE_MAP, anisotropicExt.TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropic);\n        }\n\n        // Fallback to float type if browser don't have half float extension\n        if (glType === 36193) {\n            var halfFloatExt = renderer.getGLExtension('OES_texture_half_float');\n            if (!halfFloatExt) {\n                glType = glenum.FLOAT;\n            }\n        }\n\n        if (this.mipmaps.length) {\n            var width = this.width;\n            var height = this.height;\n            for (var i = 0; i < this.mipmaps.length; i++) {\n                var mipmap = this.mipmaps[i];\n                this._updateTextureData(_gl, mipmap, i, width, height, glFormat, glType);\n                width /= 2;\n                height /= 2;\n            }\n        }\n        else {\n            this._updateTextureData(_gl, this, 0, this.width, this.height, glFormat, glType);\n\n            if (!this.NPOT && this.useMipmap) {\n                _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n            }\n        }\n\n        _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    _updateTextureData: function (_gl, data, level, width, height, glFormat, glType) {\n        for (var i = 0; i < 6; i++) {\n            var target = targetList[i];\n            var img = data.image && data.image[target];\n            if (img) {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, glFormat, glType, img);\n            }\n            else {\n                _gl.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level, glFormat, width, height, 0, glFormat, glType, data.pixels && data.pixels[target]);\n            }\n        }\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     * @memberOf clay.TextureCube.prototype\n     */\n    generateMipmap: function (renderer) {\n        var _gl = renderer.gl;\n        if (this.useMipmap && !this.NPOT) {\n            _gl.bindTexture(_gl.TEXTURE_CUBE_MAP, this._cache.get('webgl_texture'));\n            _gl.generateMipmap(_gl.TEXTURE_CUBE_MAP);\n        }\n    },\n\n    bind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, this.getWebGLTexture(renderer));\n    },\n\n    unbind: function (renderer) {\n        renderer.gl.bindTexture(renderer.gl.TEXTURE_CUBE_MAP, null);\n    },\n\n    // Overwrite the isPowerOfTwo method\n    isPowerOfTwo: function () {\n        if (this.image.px) {\n            return isPowerOfTwo(this.image.px.width)\n                && isPowerOfTwo(this.image.px.height);\n        }\n        else {\n            return isPowerOfTwo(this.width)\n                && isPowerOfTwo(this.height);\n        }\n    },\n\n    isRenderable: function () {\n        if (this.image.px) {\n            return isImageRenderable(this.image.px)\n                && isImageRenderable(this.image.nx)\n                && isImageRenderable(this.image.py)\n                && isImageRenderable(this.image.ny)\n                && isImageRenderable(this.image.pz)\n                && isImageRenderable(this.image.nz);\n        }\n        else {\n            return !!(this.width && this.height);\n        }\n    },\n\n    load: function (imageList, crossOrigin) {\n        var loading = 0;\n        var self = this;\n        util.each(imageList, function (src, target){\n            var image = vendor.createImage();\n            if (crossOrigin) {\n                image.crossOrigin = crossOrigin;\n            }\n            image.onload = function () {\n                loading --;\n                if (loading === 0){\n                    self.dirty();\n                    self.trigger('success', self);\n                }\n            };\n            image.onerror = function () {\n                loading --;\n            };\n\n            loading++;\n            image.src = src;\n            self.image[target] = image;\n        });\n\n        return this;\n    }\n});\n\nObject.defineProperty(TextureCube.prototype, 'width', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.width;\n        }\n        return this._width;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set width');\n        }\n        else {\n            if (this._width !== value) {\n                this.dirty();\n            }\n            this._width = value;\n        }\n    }\n});\nObject.defineProperty(TextureCube.prototype, 'height', {\n    get: function () {\n        if (this.image && this.image.px) {\n            return this.image.px.height;\n        }\n        return this._height;\n    },\n    set: function (value) {\n        if (this.image && this.image.px) {\n            console.warn('Texture from image can\\'t set height');\n        }\n        else {\n            if (this._height !== value) {\n                this.dirty();\n            }\n            this._height = value;\n        }\n    }\n});\nfunction isImageRenderable(image) {\n    return image.width > 0 && image.height > 0;\n}\n\nexport default TextureCube;\n","import Camera from '../Camera';\n/**\n * @constructor clay.camera.Orthographic\n * @extends clay.Camera\n */\nvar Orthographic = Camera.extend(\n/** @lends clay.camera.Orthographic# */\n{\n    /**\n     * @type {number}\n     */\n    left: -1,\n    /**\n     * @type {number}\n     */\n    right: 1,\n    /**\n     * @type {number}\n     */\n    near: -1,\n    /**\n     * @type {number}\n     */\n    far: 1,\n    /**\n     * @type {number}\n     */\n    top: 1,\n    /**\n     * @type {number}\n     */\n    bottom: -1\n},\n/** @lends clay.camera.Orthographic.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        this.projectionMatrix.ortho(this.left, this.right, this.bottom, this.top, this.near, this.far);\n    },\n\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        this.left = (-1 - m[12]) / m[0];\n        this.right = (1 - m[12]) / m[0];\n        this.top = (1 - m[13]) / m[5];\n        this.bottom = (-1 - m[13]) / m[5];\n        this.near = -(-1 - m[14]) / m[10];\n        this.far = -(1 - m[14]) / m[10];\n    },\n    /**\n     * @return {clay.camera.Orthographic}\n     */\n    clone: function() {\n        var camera = Camera.prototype.clone.call(this);\n        camera.left = this.left;\n        camera.right = this.right;\n        camera.near = this.near;\n        camera.far = this.far;\n        camera.top = this.top;\n        camera.bottom = this.bottom;\n\n        return camera;\n    }\n});\n\nexport default Orthographic;\n","import Camera from '../Camera';\n\n/**\n * @constructor clay.camera.Perspective\n * @extends clay.Camera\n */\nvar Perspective = Camera.extend(/** @lends clay.camera.Perspective# */{\n    /**\n     * Vertical field of view in degrees\n     * @type {number}\n     */\n    fov: 50,\n    /**\n     * Aspect ratio, typically viewport width / height\n     * @type {number}\n     */\n    aspect: 1,\n    /**\n     * Near bound of the frustum\n     * @type {number}\n     */\n    near: 0.1,\n    /**\n     * Far bound of the frustum\n     * @type {number}\n     */\n    far: 2000\n},\n/** @lends clay.camera.Perspective.prototype */\n{\n\n    updateProjectionMatrix: function() {\n        var rad = this.fov / 180 * Math.PI;\n        this.projectionMatrix.perspective(rad, this.aspect, this.near, this.far);\n    },\n    decomposeProjectionMatrix: function () {\n        var m = this.projectionMatrix.array;\n        var rad = Math.atan(1 / m[5]) * 2;\n        this.fov = rad / Math.PI * 180;\n        this.aspect = m[5] / m[0];\n        this.near = m[14] / (m[10] - 1);\n        this.far = m[14] / (m[10] + 1);\n    },\n    /**\n     * @return {clay.camera.Perspective}\n     */\n    clone: function() {\n        var camera = Camera.prototype.clone.call(this);\n        camera.fov = this.fov;\n        camera.aspect = this.aspect;\n        camera.near = this.near;\n        camera.far = this.far;\n\n        return camera;\n    }\n});\n\nexport default Perspective;\n","import Base from '../core/Base';\nimport OrthoCamera from '../camera/Orthographic';\nimport Plane from '../geometry/Plane';\nimport Shader from '../Shader';\nimport Material from '../Material';\nimport Mesh from '../Mesh';\nimport glenum from '../core/glenum';\nimport vertexGlsl from '../shader/source/compositor/vertex.glsl.js';\n\nShader['import'](vertexGlsl);\n\nvar planeGeo = new Plane();\nvar mesh = new Mesh({\n    geometry: planeGeo,\n    frustumCulling: false\n});\nvar camera = new OrthoCamera();\n\n/**\n * @constructor clay.compositor.Pass\n * @extends clay.core.Base\n */\nvar Pass = Base.extend(function () {\n    return /** @lends clay.compositor.Pass# */ {\n        /**\n         * Fragment shader string\n         * @type {string}\n         */\n        // PENDING shader or fragment ?\n        fragment: '',\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {clay.Material}\n         */\n        material: null,\n\n        /**\n         * @type {Boolean}\n         */\n        blendWithPrevious: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearColor: false,\n\n        /**\n         * @type {Boolean}\n         */\n        clearDepth: true\n    };\n}, function() {\n\n    var shader = new Shader(Shader.source('clay.compositor.vertex'), this.fragment);\n    var material = new Material({\n        shader: shader\n    });\n    material.enableTexturesAll();\n\n    this.material = material;\n\n},\n/** @lends clay.compositor.Pass.prototype */\n{\n    /**\n     * @param {string} name\n     * @param {} value\n     */\n    setUniform: function(name, value) {\n        this.material.setUniform(name, value);\n    },\n    /**\n     * @param  {string} name\n     * @return {}\n     */\n    getUniform: function(name) {\n        var uniform = this.material.uniforms[name];\n        if (uniform) {\n            return uniform.value;\n        }\n    },\n    /**\n     * @param  {clay.Texture} texture\n     * @param  {number} attachment\n     */\n    attachOutput: function(texture, attachment) {\n        if (!this.outputs) {\n            this.outputs = {};\n        }\n        attachment = attachment || glenum.COLOR_ATTACHMENT0;\n        this.outputs[attachment] = texture;\n    },\n    /**\n     * @param  {clay.Texture} texture\n     */\n    detachOutput: function(texture) {\n        for (var attachment in this.outputs) {\n            if (this.outputs[attachment] === texture) {\n                this.outputs[attachment] = null;\n            }\n        }\n    },\n\n    bind: function(renderer, frameBuffer) {\n\n        if (this.outputs) {\n            for (var attachment in this.outputs) {\n                var texture = this.outputs[attachment];\n                if (texture) {\n                    frameBuffer.attach(texture, attachment);\n                }\n            }\n        }\n\n        if (frameBuffer) {\n            frameBuffer.bind(renderer);\n        }\n    },\n\n    unbind: function(renderer, frameBuffer) {\n        frameBuffer.unbind(renderer);\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     * @param  {clay.FrameBuffer} [frameBuffer]\n     */\n    render: function(renderer, frameBuffer) {\n\n        var _gl = renderer.gl;\n\n        if (frameBuffer) {\n            this.bind(renderer, frameBuffer);\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext && this.outputs) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = +attachment;\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n        }\n\n        this.trigger('beforerender', this, renderer);\n\n        // FIXME Don't clear in each pass in default, let the color overwrite the buffer\n        // FIXME pixels may be discard\n        var clearBit = this.clearDepth ? _gl.DEPTH_BUFFER_BIT : 0;\n        _gl.depthMask(true);\n        if (this.clearColor) {\n            clearBit = clearBit | _gl.COLOR_BUFFER_BIT;\n            _gl.colorMask(true, true, true, true);\n            var cc = this.clearColor;\n            if (Array.isArray(cc)) {\n                _gl.clearColor(cc[0], cc[1], cc[2], cc[3]);\n            }\n        }\n        _gl.clear(clearBit);\n\n        if (this.blendWithPrevious) {\n            // Blend with previous rendered scene in the final output\n            // FIXME Configure blend.\n            // FIXME It will cause screen blink？\n            _gl.enable(_gl.BLEND);\n            this.material.transparent = true;\n        }\n        else {\n            _gl.disable(_gl.BLEND);\n            this.material.transparent = false;\n        }\n\n        this.renderQuad(renderer);\n\n        this.trigger('afterrender', this, renderer);\n\n        if (frameBuffer) {\n            this.unbind(renderer, frameBuffer);\n        }\n    },\n\n    /**\n     * Simply do quad rendering\n     */\n    renderQuad: function (renderer) {\n        mesh.material = this.material;\n        renderer.renderPass([mesh], camera);\n    },\n\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {}\n});\n\nexport default Pass;\n","import Texture2D from '../Texture2D';\nimport glenum from '../core/glenum';\nimport util from '../core/util';\n\nvar TexturePool = function () {\n\n    this._pool = {};\n\n    this._allocatedTextures = [];\n};\n\nTexturePool.prototype = {\n\n    constructor: TexturePool,\n\n    get: function (parameters) {\n        var key = generateKey(parameters);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        if (!list.length) {\n            var texture = new Texture2D(parameters);\n            this._allocatedTextures.push(texture);\n            return texture;\n        }\n        return list.pop();\n    },\n\n    put: function (texture) {\n        var key = generateKey(texture);\n        if (!this._pool.hasOwnProperty(key)) {\n            this._pool[key] = [];\n        }\n        var list = this._pool[key];\n        list.push(texture);\n    },\n\n    clear: function (renderer) {\n        for (var i = 0; i < this._allocatedTextures.length; i++) {\n            this._allocatedTextures[i].dispose(renderer);\n        }\n        this._pool = {};\n        this._allocatedTextures = [];\n    }\n};\n\nvar defaultParams = {\n    width: 512,\n    height: 512,\n    type: glenum.UNSIGNED_BYTE,\n    format: glenum.RGBA,\n    wrapS: glenum.CLAMP_TO_EDGE,\n    wrapT: glenum.CLAMP_TO_EDGE,\n    minFilter: glenum.LINEAR_MIPMAP_LINEAR,\n    magFilter: glenum.LINEAR,\n    useMipmap: true,\n    anisotropic: 1,\n    flipY: true,\n    unpackAlignment: 4,\n    premultiplyAlpha: false\n};\n\nvar defaultParamPropList = Object.keys(defaultParams);\n\nfunction generateKey(parameters) {\n    util.defaultsWithPropList(parameters, defaultParams, defaultParamPropList);\n    fallBack(parameters);\n\n    var key = '';\n    for (var i = 0; i < defaultParamPropList.length; i++) {\n        var name = defaultParamPropList[i];\n        var chunk = parameters[name].toString();\n        key += chunk;\n    }\n    return key;\n}\n\nfunction fallBack(target) {\n\n    var IPOT = isPowerOfTwo(target.width, target.height);\n\n    if (target.format === glenum.DEPTH_COMPONENT) {\n        target.useMipmap = false;\n    }\n\n    if (!IPOT || !target.useMipmap) {\n        if (target.minFilter == glenum.NEAREST_MIPMAP_NEAREST ||\n            target.minFilter == glenum.NEAREST_MIPMAP_LINEAR) {\n            target.minFilter = glenum.NEAREST;\n        } else if (\n            target.minFilter == glenum.LINEAR_MIPMAP_LINEAR ||\n            target.minFilter == glenum.LINEAR_MIPMAP_NEAREST\n        ) {\n            target.minFilter = glenum.LINEAR;\n        }\n    }\n    if (!IPOT) {\n        target.wrapS = glenum.CLAMP_TO_EDGE;\n        target.wrapT = glenum.CLAMP_TO_EDGE;\n    }\n}\n\nfunction isPowerOfTwo(width, height) {\n    return (width & (width-1)) === 0 &&\n            (height & (height-1)) === 0;\n}\n\nexport default TexturePool;\n","import Base from '../core/Base';\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Node of graph based post processing.\n *\n * @constructor clay.compositor.CompositorNode\n * @extends clay.core.Base\n *\n */\nvar CompositorNode = Base.extend(function () {\n    return /** @lends clay.compositor.CompositorNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n},\n/** @lends clay.compositor.CompositorNode.prototype */\n{\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (parameters.width instanceof Function) {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (parameters.height instanceof Function) {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer.gl);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {},\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {},\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n\n    render: function () {},\n\n    getOutput: function (renderer /*optional*/, name) {\n        if (name == null) {\n            // Return the output texture without rendering\n            name = renderer;\n            return this._outputTextures[name];\n        }\n        var outputInfo = this.outputs[name];\n        if (!outputInfo) {\n            return ;\n        }\n\n        // Already been rendered in this frame\n        if (this._rendered) {\n            // Force return texture in last frame\n            if (outputInfo.outputLastFrame) {\n                return this._prevOutputTextures[name];\n            }\n            else {\n                return this._outputTextures[name];\n            }\n        }\n        else if (\n            // TODO\n            this._rendering   // Solve Circular Reference\n        ) {\n            if (!this._prevOutputTextures[name]) {\n                // Create a blank texture at first pass\n                this._prevOutputTextures[name] = this._compositor.allocateTexture(outputInfo.parameters || {});\n            }\n            return this._prevOutputTextures[name];\n        }\n\n        this.render(renderer);\n\n        return this._outputTextures[name];\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    link: function (inputPinName, fromNode, fromPinName) {\n\n        // The relationship from output pin to input pin is one-on-multiple\n        this.inputLinks[inputPinName] = {\n            node: fromNode,\n            pin: fromPinName\n        };\n        if (!fromNode.outputLinks[fromPinName]) {\n            fromNode.outputLinks[fromPinName] = [];\n        }\n        fromNode.outputLinks[fromPinName].push({\n            node: this,\n            pin: inputPinName\n        });\n\n        // Enabled the pin texture in shader\n        this.pass.material.enableTexture(inputPinName);\n    },\n\n    clear: function () {\n        this.inputLinks = {};\n        this.outputLinks = {};\n    },\n\n    updateReference: function (outputName) {\n        if (!this._rendering) {\n            this._rendering = true;\n            for (var inputName in this.inputLinks) {\n                var link = this.inputLinks[inputName];\n                link.node.updateReference(link.pin);\n            }\n            this._rendering = false;\n        }\n        if (outputName) {\n            this._outputReferences[outputName] ++;\n        }\n    },\n\n    beforeFrame: function () {\n        this._rendered = false;\n\n        for (var name in this.outputLinks) {\n            this._outputReferences[name] = 0;\n        }\n    },\n\n    afterFrame: function () {\n        // Put back all the textures to pool\n        for (var name in this.outputLinks) {\n            if (this._outputReferences[name] > 0) {\n                var outputInfo = this.outputs[name];\n                if (outputInfo.keepLastFrame) {\n                    if (this._prevOutputTextures[name]) {\n                        this._compositor.releaseTexture(this._prevOutputTextures[name]);\n                    }\n                    this._prevOutputTextures[name] = this._outputTextures[name];\n                }\n                else {\n                    this._compositor.releaseTexture(this._outputTextures[name]);\n                }\n            }\n        }\n    }\n});\n\nexport default CompositorNode;\n","import Base from '../core/Base';\nimport GraphNode from './CompositorNode';\n\n/**\n * @constructor clay.compositor.Graph\n * @extends clay.core.Base\n */\nvar Graph = Base.extend(function () {\n    return /** @lends clay.compositor.Graph# */ {\n        /**\n         * @type {Array.<clay.compositor.CompositorNode>}\n         */\n        nodes: []\n    };\n},\n/** @lends clay.compositor.Graph.prototype */\n{\n\n    /**\n     * Mark to update\n     */\n    dirty: function () {\n        this._dirty = true;\n    },\n    /**\n     * @param {clay.compositor.CompositorNode} node\n     */\n    addNode: function (node) {\n\n        if (this.nodes.indexOf(node) >= 0) {\n            return;\n        }\n\n        this.nodes.push(node);\n\n        this._dirty = true;\n    },\n    /**\n     * @param  {clay.compositor.CompositorNode|string} node\n     */\n    removeNode: function (node) {\n        if (typeof node === 'string') {\n            node = this.getNodeByName(node);\n        }\n        var idx = this.nodes.indexOf(node);\n        if (idx >= 0) {\n            this.nodes.splice(idx, 1);\n            this._dirty = true;\n        }\n    },\n    /**\n     * @param {string} name\n     * @return {clay.compositor.CompositorNode}\n     */\n    getNodeByName: function (name) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            if (this.nodes[i].name === name) {\n                return this.nodes[i];\n            }\n        }\n    },\n    /**\n     * Update links of graph\n     */\n    update: function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.nodes[i].clear();\n        }\n        // Traverse all the nodes and build the graph\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n\n            if (!node.inputs) {\n                continue;\n            }\n            for (var inputName in node.inputs) {\n                if (!node.inputs[inputName]) {\n                    continue;\n                }\n                if (node.pass && !node.pass.material.isUniformEnabled(inputName)) {\n                    console.warn('Pin '  + node.name + '.' + inputName + ' not used.');\n                    continue;\n                }\n                var fromPinInfo = node.inputs[inputName];\n\n                var fromPin = this.findPin(fromPinInfo);\n                if (fromPin) {\n                    node.link(inputName, fromPin.node, fromPin.pin);\n                }\n                else {\n                    if (typeof fromPinInfo === 'string') {\n                        console.warn('Node ' + fromPinInfo + ' not exist');\n                    }\n                    else {\n                        console.warn('Pin of ' + fromPinInfo.node + '.' + fromPinInfo.pin + ' not exist');\n                    }\n                }\n            }\n        }\n    },\n\n    findPin: function (input) {\n        var node;\n        // Try to take input as a directly a node\n        if (typeof input === 'string' || input instanceof GraphNode) {\n            input = {\n                node: input\n            };\n        }\n\n        if (typeof input.node === 'string') {\n            for (var i = 0; i < this.nodes.length; i++) {\n                var tmp = this.nodes[i];\n                if (tmp.name === input.node) {\n                    node = tmp;\n                }\n            }\n        }\n        else {\n            node = input.node;\n        }\n        if (node) {\n            var inputPin = input.pin;\n            if (!inputPin) {\n                // Use first pin defaultly\n                if (node.outputs) {\n                    inputPin = Object.keys(node.outputs)[0];\n                }\n            }\n            if (node.outputs[inputPin]) {\n                return {\n                    node: node,\n                    pin: inputPin\n                };\n            }\n        }\n    }\n});\n\nexport default Graph;\n","import Graph from './Graph';\nimport TexturePool from './TexturePool';\nimport FrameBuffer from '../FrameBuffer';\n\n/**\n * Compositor provide graph based post processing\n *\n * @constructor clay.compositor.Compositor\n * @extends clay.compositor.Graph\n *\n */\nvar Compositor = Graph.extend(function() {\n    return {\n        // Output node\n        _outputs: [],\n\n        _texturePool: new TexturePool(),\n\n        _frameBuffer: new FrameBuffer({\n            depthBuffer: false\n        })\n    };\n},\n/** @lends clay.compositor.Compositor.prototype */\n{\n    addNode: function(node) {\n        Graph.prototype.addNode.call(this, node);\n        node._compositor = this;\n    },\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function(renderer, frameBuffer) {\n        if (this._dirty) {\n            this.update();\n            this._dirty = false;\n\n            this._outputs.length = 0;\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (!this.nodes[i].outputs) {\n                    this._outputs.push(this.nodes[i]);\n                }\n            }\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Update the reference number of each output texture\n            this.nodes[i].beforeFrame();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].updateReference();\n        }\n\n        for (var i = 0; i < this._outputs.length; i++) {\n            this._outputs[i].render(renderer, frameBuffer);\n        }\n\n        for (var i = 0; i < this.nodes.length; i++) {\n            // Clear up\n            this.nodes[i].afterFrame();\n        }\n    },\n\n    allocateTexture: function (parameters) {\n        return this._texturePool.get(parameters);\n    },\n\n    releaseTexture: function (parameters) {\n        this._texturePool.put(parameters);\n    },\n\n    getFrameBuffer: function () {\n        return this._frameBuffer;\n    },\n\n    /**\n     * Dispose compositor\n     * @param {clay.Renderer} renderer\n     */\n    dispose: function (renderer) {\n        this._texturePool.clear(renderer);\n    }\n});\n\nexport default Compositor;\n","import CompositorNode from './CompositorNode';\nimport glenum from '../core/glenum';\nimport FrameBuffer from '../FrameBuffer';\n\n/**\n * @constructor clay.compositor.SceneNode\n * @extends clay.compositor.CompositorNode\n */\nvar SceneNode = CompositorNode.extend(\n/** @lends clay.compositor.SceneNode# */\n{\n    name: 'scene',\n    /**\n     * @type {clay.Scene}\n     */\n    scene: null,\n    /**\n     * @type {clay.Camera}\n     */\n    camera: null,\n    /**\n     * @type {boolean}\n     */\n    autoUpdateScene: true,\n    /**\n     * @type {boolean}\n     */\n    preZ: false\n\n}, function() {\n    this.frameBuffer = new FrameBuffer();\n}, {\n    render: function(renderer) {\n\n        this._rendering = true;\n        var _gl = renderer.gl;\n\n        this.trigger('beforerender');\n\n        var renderInfo;\n\n        if (!this.outputs) {\n\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n\n        }\n        else {\n\n            var frameBuffer = this.frameBuffer;\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) == 'string') {\n                    attachment = _gl[attachment];\n                }\n                frameBuffer.attach(texture, attachment);\n            }\n            frameBuffer.bind(renderer);\n\n            // MRT Support in chrome\n            // https://www.khronos.org/registry/webgl/sdk/tests/conformance/extensions/ext-draw-buffers.html\n            var ext = renderer.getGLExtension('EXT_draw_buffers');\n            if (ext) {\n                var bufs = [];\n                for (var attachment in this.outputs) {\n                    attachment = parseInt(attachment);\n                    if (attachment >= _gl.COLOR_ATTACHMENT0 && attachment <= _gl.COLOR_ATTACHMENT0 + 8) {\n                        bufs.push(attachment);\n                    }\n                }\n                ext.drawBuffersEXT(bufs);\n            }\n\n            // Always clear\n            // PENDING\n            renderer.saveClear();\n            renderer.clearBit = glenum.DEPTH_BUFFER_BIT | glenum.COLOR_BUFFER_BIT;\n            renderInfo = renderer.render(this.scene, this.camera, !this.autoUpdateScene, this.preZ);\n            renderer.restoreClear();\n\n            frameBuffer.unbind(renderer);\n        }\n\n        this.trigger('afterrender', renderInfo);\n\n        this._rendering = false;\n        this._rendered = true;\n    }\n});\n\nexport default SceneNode;\n","import CompositorNode from './CompositorNode';\n\n/**\n * @constructor clay.compositor.TextureNode\n * @extends clay.compositor.CompositorNode\n */\nvar TextureNode = CompositorNode.extend(function() {\n    return /** @lends clay.compositor.TextureNode# */ {\n        /**\n         * @type {clay.Texture2D}\n         */\n        texture: null,\n\n        // Texture node must have output without parameters\n        outputs: {\n            color: {}\n        }\n    };\n}, function () {\n}, {\n\n    getOutput: function (renderer, name) {\n        return this.texture;\n    },\n\n    // Do nothing\n    beforeFrame: function () {},\n    afterFrame: function () {}\n});\n\nexport default TextureNode;\n","// TODO Shader library\nimport Pass from './Pass';\nimport CompositorNode from './CompositorNode';\n\n// TODO curlnoise demo wrong\n\n// PENDING\n// Use topological sort ?\n\n/**\n * Filter node\n *\n * @constructor clay.compositor.FilterNode\n * @extends clay.compositor.CompositorNode\n *\n * @example\n    var node = new clay.compositor.FilterNode({\n        name: 'fxaa',\n        shader: clay.Shader.source('clay.compositor.fxaa'),\n        inputs: {\n            texture: {\n                    node: 'scene',\n                    pin: 'color'\n            }\n        },\n        // Multiple outputs is preserved for MRT support in WebGL2.0\n        outputs: {\n            color: {\n                attachment: clay.FrameBuffer.COLOR_ATTACHMENT0\n                parameters: {\n                    format: clay.Texture.RGBA,\n                    width: 512,\n                    height: 512\n                },\n                // Node will keep the RTT rendered in last frame\n                keepLastFrame: true,\n                // Force the node output the RTT rendered in last frame\n                outputLastFrame: true\n            }\n        }\n    });\n    *\n    */\nvar FilterNode = CompositorNode.extend(function () {\n    return /** @lends clay.compositor.FilterNode# */ {\n        /**\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * @type {Object}\n         */\n        inputs: {},\n\n        /**\n         * @type {Object}\n         */\n        outputs: null,\n\n        /**\n         * @type {string}\n         */\n        shader: '',\n\n        /**\n         * Input links, will be updated by the graph\n         * @example:\n         *     inputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        inputLinks: {},\n\n        /**\n         * Output links, will be updated by the graph\n         * @example:\n         *     outputName: {\n         *         node: someNode,\n         *         pin: 'xxxx'\n         *     }\n         * @type {Object}\n         */\n        outputLinks: {},\n\n        /**\n         * @type {clay.compositor.Pass}\n         */\n        pass: null,\n\n        // Save the output texture of previous frame\n        // Will be used when there exist a circular reference\n        _prevOutputTextures: {},\n        _outputTextures: {},\n\n        // Example: { name: 2 }\n        _outputReferences: {},\n\n        _rendering: false,\n        // If rendered in this frame\n        _rendered: false,\n\n        _compositor: null\n    };\n}, function () {\n\n    var pass = new Pass({\n        fragment: this.shader\n    });\n    this.pass = pass;\n},\n/** @lends clay.compositor.FilterNode.prototype */\n{\n    /**\n     * @param  {clay.Renderer} renderer\n     */\n    render: function (renderer, frameBuffer) {\n        this.trigger('beforerender', renderer);\n\n        this._rendering = true;\n\n        var _gl = renderer.gl;\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            var inputTexture = link.node.getOutput(renderer, link.pin);\n            this.pass.setUniform(inputName, inputTexture);\n        }\n        // Output\n        if (!this.outputs) {\n            this.pass.outputs = null;\n\n            this._compositor.getFrameBuffer().unbind(renderer);\n\n            this.pass.render(renderer, frameBuffer);\n        }\n        else {\n            this.pass.outputs = {};\n\n            var attachedTextures = {};\n            for (var name in this.outputs) {\n                var parameters = this.updateParameter(name, renderer);\n                if (isNaN(parameters.width)) {\n                    this.updateParameter(name, renderer);\n                }\n                var outputInfo = this.outputs[name];\n                var texture = this._compositor.allocateTexture(parameters);\n                this._outputTextures[name] = texture;\n                var attachment = outputInfo.attachment || _gl.COLOR_ATTACHMENT0;\n                if (typeof(attachment) === 'string') {\n                    attachment = _gl[attachment];\n                }\n                attachedTextures[attachment] = texture;\n            }\n            this._compositor.getFrameBuffer().bind(renderer);\n\n            for (var attachment in attachedTextures) {\n                // FIXME attachment changes in different nodes\n                this._compositor.getFrameBuffer().attach(\n                    attachedTextures[attachment], attachment\n                );\n            }\n\n            this.pass.render(renderer);\n\n            // Because the data of texture is changed over time,\n            // Here update the mipmaps of texture each time after rendered;\n            this._compositor.getFrameBuffer().updateMipmap(renderer);\n        }\n\n        for (var inputName in this.inputLinks) {\n            var link = this.inputLinks[inputName];\n            link.node.removeReference(link.pin);\n        }\n\n        this._rendering = false;\n        this._rendered = true;\n\n        this.trigger('afterrender', renderer);\n    },\n\n    // TODO Remove parameter function callback\n    updateParameter: function (outputName, renderer) {\n        var outputInfo = this.outputs[outputName];\n        var parameters = outputInfo.parameters;\n        var parametersCopy = outputInfo._parametersCopy;\n        if (!parametersCopy) {\n            parametersCopy = outputInfo._parametersCopy = {};\n        }\n        if (parameters) {\n            for (var key in parameters) {\n                if (key !== 'width' && key !== 'height') {\n                    parametersCopy[key] = parameters[key];\n                }\n            }\n        }\n        var width, height;\n        if (typeof parameters.width === 'function') {\n            width = parameters.width.call(this, renderer);\n        }\n        else {\n            width = parameters.width;\n        }\n        if (typeof parameters.height === 'function') {\n            height = parameters.height.call(this, renderer);\n        }\n        else {\n            height = parameters.height;\n        }\n        width = Math.ceil(width);\n        height = Math.ceil(height);\n        if (\n            parametersCopy.width !== width\n            || parametersCopy.height !== height\n        ) {\n            if (this._outputTextures[outputName]) {\n                this._outputTextures[outputName].dispose(renderer);\n            }\n        }\n        parametersCopy.width = width;\n        parametersCopy.height = height;\n\n        return parametersCopy;\n    },\n\n    /**\n     * Set parameter\n     * @param {string} name\n     * @param {} value\n     */\n    setParameter: function (name, value) {\n        this.pass.setUniform(name, value);\n    },\n    /**\n     * Get parameter value\n     * @param  {string} name\n     * @return {}\n     */\n    getParameter: function (name) {\n        return this.pass.getUniform(name);\n    },\n    /**\n     * Set parameters\n     * @param {Object} obj\n     */\n    setParameters: function (obj) {\n        for (var name in obj) {\n            this.setParameter(name, obj[name]);\n        }\n    },\n    // /**\n    //  * Set shader code\n    //  * @param {string} shaderStr\n    //  */\n    // setShader: function (shaderStr) {\n    //     var material = this.pass.material;\n    //     material.shader.setFragment(shaderStr);\n    //     material.attachShader(material.shader, true);\n    // },\n    /**\n     * Proxy of pass.material.define('fragment', xxx);\n     * @param  {string} symbol\n     * @param  {number} [val]\n     */\n    define: function (symbol, val) {\n        this.pass.material.define('fragment', symbol, val);\n    },\n\n    /**\n     * Proxy of pass.material.undefine('fragment', xxx)\n     * @param  {string} symbol\n     */\n    undefine: function (symbol) {\n        this.pass.material.undefine('fragment', symbol);\n    },\n\n    removeReference: function (outputName) {\n        this._outputReferences[outputName]--;\n        if (this._outputReferences[outputName] === 0) {\n            var outputInfo = this.outputs[outputName];\n            if (outputInfo.keepLastFrame) {\n                if (this._prevOutputTextures[outputName]) {\n                    this._compositor.releaseTexture(this._prevOutputTextures[outputName]);\n                }\n                this._prevOutputTextures[outputName] = this._outputTextures[outputName];\n            }\n            else {\n                // Output of this node have alreay been used by all other nodes\n                // Put the texture back to the pool.\n                this._compositor.releaseTexture(this._outputTextures[outputName]);\n            }\n        }\n    },\n\n    clear: function () {\n        CompositorNode.prototype.clear.call(this);\n\n        // Default disable all texture\n        this.pass.material.disableTexturesAll();\n    }\n});\n\nexport default FilterNode;\n","import util from './core/util';\nimport Compositor from './compositor/Compositor';\nimport CompoSceneNode from './compositor/SceneNode';\nimport CompoTextureNode from './compositor/TextureNode';\nimport CompoFilterNode from './compositor/FilterNode';\nimport Shader from './Shader';\nimport Texture from './Texture';\nimport Texture2D from './Texture2D';\nimport TextureCube from './TextureCube';\n\nimport registerBuiltinCompositor from './shader/registerBuiltinCompositor';\n\nregisterBuiltinCompositor(Shader);\n\nvar shaderSourceReg = /^#source\\((.*?)\\)/;\n\n/**\n * @name clay.createCompositor\n * @function\n * @param {Object} json\n * @param {Object} [opts]\n * @return {clay.compositor.Compositor}\n */\nfunction createCompositor(json, opts) {\n    var compositor = new Compositor();\n    opts = opts || {};\n\n    var lib = {\n        textures: {},\n        parameters: {}\n    };\n    var afterLoad = function(shaderLib, textureLib) {\n        for (var i = 0; i < json.nodes.length; i++) {\n            var nodeInfo = json.nodes[i];\n            var node = createNode(nodeInfo, lib, opts);\n            if (node) {\n                compositor.addNode(node);\n            }\n        }\n    };\n\n    for (var name in json.parameters) {\n        var paramInfo = json.parameters[name];\n        lib.parameters[name] = convertParameter(paramInfo);\n    }\n    // TODO load texture asynchronous\n    loadTextures(json, lib, opts, function(textureLib) {\n        lib.textures = textureLib;\n        afterLoad();\n    });\n\n    return compositor;\n}\n\nfunction createNode(nodeInfo, lib, opts) {\n    var type = nodeInfo.type || 'filter';\n    var shaderSource;\n    var inputs;\n    var outputs;\n\n    if (type === 'filter') {\n        var shaderExp = nodeInfo.shader.trim();\n        var res = shaderSourceReg.exec(shaderExp);\n        if (res) {\n            shaderSource = Shader.source(res[1].trim());\n        }\n        else if (shaderExp.charAt(0) === '#') {\n            shaderSource = lib.shaders[shaderExp.substr(1)];\n        }\n        if (!shaderSource) {\n            shaderSource = shaderExp;\n        }\n        if (!shaderSource) {\n            return;\n        }\n    }\n\n    if (nodeInfo.inputs) {\n        inputs = {};\n        for (var name in nodeInfo.inputs) {\n            if (typeof nodeInfo.inputs[name] === 'string') {\n                inputs[name] = nodeInfo.inputs[name];\n            }\n            else {\n                inputs[name] = {\n                    node: nodeInfo.inputs[name].node,\n                    pin: nodeInfo.inputs[name].pin\n                };\n            }\n        }\n    }\n    if (nodeInfo.outputs) {\n        outputs = {};\n        for (var name in nodeInfo.outputs) {\n            var outputInfo = nodeInfo.outputs[name];\n            outputs[name] = {};\n            if (outputInfo.attachment != null) {\n                outputs[name].attachment = outputInfo.attachment;\n            }\n            if (outputInfo.keepLastFrame != null) {\n                outputs[name].keepLastFrame = outputInfo.keepLastFrame;\n            }\n            if (outputInfo.outputLastFrame != null) {\n                outputs[name].outputLastFrame = outputInfo.outputLastFrame;\n            }\n            if (outputInfo.parameters) {\n                outputs[name].parameters = convertParameter(outputInfo.parameters);\n            }\n        }\n    }\n    var node;\n    if (type === 'scene') {\n        node = new CompoSceneNode({\n            name: nodeInfo.name,\n            scene: opts.scene,\n            camera: opts.camera,\n            outputs: outputs\n        });\n    }\n    else if (type === 'texture') {\n        node = new CompoTextureNode({\n            name: nodeInfo.name,\n            outputs: outputs\n        });\n    }\n    // Default is filter\n    else {\n        node = new CompoFilterNode({\n            name: nodeInfo.name,\n            shader: shaderSource,\n            inputs: inputs,\n            outputs: outputs\n        });\n    }\n    if (node) {\n        if (nodeInfo.parameters) {\n            for (var name in nodeInfo.parameters) {\n                var val = nodeInfo.parameters[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    if (val.charAt(0) === '#') {\n                        val = lib.textures[val.substr(1)];\n                    }\n                    else {\n                        node.on(\n                            'beforerender', createSizeSetHandler(\n                                name, tryConvertExpr(val)\n                            )\n                        );\n                    }\n                }\n                else if (typeof val === 'function') {\n                    node.on('beforerender', val);\n                }\n                node.setParameter(name, val);\n            }\n        }\n        if (nodeInfo.defines && node.pass) {\n            for (var name in nodeInfo.defines) {\n                var val = nodeInfo.defines[name];\n                node.pass.material.define('fragment', name, val);\n            }\n        }\n    }\n    return node;\n}\n\nfunction defaultWidthFunc(width, height) {\n    return width;\n}\nfunction defaultHeightFunc(width, height) {\n    return height;\n}\n\nfunction convertParameter(paramInfo) {\n    var param = {};\n    if (!paramInfo) {\n        return param;\n    }\n    ['type', 'minFilter', 'magFilter', 'wrapS', 'wrapT', 'flipY', 'useMipmap']\n        .forEach(function(name) {\n            var val = paramInfo[name];\n            if (val != null) {\n                // Convert string to enum\n                if (typeof val === 'string') {\n                    val = Texture[val];\n                }\n                param[name] = val;\n            }\n        });\n\n    var sizeScale = paramInfo.scale || 1;\n    ['width', 'height']\n        .forEach(function(name) {\n            if (paramInfo[name] != null) {\n                var val = paramInfo[name];\n                if (typeof val === 'string') {\n                    val = val.trim();\n                    param[name] = createSizeParser(\n                        name, tryConvertExpr(val), sizeScale\n                    );\n                }\n                else {\n                    param[name] = val;\n                }\n            }\n        });\n    if (!param.width) {\n        param.width = defaultWidthFunc;\n    }\n    if (!param.height) {\n        param.height = defaultHeightFunc;\n    }\n\n    if (paramInfo.useMipmap != null) {\n        param.useMipmap = paramInfo.useMipmap;\n    }\n    return param;\n}\n\nfunction loadTextures(json, lib, opts, callback) {\n    if (!json.textures) {\n        callback({});\n        return;\n    }\n    var textures = {};\n    var loading = 0;\n\n    var cbd = false;\n    var textureRootPath = opts.textureRootPath;\n    util.each(json.textures, function(textureInfo, name) {\n        var texture;\n        var path = textureInfo.path;\n        var parameters = convertParameter(textureInfo.parameters);\n        if (Array.isArray(path) && path.length === 6) {\n            if (textureRootPath) {\n                path = path.map(function(item) {\n                    return util.relative2absolute(item, textureRootPath);\n                });\n            }\n            texture = new TextureCube(parameters);\n        }\n        else if(typeof path === 'string') {\n            if (textureRootPath) {\n                path = util.relative2absolute(path, textureRootPath);\n            }\n            texture = new Texture2D(parameters);\n        }\n        else {\n            return;\n        }\n\n        texture.load(path);\n        loading++;\n        texture.once('success', function() {\n            textures[name] = texture;\n            loading--;\n            if (loading === 0) {\n                callback(textures);\n                cbd = true;\n            }\n        });\n    });\n\n    if (loading === 0 && !cbd) {\n        callback(textures);\n    }\n}\n\nfunction createSizeSetHandler(name, exprFunc) {\n    return function (renderer) {\n        // PENDING viewport size or window size\n        var dpr = renderer.getDevicePixelRatio();\n        // PENDING If multiply dpr ?\n        var width = renderer.getWidth();\n        var height = renderer.getHeight();\n        var result = exprFunc(width, height, dpr);\n        this.setParameter(name, result);\n    };\n}\n\nfunction createSizeParser(name, exprFunc, scale) {\n    scale = scale || 1;\n    return function (renderer) {\n        var dpr = renderer.getDevicePixelRatio();\n        var width = renderer.getWidth() * scale;\n        var height = renderer.getHeight() * scale;\n        return exprFunc(width, height, dpr);\n    };\n}\n\nfunction tryConvertExpr(string) {\n    // PENDING\n    var exprRes = /^expr\\((.*)\\)$/.exec(string);\n    if (exprRes) {\n        try {\n            var func = new Function('width', 'height', 'dpr', 'return ' + exprRes[1]);\n            // Try run t\n            func(1, 1);\n\n            return func;\n        }\n        catch (e) {\n            throw new Error('Invalid expression.');\n        }\n    }\n}\n\nexport default createCompositor;\n","// DEPRECATED\nimport createCompositor from '../createCompositor';\nexport default createCompositor;","/**\n * Extend a sub class from base class\n * @param {object|Function} makeDefaultOpt default option of this sub class, method of the sub can use this.xxx to access this option\n * @param {Function} [initialize] Initialize after the sub class is instantiated\n * @param {Object} [proto] Prototype methods/properties of the sub class\n * @memberOf clay.core.mixin.extend\n * @return {Function}\n */\nfunction derive(makeDefaultOpt, initialize/*optional*/, proto/*optional*/) {\n\n    if (typeof initialize == 'object') {\n        proto = initialize;\n        initialize = null;\n    }\n\n    var _super = this;\n\n    var propList;\n    if (!(makeDefaultOpt instanceof Function)) {\n        // Optimize the property iterate if it have been fixed\n        propList = [];\n        for (var propName in makeDefaultOpt) {\n            if (makeDefaultOpt.hasOwnProperty(propName)) {\n                propList.push(propName);\n            }\n        }\n    }\n\n    var sub = function(options) {\n\n        // call super constructor\n        _super.apply(this, arguments);\n\n        if (makeDefaultOpt instanceof Function) {\n            // Invoke makeDefaultOpt each time if it is a function, So we can make sure each\n            // property in the object will not be shared by mutiple instances\n            extend(this, makeDefaultOpt.call(this, options));\n        }\n        else {\n            extendWithPropList(this, makeDefaultOpt, propList);\n        }\n\n        if (this.constructor === sub) {\n            // Initialize function will be called in the order of inherit\n            var initializers = sub.__initializers__;\n            for (var i = 0; i < initializers.length; i++) {\n                initializers[i].apply(this, arguments);\n            }\n        }\n    };\n    // save super constructor\n    sub.__super__ = _super;\n    // Initialize function will be called after all the super constructor is called\n    if (!_super.__initializers__) {\n        sub.__initializers__ = [];\n    } else {\n        sub.__initializers__ = _super.__initializers__.slice();\n    }\n    if (initialize) {\n        sub.__initializers__.push(initialize);\n    }\n\n    var Ctor = function() {};\n    Ctor.prototype = _super.prototype;\n    sub.prototype = new Ctor();\n    sub.prototype.constructor = sub;\n    extend(sub.prototype, proto);\n\n    // extend the derive method as a static method;\n    sub.extend = _super.extend;\n\n    // DEPCRATED\n    sub.derive = _super.extend;\n\n    return sub;\n}\n\nfunction extend(target, source) {\n    if (!source) {\n        return;\n    }\n    for (var name in source) {\n        if (source.hasOwnProperty(name)) {\n            target[name] = source[name];\n        }\n    }\n}\n\nfunction extendWithPropList(target, source, propList) {\n    for (var i = 0; i < propList.length; i++) {\n        var propName = propList[i];\n        target[propName] = source[propName];\n    }\n}\n\n/**\n * @alias clay.core.mixin.extend\n * @mixin\n */\nexport default {\n\n    extend: derive,\n\n    // DEPCRATED\n    derive: derive\n};\n","import extendMixin from './mixin/extend';\nimport notifierMixin from './mixin/notifier';\nimport util from './util';\n\n/**\n * Base class of all objects\n * @constructor\n * @alias clay.core.Base\n * @mixes clay.core.mixin.notifier\n */\nvar Base = function () {\n    /**\n     * @type {number}\n     */\n    this.__uid__ = util.genGUID();\n};\n\nBase.__initializers__ = [\n    function (opts) {\n        util.extend(this, opts);\n    }\n];\n\nutil.extend(Base, extendMixin);\nutil.extend(Base.prototype, notifierMixin);\n\nexport default Base;\n","var DIRTY_PREFIX = '__dt__';\n\nvar Cache = function () {\n\n    this._contextId = 0;\n\n    this._caches = [];\n\n    this._context = {};\n};\n\nCache.prototype = {\n\n    use: function (contextId, documentSchema) {\n        var caches = this._caches;\n        if (!caches[contextId]) {\n            caches[contextId] = {};\n\n            if (documentSchema) {\n                caches[contextId] = documentSchema();\n            }\n        }\n        this._contextId = contextId;\n\n        this._context = caches[contextId];\n    },\n\n    put: function (key, value) {\n        this._context[key] = value;\n    },\n\n    get: function (key) {\n        return this._context[key];\n    },\n\n    dirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, true);\n    },\n\n    dirtyAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = true;\n            }\n        }\n    },\n\n    fresh: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        this.put(key, false);\n    },\n\n    freshAll: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var caches = this._caches;\n        for (var i = 0; i < caches.length; i++) {\n            if (caches[i]) {\n                caches[i][key] = false;\n            }\n        }\n    },\n\n    isDirty: function (field) {\n        field = field || '';\n        var key = DIRTY_PREFIX + field;\n        var context = this._context;\n        return  !context.hasOwnProperty(key)\n            || context[key] === true;\n    },\n\n    deleteContext: function (contextId) {\n        delete this._caches[contextId];\n        this._context = {};\n    },\n\n    delete: function (key) {\n        delete this._context[key];\n    },\n\n    clearAll: function () {\n        this._caches = {};\n    },\n\n    getContext: function () {\n        return this._context;\n    },\n\n    eachContext : function (cb, context) {\n        var keys = Object.keys(this._caches);\n        keys.forEach(function (key) {\n            cb && cb.call(context, key);\n        });\n    },\n\n    miss: function (key) {\n        return ! this._context.hasOwnProperty(key);\n    }\n};\n\nCache.prototype.constructor = Cache;\n\nexport default Cache;\n","/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n * @alias clay.core.LinkedList\n */\nvar LinkedList = function () {\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.head = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.tail = null;\n\n    this._length = 0;\n};\n\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insert = function (val) {\n    var entry = new LinkedList.Entry(val);\n    this.insertEntry(entry);\n    return entry;\n};\n\n/**\n * Insert a new value at idx\n * @param {number} idx\n * @param  {} val\n * @return {clay.core.LinkedList.Entry}\n */\nLinkedList.prototype.insertAt = function (idx, val) {\n    if (idx < 0) {\n        return;\n    }\n    var next = this.head;\n    var cursor = 0;\n    while (next && cursor != idx) {\n        next = next.next;\n        cursor++;\n    }\n    if (next) {\n        var entry = new LinkedList.Entry(val);\n        var prev = next.prev;\n        if (!prev) { //next is head\n            this.head = entry;\n        }\n        else {\n            prev.next = entry;\n            entry.prev = prev;\n        }\n        entry.next = next;\n        next.prev = entry;\n    }\n    else {\n        this.insert(val);\n    }\n};\n\nLinkedList.prototype.insertBeforeEntry = function (val, next) {\n    var entry = new LinkedList.Entry(val);\n    var prev = next.prev;\n    if (!prev) { //next is head\n        this.head = entry;\n    }\n    else {\n        prev.next = entry;\n        entry.prev = prev;\n    }\n    entry.next = next;\n    next.prev = entry;\n\n    this._length++;\n};\n\n/**\n * Insert an entry at the tail\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.insertEntry = function (entry) {\n    if (!this.head) {\n        this.head = this.tail = entry;\n    }\n    else {\n        this.tail.next = entry;\n        entry.prev = this.tail;\n        this.tail = entry;\n    }\n    this._length++;\n};\n\n/**\n * Remove entry.\n * @param  {clay.core.LinkedList.Entry} entry\n */\nLinkedList.prototype.remove = function (entry) {\n    var prev = entry.prev;\n    var next = entry.next;\n    if (prev) {\n        prev.next = next;\n    }\n    else {\n        // Is head\n        this.head = next;\n    }\n    if (next) {\n        next.prev = prev;\n    }\n    else {\n        // Is tail\n        this.tail = prev;\n    }\n    entry.next = entry.prev = null;\n    this._length--;\n};\n\n/**\n * Remove entry at index.\n * @param  {number} idx\n * @return {}\n */\nLinkedList.prototype.removeAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    if (curr) {\n        this.remove(curr);\n        return curr.value;\n    }\n};\n/**\n * Get head value\n * @return {}\n */\nLinkedList.prototype.getHead = function () {\n    if (this.head) {\n        return this.head.value;\n    }\n};\n/**\n * Get tail value\n * @return {}\n */\nLinkedList.prototype.getTail = function () {\n    if (this.tail) {\n        return this.tail.value;\n    }\n};\n/**\n * Get value at idx\n * @param {number} idx\n * @return {}\n */\nLinkedList.prototype.getAt = function (idx) {\n    if (idx < 0) {\n        return;\n    }\n    var curr = this.head;\n    var cursor = 0;\n    while (curr && cursor != idx) {\n        curr = curr.next;\n        cursor++;\n    }\n    return curr.value;\n};\n\n/**\n * @param  {} value\n * @return {number}\n */\nLinkedList.prototype.indexOf = function (value) {\n    var curr = this.head;\n    var cursor = 0;\n    while (curr) {\n        if (curr.value === value) {\n            return cursor;\n        }\n        curr = curr.next;\n        cursor++;\n    }\n};\n\n/**\n * @return {number}\n */\nLinkedList.prototype.length = function () {\n    return this._length;\n};\n\n/**\n * If list is empty\n */\nLinkedList.prototype.isEmpty = function () {\n    return this._length === 0;\n};\n\n/**\n * @param  {Function} cb\n * @param  {} context\n */\nLinkedList.prototype.forEach = function (cb, context) {\n    var curr = this.head;\n    var idx = 0;\n    var haveContext = typeof(context) != 'undefined';\n    while (curr) {\n        if (haveContext) {\n            cb.call(context, curr.value, idx);\n        }\n        else {\n            cb(curr.value, idx);\n        }\n        curr = curr.next;\n        idx++;\n    }\n};\n\n/**\n * Clear the list\n */\nLinkedList.prototype.clear = function () {\n    this.tail = this.head = null;\n    this._length = 0;\n};\n\n/**\n * @constructor\n * @param {} val\n */\nLinkedList.Entry = function (val) {\n    /**\n     * @type {}\n     */\n    this.value = val;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.next = null;\n\n    /**\n     * @type {clay.core.LinkedList.Entry}\n     */\n    this.prev = null;\n};\n\nexport default LinkedList;\n","import LinkedList from './LinkedList';\n\n/**\n * LRU Cache\n * @constructor\n * @alias clay.core.LRU\n */\nvar LRU = function (maxSize) {\n\n    this._list = new LinkedList();\n\n    this._map = {};\n\n    this._maxSize = maxSize || 10;\n};\n\n/**\n * Set cache max size\n * @param {number} size\n */\nLRU.prototype.setMaxSize = function (size) {\n    this._maxSize = size;\n};\n\n/**\n * @param  {string} key\n * @param  {} value\n */\nLRU.prototype.put = function (key, value) {\n    if (!this._map.hasOwnProperty(key)) {\n        var len = this._list.length();\n        if (len >= this._maxSize && len > 0) {\n            // Remove the least recently used\n            var leastUsedEntry = this._list.head;\n            this._list.remove(leastUsedEntry);\n            delete this._map[leastUsedEntry.key];\n        }\n\n        var entry = this._list.insert(value);\n        entry.key = key;\n        this._map[key] = entry;\n    }\n};\n\n/**\n * @param  {string} key\n * @return {}\n */\nLRU.prototype.get = function (key) {\n    var entry = this._map[key];\n    if (this._map.hasOwnProperty(key)) {\n        // Put the latest used entry in the tail\n        if (entry !== this._list.tail) {\n            this._list.remove(entry);\n            this._list.insertEntry(entry);\n        }\n\n        return entry.value;\n    }\n};\n\n/**\n * @param {string} key\n */\nLRU.prototype.remove = function (key) {\n    var entry = this._map[key];\n    if (typeof(entry) !== 'undefined') {\n        delete this._map[key];\n        this._list.remove(entry);\n    }\n};\n\n/**\n * Clear the cache\n */\nLRU.prototype.clear = function () {\n    this._list.clear();\n    this._map = {};\n};\n\nexport default LRU;\n","/**\n * @namespace clay.core.color\n */\nimport LRU from '../core/LRU';\n\nvar colorUtil = {};\n\nvar kCSSColorTable = {\n    'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n    'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n    'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n    'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n    'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n    'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n    'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n    'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n    'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n    'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n    'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n    'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n    'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n    'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n    'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n    'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n    'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n    'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n    'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n    'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n    'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n    'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n    'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n    'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n    'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n    'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n    'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n    'gray': [128,128,128,1], 'green': [0,128,0,1],\n    'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n    'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n    'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n    'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n    'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n    'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n    'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n    'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n    'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n    'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n    'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n    'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n    'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n    'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n    'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n    'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n    'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n    'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n    'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n    'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n    'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n    'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n    'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n    'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n    'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n    'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n    'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n    'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n    'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n    'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n    'pink': [255,192,203,1], 'plum': [221,160,221,1],\n    'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n    'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n    'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n    'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n    'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n    'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n    'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n    'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n    'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n    'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n    'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n    'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n    'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n    'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n    'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n};\n\nfunction clampCssByte(i) {  // Clamp to integer 0 .. 255.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n    i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {  // int or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssByte(parseFloat(str) / 100 * 255);\n    }\n    return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {  // float or percentage.\n    if (str.length && str.charAt(str.length - 1) === '%') {\n        return clampCssFloat(parseFloat(str) / 100);\n    }\n    return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n    if (h < 0) {\n        h += 1;\n    }\n    else if (h > 1) {\n        h -= 1;\n    }\n\n    if (h * 6 < 1) {\n        return m1 + (m2 - m1) * h * 6;\n    }\n    if (h * 2 < 1) {\n        return m2;\n    }\n    if (h * 3 < 2) {\n        return m1 + (m2 - m1) * (2/3 - h) * 6;\n    }\n    return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n    return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n    out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n    return out;\n}\nfunction copyRgba(out, a) {\n    out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n    return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n    // Reuse removed array\n    if (lastRemovedArr) {\n        copyRgba(lastRemovedArr, rgbaArr);\n    }\n    lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n}\n\n/**\n * @name clay.core.color.parse\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n */\ncolorUtil.parse = function (colorStr, rgbaArr) {\n    if (!colorStr) {\n        return;\n    }\n    rgbaArr = rgbaArr || [];\n\n    var cached = colorCache.get(colorStr);\n    if (cached) {\n        return copyRgba(rgbaArr, cached);\n    }\n\n    // colorStr may be not string\n    colorStr = colorStr + '';\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = colorStr.replace(/ /g, '').toLowerCase();\n\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable) {\n        copyRgba(rgbaArr, kCSSColorTable[str]);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n    }\n\n    // #abc and #abc123 syntax.\n    if (str.charAt(0) === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xfff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                (iv & 0xf) | ((iv & 0xf) << 4),\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n        else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 0xffffff)) {\n                setRgba(rgbaArr, 0, 0, 0, 1);\n                return;  // Covers NaN.\n            }\n            setRgba(rgbaArr,\n                (iv & 0xff0000) >> 16,\n                (iv & 0xff00) >> 8,\n                iv & 0xff,\n                1\n            );\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        return;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;  // To allow case fallthrough.\n        switch (fname) {\n            case 'rgba':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                alpha = parseCssFloat(params.pop()); // jshint ignore:line\n            // Fall through.\n            case 'rgb':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                setRgba(rgbaArr,\n                    parseCssInt(params[0]),\n                    parseCssInt(params[1]),\n                    parseCssInt(params[2]),\n                    alpha\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsla':\n                if (params.length !== 4) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                params[3] = parseCssFloat(params[3]);\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            case 'hsl':\n                if (params.length !== 3) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;\n                }\n                hsla2rgba(params, rgbaArr);\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            default:\n                return;\n        }\n    }\n\n    setRgba(rgbaArr, 0, 0, 0, 1);\n    return;\n};\n\ncolorUtil.parseToFloat = function (colorStr, rgbaArr) {\n    rgbaArr = colorUtil.parse(colorStr, rgbaArr);\n    if (!rgbaArr) {\n        return;\n    }\n    rgbaArr[0] /= 255;\n    rgbaArr[1] /= 255;\n    rgbaArr[2] /= 255;\n    return rgbaArr;\n}\n\n/**\n * @name clay.core.color.hsla2rgba\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\nfunction hsla2rgba(hsla, rgba) {\n    var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n    // NOTE(deanm): According to the CSS spec s/l should only be\n    // percentages, but we don't bother and let float or percentage.\n    var s = parseCssFloat(hsla[1]);\n    var l = parseCssFloat(hsla[2]);\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n    var m1 = l * 2 - m2;\n\n    rgba = rgba || [];\n    setRgba(rgba,\n        clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n        clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n        1\n    );\n\n    if (hsla.length === 4) {\n        rgba[3] = hsla[3];\n    }\n\n    return rgba;\n}\n\n/**\n * @name clay.core.color.rgba2hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\nfunction rgba2hsla(rgba) {\n    if (!rgba) {\n        return;\n    }\n\n    // RGB from 0 to 255\n    var R = rgba[0] / 255;\n    var G = rgba[1] / 255;\n    var B = rgba[2] / 255;\n\n    var vMin = Math.min(R, G, B); // Min. value of RGB\n    var vMax = Math.max(R, G, B); // Max. value of RGB\n    var delta = vMax - vMin; // Delta RGB value\n\n    var L = (vMax + vMin) / 2;\n    var H;\n    var S;\n    // HSL results from 0 to 1\n    if (delta === 0) {\n        H = 0;\n        S = 0;\n    }\n    else {\n        if (L < 0.5) {\n            S = delta / (vMax + vMin);\n        }\n        else {\n            S = delta / (2 - vMax - vMin);\n        }\n\n        var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n        var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n        var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n        if (R === vMax) {\n            H = deltaB - deltaG;\n        }\n        else if (G === vMax) {\n            H = (1 / 3) + deltaR - deltaB;\n        }\n        else if (B === vMax) {\n            H = (2 / 3) + deltaG - deltaR;\n        }\n\n        if (H < 0) {\n            H += 1;\n        }\n\n        if (H > 1) {\n            H -= 1;\n        }\n    }\n\n    var hsla = [H * 360, S, L];\n\n    if (rgba[3] != null) {\n        hsla.push(rgba[3]);\n    }\n\n    return hsla;\n}\n\n/**\n * @name clay.core.color.lift\n * @param {string} color\n * @param {number} level\n * @return {string}\n */\ncolorUtil.lift = function (color, level) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        for (var i = 0; i < 3; i++) {\n            if (level < 0) {\n                colorArr[i] = colorArr[i] * (1 - level) | 0;\n            }\n            else {\n                colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n            }\n        }\n        return colorUtil.stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n    }\n}\n\n/**\n * @name clay.core.color.toHex\n * @param {string} color\n * @return {string}\n */\ncolorUtil.toHex = function (color) {\n    var colorArr = colorUtil.parse(color);\n    if (colorArr) {\n        return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n    }\n};\n\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @name clay.core.color\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\ncolorUtil.fastLerp = function (normalizedValue, colors, out) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    out = out || [];\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colors[leftIndex];\n    var rightColor = colors[rightIndex];\n    var dv = value - leftIndex;\n    out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n    out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n    out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n    out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n\n    return out;\n}\n\ncolorUtil.fastMapToColor = colorUtil.fastLerp;\n\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n */\ncolorUtil.lerp = function (normalizedValue, colors, fullOutput) {\n    if (!(colors && colors.length)\n        || !(normalizedValue >= 0 && normalizedValue <= 1)\n    ) {\n        return;\n    }\n\n    var value = normalizedValue * (colors.length - 1);\n    var leftIndex = Math.floor(value);\n    var rightIndex = Math.ceil(value);\n    var leftColor = colorUtil.parse(colors[leftIndex]);\n    var rightColor = colorUtil.parse(colors[rightIndex]);\n    var dv = value - leftIndex;\n\n    var color = colorUtil.stringify(\n        [\n            clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)),\n            clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)),\n            clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)),\n            clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))\n        ],\n        'rgba'\n    );\n\n    return fullOutput\n        ? {\n            color: color,\n            leftIndex: leftIndex,\n            rightIndex: rightIndex,\n            value: value\n        }\n        : color;\n}\n\n/**\n * @deprecated\n */\ncolorUtil.mapToColor = colorUtil.lerp;\n\n/**\n * @name clay.core.color\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyHSL = function (color, h, s, l) {\n    color = colorUtil.parse(color);\n\n    if (color) {\n        color = rgba2hsla(color);\n        h != null && (color[0] = clampCssAngle(h));\n        s != null && (color[1] = parseCssFloat(s));\n        l != null && (color[2] = parseCssFloat(l));\n\n        return colorUtil.stringify(hsla2rgba(color), 'rgba');\n    }\n}\n\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n */\ncolorUtil.modifyAlpha = function (color, alpha) {\n    color = colorUtil.parse(color);\n\n    if (color && alpha != null) {\n        color[3] = clampCssFloat(alpha);\n        return colorUtil.stringify(color, 'rgba');\n    }\n}\n\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\ncolorUtil.stringify = function (arrColor, type) {\n    if (!arrColor || !arrColor.length) {\n        return;\n    }\n    var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n    if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n        colorStr += ',' + arrColor[3];\n    }\n    return type + '(' + colorStr + ')';\n};\n\n\n\nexport default colorUtil;","/**\n * @namespace clay.core.glenum\n * @see http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\n */\nexport default {\n    /* ClearBufferMask */\n    DEPTH_BUFFER_BIT               : 0x00000100,\n    STENCIL_BUFFER_BIT             : 0x00000400,\n    COLOR_BUFFER_BIT               : 0x00004000,\n\n    /* BeginMode */\n    POINTS                         : 0x0000,\n    LINES                          : 0x0001,\n    LINE_LOOP                      : 0x0002,\n    LINE_STRIP                     : 0x0003,\n    TRIANGLES                      : 0x0004,\n    TRIANGLE_STRIP                 : 0x0005,\n    TRIANGLE_FAN                   : 0x0006,\n\n    /* AlphaFunction (not supported in ES20) */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* BlendingFactorDest */\n    ZERO                           : 0,\n    ONE                            : 1,\n    SRC_COLOR                      : 0x0300,\n    ONE_MINUS_SRC_COLOR            : 0x0301,\n    SRC_ALPHA                      : 0x0302,\n    ONE_MINUS_SRC_ALPHA            : 0x0303,\n    DST_ALPHA                      : 0x0304,\n    ONE_MINUS_DST_ALPHA            : 0x0305,\n\n    /* BlendingFactorSrc */\n    /*      ZERO */\n    /*      ONE */\n    DST_COLOR                      : 0x0306,\n    ONE_MINUS_DST_COLOR            : 0x0307,\n    SRC_ALPHA_SATURATE             : 0x0308,\n    /*      SRC_ALPHA */\n    /*      ONE_MINUS_SRC_ALPHA */\n    /*      DST_ALPHA */\n    /*      ONE_MINUS_DST_ALPHA */\n\n    /* BlendEquationSeparate */\n    FUNC_ADD                       : 0x8006,\n    BLEND_EQUATION                 : 0x8009,\n    BLEND_EQUATION_RGB             : 0x8009, /* same as BLEND_EQUATION */\n    BLEND_EQUATION_ALPHA           : 0x883D,\n\n    /* BlendSubtract */\n    FUNC_SUBTRACT                  : 0x800A,\n    FUNC_REVERSE_SUBTRACT          : 0x800B,\n\n    /* Separate Blend Functions */\n    BLEND_DST_RGB                  : 0x80C8,\n    BLEND_SRC_RGB                  : 0x80C9,\n    BLEND_DST_ALPHA                : 0x80CA,\n    BLEND_SRC_ALPHA                : 0x80CB,\n    CONSTANT_COLOR                 : 0x8001,\n    ONE_MINUS_CONSTANT_COLOR       : 0x8002,\n    CONSTANT_ALPHA                 : 0x8003,\n    ONE_MINUS_CONSTANT_ALPHA       : 0x8004,\n    BLEND_COLOR                    : 0x8005,\n\n    /* Buffer Objects */\n    ARRAY_BUFFER                   : 0x8892,\n    ELEMENT_ARRAY_BUFFER           : 0x8893,\n    ARRAY_BUFFER_BINDING           : 0x8894,\n    ELEMENT_ARRAY_BUFFER_BINDING   : 0x8895,\n\n    STREAM_DRAW                    : 0x88E0,\n    STATIC_DRAW                    : 0x88E4,\n    DYNAMIC_DRAW                   : 0x88E8,\n\n    BUFFER_SIZE                    : 0x8764,\n    BUFFER_USAGE                   : 0x8765,\n\n    CURRENT_VERTEX_ATTRIB          : 0x8626,\n\n    /* CullFaceMode */\n    FRONT                          : 0x0404,\n    BACK                           : 0x0405,\n    FRONT_AND_BACK                 : 0x0408,\n\n    /* DepthFunction */\n    /*      NEVER */\n    /*      LESS */\n    /*      EQUAL */\n    /*      LEQUAL */\n    /*      GREATER */\n    /*      NOTEQUAL */\n    /*      GEQUAL */\n    /*      ALWAYS */\n\n    /* EnableCap */\n    /* TEXTURE_2D */\n    CULL_FACE                      : 0x0B44,\n    BLEND                          : 0x0BE2,\n    DITHER                         : 0x0BD0,\n    STENCIL_TEST                   : 0x0B90,\n    DEPTH_TEST                     : 0x0B71,\n    SCISSOR_TEST                   : 0x0C11,\n    POLYGON_OFFSET_FILL            : 0x8037,\n    SAMPLE_ALPHA_TO_COVERAGE       : 0x809E,\n    SAMPLE_COVERAGE                : 0x80A0,\n\n    /* ErrorCode */\n    NO_ERROR                       : 0,\n    INVALID_ENUM                   : 0x0500,\n    INVALID_VALUE                  : 0x0501,\n    INVALID_OPERATION              : 0x0502,\n    OUT_OF_MEMORY                  : 0x0505,\n\n    /* FrontFaceDirection */\n    CW                             : 0x0900,\n    CCW                            : 0x0901,\n\n    /* GetPName */\n    LINE_WIDTH                     : 0x0B21,\n    ALIASED_POINT_SIZE_RANGE       : 0x846D,\n    ALIASED_LINE_WIDTH_RANGE       : 0x846E,\n    CULL_FACE_MODE                 : 0x0B45,\n    FRONT_FACE                     : 0x0B46,\n    DEPTH_RANGE                    : 0x0B70,\n    DEPTH_WRITEMASK                : 0x0B72,\n    DEPTH_CLEAR_VALUE              : 0x0B73,\n    DEPTH_FUNC                     : 0x0B74,\n    STENCIL_CLEAR_VALUE            : 0x0B91,\n    STENCIL_FUNC                   : 0x0B92,\n    STENCIL_FAIL                   : 0x0B94,\n    STENCIL_PASS_DEPTH_FAIL        : 0x0B95,\n    STENCIL_PASS_DEPTH_PASS        : 0x0B96,\n    STENCIL_REF                    : 0x0B97,\n    STENCIL_VALUE_MASK             : 0x0B93,\n    STENCIL_WRITEMASK              : 0x0B98,\n    STENCIL_BACK_FUNC              : 0x8800,\n    STENCIL_BACK_FAIL              : 0x8801,\n    STENCIL_BACK_PASS_DEPTH_FAIL   : 0x8802,\n    STENCIL_BACK_PASS_DEPTH_PASS   : 0x8803,\n    STENCIL_BACK_REF               : 0x8CA3,\n    STENCIL_BACK_VALUE_MASK        : 0x8CA4,\n    STENCIL_BACK_WRITEMASK         : 0x8CA5,\n    VIEWPORT                       : 0x0BA2,\n    SCISSOR_BOX                    : 0x0C10,\n    /*      SCISSOR_TEST */\n    COLOR_CLEAR_VALUE              : 0x0C22,\n    COLOR_WRITEMASK                : 0x0C23,\n    UNPACK_ALIGNMENT               : 0x0CF5,\n    PACK_ALIGNMENT                 : 0x0D05,\n    MAX_TEXTURE_SIZE               : 0x0D33,\n    MAX_VIEWPORT_DIMS              : 0x0D3A,\n    SUBPIXEL_BITS                  : 0x0D50,\n    RED_BITS                       : 0x0D52,\n    GREEN_BITS                     : 0x0D53,\n    BLUE_BITS                      : 0x0D54,\n    ALPHA_BITS                     : 0x0D55,\n    DEPTH_BITS                     : 0x0D56,\n    STENCIL_BITS                   : 0x0D57,\n    POLYGON_OFFSET_UNITS           : 0x2A00,\n    /*      POLYGON_OFFSET_FILL */\n    POLYGON_OFFSET_FACTOR          : 0x8038,\n    TEXTURE_BINDING_2D             : 0x8069,\n    SAMPLE_BUFFERS                 : 0x80A8,\n    SAMPLES                        : 0x80A9,\n    SAMPLE_COVERAGE_VALUE          : 0x80AA,\n    SAMPLE_COVERAGE_INVERT         : 0x80AB,\n\n    /* GetTextureParameter */\n    /*      TEXTURE_MAG_FILTER */\n    /*      TEXTURE_MIN_FILTER */\n    /*      TEXTURE_WRAP_S */\n    /*      TEXTURE_WRAP_T */\n\n    COMPRESSED_TEXTURE_FORMATS     : 0x86A3,\n\n    /* HintMode */\n    DONT_CARE                      : 0x1100,\n    FASTEST                        : 0x1101,\n    NICEST                         : 0x1102,\n\n    /* HintTarget */\n    GENERATE_MIPMAP_HINT            : 0x8192,\n\n    /* DataType */\n    BYTE                           : 0x1400,\n    UNSIGNED_BYTE                  : 0x1401,\n    SHORT                          : 0x1402,\n    UNSIGNED_SHORT                 : 0x1403,\n    INT                            : 0x1404,\n    UNSIGNED_INT                   : 0x1405,\n    FLOAT                          : 0x1406,\n\n    /* PixelFormat */\n    DEPTH_COMPONENT                : 0x1902,\n    ALPHA                          : 0x1906,\n    RGB                            : 0x1907,\n    RGBA                           : 0x1908,\n    LUMINANCE                      : 0x1909,\n    LUMINANCE_ALPHA                : 0x190A,\n\n    /* PixelType */\n    /*      UNSIGNED_BYTE */\n    UNSIGNED_SHORT_4_4_4_4         : 0x8033,\n    UNSIGNED_SHORT_5_5_5_1         : 0x8034,\n    UNSIGNED_SHORT_5_6_5           : 0x8363,\n\n    /* Shaders */\n    FRAGMENT_SHADER                  : 0x8B30,\n    VERTEX_SHADER                    : 0x8B31,\n    MAX_VERTEX_ATTRIBS               : 0x8869,\n    MAX_VERTEX_UNIFORM_VECTORS       : 0x8DFB,\n    MAX_VARYING_VECTORS              : 0x8DFC,\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS : 0x8B4D,\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS   : 0x8B4C,\n    MAX_TEXTURE_IMAGE_UNITS          : 0x8872,\n    MAX_FRAGMENT_UNIFORM_VECTORS     : 0x8DFD,\n    SHADER_TYPE                      : 0x8B4F,\n    DELETE_STATUS                    : 0x8B80,\n    LINK_STATUS                      : 0x8B82,\n    VALIDATE_STATUS                  : 0x8B83,\n    ATTACHED_SHADERS                 : 0x8B85,\n    ACTIVE_UNIFORMS                  : 0x8B86,\n    ACTIVE_ATTRIBUTES                : 0x8B89,\n    SHADING_LANGUAGE_VERSION         : 0x8B8C,\n    CURRENT_PROGRAM                  : 0x8B8D,\n\n    /* StencilFunction */\n    NEVER                          : 0x0200,\n    LESS                           : 0x0201,\n    EQUAL                          : 0x0202,\n    LEQUAL                         : 0x0203,\n    GREATER                        : 0x0204,\n    NOTEQUAL                       : 0x0205,\n    GEQUAL                         : 0x0206,\n    ALWAYS                         : 0x0207,\n\n    /* StencilOp */\n    /*      ZERO */\n    KEEP                           : 0x1E00,\n    REPLACE                        : 0x1E01,\n    INCR                           : 0x1E02,\n    DECR                           : 0x1E03,\n    INVERT                         : 0x150A,\n    INCR_WRAP                      : 0x8507,\n    DECR_WRAP                      : 0x8508,\n\n    /* StringName */\n    VENDOR                         : 0x1F00,\n    RENDERER                       : 0x1F01,\n    VERSION                        : 0x1F02,\n\n    /* TextureMagFilter */\n    NEAREST                        : 0x2600,\n    LINEAR                         : 0x2601,\n\n    /* TextureMinFilter */\n    /*      NEAREST */\n    /*      LINEAR */\n    NEAREST_MIPMAP_NEAREST         : 0x2700,\n    LINEAR_MIPMAP_NEAREST          : 0x2701,\n    NEAREST_MIPMAP_LINEAR          : 0x2702,\n    LINEAR_MIPMAP_LINEAR           : 0x2703,\n\n    /* TextureParameterName */\n    TEXTURE_MAG_FILTER             : 0x2800,\n    TEXTURE_MIN_FILTER             : 0x2801,\n    TEXTURE_WRAP_S                 : 0x2802,\n    TEXTURE_WRAP_T                 : 0x2803,\n\n    /* TextureTarget */\n    TEXTURE_2D                     : 0x0DE1,\n    TEXTURE                        : 0x1702,\n\n    TEXTURE_CUBE_MAP               : 0x8513,\n    TEXTURE_BINDING_CUBE_MAP       : 0x8514,\n    TEXTURE_CUBE_MAP_POSITIVE_X    : 0x8515,\n    TEXTURE_CUBE_MAP_NEGATIVE_X    : 0x8516,\n    TEXTURE_CUBE_MAP_POSITIVE_Y    : 0x8517,\n    TEXTURE_CUBE_MAP_NEGATIVE_Y    : 0x8518,\n    TEXTURE_CUBE_MAP_POSITIVE_Z    : 0x8519,\n    TEXTURE_CUBE_MAP_NEGATIVE_Z    : 0x851A,\n    MAX_CUBE_MAP_TEXTURE_SIZE      : 0x851C,\n\n    /* TextureUnit */\n    TEXTURE0                       : 0x84C0,\n    TEXTURE1                       : 0x84C1,\n    TEXTURE2                       : 0x84C2,\n    TEXTURE3                       : 0x84C3,\n    TEXTURE4                       : 0x84C4,\n    TEXTURE5                       : 0x84C5,\n    TEXTURE6                       : 0x84C6,\n    TEXTURE7                       : 0x84C7,\n    TEXTURE8                       : 0x84C8,\n    TEXTURE9                       : 0x84C9,\n    TEXTURE10                      : 0x84CA,\n    TEXTURE11                      : 0x84CB,\n    TEXTURE12                      : 0x84CC,\n    TEXTURE13                      : 0x84CD,\n    TEXTURE14                      : 0x84CE,\n    TEXTURE15                      : 0x84CF,\n    TEXTURE16                      : 0x84D0,\n    TEXTURE17                      : 0x84D1,\n    TEXTURE18                      : 0x84D2,\n    TEXTURE19                      : 0x84D3,\n    TEXTURE20                      : 0x84D4,\n    TEXTURE21                      : 0x84D5,\n    TEXTURE22                      : 0x84D6,\n    TEXTURE23                      : 0x84D7,\n    TEXTURE24                      : 0x84D8,\n    TEXTURE25                      : 0x84D9,\n    TEXTURE26                      : 0x84DA,\n    TEXTURE27                      : 0x84DB,\n    TEXTURE28                      : 0x84DC,\n    TEXTURE29                      : 0x84DD,\n    TEXTURE30                      : 0x84DE,\n    TEXTURE31                      : 0x84DF,\n    ACTIVE_TEXTURE                 : 0x84E0,\n\n    /* TextureWrapMode */\n    REPEAT                         : 0x2901,\n    CLAMP_TO_EDGE                  : 0x812F,\n    MIRRORED_REPEAT                : 0x8370,\n\n    /* Uniform Types */\n    FLOAT_VEC2                     : 0x8B50,\n    FLOAT_VEC3                     : 0x8B51,\n    FLOAT_VEC4                     : 0x8B52,\n    INT_VEC2                       : 0x8B53,\n    INT_VEC3                       : 0x8B54,\n    INT_VEC4                       : 0x8B55,\n    BOOL                           : 0x8B56,\n    BOOL_VEC2                      : 0x8B57,\n    BOOL_VEC3                      : 0x8B58,\n    BOOL_VEC4                      : 0x8B59,\n    FLOAT_MAT2                     : 0x8B5A,\n    FLOAT_MAT3                     : 0x8B5B,\n    FLOAT_MAT4                     : 0x8B5C,\n    SAMPLER_2D                     : 0x8B5E,\n    SAMPLER_CUBE                   : 0x8B60,\n\n    /* Vertex Arrays */\n    VERTEX_ATTRIB_ARRAY_ENABLED        : 0x8622,\n    VERTEX_ATTRIB_ARRAY_SIZE           : 0x8623,\n    VERTEX_ATTRIB_ARRAY_STRIDE         : 0x8624,\n    VERTEX_ATTRIB_ARRAY_TYPE           : 0x8625,\n    VERTEX_ATTRIB_ARRAY_NORMALIZED     : 0x886A,\n    VERTEX_ATTRIB_ARRAY_POINTER        : 0x8645,\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING : 0x889F,\n\n    /* Shader Source */\n    COMPILE_STATUS                 : 0x8B81,\n\n    /* Shader Precision-Specified Types */\n    LOW_FLOAT                      : 0x8DF0,\n    MEDIUM_FLOAT                   : 0x8DF1,\n    HIGH_FLOAT                     : 0x8DF2,\n    LOW_INT                        : 0x8DF3,\n    MEDIUM_INT                     : 0x8DF4,\n    HIGH_INT                       : 0x8DF5,\n\n    /* Framebuffer Object. */\n    FRAMEBUFFER                    : 0x8D40,\n    RENDERBUFFER                   : 0x8D41,\n\n    RGBA4                          : 0x8056,\n    RGB5_A1                        : 0x8057,\n    RGB565                         : 0x8D62,\n    DEPTH_COMPONENT16              : 0x81A5,\n    STENCIL_INDEX                  : 0x1901,\n    STENCIL_INDEX8                 : 0x8D48,\n    DEPTH_STENCIL                  : 0x84F9,\n\n    RENDERBUFFER_WIDTH             : 0x8D42,\n    RENDERBUFFER_HEIGHT            : 0x8D43,\n    RENDERBUFFER_INTERNAL_FORMAT   : 0x8D44,\n    RENDERBUFFER_RED_SIZE          : 0x8D50,\n    RENDERBUFFER_GREEN_SIZE        : 0x8D51,\n    RENDERBUFFER_BLUE_SIZE         : 0x8D52,\n    RENDERBUFFER_ALPHA_SIZE        : 0x8D53,\n    RENDERBUFFER_DEPTH_SIZE        : 0x8D54,\n    RENDERBUFFER_STENCIL_SIZE      : 0x8D55,\n\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           : 0x8CD0,\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           : 0x8CD1,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         : 0x8CD2,\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE : 0x8CD3,\n\n    COLOR_ATTACHMENT0              : 0x8CE0,\n    DEPTH_ATTACHMENT               : 0x8D00,\n    STENCIL_ATTACHMENT             : 0x8D20,\n    DEPTH_STENCIL_ATTACHMENT       : 0x821A,\n\n    NONE                           : 0,\n\n    FRAMEBUFFER_COMPLETE                      : 0x8CD5,\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT         : 0x8CD6,\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT : 0x8CD7,\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS         : 0x8CD9,\n    FRAMEBUFFER_UNSUPPORTED                   : 0x8CDD,\n\n    FRAMEBUFFER_BINDING            : 0x8CA6,\n    RENDERBUFFER_BINDING           : 0x8CA7,\n    MAX_RENDERBUFFER_SIZE          : 0x84E8,\n\n    INVALID_FRAMEBUFFER_OPERATION  : 0x0506,\n\n    /* WebGL-specific enums */\n    UNPACK_FLIP_Y_WEBGL            : 0x9240,\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL : 0x9241,\n    CONTEXT_LOST_WEBGL             : 0x9242,\n    UNPACK_COLORSPACE_CONVERSION_WEBGL : 0x9243,\n    BROWSER_DEFAULT_WEBGL          : 0x9244,\n};\n","function Handler(action, context) {\n    this.action = action;\n    this.context = context;\n}\n/**\n * @mixin\n * @alias clay.core.mixin.notifier\n */\nvar notifier = {\n    /**\n     * Trigger event\n     * @param  {string} name\n     */\n    trigger: function(name) {\n        if (!this.hasOwnProperty('__handlers__')) {\n            return;\n        }\n        if (!this.__handlers__.hasOwnProperty(name)) {\n            return;\n        }\n\n        var hdls = this.__handlers__[name];\n        var l = hdls.length, i = -1, args = arguments;\n        // Optimize advise from backbone\n        switch (args.length) {\n            case 1:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context);\n                }\n                return;\n            case 2:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1]);\n                }\n                return;\n            case 3:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2]);\n                }\n                return;\n            case 4:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3]);\n                }\n                return;\n            case 5:\n                while (++i < l) {\n                    hdls[i].action.call(hdls[i].context, args[1], args[2], args[3], args[4]);\n                }\n                return;\n            default:\n                while (++i < l) {\n                    hdls[i].action.apply(hdls[i].context, Array.prototype.slice.call(args, 1));\n                }\n                return;\n        }\n    },\n    /**\n     * Register event handler\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    on: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var handlers = this.__handlers__ || (this.__handlers__={});\n        if (!handlers[name]) {\n            handlers[name] = [];\n        }\n        else {\n            if (this.has(name, action)) {\n                return;\n            }\n        }\n        var handler = new Handler(action, context || this);\n        handlers[name].push(handler);\n\n        return this;\n    },\n\n    /**\n     * Register event, event will only be triggered once and then removed\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    once: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        var self = this;\n        function wrapper() {\n            self.off(name, wrapper);\n            action.apply(this, arguments);\n        }\n        return this.on(name, wrapper, context);\n    },\n\n    /**\n     * Alias of once('before' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    before: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'before' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of once('after' + name)\n     * @param  {string} name\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    after: function(name, action, context) {\n        if (!name || !action) {\n            return;\n        }\n        name = 'after' + name;\n        return this.on(name, action, context);\n    },\n\n    /**\n     * Alias of on('success')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    success: function(action, context) {\n        return this.once('success', action, context);\n    },\n\n    /**\n     * Alias of on('error')\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    error: function(action, context) {\n        return this.once('error', action, context);\n    },\n\n    /**\n     * Remove event listener\n     * @param  {Function} action\n     * @param  {Object} [context]\n     * @chainable\n     */\n    off: function(name, action) {\n\n        var handlers = this.__handlers__ || (this.__handlers__={});\n\n        if (!action) {\n            handlers[name] = [];\n            return;\n        }\n        if (handlers[name]) {\n            var hdls = handlers[name];\n            var retains = [];\n            for (var i = 0; i < hdls.length; i++) {\n                if (action && hdls[i].action !== action) {\n                    retains.push(hdls[i]);\n                }\n            }\n            handlers[name] = retains;\n        }\n\n        return this;\n    },\n\n    /**\n     * If registered the event handler\n     * @param  {string}  name\n     * @param  {Function}  action\n     * @return {boolean}\n     */\n    has: function(name, action) {\n        var handlers = this.__handlers__;\n\n        if (! handlers ||\n            ! handlers[name]) {\n            return false;\n        }\n        var hdls = handlers[name];\n        for (var i = 0; i < hdls.length; i++) {\n            if (hdls[i].action === action) {\n                return true;\n            }\n        }\n    }\n};\n\nexport default notifier;","var guid = 0;\n\nvar ArrayProto = Array.prototype;\nvar nativeForEach = ArrayProto.forEach;\n\n/**\n * Util functions\n * @namespace clay.core.util\n */\nvar util = {\n\n    /**\n     * Generate GUID\n     * @return {number}\n     * @memberOf clay.core.util\n     */\n    genGUID: function () {\n        return ++guid;\n    },\n    /**\n     * Relative path to absolute path\n     * @param  {string} path\n     * @param  {string} basePath\n     * @return {string}\n     * @memberOf clay.core.util\n     */\n    relative2absolute: function (path, basePath) {\n        if (!basePath || path.match(/^\\//)) {\n            return path;\n        }\n        var pathParts = path.split('/');\n        var basePathParts = basePath.split('/');\n\n        var item = pathParts[0];\n        while(item === '.' || item === '..') {\n            if (item === '..') {\n                basePathParts.pop();\n            }\n            pathParts.shift();\n            item = pathParts[0];\n        }\n        return basePathParts.join('/') + '/' + pathParts.join('/');\n    },\n\n    /**\n     * Extend target with source\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extend: function (target, source) {\n        if (source) {\n            for (var name in source) {\n                if (source.hasOwnProperty(name)) {\n                    target[name] = source[name];\n                }\n            }\n        }\n        return target;\n    },\n\n    /**\n     * Extend properties to target if not exist.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaults: function (target, source) {\n        if (source) {\n            for (var propName in source) {\n                if (target[propName] === undefined) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties with a given property list to avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    extendWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                target[propName] = source[propName];\n            }\n        }\n        return target;\n    },\n    /**\n     * Extend properties to target if not exist. With a given property list avoid for..in.. iteration.\n     * @param  {Object} target\n     * @param  {Object} source\n     * @param  {Array.<string>} propList\n     * @return {Object}\n     * @memberOf clay.core.util\n     */\n    defaultsWithPropList: function (target, source, propList) {\n        if (source) {\n            for (var i = 0; i < propList.length; i++) {\n                var propName = propList[i];\n                if (target[propName] == null) {\n                    target[propName] = source[propName];\n                }\n            }\n        }\n        return target;\n    },\n    /**\n     * @param  {Object|Array} obj\n     * @param  {Function} iterator\n     * @param  {Object} [context]\n     * @memberOf clay.core.util\n     */\n    each: function (obj, iterator, context) {\n        if (!(obj && iterator)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(iterator, context);\n        }\n        else if (obj.length === + obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                iterator.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    iterator.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    },\n\n    /**\n     * Is object\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isObject: function (obj) {\n        return obj === Object(obj);\n    },\n\n    /**\n     * Is array ?\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArray: function (obj) {\n        return Array.isArray(obj);\n    },\n\n    /**\n     * Is array like, which have a length property\n     * @param  {}  obj\n     * @return {boolean}\n     * @memberOf clay.core.util\n     */\n    isArrayLike: function (obj) {\n        if (!obj) {\n            return false;\n        }\n        else {\n            return obj.length === + obj.length;\n        }\n    },\n\n    /**\n     * @param  {} obj\n     * @return {}\n     * @memberOf clay.core.util\n     */\n    clone: function (obj) {\n        if (!util.isObject(obj)) {\n            return obj;\n        }\n        else if (util.isArray(obj)) {\n            return obj.slice();\n        }\n        else if (util.isArrayLike(obj)) { // is typed array\n            var ret = new obj.constructor(obj.length);\n            for (var i = 0; i < obj.length; i++) {\n                ret[i] = obj[i];\n            }\n            return ret;\n        }\n        else {\n            return util.extend({}, obj);\n        }\n    }\n};\n\nexport default util;\n","function get(options) {\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.open('get', options.url);\n    // With response type set browser can get and put binary data\n    // https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Sending_and_Receiving_Binary_Data\n    // Default is text, and it can be set\n    // arraybuffer, blob, document, json, text\n    xhr.responseType = options.responseType || 'text';\n\n    if (options.onprogress) {\n        //https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest\n        xhr.onprogress = function(e) {\n            if (e.lengthComputable) {\n                var percent = e.loaded / e.total;\n                options.onprogress(percent, e.loaded, e.total);\n            }\n            else {\n                options.onprogress(null);\n            }\n        };\n    }\n    xhr.onload = function(e) {\n        if (xhr.status >= 400) {\n            options.onerror && options.onerror();\n        }\n        else {\n            options.onload && options.onload(xhr.response);\n        }\n    };\n    if (options.onerror) {\n        xhr.onerror = options.onerror;\n    }\n    xhr.send(null);\n}\n\nexport default {\n    get: get\n};\n","import request from './request';\n\nvar supportWebGL;\n\nvar vendor = {};\n\n/**\n * If support WebGL\n * @return {boolean}\n */\nvendor.supportWebGL = function () {\n    if (supportWebGL == null) {\n        try {\n            var canvas = document.createElement('canvas');\n            var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n            if (!gl) {\n                throw new Error();\n            }\n        }\n        catch (e) {\n            supportWebGL = false;\n        }\n\n    }\n    return supportWebGL;\n};\n\nvendor.Int8Array = typeof Int8Array === 'undefined' ? Array : Int8Array;\n\nvendor.Uint8Array = typeof Uint8Array === 'undefined' ? Array : Uint8Array;\n\nvendor.Uint16Array = typeof Uint16Array === 'undefined' ? Array : Uint16Array;\n\nvendor.Uint32Array = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\n\nvendor.Int16Array = typeof Int16Array === 'undefined' ? Array : Int16Array;\n\nvendor.Float32Array = typeof Float32Array === 'undefined' ? Array : Float32Array;\n\nvendor.Float64Array = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nvar g = {};\nif (typeof window !== 'undefined') {\n    g = window;\n}\nelse if (typeof global !== 'undefined') {\n    g = global;\n}\n\n\nvendor.requestAnimationFrame = g.requestAnimationFrame\n    || g.msRequestAnimationFrame\n    || g.mozRequestAnimationFrame\n    || g.webkitRequestAnimationFrame\n    || function (func){ setTimeout(func, 16); };\n\nvendor.createCanvas = function () {\n    return document.createElement('canvas');\n};\n\nvendor.createImage = function () {\n    return new g.Image();\n};\n\nvendor.request = {\n    get: request.get\n};\n\nvendor.addEventListener = function (dom, type, func, useCapture) {\n    dom.addEventListener(type, func, useCapture);\n};\n\nvendor.removeEventListener = function (dom, type, func) {\n    dom.removeEventListener(type, func);\n};\n\nexport default vendor;\n","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.2.2\n */\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport vec2 from './vec2';\nimport vec3 from './vec3';\nimport vec4 from './vec4';\nimport mat2 from './mat2';\nimport mat2d from './mat2d';\nimport mat3 from './mat3';\nimport mat4 from './mat4';\nimport quat from './quat';\n\nexport default {\n    vec2: vec2,\n    vec3: vec3,\n    vec4: vec4,\n    mat2: mat2,\n    mat2d: mat2d,\n    mat3: mat3,\n    mat4: mat4,\n    quat: quat\n};\n","// DEPRECATED\nimport glmatrix from '../glmatrix';\n\nexport default glmatrix;\n","import Geometry from '../Geometry';\nimport Plane from './Plane';\nimport Matrix4 from '../math/Matrix4';\nimport Vector3 from '../math/Vector3';\nimport BoundingBox from '../math/BoundingBox';\nimport vendor from '../core/vendor';\n\nvar planeMatrix = new Matrix4();\n\n/**\n * @constructor clay.geometry.Cube\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n * @param {number} [opt.depthSegments]\n * @param {boolean} [opt.inside]\n */\nvar Cube = Geometry.extend(\n/**@lends clay.geometry.Cube# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1,\n    /**\n     * @type {number}\n     */\n    depthSegments: 1,\n    /**\n     * @type {boolean}\n     */\n    inside: false\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Cube.prototype */\n{\n    /**\n     * Build cube geometry\n     */\n    build: function() {\n\n        var planes = {\n            'px': createPlane('px', this.depthSegments, this.heightSegments),\n            'nx': createPlane('nx', this.depthSegments, this.heightSegments),\n            'py': createPlane('py', this.widthSegments, this.depthSegments),\n            'ny': createPlane('ny', this.widthSegments, this.depthSegments),\n            'pz': createPlane('pz', this.widthSegments, this.heightSegments),\n            'nz': createPlane('nz', this.widthSegments, this.heightSegments),\n        };\n\n        var attrList = ['position', 'texcoord0', 'normal'];\n        var vertexNumber = 0;\n        var faceNumber = 0;\n        for (var pos in planes) {\n            vertexNumber += planes[pos].vertexCount;\n            faceNumber += planes[pos].indices.length;\n        }\n        for (var k = 0; k < attrList.length; k++) {\n            this.attributes[attrList[k]].init(vertexNumber);\n        }\n        this.indices = new vendor.Uint16Array(faceNumber);\n        var faceOffset = 0;\n        var vertexOffset = 0;\n        for (var pos in planes) {\n            var plane = planes[pos];\n            for (var k = 0; k < attrList.length; k++) {\n                var attrName = attrList[k];\n                var attrArray = plane.attributes[attrName].value;\n                var attrSize = plane.attributes[attrName].size;\n                var isNormal = attrName === 'normal';\n                for (var i = 0; i < attrArray.length; i++) {\n                    var value = attrArray[i];\n                    if (this.inside && isNormal) {\n                        value = -value;\n                    }\n                    this.attributes[attrName].value[i + attrSize * vertexOffset] = value;\n                }\n            }\n            var len = plane.indices.length;\n            for (var i = 0; i < plane.indices.length; i++) {\n                this.indices[i + faceOffset] = vertexOffset + plane.indices[this.inside ? (len - i - 1) : i];\n            }\n            faceOffset += plane.indices.length;\n            vertexOffset += plane.vertexCount;\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(1, 1, 1);\n        this.boundingBox.min.set(-1, -1, -1);\n    }\n});\n\nfunction createPlane(pos, widthSegments, heightSegments) {\n\n    planeMatrix.identity();\n\n    var plane = new Plane({\n        widthSegments: widthSegments,\n        heightSegments: heightSegments\n    });\n\n    switch(pos) {\n        case 'px':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'nx':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_X);\n            Matrix4.rotateY(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'py':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, -Math.PI / 2);\n            break;\n        case 'ny':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Y);\n            Matrix4.rotateX(planeMatrix, planeMatrix, Math.PI / 2);\n            break;\n        case 'pz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.POSITIVE_Z);\n            break;\n        case 'nz':\n            Matrix4.translate(planeMatrix, planeMatrix, Vector3.NEGATIVE_Z);\n            Matrix4.rotateY(planeMatrix, planeMatrix, Math.PI);\n            break;\n    }\n    plane.applyTransform(planeMatrix);\n    return plane;\n}\n\nexport default Cube;\n","import Geometry from '../Geometry';\nimport BoundingBox from '../math/BoundingBox';\n\n/**\n * @constructor clay.geometry.Plane\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [opt.widthSegments]\n * @param {number} [opt.heightSegments]\n */\nvar Plane = Geometry.extend(\n/** @lends clay.geometry.Plane# */\n{\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 1,\n    /**\n     * @type {number}\n     */\n    heightSegments: 1\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Plane.prototype */\n{\n    /**\n     * Build plane geometry\n     */\n    build: function() {\n        var heightSegments = this.heightSegments;\n        var widthSegments = this.widthSegments;\n        var attributes = this.attributes;\n        var positions = [];\n        var texcoords = [];\n        var normals = [];\n        var faces = [];\n\n        for (var y = 0; y <= heightSegments; y++) {\n            var t = y / heightSegments;\n            for (var x = 0; x <= widthSegments; x++) {\n                var s = x / widthSegments;\n\n                positions.push([2 * s - 1, 2 * t - 1, 0]);\n                if (texcoords) {\n                    texcoords.push([s, t]);\n                }\n                if (normals) {\n                    normals.push([0, 0, 1]);\n                }\n                if (x < widthSegments && y < heightSegments) {\n                    var i = x + y * (widthSegments + 1);\n                    faces.push([i, i + 1, i + widthSegments + 1]);\n                    faces.push([i + widthSegments + 1, i + 1, i + widthSegments + 2]);\n                }\n            }\n        }\n\n        attributes.position.fromArray(positions);\n        attributes.texcoord0.fromArray(texcoords);\n        attributes.normal.fromArray(normals);\n\n        this.initIndicesFromArray(faces);\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.min.set(-1, -1, 0);\n        this.boundingBox.max.set(1, 1, 0);\n    }\n});\n\nexport default Plane;\n","import Geometry from '../Geometry';\nimport BoundingBox from '../math/BoundingBox';\n\n/**\n * @constructor clay.geometry.Sphere\n * @extends clay.Geometry\n * @param {Object} [opt]\n * @param {number} [widthSegments]\n * @param {number} [heightSegments]\n * @param {number} [phiStart]\n * @param {number} [phiLength]\n * @param {number} [thetaStart]\n * @param {number} [thetaLength]\n * @param {number} [radius]\n */\nvar Sphere = Geometry.extend(/** @lends clay.geometry.Sphere# */ {\n    dynamic: false,\n    /**\n     * @type {number}\n     */\n    widthSegments: 40,\n    /**\n     * @type {number}\n     */\n    heightSegments: 20,\n\n    /**\n     * @type {number}\n     */\n    phiStart: 0,\n    /**\n     * @type {number}\n     */\n    phiLength: Math.PI * 2,\n\n    /**\n     * @type {number}\n     */\n    thetaStart: 0,\n    /**\n     * @type {number}\n     */\n    thetaLength: Math.PI,\n\n    /**\n     * @type {number}\n     */\n    radius: 1\n\n}, function() {\n    this.build();\n},\n/** @lends clay.geometry.Sphere.prototype */\n{\n    /**\n     * Build sphere geometry\n     */\n    build: function() {\n        var heightSegments = this.heightSegments;\n        var widthSegments = this.widthSegments;\n\n        var positionAttr = this.attributes.position;\n        var texcoordAttr = this.attributes.texcoord0;\n        var normalAttr = this.attributes.normal;\n\n        var vertexCount = (widthSegments + 1) * (heightSegments + 1);\n        positionAttr.init(vertexCount);\n        texcoordAttr.init(vertexCount);\n        normalAttr.init(vertexCount);\n\n        var IndicesCtor = vertexCount > 0xffff ? Uint32Array : Uint16Array;\n        var indices = this.indices = new IndicesCtor(widthSegments * heightSegments * 6);\n\n        var x, y, z,\n            u, v,\n            i, j;\n\n        var radius = this.radius;\n        var phiStart = this.phiStart;\n        var phiLength = this.phiLength;\n        var thetaStart = this.thetaStart;\n        var thetaLength = this.thetaLength;\n        var radius = this.radius;\n\n        var pos = [];\n        var uv = [];\n        var offset = 0;\n        var divider = 1 / radius;\n        for (j = 0; j <= heightSegments; j ++) {\n            for (i = 0; i <= widthSegments; i ++) {\n                u = i / widthSegments;\n                v = j / heightSegments;\n\n                // X axis is inverted so texture can be mapped from left to right\n                x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n                y = radius * Math.cos(thetaStart + v * thetaLength);\n                z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\n                pos[0] = x; pos[1] = y; pos[2] = z;\n                uv[0] = u; uv[1] = v;\n                positionAttr.set(offset, pos);\n                texcoordAttr.set(offset, uv);\n                pos[0] *= divider;\n                pos[1] *= divider;\n                pos[2] *= divider;\n                normalAttr.set(offset, pos);\n                offset++;\n            }\n        }\n\n        var i1, i2, i3, i4;\n\n        var len = widthSegments + 1;\n\n        var n = 0;\n        for (j = 0; j < heightSegments; j ++) {\n            for (i = 0; i < widthSegments; i ++) {\n                i2 = j * len + i;\n                i1 = (j * len + i + 1);\n                i4 = (j + 1) * len + i + 1;\n                i3 = (j + 1) * len + i;\n\n                indices[n++] = i1;\n                indices[n++] = i2;\n                indices[n++] = i4;\n\n                indices[n++] = i2;\n                indices[n++] = i3;\n                indices[n++] = i4;\n            }\n        }\n\n        this.boundingBox = new BoundingBox();\n        this.boundingBox.max.set(radius, radius, radius);\n        this.boundingBox.min.set(-radius, -radius, -radius);\n    }\n});\n\nexport default Sphere;\n","\nexport var GLMAT_EPSILON = 0.000001;\n\n// Use Array instead of Float32Array. It seems to be much faster and higher precision.\nexport var GLMAT_ARRAY_TYPE = Array;\n// if(!GLMAT_ARRAY_TYPE) {\n//     GLMAT_ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n// }\n\nexport var GLMAT_RANDOM = Math.random;\n","\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\n\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) {\n    L[2] = a[2]/a[0];\n    U[0] = a[0];\n    U[1] = a[1];\n    U[3] = a[3] - L[2] * U[1];\n    return [L, D, U];\n};\n\n\nexport default mat2;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n};\n\n\nexport default mat2d;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\n\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nexport default mat3;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport {GLMAT_EPSILON, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\n\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Multiplies two affine mat4's\n * Add by https://github.com/pissang\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiplyAffine = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[4], a11 = a[5], a12 = a[6],\n        a20 = a[8], a21 = a[9], a22 = a[10],\n        a30 = a[12], a31 = a[13], a32 = a[14];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2];\n    out[0] = b0*a00 + b1*a10 + b2*a20;\n    out[1] = b0*a01 + b1*a11 + b2*a21;\n    out[2] = b0*a02 + b1*a12 + b2*a22;\n    // out[3] = 0;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6];\n    out[4] = b0*a00 + b1*a10 + b2*a20;\n    out[5] = b0*a01 + b1*a11 + b2*a21;\n    out[6] = b0*a02 + b1*a12 + b2*a22;\n    // out[7] = 0;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10];\n    out[8] = b0*a00 + b1*a10 + b2*a20;\n    out[9] = b0*a01 + b1*a11 + b2*a21;\n    out[10] = b0*a02 + b1*a12 + b2*a22;\n    // out[11] = 0;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + a32;\n    // out[15] = 1;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Alias for {@link mat4.multiplyAffine}\n * @function\n */\nmat4.mulAffine = mat4.multiplyAffine;\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < GLMAT_EPSILON) { return null; }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < GLMAT_EPSILON &&\n        Math.abs(eyey - centery) < GLMAT_EPSILON &&\n        Math.abs(eyez - centerz) < GLMAT_EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\nexport default mat4;","\n\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\nimport vec3 from './vec3';\nimport vec4 from './vec4';\nimport mat3 from './mat3';\n\n\n/**\n * @class Quaternion\n * @name quat\n */\n\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5;\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n};\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n\n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n\n    return out;\n};\n\nexport default quat;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\n\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new GLMAT_ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n\n        return a;\n    };\n})();\n\nexport default vec2;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_RANDOM, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\n\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new GLMAT_ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = GLMAT_RANDOM() * 2.0 * Math.PI;\n    var z = (GLMAT_RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n      //Translate point to the origin\n      p[0] = a[0] - b[0];\n      p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n      //perform rotation\n      r[0] = p[0];\n      r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n      r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n      //translate to correct position\n      out[0] = r[0] + b[0];\n      out[1] = r[1] + b[1];\n      out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n    r[1] = p[1];\n    r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n    var p = [], r=[];\n    //Translate point to the origin\n    p[0] = a[0] - b[0];\n    p[1] = a[1] - b[1];\n    p[2] = a[2] - b[2];\n\n    //perform rotation\n    r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n    r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n    r[2] = p[2];\n\n    //translate to correct position\n    out[0] = r[0] + b[0];\n    out[1] = r[1] + b[1];\n    out[2] = r[2] + b[2];\n\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n\n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n\n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n\n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n\n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }\n};\n\nexport default vec3;","\n/* Copyright (c) 2013, Brandon Jones, Colin MacKenzie IV. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\nimport { GLMAT_RANDOM, GLMAT_ARRAY_TYPE } from './common';\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\n\nexport var vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new GLMAT_ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n        out[3] = a[3] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = GLMAT_RANDOM();\n    out[1] = GLMAT_RANDOM();\n    out[2] = GLMAT_RANDOM();\n    out[3] = GLMAT_RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n\n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n\n        return a;\n    };\n})();\n\nexport default vec4;","import Light from '../Light';\n\n/**\n * @constructor clay.light.Ambient\n * @extends clay.Light\n */\nvar AmbientLight = Light.extend({\n\n    castShadow: false\n\n}, {\n\n    type: 'AMBIENT_LIGHT',\n\n    uniformTemplates: {\n        ambientLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\nexport default AmbientLight;\n","// https://docs.unrealengine.com/latest/INT/Engine/Rendering/LightingAndShadows/AmbientCubemap/\nimport Light from '../Light';\nimport cubemapUtil from '../util/cubemap';\n\n/**\n * Ambient cubemap light provides specular parts of Image Based Lighting.\n * Which is a basic requirement for Physically Based Rendering\n * @constructor clay.light.AmbientCubemap\n * @extends clay.Light\n */\nvar AmbientCubemapLight = Light.extend({\n\n    /**\n     * @type {clay.TextureCube}\n     * @memberOf clay.light.AmbientCubemap#\n     */\n    cubemap: null,\n\n    // TODO\n    // range: 100,\n\n    castShadow: false,\n\n    _normalDistribution: null,\n    _brdfLookup: null\n\n}, /** @lends clay.light.AmbientCubemap# */ {\n\n    type: 'AMBIENT_CUBEMAP_LIGHT',\n\n    /**\n     * Do prefitering the cubemap\n     * @param {clay.Renderer} renderer\n     * @param {number} [size=32]\n     */\n    prefilter: function (renderer, size) {\n        if (!renderer.getGLExtension('EXT_shader_texture_lod')) {\n            console.warn('Device not support textureCubeLodEXT');\n            return;\n        }\n        if (!this._brdfLookup) {\n            this._normalDistribution = cubemapUtil.generateNormalDistribution();\n            this._brdfLookup = cubemapUtil.integrateBRDF(renderer, this._normalDistribution);\n        }\n        var cubemap = this.cubemap;\n        if (cubemap.__prefiltered) {\n            return;\n        }\n\n        var result = cubemapUtil.prefilterEnvironmentMap(\n            renderer, cubemap, {\n                encodeRGBM: true,\n                width: size,\n                height: size\n            }, this._normalDistribution, this._brdfLookup\n        );\n        this.cubemap = result.environmentMap;\n        this.cubemap.__prefiltered = true;\n\n        cubemap.dispose(renderer);\n    },\n\n    getBRDFLookup: function () {\n        return this._brdfLookup;\n    },\n\n    uniformTemplates: {\n        ambientCubemapLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0]*intensity, color[1]*intensity, color[2]*intensity];\n            }\n        },\n\n        ambientCubemapLightCubemap: {\n            type: 't',\n            value: function (instance) {\n                return instance.cubemap;\n            }\n        },\n\n        ambientCubemapLightBRDFLookup: {\n            type: 't',\n            value: function (instance) {\n                return instance._brdfLookup;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.AmbientCubemap}\n     * @memberOf clay.light.AmbientCubemap.prototype\n     */\n});\n\nexport default AmbientCubemapLight;\n","import Light from '../Light';\nimport vendor from '../core/vendor';\n\n/**\n * Spherical Harmonic Ambient Light\n * @constructor clay.light.AmbientSH\n * @extends clay.Light\n */\nvar AmbientSHLight = Light.extend({\n\n    castShadow: false,\n\n    /**\n     * Spherical Harmonic Coefficients\n     * @type {Array.<number>}\n     * @memberOf clay.light.AmbientSH#\n     */\n    coefficients: [],\n\n}, function () {\n    this._coefficientsTmpArr = new vendor.Float32Array(9 * 3);\n}, {\n\n    type: 'AMBIENT_SH_LIGHT',\n\n    uniformTemplates: {\n        ambientSHLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        },\n\n        ambientSHLightCoefficients: {\n            type: '3f',\n            value: function (instance) {\n                var coefficientsTmpArr = instance._coefficientsTmpArr;\n                for (var i = 0; i < instance.coefficients.length; i++) {\n                    coefficientsTmpArr[i] = instance.coefficients[i];\n                }\n                return coefficientsTmpArr;\n            }\n        }\n    }\n    /**\n     * @function\n     * @name clone\n     * @return {clay.light.Ambient}\n     * @memberOf clay.light.Ambient.prototype\n     */\n});\n\nexport default AmbientSHLight;\n","import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Directional\n * @extends clay.Light\n *\n * @example\n *     var light = new clay.light.Directional({\n *         intensity: 0.5,\n *         color: [1.0, 0.0, 0.0]\n *     });\n *     light.position.set(10, 10, 10);\n *     light.lookAt(clay.Vector3.ZERO);\n *     scene.add(light);\n */\nvar DirectionalLight = Light.extend(/** @lends clay.light.Directional# */ {\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0,\n    /**\n     * Shadow cascade.\n     * Use PSSM technique when it is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    shadowCascade: 1,\n\n    /**\n     * Available when shadowCascade is larger than 1 and have a unique directional light in scene.\n     * @type {number}\n     */\n    cascadeSplitLogFactor: 0.2\n}, {\n\n    type: 'DIRECTIONAL_LIGHT',\n\n    uniformTemplates: {\n        directionalLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).normalize().negate().array;\n            }\n        },\n        directionalLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Directional}\n     * @memberOf clay.light.Directional.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default DirectionalLight;\n","import Light from '../Light';\n\n/**\n * @constructor clay.light.Point\n * @extends clay.Light\n */\nvar PointLight = Light.extend(/** @lends clay.light.Point# */ {\n    /**\n     * @type {number}\n     */\n    range: 100,\n\n    /**\n     * @type {number}\n     */\n    castShadow: false\n}, {\n\n    type: 'POINT_LIGHT',\n\n    uniformTemplates: {\n        pointLightPosition: {\n            type: '3f',\n            value: function(instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        pointLightRange: {\n            type: '1f',\n            value: function(instance) {\n                return instance.range;\n            }\n        },\n        pointLightColor: {\n            type: '3f',\n            value: function(instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Point}\n     * @memberOf clay.light.Point.prototype\n     */\n    clone: function() {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        return light;\n    }\n});\n\nexport default PointLight;\n","import Light from '../Light';\nimport Vector3 from '../math/Vector3';\n\n/**\n * @constructor clay.light.Spot\n * @extends clay.Light\n */\nvar SpotLight = Light.extend(/**@lends clay.light.Spot */ {\n    /**\n     * @type {number}\n     */\n    range: 20,\n    /**\n     * @type {number}\n     */\n    umbraAngle: 30,\n    /**\n     * @type {number}\n     */\n    penumbraAngle: 45,\n    /**\n     * @type {number}\n     */\n    falloffFactor: 2.0,\n    /**\n     * @type {number}\n     */\n    shadowBias: 0.001,\n    /**\n     * @type {number}\n     */\n    shadowSlopeScale: 2.0\n}, {\n\n    type: 'SPOT_LIGHT',\n\n    uniformTemplates: {\n        spotLightPosition: {\n            type: '3f',\n            value: function (instance) {\n                return instance.getWorldPosition().array;\n            }\n        },\n        spotLightRange: {\n            type: '1f',\n            value: function (instance) {\n                return instance.range;\n            }\n        },\n        spotLightUmbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.umbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightPenumbraAngleCosine: {\n            type: '1f',\n            value: function (instance) {\n                return Math.cos(instance.penumbraAngle * Math.PI / 180);\n            }\n        },\n        spotLightFalloffFactor: {\n            type: '1f',\n            value: function (instance) {\n                return instance.falloffFactor;\n            }\n        },\n        spotLightDirection: {\n            type: '3f',\n            value: function (instance) {\n                instance.__dir = instance.__dir || new Vector3();\n                // Direction is target to eye\n                return instance.__dir.copy(instance.worldTransform.z).negate().array;\n            }\n        },\n        spotLightColor: {\n            type: '3f',\n            value: function (instance) {\n                var color = instance.color;\n                var intensity = instance.intensity;\n                return [color[0] * intensity, color[1] * intensity, color[2] * intensity];\n            }\n        }\n    },\n    /**\n     * @return {clay.light.Spot}\n     * @memberOf clay.light.Spot.prototype\n     */\n    clone: function () {\n        var light = Light.prototype.clone.call(this);\n        light.range = this.range;\n        light.umbraAngle = this.umbraAngle;\n        light.penumbraAngle = this.penumbraAngle;\n        light.falloffFactor = this.falloffFactor;\n        light.shadowBias = this.shadowBias;\n        light.shadowSlopeScale = this.shadowSlopeScale;\n        return light;\n    }\n});\n\nexport default SpotLight;\n","import Vector3 from './Vector3';\nimport vec3 from '../glmatrix/vec3';\n\nvar vec3Set = vec3.set;\nvar vec3Copy = vec3.copy;\n\n/**\n * Axis aligned bounding box\n * @constructor\n * @alias clay.BoundingBox\n * @param {clay.Vector3} [min]\n * @param {clay.Vector3} [max]\n */\nvar BoundingBox = function (min, max) {\n\n    /**\n     * Minimum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.min = min || new Vector3(Infinity, Infinity, Infinity);\n\n    /**\n     * Maximum coords of bounding box\n     * @type {clay.Vector3}\n     */\n    this.max = max || new Vector3(-Infinity, -Infinity, -Infinity);\n\n    this.vertices = null;\n};\n\nBoundingBox.prototype = {\n\n    constructor: BoundingBox,\n    /**\n     * Update min and max coords from a vertices array\n     * @param  {array} vertices\n     */\n    updateFromVertices: function (vertices) {\n        if (vertices.length > 0) {\n            var min = this.min;\n            var max = this.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            vec3Copy(minArr, vertices[0]);\n            vec3Copy(maxArr, vertices[0]);\n            for (var i = 1; i < vertices.length; i++) {\n                var vertex = vertices[i];\n\n                if (vertex[0] < minArr[0]) { minArr[0] = vertex[0]; }\n                if (vertex[1] < minArr[1]) { minArr[1] = vertex[1]; }\n                if (vertex[2] < minArr[2]) { minArr[2] = vertex[2]; }\n\n                if (vertex[0] > maxArr[0]) { maxArr[0] = vertex[0]; }\n                if (vertex[1] > maxArr[1]) { maxArr[1] = vertex[1]; }\n                if (vertex[2] > maxArr[2]) { maxArr[2] = vertex[2]; }\n            }\n            min._dirty = true;\n            max._dirty = true;\n        }\n    },\n\n    /**\n     * Union operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    union: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3.min(min.array, min.array, bbox.min.array);\n        vec3.max(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Intersection operation with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    intersection: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3.max(min.array, min.array, bbox.min.array);\n        vec3.min(max.array, max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * If intersect with another bounding box\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    intersectBoundingBox: function (bbox) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return ! (_min[0] > _max2[0] || _min[1] > _max2[1] || _min[2] > _max2[2]\n            || _max[0] < _min2[0] || _max[1] < _min2[1] || _max[2] < _min2[2]);\n    },\n\n    /**\n     * If contain another bounding box entirely\n     * @param  {clay.BoundingBox} bbox\n     * @return {boolean}\n     */\n    containBoundingBox: function (bbox) {\n\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _min2 = bbox.min.array;\n        var _max2 = bbox.max.array;\n\n        return _min[0] <= _min2[0] && _min[1] <= _min2[1] && _min[2] <= _min2[2]\n            && _max[0] >= _max2[0] && _max[1] >= _max2[1] && _max[2] >= _max2[2];\n    },\n\n    /**\n     * If contain point entirely\n     * @param  {clay.Vector3} point\n     * @return {boolean}\n     */\n    containPoint: function (p) {\n        var _min = this.min.array;\n        var _max = this.max.array;\n\n        var _p = p.array;\n\n        return _min[0] <= _p[0] && _min[1] <= _p[1] && _min[2] <= _p[2]\n            && _max[0] >= _p[0] && _max[1] >= _p[1] && _max[2] >= _p[2];\n    },\n\n    /**\n     * If bounding box is finite\n     */\n    isFinite: function () {\n        var _min = this.min.array;\n        var _max = this.max.array;\n        return isFinite(_min[0]) && isFinite(_min[1]) && isFinite(_min[2])\n            && isFinite(_max[0]) && isFinite(_max[1]) && isFinite(_max[2]);\n    },\n\n    /**\n     * Apply an affine transform matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        this.transformFrom(this, matrix);\n    },\n\n    /**\n     * Get from another bounding box and an affine transform matrix.\n     * @param {clay.BoundingBox} source\n     * @param {clay.Matrix4} matrix\n     */\n    transformFrom: (function () {\n        // http://dev.theomader.com/transform-bounding-boxes/\n        var xa = vec3.create();\n        var xb = vec3.create();\n        var ya = vec3.create();\n        var yb = vec3.create();\n        var za = vec3.create();\n        var zb = vec3.create();\n\n        return function (source, matrix) {\n            var min = source.min.array;\n            var max = source.max.array;\n\n            var m = matrix.array;\n\n            xa[0] = m[0] * min[0]; xa[1] = m[1] * min[0]; xa[2] = m[2] * min[0];\n            xb[0] = m[0] * max[0]; xb[1] = m[1] * max[0]; xb[2] = m[2] * max[0];\n\n            ya[0] = m[4] * min[1]; ya[1] = m[5] * min[1]; ya[2] = m[6] * min[1];\n            yb[0] = m[4] * max[1]; yb[1] = m[5] * max[1]; yb[2] = m[6] * max[1];\n\n            za[0] = m[8] * min[2]; za[1] = m[9] * min[2]; za[2] = m[10] * min[2];\n            zb[0] = m[8] * max[2]; zb[1] = m[9] * max[2]; zb[2] = m[10] * max[2];\n\n            min = this.min.array;\n            max = this.max.array;\n            min[0] = Math.min(xa[0], xb[0]) + Math.min(ya[0], yb[0]) + Math.min(za[0], zb[0]) + m[12];\n            min[1] = Math.min(xa[1], xb[1]) + Math.min(ya[1], yb[1]) + Math.min(za[1], zb[1]) + m[13];\n            min[2] = Math.min(xa[2], xb[2]) + Math.min(ya[2], yb[2]) + Math.min(za[2], zb[2]) + m[14];\n\n            max[0] = Math.max(xa[0], xb[0]) + Math.max(ya[0], yb[0]) + Math.max(za[0], zb[0]) + m[12];\n            max[1] = Math.max(xa[1], xb[1]) + Math.max(ya[1], yb[1]) + Math.max(za[1], zb[1]) + m[13];\n            max[2] = Math.max(xa[2], xb[2]) + Math.max(ya[2], yb[2]) + Math.max(za[2], zb[2]) + m[14];\n\n            this.min._dirty = true;\n            this.max._dirty = true;\n\n            return this;\n        };\n    })(),\n\n    /**\n     * Apply a projection matrix to the bounding box\n     * @param  {clay.Matrix4} matrix\n     */\n    applyProjection: function (matrix) {\n        var min = this.min.array;\n        var max = this.max.array;\n\n        var m = matrix.array;\n        // min in min z\n        var v10 = min[0];\n        var v11 = min[1];\n        var v12 = min[2];\n        // max in min z\n        var v20 = max[0];\n        var v21 = max[1];\n        var v22 = min[2];\n        // max in max z\n        var v30 = max[0];\n        var v31 = max[1];\n        var v32 = max[2];\n\n        if (m[15] === 1) {  // Orthographic projection\n            min[0] = m[0] * v10 + m[12];\n            min[1] = m[5] * v11 + m[13];\n            max[2] = m[10] * v12 + m[14];\n\n            max[0] = m[0] * v30 + m[12];\n            max[1] = m[5] * v31 + m[13];\n            min[2] = m[10] * v32 + m[14];\n        }\n        else {\n            var w = -1 / v12;\n            min[0] = m[0] * v10 * w;\n            min[1] = m[5] * v11 * w;\n            max[2] = (m[10] * v12 + m[14]) * w;\n\n            w = -1 / v22;\n            max[0] = m[0] * v20 * w;\n            max[1] = m[5] * v21 * w;\n\n            w = -1 / v32;\n            min[2] = (m[10] * v32 + m[14]) * w;\n        }\n        this.min._dirty = true;\n        this.max._dirty = true;\n\n        return this;\n    },\n\n    updateVertices: function () {\n        var vertices = this.vertices;\n        if (!vertices) {\n            // Cube vertices\n            vertices = [];\n            for (var i = 0; i < 8; i++) {\n                vertices[i] = vec3.fromValues(0, 0, 0);\n            }\n\n            /**\n             * Eight coords of bounding box\n             * @type {Float32Array[]}\n             */\n            this.vertices = vertices;\n        }\n        var min = this.min.array;\n        var max = this.max.array;\n        //--- min z\n        // min x\n        vec3Set(vertices[0], min[0], min[1], min[2]);\n        vec3Set(vertices[1], min[0], max[1], min[2]);\n        // max x\n        vec3Set(vertices[2], max[0], min[1], min[2]);\n        vec3Set(vertices[3], max[0], max[1], min[2]);\n\n        //-- max z\n        vec3Set(vertices[4], min[0], min[1], max[2]);\n        vec3Set(vertices[5], min[0], max[1], max[2]);\n        vec3Set(vertices[6], max[0], min[1], max[2]);\n        vec3Set(vertices[7], max[0], max[1], max[2]);\n\n        return this;\n    },\n    /**\n     * Copy values from another bounding box\n     * @param  {clay.BoundingBox} bbox\n     */\n    copy: function (bbox) {\n        var min = this.min;\n        var max = this.max;\n        vec3Copy(min.array, bbox.min.array);\n        vec3Copy(max.array, bbox.max.array);\n        min._dirty = true;\n        max._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new bounding box\n     * @return {clay.BoundingBox}\n     */\n    clone: function () {\n        var boundingBox = new BoundingBox();\n        boundingBox.copy(this);\n        return boundingBox;\n    }\n};\n\nexport default BoundingBox;\n","import BoundingBox from './BoundingBox';\nimport Plane from './Plane';\n\nimport vec3 from '../glmatrix/vec3';\n\nvar vec3Set = vec3.set;\nvar vec3Copy = vec3.copy;\nvar vec3TranformMat4 = vec3.transformMat4;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @constructor\n * @alias clay.Frustum\n */\nvar Frustum = function() {\n\n    /**\n     * Eight planes to enclose the frustum\n     * @type {clay.Plane[]}\n     */\n    this.planes = [];\n\n    for (var i = 0; i < 6; i++) {\n        this.planes.push(new Plane());\n    }\n\n    /**\n     * Bounding box of frustum\n     * @type {clay.BoundingBox}\n     */\n    this.boundingBox = new BoundingBox();\n\n    /**\n     * Eight vertices of frustum\n     * @type {Float32Array[]}\n     */\n    this.vertices = [];\n    for (var i = 0; i < 8; i++) {\n        this.vertices[i] = vec3.fromValues(0, 0, 0);\n    }\n};\n\nFrustum.prototype = {\n\n    // http://web.archive.org/web/20120531231005/http://crazyjoke.free.fr/doc/3D/plane%20extraction.pdf\n    /**\n     * Set frustum from a projection matrix\n     * @param {clay.Matrix4} projectionMatrix\n     */\n    setFromProjection: function(projectionMatrix) {\n\n        var planes = this.planes;\n        var m = projectionMatrix.array;\n        var m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3];\n        var m4 = m[4], m5 = m[5], m6 = m[6], m7 = m[7];\n        var m8 = m[8], m9 = m[9], m10 = m[10], m11 = m[11];\n        var m12 = m[12], m13 = m[13], m14 = m[14], m15 = m[15];\n\n        // Update planes\n        vec3Set(planes[0].normal.array, m3 - m0, m7 - m4, m11 - m8);\n        planes[0].distance = -(m15 - m12);\n        planes[0].normalize();\n\n        vec3Set(planes[1].normal.array, m3 + m0, m7 + m4, m11 + m8);\n        planes[1].distance = -(m15 + m12);\n        planes[1].normalize();\n\n        vec3Set(planes[2].normal.array, m3 + m1, m7 + m5, m11 + m9);\n        planes[2].distance = -(m15 + m13);\n        planes[2].normalize();\n\n        vec3Set(planes[3].normal.array, m3 - m1, m7 - m5, m11 - m9);\n        planes[3].distance = -(m15 - m13);\n        planes[3].normalize();\n\n        vec3Set(planes[4].normal.array, m3 - m2, m7 - m6, m11 - m10);\n        planes[4].distance = -(m15 - m14);\n        planes[4].normalize();\n\n        vec3Set(planes[5].normal.array, m3 + m2, m7 + m6, m11 + m10);\n        planes[5].distance = -(m15 + m14);\n        planes[5].normalize();\n\n        // Perspective projection\n        var boundingBox = this.boundingBox;\n        var vertices = this.vertices;\n        if (m15 === 0)  {\n            var aspect = m5 / m0;\n            var zNear = -m14 / (m10 - 1);\n            var zFar = -m14 / (m10 + 1);\n            var farY = -zFar / m5;\n            var nearY = -zNear / m5;\n            // Update bounding box\n            boundingBox.min.set(-farY * aspect, -farY, zFar);\n            boundingBox.max.set(farY * aspect, farY, zNear);\n            // update vertices\n            //--- min z\n            // min x\n            vec3Set(vertices[0], -farY * aspect, -farY, zFar);\n            vec3Set(vertices[1], -farY * aspect, farY, zFar);\n            // max x\n            vec3Set(vertices[2], farY * aspect, -farY, zFar);\n            vec3Set(vertices[3], farY * aspect, farY, zFar);\n            //-- max z\n            vec3Set(vertices[4], -nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[5], -nearY * aspect, nearY, zNear);\n            vec3Set(vertices[6], nearY * aspect, -nearY, zNear);\n            vec3Set(vertices[7], nearY * aspect, nearY, zNear);\n        }\n        else { // Orthographic projection\n            var left = (-1 - m12) / m0;\n            var right = (1 - m12) / m0;\n            var top = (1 - m13) / m5;\n            var bottom = (-1 - m13) / m5;\n            var near = (-1 - m14) / m10;\n            var far = (1 - m14) / m10;\n\n\n            boundingBox.min.set(Math.min(left, right), Math.min(bottom, top), Math.min(far, near));\n            boundingBox.max.set(Math.max(right, left), Math.max(top, bottom), Math.max(near, far));\n\n            var min = boundingBox.min.array;\n            var max = boundingBox.max.array;\n            //--- min z\n            // min x\n            vec3Set(vertices[0], min[0], min[1], min[2]);\n            vec3Set(vertices[1], min[0], max[1], min[2]);\n            // max x\n            vec3Set(vertices[2], max[0], min[1], min[2]);\n            vec3Set(vertices[3], max[0], max[1], min[2]);\n            //-- max z\n            vec3Set(vertices[4], min[0], min[1], max[2]);\n            vec3Set(vertices[5], min[0], max[1], max[2]);\n            vec3Set(vertices[6], max[0], min[1], max[2]);\n            vec3Set(vertices[7], max[0], max[1], max[2]);\n        }\n    },\n\n    /**\n     * Apply a affine transform matrix and set to the given bounding box\n     * @function\n     * @param {clay.BoundingBox}\n     * @param {clay.Matrix4}\n     * @return {clay.BoundingBox}\n     */\n    getTransformedBoundingBox: (function() {\n\n        var tmpVec3 = vec3.create();\n\n        return function(bbox, matrix) {\n            var vertices = this.vertices;\n\n            var m4 = matrix.array;\n            var min = bbox.min;\n            var max = bbox.max;\n            var minArr = min.array;\n            var maxArr = max.array;\n            var v = vertices[0];\n            vec3TranformMat4(tmpVec3, v, m4);\n            vec3Copy(minArr, tmpVec3);\n            vec3Copy(maxArr, tmpVec3);\n\n            for (var i = 1; i < 8; i++) {\n                v = vertices[i];\n                vec3TranformMat4(tmpVec3, v, m4);\n\n                minArr[0] = mathMin(tmpVec3[0], minArr[0]);\n                minArr[1] = mathMin(tmpVec3[1], minArr[1]);\n                minArr[2] = mathMin(tmpVec3[2], minArr[2]);\n\n                maxArr[0] = mathMax(tmpVec3[0], maxArr[0]);\n                maxArr[1] = mathMax(tmpVec3[1], maxArr[1]);\n                maxArr[2] = mathMax(tmpVec3[2], maxArr[2]);\n            }\n\n            min._dirty = true;\n            max._dirty = true;\n\n            return bbox;\n        };\n    }) ()\n};\nexport default Frustum;\n","import mat2 from '../glmatrix/mat2';\n\n/**\n * @constructor\n * @alias clay.Matrix2\n */\nvar Matrix2 = function() {\n\n    /**\n     * Storage of Matrix2\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix2#\n     */\n    this.array = mat2.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix2#\n     */\n    this._dirty = true;\n};\n\nMatrix2.prototype = {\n\n    constructor: Matrix2,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Clone a new Matrix2\n     * @return {clay.Matrix2}\n     */\n    clone: function() {\n        return (new Matrix2()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    copy: function(b) {\n        mat2.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix2}\n     */\n    adjoint: function() {\n        mat2.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat2.determinant(this.array);\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix2}\n     */\n    identity: function() {\n        mat2.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix2}\n     */\n    invert: function() {\n        mat2.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    mul: function(b) {\n        mat2.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix2} a\n     * @return {clay.Matrix2}\n     */\n    mulLeft: function(a) {\n        mat2.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix2} b\n     * @return {clay.Matrix2}\n     */\n    multiply: function(b) {\n        mat2.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix2} a\n     * @return {clay.Matrix2}\n     */\n    multiplyLeft: function(a) {\n        mat2.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix2}\n     */\n    rotate: function(rad) {\n        mat2.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix2}\n     */\n    scale: function(v) {\n        mat2.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        mat2.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n/**\n * @param  {Matrix2} out\n * @param  {Matrix2} a\n * @return {Matrix2}\n */\nMatrix2.adjoint = function(out, a) {\n    mat2.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @return {clay.Matrix2}\n */\nMatrix2.copy = function(out, a) {\n    mat2.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} a\n * @return {number}\n */\nMatrix2.determinant = function(a) {\n    return mat2.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @return {clay.Matrix2}\n */\nMatrix2.identity = function(out) {\n    mat2.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @return {clay.Matrix2}\n */\nMatrix2.invert = function(out, a) {\n    mat2.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Matrix2} b\n * @return {clay.Matrix2}\n */\nMatrix2.mul = function(out, a, b) {\n    mat2.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Matrix2} b\n * @return {clay.Matrix2}\n */\nMatrix2.multiply = Matrix2.mul;\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {number}   rad\n * @return {clay.Matrix2}\n */\nMatrix2.rotate = function(out, a, rad) {\n    mat2.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2} out\n * @param  {clay.Matrix2} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2}\n */\nMatrix2.scale = function(out, a, v) {\n    mat2.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {Matrix2} out\n * @param  {Matrix2} a\n * @return {Matrix2}\n */\nMatrix2.transpose = function(out, a) {\n    mat2.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix2;\n","import mat2d from '../glmatrix/mat2d';\n\n/**\n * @constructor\n * @alias clay.Matrix2d\n */\nvar Matrix2d = function() {\n    /**\n     * Storage of Matrix2d\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix2d#\n     */\n    this.array = mat2d.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix2d#\n     */\n    this._dirty = true;\n};\n\nMatrix2d.prototype = {\n\n    constructor: Matrix2d,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Clone a new Matrix2d\n     * @return {clay.Matrix2d}\n     */\n    clone: function() {\n        return (new Matrix2d()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    copy: function(b) {\n        mat2d.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat2d.determinant(this.array);\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix2d}\n     */\n    identity: function() {\n        mat2d.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix2d}\n     */\n    invert: function() {\n        mat2d.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    mul: function(b) {\n        mat2d.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix2d}\n     */\n    mulLeft: function(b) {\n        mat2d.mul(this.array, b.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix2d} b\n     * @return {clay.Matrix2d}\n     */\n    multiply: function(b) {\n        mat2d.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix2d}\n     */\n    multiplyLeft: function(b) {\n        mat2d.multiply(this.array, b.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix2d}\n     */\n    rotate: function(rad) {\n        mat2d.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix2d}\n     */\n    scale: function(s) {\n        mat2d.scale(this.array, this.array, s.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v\n     * @param  {clay.Vector2}  v\n     * @return {clay.Matrix2d}\n     */\n    translate: function(v) {\n        mat2d.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix2d}\n */\nMatrix2d.copy = function(out, a) {\n    mat2d.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} a\n * @return {number}\n */\nMatrix2d.determinant = function(a) {\n    return mat2d.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @return {clay.Matrix2d}\n */\nMatrix2d.identity = function(out) {\n    mat2d.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix2d}\n */\nMatrix2d.invert = function(out, a) {\n    mat2d.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Matrix2d} b\n * @return {clay.Matrix2d}\n */\nMatrix2d.mul = function(out, a, b) {\n    mat2d.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Matrix2d} b\n * @return {clay.Matrix2d}\n */\nMatrix2d.multiply = Matrix2d.mul;\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {number}   rad\n * @return {clay.Matrix2d}\n */\nMatrix2d.rotate = function(out, a, rad) {\n    mat2d.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2d}\n */\nMatrix2d.scale = function(out, a, v) {\n    mat2d.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix2d} out\n * @param  {clay.Matrix2d} a\n * @param  {clay.Vector2}  v\n * @return {clay.Matrix2d}\n */\nMatrix2d.translate = function(out, a, v) {\n    mat2d.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix2d;\n","import mat3 from '../glmatrix/mat3';\n\n/**\n * @constructor\n * @alias clay.Matrix3\n */\nvar Matrix3 = function () {\n\n    /**\n     * Storage of Matrix3\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix3#\n     */\n    this.array = mat3.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix3#\n     */\n    this._dirty = true;\n};\n\nMatrix3.prototype = {\n\n    constructor: Matrix3,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix3}\n     */\n    adjoint: function () {\n        mat3.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix3\n     * @return {clay.Matrix3}\n     */\n    clone: function () {\n        return (new Matrix3()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    copy: function (b) {\n        mat3.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function () {\n        return mat3.determinant(this.array);\n    },\n\n    /**\n     * Copy the values from Matrix2d a\n     * @param  {clay.Matrix2d} a\n     * @return {clay.Matrix3}\n     */\n    fromMat2d: function (a) {\n        mat3.fromMat2d(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Copies the upper-left 3x3 values of Matrix4\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix3}\n     */\n    fromMat4: function (a) {\n        mat3.fromMat4(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculates a rotation matrix from the given quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix3}\n     */\n    fromQuat: function (q) {\n        mat3.fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix3}\n     */\n    identity: function () {\n        mat3.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix3}\n     */\n    invert: function () {\n        mat3.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    mul: function (b) {\n        mat3.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    mulLeft: function (a) {\n        mat3.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix3} b\n     * @return {clay.Matrix3}\n     */\n    multiply: function (b) {\n        mat3.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function (a) {\n        mat3.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian\n     * @param  {number}   rad\n     * @return {clay.Matrix3}\n     */\n    rotate: function (rad) {\n        mat3.rotate(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * @param  {clay.Vector2}  s\n     * @return {clay.Matrix3}\n     */\n    scale: function (v) {\n        mat3.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v\n     * @param  {clay.Vector2}  v\n     * @return {clay.Matrix3}\n     */\n    translate: function (v) {\n        mat3.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n     * @param {clay.Matrix4} a\n     */\n    normalFromMat4: function (a) {\n        mat3.normalFromMat4(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function () {\n        mat3.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function () {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.adjoint = function (out, a) {\n    mat3.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.copy = function (out, a) {\n    mat3.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} a\n * @return {number}\n */\nMatrix3.determinant = function (a) {\n    return mat3.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @return {clay.Matrix3}\n */\nMatrix3.identity = function (out) {\n    mat3.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.invert = function (out, a) {\n    mat3.invert(out.array, a.array);\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Matrix3} b\n * @return {clay.Matrix3}\n */\nMatrix3.mul = function (out, a, b) {\n    mat3.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Matrix3} b\n * @return {clay.Matrix3}\n */\nMatrix3.multiply = Matrix3.mul;\n\n/**\n * @param  {clay.Matrix3}  out\n * @param  {clay.Matrix2d} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromMat2d = function (out, a) {\n    mat3.fromMat2d(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromMat4 = function (out, a) {\n    mat3.fromMat4(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3}    out\n * @param  {clay.Quaternion} a\n * @return {clay.Matrix3}\n */\nMatrix3.fromQuat = function (out, q) {\n    mat3.fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix3}\n */\nMatrix3.normalFromMat4 = function (out, a) {\n    mat3.normalFromMat4(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {number}  rad\n * @return {clay.Matrix3}\n */\nMatrix3.rotate = function (out, a, rad) {\n    mat3.rotate(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Vector2} v\n * @return {clay.Matrix3}\n */\nMatrix3.scale = function (out, a, v) {\n    mat3.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @return {clay.Matrix3}\n */\nMatrix3.transpose = function (out, a) {\n    mat3.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix3} out\n * @param  {clay.Matrix3} a\n * @param  {clay.Vector2} v\n * @return {clay.Matrix3}\n */\nMatrix3.translate = function (out, a, v) {\n    mat3.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix3;\n","import mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\nimport Vector3 from './Vector3';\n\n/**\n * @constructor\n * @alias clay.Matrix4\n */\nvar Matrix4 = function() {\n\n    this._axisX = new Vector3();\n    this._axisY = new Vector3();\n    this._axisZ = new Vector3();\n\n    /**\n     * Storage of Matrix4\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Matrix4#\n     */\n    this.array = mat4.create();\n\n    /**\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Matrix4#\n     */\n    this._dirty = true;\n};\n\nMatrix4.prototype = {\n\n    constructor: Matrix4,\n\n    /**\n     * Set components from array\n     * @param  {Float32Array|number[]} arr\n     */\n    setArray: function (arr) {\n        for (var i = 0; i < this.array.length; i++) {\n            this.array[i] = arr[i];\n        }\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Calculate the adjugate of self, in-place\n     * @return {clay.Matrix4}\n     */\n    adjoint: function() {\n        mat4.adjoint(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Matrix4\n     * @return {clay.Matrix4}\n     */\n    clone: function() {\n        return (new Matrix4()).copy(this);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    copy: function(a) {\n        mat4.copy(this.array, a.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate matrix determinant\n     * @return {number}\n     */\n    determinant: function() {\n        return mat4.determinant(this.array);\n    },\n\n    /**\n     * Set upper 3x3 part from quaternion\n     * @param  {clay.Quaternion} q\n     * @return {clay.Matrix4}\n     */\n    fromQuat: function(q) {\n        mat4.fromQuat(this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from a quaternion rotation and a vector translation\n     * @param  {clay.Quaternion} q\n     * @param  {clay.Vector3} v\n     * @return {clay.Matrix4}\n     */\n    fromRotationTranslation: function(q, v) {\n        mat4.fromRotationTranslation(this.array, q.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from Matrix2d, it is used when converting a 2d shape to 3d space.\n     * In 3d space it is equivalent to ranslate on xy plane and rotate about z axis\n     * @param  {clay.Matrix2d} m2d\n     * @return {clay.Matrix4}\n     */\n    fromMat2d: function(m2d) {\n        Matrix4.fromMat2d(this, m2d);\n        return this;\n    },\n\n    /**\n     * Set from frustum bounds\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    frustum: function (left, right, bottom, top, near, far) {\n        mat4.frustum(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set to a identity matrix\n     * @return {clay.Matrix4}\n     */\n    identity: function() {\n        mat4.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Invert self\n     * @return {clay.Matrix4}\n     */\n    invert: function() {\n        mat4.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a matrix with the given eye position, focal point, and up axis\n     * @param  {clay.Vector3} eye\n     * @param  {clay.Vector3} center\n     * @param  {clay.Vector3} up\n     * @return {clay.Matrix4}\n     */\n    lookAt: function(eye, center, up) {\n        mat4.lookAt(this.array, eye.array, center.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for mutiply\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    mul: function(b) {\n        mat4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Matrix4} a\n     * @return {clay.Matrix4}\n     */\n    mulLeft: function(a) {\n        mat4.mul(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply self and b\n     * @param  {clay.Matrix4} b\n     * @return {clay.Matrix4}\n     */\n    multiply: function(b) {\n        mat4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Multiply a and self, a is on the left\n     * @param  {clay.Matrix3} a\n     * @return {clay.Matrix3}\n     */\n    multiplyLeft: function(a) {\n        mat4.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set as a orthographic projection matrix\n     * @param  {number} left\n     * @param  {number} right\n     * @param  {number} bottom\n     * @param  {number} top\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    ortho: function(left, right, bottom, top, near, far) {\n        mat4.ortho(this.array, left, right, bottom, top, near, far);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Set as a perspective projection matrix\n     * @param  {number} fovy\n     * @param  {number} aspect\n     * @param  {number} near\n     * @param  {number} far\n     * @return {clay.Matrix4}\n     */\n    perspective: function(fovy, aspect, near, far) {\n        mat4.perspective(this.array, fovy, aspect, near, far);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by rad about axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param  {number}   rad\n     * @param  {clay.Vector3} axis\n     * @return {clay.Matrix4}\n     */\n    rotate: function(rad, axis) {\n        mat4.rotate(this.array, this.array, rad, axis.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateX: function(rad) {\n        mat4.rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateY: function(rad) {\n        mat4.rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis.\n     * Equal to right-multiply a rotaion matrix\n     * @param {number} rad\n     * @return {clay.Matrix4}\n     */\n    rotateZ: function(rad) {\n        mat4.rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self by s\n     * Equal to right-multiply a scale matrix\n     * @param  {clay.Vector3}  s\n     * @return {clay.Matrix4}\n     */\n    scale: function(v) {\n        mat4.scale(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Translate self by v.\n     * Equal to right-multiply a translate matrix\n     * @param  {clay.Vector3}  v\n     * @return {clay.Matrix4}\n     */\n    translate: function(v) {\n        mat4.translate(this.array, this.array, v.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transpose self, in-place.\n     * @return {clay.Matrix2}\n     */\n    transpose: function() {\n        mat4.transpose(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Decompose a matrix to SRT\n     * @param {clay.Vector3} [scale]\n     * @param {clay.Quaternion} rotation\n     * @param {clay.Vector} position\n     * @see http://msdn.microsoft.com/en-us/library/microsoft.xna.framework.matrix.decompose.aspx\n     */\n    decomposeMatrix: (function() {\n\n        var x = vec3.create();\n        var y = vec3.create();\n        var z = vec3.create();\n\n        var m3 = mat3.create();\n\n        return function(scale, rotation, position) {\n\n            var el = this.array;\n            vec3.set(x, el[0], el[1], el[2]);\n            vec3.set(y, el[4], el[5], el[6]);\n            vec3.set(z, el[8], el[9], el[10]);\n\n            var sx = vec3.length(x);\n            var sy = vec3.length(y);\n            var sz = vec3.length(z);\n\n            // if determine is negative, we need to invert one scale\n            var det = this.determinant();\n            if (det < 0) {\n                sx = -sx;\n            }\n\n            if (scale) {\n                scale.set(sx, sy, sz);\n            }\n\n            position.set(el[12], el[13], el[14]);\n\n            mat3.fromMat4(m3, el);\n            // Not like mat4, mat3 in glmatrix seems to be row-based\n            // Seems fixed in gl-matrix 2.2.2\n            // https://github.com/toji/gl-matrix/issues/114\n            // mat3.transpose(m3, m3);\n\n            m3[0] /= sx;\n            m3[1] /= sx;\n            m3[2] /= sx;\n\n            m3[3] /= sy;\n            m3[4] /= sy;\n            m3[5] /= sy;\n\n            m3[6] /= sz;\n            m3[7] /= sz;\n            m3[8] /= sz;\n\n            quat.fromMat3(rotation.array, m3);\n            quat.normalize(rotation.array, rotation.array);\n\n            rotation._dirty = true;\n            position._dirty = true;\n        };\n    })(),\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n\nif (defineProperty) {\n    var proto = Matrix4.prototype;\n    /**\n     * Z Axis of local transform\n     * @name z\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            var el = this.array;\n            this._axisZ.set(el[8], el[9], el[10]);\n            return this._axisZ;\n        },\n        set: function (v) {\n            // TODO Here has a problem\n            // If only set an item of vector will not work\n            var el = this.array;\n            v = v.array;\n            el[8] = v[0];\n            el[9] = v[1];\n            el[10] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * Y Axis of local transform\n     * @name y\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            var el = this.array;\n            this._axisY.set(el[4], el[5], el[6]);\n            return this._axisY;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[4] = v[0];\n            el[5] = v[1];\n            el[6] = v[2];\n\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * X Axis of local transform\n     * @name x\n     * @type {clay.Vector3}\n     * @memberOf clay.Matrix4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            var el = this.array;\n            this._axisX.set(el[0], el[1], el[2]);\n            return this._axisX;\n        },\n        set: function (v) {\n            var el = this.array;\n            v = v.array;\n            el[0] = v[0];\n            el[1] = v[1];\n            el[2] = v[2];\n\n            this._dirty = true;\n        }\n    })\n}\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.adjoint = function(out, a) {\n    mat4.adjoint(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.copy = function(out, a) {\n    mat4.copy(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} a\n * @return {number}\n */\nMatrix4.determinant = function(a) {\n    return mat4.determinant(a.array);\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @return {clay.Matrix4}\n */\nMatrix4.identity = function(out) {\n    mat4.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  left\n * @param  {number}  right\n * @param  {number}  bottom\n * @param  {number}  top\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.ortho = function(out, left, right, bottom, top, near, far) {\n    mat4.ortho(out.array, left, right, bottom, top, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {number}  fovy\n * @param  {number}  aspect\n * @param  {number}  near\n * @param  {number}  far\n * @return {clay.Matrix4}\n */\nMatrix4.perspective = function(out, fovy, aspect, near, far) {\n    mat4.perspective(out.array, fovy, aspect, near, far);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Vector3} eye\n * @param  {clay.Vector3} center\n * @param  {clay.Vector3} up\n * @return {clay.Matrix4}\n */\nMatrix4.lookAt = function(out, eye, center, up) {\n    mat4.lookAt(out.array, eye.array, center.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.invert = function(out, a) {\n    mat4.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.mul = function(out, a, b) {\n    mat4.mul(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Matrix4} b\n * @return {clay.Matrix4}\n */\nMatrix4.multiply = Matrix4.mul;\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @return {clay.Matrix4}\n */\nMatrix4.fromQuat = function(out, q) {\n    mat4.fromQuat(out.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4}    out\n * @param  {clay.Quaternion} q\n * @param  {clay.Vector3}    v\n * @return {clay.Matrix4}\n */\nMatrix4.fromRotationTranslation = function(out, q, v) {\n    mat4.fromRotationTranslation(out.array, q.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} m4\n * @param  {clay.Matrix2d} m2d\n * @return {clay.Matrix4}\n */\nMatrix4.fromMat2d = function(m4, m2d) {\n    m4._dirty = true;\n    var m2d = m2d.array;\n    var m4 = m4.array;\n\n    m4[0] = m2d[0];\n    m4[4] = m2d[2];\n    m4[12] = m2d[4];\n\n    m4[1] = m2d[1];\n    m4[5] = m2d[3];\n    m4[13] = m2d[5];\n\n    return m4;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @param  {clay.Vector3} axis\n * @return {clay.Matrix4}\n */\nMatrix4.rotate = function(out, a, rad, axis) {\n    mat4.rotate(out.array, a.array, rad, axis.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateX = function(out, a, rad) {\n    mat4.rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateY = function(out, a, rad) {\n    mat4.rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {number}  rad\n * @return {clay.Matrix4}\n */\nMatrix4.rotateZ = function(out, a, rad) {\n    mat4.rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.scale = function(out, a, v) {\n    mat4.scale(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @return {clay.Matrix4}\n */\nMatrix4.transpose = function(out, a) {\n    mat4.transpose(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Matrix4} out\n * @param  {clay.Matrix4} a\n * @param  {clay.Vector3} v\n * @return {clay.Matrix4}\n */\nMatrix4.translate = function(out, a, v) {\n    mat4.translate(out.array, a.array, v.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Matrix4;\n","import Vector3 from './Vector3';\nimport mat4 from '../glmatrix/mat4';\nimport vec3 from '../glmatrix/vec3';\nimport vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Plane\n * @param {clay.Vector3} [normal]\n * @param {number} [distance]\n */\nvar Plane = function(normal, distance) {\n    /**\n     * Normal of the plane\n     * @type {clay.Vector3}\n     */\n    this.normal = normal || new Vector3(0, 1, 0);\n\n    /**\n     * Constant of the plane equation, used as distance to the origin\n     * @type {number}\n     */\n    this.distance = distance || 0;\n};\n\nPlane.prototype = {\n\n    constructor: Plane,\n\n    /**\n     * Distance from a given point to the plane\n     * @param  {clay.Vector3} point\n     * @return {number}\n     */\n    distanceToPoint: function(point) {\n        return vec3.dot(point.array, this.normal.array) - this.distance;\n    },\n\n    /**\n     * Calculate the projection point on the plane\n     * @param  {clay.Vector3} point\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    projectPoint: function(point, out) {\n        if (!out) {\n            out = new Vector3();\n        }\n        var d = this.distanceToPoint(point);\n        vec3.scaleAndAdd(out.array, point.array, this.normal.array, -d);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Normalize the plane's normal and calculate the distance\n     */\n    normalize: function() {\n        var invLen = 1 / vec3.len(this.normal.array);\n        vec3.scale(this.normal.array, invLen);\n        this.distance *= invLen;\n    },\n\n    /**\n     * If the plane intersect a frustum\n     * @param  {clay.Frustum} Frustum\n     * @return {boolean}\n     */\n    intersectFrustum: function(frustum) {\n        // Check if all coords of frustum is on plane all under plane\n        var coords = frustum.vertices;\n        var normal = this.normal.array;\n        var onPlane = vec3.dot(coords[0].array, normal) > this.distance;\n        for (var i = 1; i < 8; i++) {\n            if ((vec3.dot(coords[i].array, normal) > this.distance) != onPlane) {\n                return true;\n            }\n        }\n    },\n\n    /**\n     * Calculate the intersection point between plane and a given line\n     * @function\n     * @param {clay.Vector3} start start point of line\n     * @param {clay.Vector3} end end point of line\n     * @param {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectLine: (function() {\n        var rd = vec3.create();\n        return function(start, end, out) {\n            var d0 = this.distanceToPoint(start);\n            var d1 = this.distanceToPoint(end);\n            if ((d0 > 0 && d1 > 0) || (d0 < 0 && d1 < 0)) {\n                return null;\n            }\n            // Ray intersection\n            var pn = this.normal.array;\n            var d = this.distance;\n            var ro = start.array;\n            // direction\n            vec3.sub(rd, end.array, start.array);\n            vec3.normalize(rd, rd);\n\n            var divider = vec3.dot(pn, rd);\n            // ray is parallel to the plane\n            if (divider === 0) {\n                return null;\n            }\n            if (!out) {\n                out = new Vector3();\n            }\n            var t = (vec3.dot(pn, ro) - d) / divider;\n            vec3.scaleAndAdd(out.array, ro, rd, -t);\n            out._dirty = true;\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to plane\n     * @function\n     * @return {clay.Matrix4}\n     */\n    applyTransform: (function() {\n        var inverseTranspose = mat4.create();\n        var normalv4 = vec4.create();\n        var pointv4 = vec4.create();\n        pointv4[3] = 1;\n        return function(m4) {\n            m4 = m4.array;\n            // Transform point on plane\n            vec3.scale(pointv4, this.normal.array, this.distance);\n            vec4.transformMat4(pointv4, pointv4, m4);\n            this.distance = vec3.dot(pointv4, this.normal.array);\n            // Transform plane normal\n            mat4.invert(inverseTranspose, m4);\n            mat4.transpose(inverseTranspose, inverseTranspose);\n            normalv4[3] = 0;\n            vec3.copy(normalv4, this.normal.array);\n            vec4.transformMat4(normalv4, normalv4, inverseTranspose);\n            vec3.copy(this.normal.array, normalv4);\n        };\n    })(),\n\n    /**\n     * Copy from another plane\n     * @param  {clay.Vector3} plane\n     */\n    copy: function(plane) {\n        vec3.copy(this.normal.array, plane.normal.array);\n        this.normal._dirty = true;\n        this.distance = plane.distance;\n    },\n\n    /**\n     * Clone a new plane\n     * @return {clay.Plane}\n     */\n    clone: function() {\n        var plane = new Plane();\n        plane.copy(this);\n        return plane;\n    }\n};\n\nexport default Plane;\n","import quat from '../glmatrix/quat';\nimport mat3 from '../glmatrix/mat3';\n\n/**\n * @constructor\n * @alias clay.Quaternion\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Quaternion = function (x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w === undefined ? 1 : w;\n\n    /**\n     * Storage of Quaternion, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Quaternion#\n     */\n    this.array = quat.fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Quaternion#\n     */\n    this._dirty = true;\n};\n\nQuaternion.prototype = {\n\n    constructor: Quaternion,\n\n    /**\n     * Add b to self\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    add: function (b) {\n        quat.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Calculate the w component from x, y, z component\n     * @return {clay.Quaternion}\n     */\n    calculateW: function () {\n        quat.calculateW(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Quaternion}\n     */\n    set: function (x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Quaternion}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Quaternion\n     * @return {clay.Quaternion}\n     */\n    clone: function () {\n        return new Quaternion(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Calculates the conjugate of self If the quaternion is normalized,\n     * this function is faster than invert and produces the same result.\n     *\n     * @return {clay.Quaternion}\n     */\n    conjugate: function () {\n        quat.conjugate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    copy: function (b) {\n        quat.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Quaternion} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return quat.dot(this.array, b.array);\n    },\n\n    /**\n     * Set from the given 3x3 rotation matrix\n     * @param  {clay.Matrix3} m\n     * @return {clay.Quaternion}\n     */\n    fromMat3: function (m) {\n        quat.fromMat3(this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set from the given 4x4 rotation matrix\n     * The 4th column and 4th row will be droped\n     * @param  {clay.Matrix4} m\n     * @return {clay.Quaternion}\n     */\n    fromMat4: (function () {\n        var m3 = mat3.create();\n        return function (m) {\n            mat3.fromMat4(m3, m.array);\n            // TODO Not like mat4, mat3 in glmatrix seems to be row-based\n            mat3.transpose(m3, m3);\n            quat.fromMat3(this.array, m3);\n            this._dirty = true;\n            return this;\n        };\n    })(),\n\n    /**\n     * Set to identity quaternion\n     * @return {clay.Quaternion}\n     */\n    identity: function () {\n        quat.identity(this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Invert self\n     * @return {clay.Quaternion}\n     */\n    invert: function () {\n        quat.invert(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return quat.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return quat.length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number}  t\n     * @return {clay.Quaternion}\n     */\n    lerp: function (a, b, t) {\n        quat.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    mul: function (b) {\n        quat.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiplyLeft\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    mulLeft: function (a) {\n        quat.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Quaternion} b\n     * @return {clay.Quaternion}\n     */\n    multiply: function (b) {\n        quat.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply a and self\n     * Quaternion mutiply is not commutative, so the result of mutiplyLeft is different with multiply.\n     * @param  {clay.Quaternion} a\n     * @return {clay.Quaternion}\n     */\n    multiplyLeft: function (a) {\n        quat.multiply(this.array, a.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Quaternion}\n     */\n    normalize: function () {\n        quat.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about X axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateX: function (rad) {\n        quat.rotateX(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Y axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateY: function (rad) {\n        quat.rotateY(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Rotate self by a given radian about Z axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    rotateZ: function (rad) {\n        quat.rotateZ(this.array, this.array, rad);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self to represent the shortest rotation from Vector3 a to Vector3 b.\n     * a and b needs to be normalized\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Quaternion}\n     */\n    rotationTo: function (a, b) {\n        quat.rotationTo(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Sets self with values corresponding to the given axes\n     * @param {clay.Vector3} view\n     * @param {clay.Vector3} right\n     * @param {clay.Vector3} up\n     * @return {clay.Quaternion}\n     */\n    setAxes: function (view, right, up) {\n        quat.setAxes(this.array, view.array, right.array, up.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Sets self with a rotation axis and rotation angle\n     * @param {clay.Vector3} axis\n     * @param {number} rad\n     * @return {clay.Quaternion}\n     */\n    setAxisAngle: function (axis, rad) {\n        quat.setAxisAngle(this.array, axis.array, rad);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Perform spherical linear interpolation between a and b\n     * @param  {clay.Quaternion} a\n     * @param  {clay.Quaternion} b\n     * @param  {number} t\n     * @return {clay.Quaternion}\n     */\n    slerp: function (a, b, t) {\n        quat.slerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return quat.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return quat.squaredLength(this.array);\n    },\n\n    /**\n     * Set from euler\n     * @param {clay.Vector3} v\n     * @param {String} order\n     */\n    fromEuler: function (v, order) {\n        return Quaternion.fromEuler(this, v, order);\n    },\n\n    toString: function () {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Quaternion.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Quaternion\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.add = function (out, a, b) {\n    quat.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {number}     x\n * @param  {number}     y\n * @param  {number}     z\n * @param  {number}     w\n * @return {clay.Quaternion}\n */\nQuaternion.set = function (out, x, y, z, w) {\n    quat.set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.copy = function (out, b) {\n    quat.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.calculateW = function (out, a) {\n    quat.calculateW(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.conjugate = function (out, a) {\n    quat.conjugate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @return {clay.Quaternion}\n */\nQuaternion.identity = function (out) {\n    quat.identity(out.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.invert = function (out, a) {\n    quat.invert(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {number}\n */\nQuaternion.dot = function (a, b) {\n    return quat.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.len = function (a) {\n    return quat.length(a.array);\n};\n\n// Quaternion.length = Quaternion.len;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.lerp = function (out, a, b, t) {\n    quat.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @param  {number}     t\n * @return {clay.Quaternion}\n */\nQuaternion.slerp = function (out, a, b, t) {\n    quat.slerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.mul = function (out, a, b) {\n    quat.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {clay.Quaternion} b\n * @return {clay.Quaternion}\n */\nQuaternion.multiply = Quaternion.mul;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateX = function (out, a, rad) {\n    quat.rotateX(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateY = function (out, a, rad) {\n    quat.rotateY(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.rotateZ = function (out, a, rad) {\n    quat.rotateZ(out.array, a.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    axis\n * @param  {number}     rad\n * @return {clay.Quaternion}\n */\nQuaternion.setAxisAngle = function (out, axis, rad) {\n    quat.setAxisAngle(out.array, axis.array, rad);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Quaternion} a\n * @return {clay.Quaternion}\n */\nQuaternion.normalize = function (out, a) {\n    quat.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.sqrLen = function (a) {\n    return quat.sqrLen(a.array);\n};\n\n/**\n * @function\n * @param  {clay.Quaternion} a\n * @return {number}\n */\nQuaternion.squaredLength = Quaternion.sqrLen;\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Matrix3}    m\n * @return {clay.Quaternion}\n */\nQuaternion.fromMat3 = function (out, m) {\n    quat.fromMat3(out.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    view\n * @param  {clay.Vector3}    right\n * @param  {clay.Vector3}    up\n * @return {clay.Quaternion}\n */\nQuaternion.setAxes = function (out, view, right, up) {\n    quat.setAxes(out.array, view.array, right.array, up.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Quaternion} out\n * @param  {clay.Vector3}    a\n * @param  {clay.Vector3}    b\n * @return {clay.Quaternion}\n */\nQuaternion.rotationTo = function (out, a, b) {\n    quat.rotationTo(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * Set quaternion from euler\n * @param {clay.Quaternion} out\n * @param {clay.Vector3} v\n * @param {String} order\n */\nQuaternion.fromEuler = function (out, v, order) {\n\n    out._dirty = true;\n\n    v = v.array;\n    var target = out.array;\n    var c1 = Math.cos(v[0] / 2);\n    var c2 = Math.cos(v[1] / 2);\n    var c3 = Math.cos(v[2] / 2);\n    var s1 = Math.sin(v[0] / 2);\n    var s2 = Math.sin(v[1] / 2);\n    var s3 = Math.sin(v[2] / 2);\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    // http://www.mathworks.com/matlabcentral/fileexchange/\n    //  20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //  content/SpinCalc.m\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'YXZ':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'ZXY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'ZYX':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n        case 'YZX':\n            target[0] = s1 * c2 * c3 + c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 + s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 - s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 - s1 * s2 * s3;\n            break;\n        case 'XZY':\n            target[0] = s1 * c2 * c3 - c1 * s2 * s3;\n            target[1] = c1 * s2 * c3 - s1 * c2 * s3;\n            target[2] = c1 * c2 * s3 + s1 * s2 * c3;\n            target[3] = c1 * c2 * c3 + s1 * s2 * s3;\n            break;\n    }\n};\n\nexport default Quaternion;\n","import Vector3 from './Vector3';\nimport vec3 from '../glmatrix/vec3';\n\nvar EPSILON = 1e-5;\n\n/**\n * @constructor\n * @alias clay.Ray\n * @param {clay.Vector3} [origin]\n * @param {clay.Vector3} [direction]\n */\nvar Ray = function (origin, direction) {\n    /**\n     * @type {clay.Vector3}\n     */\n    this.origin = origin || new Vector3();\n    /**\n     * @type {clay.Vector3}\n     */\n    this.direction = direction || new Vector3();\n};\n\nRay.prototype = {\n\n    constructor: Ray,\n\n    // http://www.siggraph.org/education/materials/HyperGraph/raytrace/rayplane_intersection.htm\n    /**\n     * Calculate intersection point between ray and a give plane\n     * @param  {clay.Plane} plane\n     * @param  {clay.Vector3} [out]\n     * @return {clay.Vector3}\n     */\n    intersectPlane: function (plane, out) {\n        var pn = plane.normal.array;\n        var d = plane.distance;\n        var ro = this.origin.array;\n        var rd = this.direction.array;\n\n        var divider = vec3.dot(pn, rd);\n        // ray is parallel to the plane\n        if (divider === 0) {\n            return null;\n        }\n        if (!out) {\n            out = new Vector3();\n        }\n        var t = (vec3.dot(pn, ro) - d) / divider;\n        vec3.scaleAndAdd(out.array, ro, rd, -t);\n        out._dirty = true;\n        return out;\n    },\n\n    /**\n     * Mirror the ray against plane\n     * @param  {clay.Plane} plane\n     */\n    mirrorAgainstPlane: function (plane) {\n        // Distance to plane\n        var d = vec3.dot(plane.normal.array, this.direction.array);\n        vec3.scaleAndAdd(this.direction.array, this.direction.array, plane.normal.array, -d * 2);\n        this.direction._dirty = true;\n    },\n\n    distanceToPoint: (function () {\n        var v = vec3.create();\n        return function (point) {\n            vec3.sub(v, point, this.origin.array);\n            // Distance from projection point to origin\n            var b = vec3.dot(v, this.direction.array);\n            if (b < 0) {\n                return vec3.distance(this.origin.array, point);\n            }\n            // Squared distance from center to origin\n            var c2 = vec3.lenSquared(v);\n            // Squared distance from center to projection point\n            return Math.sqrt(c2 - b * b);\n        };\n    })(),\n\n    /**\n     * Calculate intersection point between ray and sphere\n     * @param  {clay.Vector3} center\n     * @param  {number} radius\n     * @param  {clay.Vector3} out\n     * @return {clay.Vector3}\n     */\n    intersectSphere: (function () {\n        var v = vec3.create();\n        return function (center, radius, out) {\n            var origin = this.origin.array;\n            var direction = this.direction.array;\n            center = center.array;\n            vec3.sub(v, center, origin);\n            // Distance from projection point to origin\n            var b = vec3.dot(v, direction);\n            // Squared distance from center to origin\n            var c2 = vec3.squaredLength(v);\n            // Squared distance from center to projection point\n            var d2 = c2 - b * b;\n\n            var r2 = radius * radius;\n            // No intersection\n            if (d2 > r2) {\n                return;\n            }\n\n            var a = Math.sqrt(r2 - d2);\n            // First intersect point\n            var t0 = b - a;\n            // Second intersect point\n            var t1 = b + a;\n\n            if (!out) {\n                out = new Vector3();\n            }\n            if (t0 < 0) {\n                if (t1 < 0) {\n                    return null;\n                }\n                else {\n                    vec3.scaleAndAdd(out.array, origin, direction, t1);\n                    return out;\n                }\n            }\n            else {\n                vec3.scaleAndAdd(out.array, origin, direction, t0);\n                return out;\n            }\n        };\n    })(),\n\n    // http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\n    /**\n     * Calculate intersection point between ray and bounding box\n     * @param {clay.BoundingBox} bbox\n     * @param {clay.Vector3}\n     * @return {clay.Vector3}\n     */\n    intersectBoundingBox: function (bbox, out) {\n        var dir = this.direction.array;\n        var origin = this.origin.array;\n        var min = bbox.min.array;\n        var max = bbox.max.array;\n\n        var invdirx = 1 / dir[0];\n        var invdiry = 1 / dir[1];\n        var invdirz = 1 / dir[2];\n\n        var tmin, tmax, tymin, tymax, tzmin, tzmax;\n        if (invdirx >= 0) {\n            tmin = (min[0] - origin[0]) * invdirx;\n            tmax = (max[0] - origin[0]) * invdirx;\n        }\n        else {\n            tmax = (min[0] - origin[0]) * invdirx;\n            tmin = (max[0] - origin[0]) * invdirx;\n        }\n        if (invdiry >= 0) {\n            tymin = (min[1] - origin[1]) * invdiry;\n            tymax = (max[1] - origin[1]) * invdiry;\n        }\n        else {\n            tymax = (min[1] - origin[1]) * invdiry;\n            tymin = (max[1] - origin[1]) * invdiry;\n        }\n\n        if ((tmin > tymax) || (tymin > tmax)) {\n            return null;\n        }\n\n        if (tymin > tmin || tmin !== tmin) {\n            tmin = tymin;\n        }\n        if (tymax < tmax || tmax !== tmax) {\n            tmax = tymax;\n        }\n\n        if (invdirz >= 0) {\n            tzmin = (min[2] - origin[2]) * invdirz;\n            tzmax = (max[2] - origin[2]) * invdirz;\n        }\n        else {\n            tzmax = (min[2] - origin[2]) * invdirz;\n            tzmin = (max[2] - origin[2]) * invdirz;\n        }\n\n        if ((tmin > tzmax) || (tzmin > tmax)) {\n            return null;\n        }\n\n        if (tzmin > tmin || tmin !== tmin) {\n            tmin = tzmin;\n        }\n        if (tzmax < tmax || tmax !== tmax) {\n            tmax = tzmax;\n        }\n        if (tmax < 0) {\n            return null;\n        }\n\n        var t = tmin >= 0 ? tmin : tmax;\n\n        if (!out) {\n            out = new Vector3();\n        }\n        vec3.scaleAndAdd(out.array, origin, dir, t);\n        return out;\n    },\n\n    // http://en.wikipedia.org/wiki/M%C3%B6ller%E2%80%93Trumbore_intersection_algorithm\n    /**\n     * Calculate intersection point between ray and three triangle vertices\n     * @param {clay.Vector3} a\n     * @param {clay.Vector3} b\n     * @param {clay.Vector3} c\n     * @param {boolean}           singleSided, CW triangle will be ignored\n     * @param {clay.Vector3} [out]\n     * @param {clay.Vector3} [barycenteric] barycentric coords\n     * @return {clay.Vector3}\n     */\n    intersectTriangle: (function () {\n\n        var eBA = vec3.create();\n        var eCA = vec3.create();\n        var AO = vec3.create();\n        var vCross = vec3.create();\n\n        return function (a, b, c, singleSided, out, barycenteric) {\n            var dir = this.direction.array;\n            var origin = this.origin.array;\n            a = a.array;\n            b = b.array;\n            c = c.array;\n\n            vec3.sub(eBA, b, a);\n            vec3.sub(eCA, c, a);\n\n            vec3.cross(vCross, eCA, dir);\n\n            var det = vec3.dot(eBA, vCross);\n\n            if (singleSided) {\n                if (det > -EPSILON) {\n                    return null;\n                }\n            }\n            else {\n                if (det > -EPSILON && det < EPSILON) {\n                    return null;\n                }\n            }\n\n            vec3.sub(AO, origin, a);\n            var u = vec3.dot(vCross, AO) / det;\n            if (u < 0 || u > 1) {\n                return null;\n            }\n\n            vec3.cross(vCross, eBA, AO);\n            var v = vec3.dot(dir, vCross) / det;\n\n            if (v < 0 || v > 1 || (u + v > 1)) {\n                return null;\n            }\n\n            vec3.cross(vCross, eBA, eCA);\n            var t = -vec3.dot(AO, vCross) / det;\n\n            if (t < 0) {\n                return null;\n            }\n\n            if (!out) {\n                out = new Vector3();\n            }\n            if (barycenteric) {\n                Vector3.set(barycenteric, (1 - u - v), u, v);\n            }\n            vec3.scaleAndAdd(out.array, origin, dir, t);\n\n            return out;\n        };\n    })(),\n\n    /**\n     * Apply an affine transform matrix to the ray\n     * @return {clay.Matrix4} matrix\n     */\n    applyTransform: function (matrix) {\n        Vector3.add(this.direction, this.direction, this.origin);\n        Vector3.transformMat4(this.origin, this.origin, matrix);\n        Vector3.transformMat4(this.direction, this.direction, matrix);\n\n        Vector3.sub(this.direction, this.direction, this.origin);\n        Vector3.normalize(this.direction, this.direction);\n    },\n\n    /**\n     * Copy values from another ray\n     * @param {clay.Ray} ray\n     */\n    copy: function (ray) {\n        Vector3.copy(this.origin, ray.origin);\n        Vector3.copy(this.direction, ray.direction);\n    },\n\n    /**\n     * Clone a new ray\n     * @return {clay.Ray}\n     */\n    clone: function () {\n        var ray = new Ray();\n        ray.copy(this);\n        return ray;\n    }\n};\n\nexport default Ray;\n","import vec2 from '../glmatrix/vec2';\n\n/**\n * @constructor\n * @alias clay.Vector2\n * @param {number} x\n * @param {number} y\n */\nvar Vector2 = function(x, y) {\n\n    x = x || 0;\n    y = y || 0;\n\n    /**\n     * Storage of Vector2, read and write of x, y will change the values in array\n     * All methods also operate on the array instead of x, y components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector2#\n     */\n    this.array = vec2.fromValues(x, y);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector2#\n     */\n    this._dirty = true;\n};\n\nVector2.prototype = {\n\n    constructor: Vector2,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    add: function(b) {\n        vec2.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @return {clay.Vector2}\n     */\n    set: function(x, y) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x and y components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector2}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector2\n     * @return {clay.Vector2}\n     */\n    clone: function() {\n        return new Vector2(this.x, this.y);\n    },\n\n    /**\n     * Copy x, y from b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    copy: function(b) {\n        vec2.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} out\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    cross: function(out, b) {\n        vec2.cross(out.array, this.array, b.array);\n        out._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return vec2.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return vec2.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    div: function(b) {\n        vec2.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    divide: function(b) {\n        vec2.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return vec2.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return vec2.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return vec2.length(this.array);\n    },\n\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector2} a\n     * @param  {clay.Vector2} b\n     * @param  {number}  t\n     * @return {clay.Vector2}\n     */\n    lerp: function(a, b, t) {\n        vec2.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    min: function(b) {\n        vec2.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    max: function(b) {\n        vec2.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    mul: function(b) {\n        vec2.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    multiply: function(b) {\n        vec2.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector2}\n     */\n    negate: function() {\n        vec2.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector2}\n     */\n    normalize: function() {\n        vec2.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector2}\n     */\n    random: function(scale) {\n        vec2.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scale: function(s) {\n        vec2.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector2} b\n     * @param  {number}  scale\n     * @return {clay.Vector2}\n     */\n    scaleAndAdd: function(b, s) {\n        vec2.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return vec2.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector2} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return vec2.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return vec2.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return vec2.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    sub: function(b) {\n        vec2.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector2} b\n     * @return {clay.Vector2}\n     */\n    subtract: function(b) {\n        vec2.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2 m\n     * @param  {clay.Matrix2} m\n     * @return {clay.Vector2}\n     */\n    transformMat2: function(m) {\n        vec2.transformMat2(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix2d m\n     * @param  {clay.Matrix2d} m\n     * @return {clay.Vector2}\n     */\n    transformMat2d: function(m) {\n        vec2.transformMat2d(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector2}\n     */\n    transformMat3: function(m) {\n        vec2.transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector2}\n     */\n    transformMat4: function(m) {\n        vec2.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\n// Getter and Setter\nif (Object.defineProperty) {\n\n    var proto = Vector2.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector2\n     * @instance\n     */\n    Object.defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.add = function(out, a, b) {\n    vec2.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  x\n * @param  {number}  y\n * @return {clay.Vector2}\n */\nVector2.set = function(out, x, y) {\n    vec2.set(out.array, x, y);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.copy = function(out, b) {\n    vec2.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.cross = function(out, a, b) {\n    vec2.cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dist = function(a, b) {\n    return vec2.distance(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.distance = Vector2.dist;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.div = function(out, a, b) {\n    vec2.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.divide = Vector2.div;\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.dot = function(a, b) {\n    return vec2.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.len = function(b) {\n    return vec2.length(b.array);\n};\n\n// Vector2.length = Vector2.len;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  t\n * @return {clay.Vector2}\n */\nVector2.lerp = function(out, a, b, t) {\n    vec2.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.min = function(out, a, b) {\n    vec2.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.max = function(out, a, b) {\n    vec2.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.mul = function(out, a, b) {\n    vec2.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.multiply = Vector2.mul;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.negate = function(out, a) {\n    vec2.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @return {clay.Vector2}\n */\nVector2.normalize = function(out, a) {\n    vec2.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.random = function(out, scale) {\n    vec2.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scale = function(out, a, scale) {\n    vec2.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @param  {number}  scale\n * @return {clay.Vector2}\n */\nVector2.scaleAndAdd = function(out, a, b, scale) {\n    vec2.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.sqrDist = function(a, b) {\n    return vec2.sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {number}\n */\nVector2.squaredDistance = Vector2.sqrDist;\n\n/**\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.sqrLen = function(a) {\n    return vec2.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector2} a\n * @return {number}\n */\nVector2.squaredLength = Vector2.sqrLen;\n\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.sub = function(out, a, b) {\n    vec2.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Vector2} b\n * @return {clay.Vector2}\n */\nVector2.subtract = Vector2.sub;\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix2} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2 = function(out, a, m) {\n    vec2.transformMat2(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2}  out\n * @param  {clay.Vector2}  a\n * @param  {clay.Matrix2d} m\n * @return {clay.Vector2}\n */\nVector2.transformMat2d = function(out, a, m) {\n    vec2.transformMat2d(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {Matrix3} m\n * @return {clay.Vector2}\n */\nVector2.transformMat3 = function(out, a, m) {\n    vec2.transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector2} out\n * @param  {clay.Vector2} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector2}\n */\nVector2.transformMat4 = function(out, a, m) {\n    vec2.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Vector2;\n","import vec3 from '../glmatrix/vec3';\n\n/**\n * @constructor\n * @alias clay.Vector3\n * @param {number} x\n * @param {number} y\n * @param {number} z\n */\nvar Vector3 = function(x, y, z) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n\n    /**\n     * Storage of Vector3, read and write of x, y, z will change the values in array\n     * All methods also operate on the array instead of x, y, z components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector3#\n     */\n    this.array = vec3.fromValues(x, y, z);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector3#\n     */\n    this._dirty = true;\n};\n\nVector3.prototype = {\n\n    constructor: Vector3,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    add: function (b) {\n        vec3.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @return {clay.Vector3}\n     */\n    set: function (x, y, z) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector3}\n     */\n    setArray: function (arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector3\n     * @return {clay.Vector3}\n     */\n    clone: function () {\n        return new Vector3(this.x, this.y, this.z);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    copy: function (b) {\n        vec3.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Cross product of self and b, written to a Vector3 out\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    cross: function (a, b) {\n        vec3.cross(this.array, a.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dist: function (b) {\n        return vec3.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    distance: function (b) {\n        return vec3.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    div: function (b) {\n        vec3.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    divide: function (b) {\n        vec3.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    dot: function (b) {\n        return vec3.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function () {\n        return vec3.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function () {\n        return vec3.length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector3} a\n     * @param  {clay.Vector3} b\n     * @param  {number}  t\n     * @return {clay.Vector3}\n     */\n    lerp: function (a, b, t) {\n        vec3.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    min: function (b) {\n        vec3.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    max: function (b) {\n        vec3.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    mul: function (b) {\n        vec3.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    multiply: function (b) {\n        vec3.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector3}\n     */\n    negate: function () {\n        vec3.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector3}\n     */\n    normalize: function () {\n        vec3.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector3}\n     */\n    random: function (scale) {\n        vec3.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scale: function (s) {\n        vec3.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector3} b\n     * @param  {number}  scale\n     * @return {clay.Vector3}\n     */\n    scaleAndAdd: function (b, s) {\n        vec3.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    sqrDist: function (b) {\n        return vec3.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector3} b\n     * @return {number}\n     */\n    squaredDistance: function (b) {\n        return vec3.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function () {\n        return vec3.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function () {\n        return vec3.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    sub: function (b) {\n        vec3.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector3} b\n     * @return {clay.Vector3}\n     */\n    subtract: function (b) {\n        vec3.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix3 m\n     * @param  {clay.Matrix3} m\n     * @return {clay.Vector3}\n     */\n    transformMat3: function (m) {\n        vec3.transformMat3(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    transformMat4: function (m) {\n        vec3.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector3}\n     */\n    transformQuat: function (q) {\n        vec3.transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Trasnform self into projection space with m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector3}\n     */\n    applyProjection: function (m) {\n        var v = this.array;\n        m = m.array;\n\n        // Perspective projection\n        if (m[15] === 0) {\n            var w = -1 / v[2];\n            v[0] = m[0] * v[0] * w;\n            v[1] = m[5] * v[1] * w;\n            v[2] = (m[10] * v[2] + m[14]) * w;\n        }\n        else {\n            v[0] = m[0] * v[0] + m[12];\n            v[1] = m[5] * v[1] + m[13];\n            v[2] = m[10] * v[2] + m[14];\n        }\n        this._dirty = true;\n\n        return this;\n    },\n\n    eulerFromQuat: function(q, order) {\n        Vector3.eulerFromQuat(this, q, order);\n    },\n\n    eulerFromMat3: function (m, order) {\n        Vector3.eulerFromMat3(this, m, order);\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector3.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector3\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.add = function(out, a, b) {\n    vec3.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector3}\n */\nVector3.set = function(out, x, y, z) {\n    vec3.set(out.array, x, y, z);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.copy = function(out, b) {\n    vec3.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.cross = function(out, a, b) {\n    vec3.cross(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dist = function(a, b) {\n    return vec3.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.distance = Vector3.dist;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.div = function(out, a, b) {\n    vec3.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.divide = Vector3.div;\n\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.dot = function(a, b) {\n    return vec3.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.len = function(b) {\n    return vec3.length(b.array);\n};\n\n// Vector3.length = Vector3.len;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  t\n * @return {clay.Vector3}\n */\nVector3.lerp = function(out, a, b, t) {\n    vec3.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.min = function(out, a, b) {\n    vec3.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.max = function(out, a, b) {\n    vec3.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.mul = function(out, a, b) {\n    vec3.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.multiply = Vector3.mul;\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.negate = function(out, a) {\n    vec3.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @return {clay.Vector3}\n */\nVector3.normalize = function(out, a) {\n    vec3.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.random = function(out, scale) {\n    vec3.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scale = function(out, a, scale) {\n    vec3.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @param  {number}  scale\n * @return {clay.Vector3}\n */\nVector3.scaleAndAdd = function(out, a, b, scale) {\n    vec3.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.sqrDist = function(a, b) {\n    return vec3.sqrDist(a.array, b.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {number}\n */\nVector3.squaredDistance = Vector3.sqrDist;\n/**\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.sqrLen = function(a) {\n    return vec3.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector3} a\n * @return {number}\n */\nVector3.squaredLength = Vector3.sqrLen;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.sub = function(out, a, b) {\n    vec3.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Vector3} b\n * @return {clay.Vector3}\n */\nVector3.subtract = Vector3.sub;\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {Matrix3} m\n * @return {clay.Vector3}\n */\nVector3.transformMat3 = function(out, a, m) {\n    vec3.transformMat3(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector3}\n */\nVector3.transformMat4 = function(out, a, m) {\n    vec3.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @param  {clay.Vector3} out\n * @param  {clay.Vector3} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector3}\n */\nVector3.transformQuat = function(out, a, q) {\n    vec3.transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nfunction clamp(val, min, max) {\n    return val < min ? min : (val > max ? max : val);\n}\nvar atan2 = Math.atan2;\nvar asin = Math.asin;\nvar abs = Math.abs;\n/**\n * Convert quaternion to euler angle\n * Quaternion must be normalized\n * From three.js\n */\nVector3.eulerFromQuat = function (out, q, order) {\n    out._dirty = true;\n    q = q.array;\n\n    var target = out.array;\n    var x = q[0], y = q[1], z = q[2], w = q[3];\n    var x2 = x * x;\n    var y2 = y * y;\n    var z2 = z * z;\n    var w2 = w * w;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[0] = atan2(2 * (x * w - y * z), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (x * z + y * w), - 1, 1));\n            target[2] = atan2(2 * (z * w - x * y), (w2 + x2 - y2 - z2));\n            break;\n        case 'YXZ':\n            target[0] = asin(clamp(2 * (x * w - y * z), - 1, 1));\n            target[1] = atan2(2 * (x * z + y * w), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (x * y + z * w), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(2 * (x * w + y * z), - 1, 1));\n            target[1] = atan2(2 * (y * w - z * x), (w2 - x2 - y2 + z2));\n            target[2] = atan2(2 * (z * w - x * y), (w2 - x2 + y2 - z2));\n            break;\n        case 'ZYX':\n            target[0] = atan2(2 * (x * w + z * y), (w2 - x2 - y2 + z2));\n            target[1] = asin(clamp(2 * (y * w - x * z), - 1, 1));\n            target[2] = atan2(2 * (x * y + z * w), (w2 + x2 - y2 - z2));\n            break;\n        case 'YZX':\n            target[0] = atan2(2 * (x * w - z * y), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (y * w - x * z), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (x * y + z * w), - 1, 1));\n            break;\n        case 'XZY':\n            target[0] = atan2(2 * (x * w + y * z), (w2 - x2 + y2 - z2));\n            target[1] = atan2(2 * (x * z + y * w), (w2 + x2 - y2 - z2));\n            target[2] = asin(clamp(2 * (z * w - x * y), - 1, 1));\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    return out;\n};\n\n/**\n * Convert rotation matrix to euler angle\n * from three.js\n */\nVector3.eulerFromMat3 = function (out, m, order) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.array;\n    var m11 = te[0], m12 = te[3], m13 = te[6];\n    var m21 = te[1], m22 = te[4], m23 = te[7];\n    var m31 = te[2], m32 = te[5], m33 = te[8];\n    var target = out.array;\n\n    var order = (order || 'XYZ').toUpperCase();\n\n    switch (order) {\n        case 'XYZ':\n            target[1] = asin(clamp(m13, -1, 1));\n            if (abs(m13) < 0.99999) {\n                target[0] = atan2(-m23, m33);\n                target[2] = atan2(-m12, m11);\n            }\n            else {\n                target[0] = atan2(m32, m22);\n                target[2] = 0;\n            }\n            break;\n        case 'YXZ':\n            target[0] = asin(-clamp(m23, -1, 1));\n            if (abs(m23) < 0.99999) {\n                target[1] = atan2(m13, m33);\n                target[2] = atan2(m21, m22);\n            }\n            else {\n                target[1] = atan2(-m31, m11);\n                target[2] = 0;\n            }\n            break;\n        case 'ZXY':\n            target[0] = asin(clamp(m32, -1, 1));\n            if (abs(m32) < 0.99999) {\n                target[1] = atan2(-m31, m33);\n                target[2] = atan2(-m12, m22);\n            }\n            else {\n                target[1] = 0;\n                target[2] = atan2(m21, m11);\n            }\n            break;\n        case 'ZYX':\n            target[1] = asin(-clamp(m31, -1, 1));\n            if (abs(m31) < 0.99999) {\n                target[0] = atan2(m32, m33);\n                target[2] = atan2(m21, m11);\n            }\n            else {\n                target[0] = 0;\n                target[2] = atan2(-m12, m22);\n            }\n            break;\n        case 'YZX':\n            target[2] = asin(clamp(m21, -1, 1));\n            if (abs(m21) < 0.99999) {\n                target[0] = atan2(-m23, m22);\n                target[1] = atan2(-m31, m11);\n            }\n            else {\n                target[0] = 0;\n                target[1] = atan2(m13, m33);\n            }\n            break;\n        case 'XZY':\n            target[2] = asin(-clamp(m12, -1, 1));\n            if (abs(m12) < 0.99999) {\n                target[0] = atan2(m32, m22);\n                target[1] = atan2(m13, m11);\n            }\n            else {\n                target[0] = atan2(-m23, m33);\n                target[1] = 0;\n            }\n            break;\n        default:\n            console.warn('Unkown order: ' + order);\n    }\n    out._dirty = true;\n\n    return out;\n};\n\nObject.defineProperties(Vector3, {\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_X: {\n        get: function () {\n            return new Vector3(1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_X: {\n        get: function () {\n            return new Vector3(-1, 0, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Y: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    NEGATIVE_Y: {\n        get: function () {\n            return new Vector3(0, -1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    POSITIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, 1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     */\n    NEGATIVE_Z: {\n        get: function () {\n            return new Vector3(0, 0, -1);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    UP: {\n        get: function () {\n            return new Vector3(0, 1, 0);\n        }\n    },\n    /**\n     * @type {clay.Vector3}\n     * @readOnly\n     * @memberOf clay.Vector3\n     */\n    ZERO: {\n        get: function () {\n            return new Vector3();\n        }\n    }\n});\n\nexport default Vector3;\n","import vec4 from '../glmatrix/vec4';\n\n/**\n * @constructor\n * @alias clay.Vector4\n * @param {number} x\n * @param {number} y\n * @param {number} z\n * @param {number} w\n */\nvar Vector4 = function(x, y, z, w) {\n\n    x = x || 0;\n    y = y || 0;\n    z = z || 0;\n    w = w || 0;\n\n    /**\n     * Storage of Vector4, read and write of x, y, z, w will change the values in array\n     * All methods also operate on the array instead of x, y, z, w components\n     * @name array\n     * @type {Float32Array}\n     * @memberOf clay.Vector4#\n     */\n    this.array = vec4.fromValues(x, y, z, w);\n\n    /**\n     * Dirty flag is used by the Node to determine\n     * if the matrix is updated to latest\n     * @name _dirty\n     * @type {boolean}\n     * @memberOf clay.Vector4#\n     */\n    this._dirty = true;\n};\n\nVector4.prototype = {\n\n    constructor: Vector4,\n\n    /**\n     * Add b to self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    add: function(b) {\n        vec4.add(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y and z components\n     * @param  {number}  x\n     * @param  {number}  y\n     * @param  {number}  z\n     * @param  {number}  w\n     * @return {clay.Vector4}\n     */\n    set: function(x, y, z, w) {\n        this.array[0] = x;\n        this.array[1] = y;\n        this.array[2] = z;\n        this.array[3] = w;\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Set x, y, z and w components from array\n     * @param  {Float32Array|number[]} arr\n     * @return {clay.Vector4}\n     */\n    setArray: function(arr) {\n        this.array[0] = arr[0];\n        this.array[1] = arr[1];\n        this.array[2] = arr[2];\n        this.array[3] = arr[3];\n\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Clone a new Vector4\n     * @return {clay.Vector4}\n     */\n    clone: function() {\n        return new Vector4(this.x, this.y, this.z, this.w);\n    },\n\n    /**\n     * Copy from b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    copy: function(b) {\n        vec4.copy(this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for distance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dist: function(b) {\n        return vec4.dist(this.array, b.array);\n    },\n\n    /**\n     * Distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    distance: function(b) {\n        return vec4.distance(this.array, b.array);\n    },\n\n    /**\n     * Alias for divide\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    div: function(b) {\n        vec4.div(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Divide self by b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    divide: function(b) {\n        vec4.divide(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Dot product of self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    dot: function(b) {\n        return vec4.dot(this.array, b.array);\n    },\n\n    /**\n     * Alias of length\n     * @return {number}\n     */\n    len: function() {\n        return vec4.len(this.array);\n    },\n\n    /**\n     * Calculate the length\n     * @return {number}\n     */\n    length: function() {\n        return vec4.length(this.array);\n    },\n    /**\n     * Linear interpolation between a and b\n     * @param  {clay.Vector4} a\n     * @param  {clay.Vector4} b\n     * @param  {number}  t\n     * @return {clay.Vector4}\n     */\n    lerp: function(a, b, t) {\n        vec4.lerp(this.array, a.array, b.array, t);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Minimum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    min: function(b) {\n        vec4.min(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Maximum of self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    max: function(b) {\n        vec4.max(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for multiply\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    mul: function(b) {\n        vec4.mul(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Mutiply self and b\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    multiply: function(b) {\n        vec4.multiply(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Negate self\n     * @return {clay.Vector4}\n     */\n    negate: function() {\n        vec4.negate(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Normalize self\n     * @return {clay.Vector4}\n     */\n    normalize: function() {\n        vec4.normalize(this.array, this.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Generate random x, y, z, w components with a given scale\n     * @param  {number} scale\n     * @return {clay.Vector4}\n     */\n    random: function(scale) {\n        vec4.random(this.array, scale);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Scale self\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scale: function(s) {\n        vec4.scale(this.array, this.array, s);\n        this._dirty = true;\n        return this;\n    },\n    /**\n     * Scale b and add to self\n     * @param  {clay.Vector4} b\n     * @param  {number}  scale\n     * @return {clay.Vector4}\n     */\n    scaleAndAdd: function(b, s) {\n        vec4.scaleAndAdd(this.array, this.array, b.array, s);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Alias for squaredDistance\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    sqrDist: function(b) {\n        return vec4.sqrDist(this.array, b.array);\n    },\n\n    /**\n     * Squared distance between self and b\n     * @param  {clay.Vector4} b\n     * @return {number}\n     */\n    squaredDistance: function(b) {\n        return vec4.squaredDistance(this.array, b.array);\n    },\n\n    /**\n     * Alias for squaredLength\n     * @return {number}\n     */\n    sqrLen: function() {\n        return vec4.sqrLen(this.array);\n    },\n\n    /**\n     * Squared length of self\n     * @return {number}\n     */\n    squaredLength: function() {\n        return vec4.squaredLength(this.array);\n    },\n\n    /**\n     * Alias for subtract\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    sub: function(b) {\n        vec4.sub(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Subtract b from self\n     * @param  {clay.Vector4} b\n     * @return {clay.Vector4}\n     */\n    subtract: function(b) {\n        vec4.subtract(this.array, this.array, b.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Matrix4 m\n     * @param  {clay.Matrix4} m\n     * @return {clay.Vector4}\n     */\n    transformMat4: function(m) {\n        vec4.transformMat4(this.array, this.array, m.array);\n        this._dirty = true;\n        return this;\n    },\n\n    /**\n     * Transform self with a Quaternion q\n     * @param  {clay.Quaternion} q\n     * @return {clay.Vector4}\n     */\n    transformQuat: function(q) {\n        vec4.transformQuat(this.array, this.array, q.array);\n        this._dirty = true;\n        return this;\n    },\n\n    toString: function() {\n        return '[' + Array.prototype.join.call(this.array, ',') + ']';\n    },\n\n    toArray: function () {\n        return Array.prototype.slice.call(this.array);\n    }\n};\n\nvar defineProperty = Object.defineProperty;\n// Getter and Setter\nif (defineProperty) {\n\n    var proto = Vector4.prototype;\n    /**\n     * @name x\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'x', {\n        get: function () {\n            return this.array[0];\n        },\n        set: function (value) {\n            this.array[0] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name y\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'y', {\n        get: function () {\n            return this.array[1];\n        },\n        set: function (value) {\n            this.array[1] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name z\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'z', {\n        get: function () {\n            return this.array[2];\n        },\n        set: function (value) {\n            this.array[2] = value;\n            this._dirty = true;\n        }\n    });\n\n    /**\n     * @name w\n     * @type {number}\n     * @memberOf clay.Vector4\n     * @instance\n     */\n    defineProperty(proto, 'w', {\n        get: function () {\n            return this.array[3];\n        },\n        set: function (value) {\n            this.array[3] = value;\n            this._dirty = true;\n        }\n    });\n}\n\n// Supply methods that are not in place\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.add = function(out, a, b) {\n    vec4.add(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  x\n * @param  {number}  y\n * @param  {number}  z\n * @return {clay.Vector4}\n */\nVector4.set = function(out, x, y, z, w) {\n    vec4.set(out.array, x, y, z, w);\n    out._dirty = true;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.copy = function(out, b) {\n    vec4.copy(out.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dist = function(a, b) {\n    return vec4.distance(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.distance = Vector4.dist;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.div = function(out, a, b) {\n    vec4.divide(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.divide = Vector4.div;\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.dot = function(a, b) {\n    return vec4.dot(a.array, b.array);\n};\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.len = function(b) {\n    return vec4.length(b.array);\n};\n\n// Vector4.length = Vector4.len;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  t\n * @return {clay.Vector4}\n */\nVector4.lerp = function(out, a, b, t) {\n    vec4.lerp(out.array, a.array, b.array, t);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.min = function(out, a, b) {\n    vec4.min(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.max = function(out, a, b) {\n    vec4.max(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.mul = function(out, a, b) {\n    vec4.multiply(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.multiply = Vector4.mul;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.negate = function(out, a) {\n    vec4.negate(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @return {clay.Vector4}\n */\nVector4.normalize = function(out, a) {\n    vec4.normalize(out.array, a.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.random = function(out, scale) {\n    vec4.random(out.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scale = function(out, a, scale) {\n    vec4.scale(out.array, a.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @param  {number}  scale\n * @return {clay.Vector4}\n */\nVector4.scaleAndAdd = function(out, a, b, scale) {\n    vec4.scaleAndAdd(out.array, a.array, b.array, scale);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.sqrDist = function(a, b) {\n    return vec4.sqrDist(a.array, b.array);\n};\n\n/**\n * @function\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {number}\n */\nVector4.squaredDistance = Vector4.sqrDist;\n\n/**\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.sqrLen = function(a) {\n    return vec4.sqrLen(a.array);\n};\n/**\n * @function\n * @param  {clay.Vector4} a\n * @return {number}\n */\nVector4.squaredLength = Vector4.sqrLen;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.sub = function(out, a, b) {\n    vec4.subtract(out.array, a.array, b.array);\n    out._dirty = true;\n    return out;\n};\n/**\n * @function\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Vector4} b\n * @return {clay.Vector4}\n */\nVector4.subtract = Vector4.sub;\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Matrix4} m\n * @return {clay.Vector4}\n */\nVector4.transformMat4 = function(out, a, m) {\n    vec4.transformMat4(out.array, a.array, m.array);\n    out._dirty = true;\n    return out;\n};\n\n/**\n * @param  {clay.Vector4} out\n * @param  {clay.Vector4} a\n * @param  {clay.Quaternion} q\n * @return {clay.Vector4}\n */\nVector4.transformQuat = function(out, a, q) {\n    vec4.transformQuat(out.array, a.array, q.array);\n    out._dirty = true;\n    return out;\n};\n\nexport default Vector4;\n","var mathUtil = {};\n\nmathUtil.isPowerOfTwo = function (value) {\n    return (value & (value - 1)) === 0;\n};\n\nmathUtil.nextPowerOfTwo = function (value) {\n    value --;\n    value |= value >> 1;\n    value |= value >> 2;\n    value |= value >> 4;\n    value |= value >> 8;\n    value |= value >> 16;\n    value ++;\n\n    return value;\n};\n\nmathUtil.nearestPowerOfTwo = function (value) {\n    return Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n};\n\nexport default mathUtil;\n"],"names":["Renderable","Node","extend","material","geometry","mode","glenum","TRIANGLES","_renderInfo","__program","lightGroup","renderOrder","culling","cullFace","BACK","frontFace","CCW","frustumCulling","receiveShadow","castShadow","ignorePicking","ignorePreZ","ignoreGBuffer","isRenderable","this","shader","invisible","vertexCount","beforeRender","_gl","afterRender","renderStat","getBoundingBox","filter","out","prototype","call","boundingBox","union","clone","properties","renderable","i","length","name","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLE_STRIP","TRIANGLE_FAN","FRONT","FRONT_AND_BACK","CW","EXTENSION_LIST","PARAMETER_NAMES","GLInfo","extensions","parameters","extName","createExtension","getParameter","getExtension","ext","SHADER_STATE_TO_ENABLE","SHADER_STATE_KEEP_ENABLE","SHADER_STATE_PENDING","enabledAttributeList","addLineNumbers","string","chunks","split","il","join","checkShaderErrorMsg","shaderString","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","tmpFloat32Array16","vendor","Float32Array","GLProgram","Base","uniformSemantics","attributes","_locations","_textureSlot","_program","bind","renderer","gl","useProgram","hasUniform","symbol","location","undefined","useTextureSlot","texture","slot","activeTexture","TEXTURE0","unbind","currentTextureSlot","resetTextureSlot","takeCurrentTextureSlot","textureSlot","setUniform","type","value","locationMap","uniformMatrix4fv","uniform2i","uniform2f","uniform3i","uniform3f","uniform4i","uniform4f","uniform1i","uniform1f","uniform1fv","uniform1iv","uniform2iv","uniform2fv","uniform3iv","uniform3fv","uniform4iv","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","Array","isArray","array","cursor","item","j","setUniformOfSemantic","semantic","val","semanticInfo","enableAttributes","attribList","vao","enabledAttributeListInContext","program","__enabledAttributeList","__uid__","locationList","getAttribLocation","enableVertexAttribArray","disableVertexAttribArray","buildProgram","vertexShaderCode","fragmentShaderCode","vertexShader","createShader","VERTEX_SHADER","createProgram","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","msg","attachShader","attributeSemantics","bindAttribLocation","keys","Object","linkProgram","deleteShader","vertexCode","fragmentCode","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniforms","uniformSymbol","getUniformLocation","loopRegex","unrollLoop","shaderStr","defines","lightsNumbers","replace","match","start","end","snippet","unroll","isNaN","lightNumberDefines","idx","parseInt","toFixed","lightType","getDefineCode","enabledTextures","defineStr","count","push","toUpperCase","toString","getExtensionCode","exts","extensionStr","getPrecisionCode","precision","ProgramManager","_renderer","_cache","getProgram","scene","cache","isSkinnedMesh","isInstancedMesh","key","shaderID","getProgramKey","joints","getLightsNumbers","getEnabledTextures","extraDefineCode","skinDefines","SKINNING","JOINT_COUNT","getMaxJointNumber","USE_SKIN_MATRICES_TEXTURE","vertexDefineStr","vertexDefines","fragmentDefineStr","fragmentDefines","vertex","getGLExtension","indexOf","fragment","finalVertexCode","finalFragmentCode","errorMsg","__error","Shader","prezEssl","mat4Create","mat4","create","errorShader","defaultGetMaterial","defaultGetUniform","defaultIsMaterialChanged","renderabled","prevRenderable","prevMaterial","defaultIfRender","noop","attributeBufferTypeMap","float","FLOAT","byte","BYTE","ubyte","UNSIGNED_BYTE","short","SHORT","ushort","UNSIGNED_SHORT","VertexArrayObject","availableAttributes","availableAttributeSymbols","indicesBuffer","PlaceHolderTexture","blankCanvas","webglTexture","createCanvas","width","height","getContext","firstBind","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","Renderer","canvas","_width","_height","devicePixelRatio","window","clearColor","clearBit","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","throwError","viewport","maxJointNumber","__currentFrameBuffer","_viewportStack","_clearStack","_sceneRendering","opts","Error","_glinfo","targetRenderer","console","error","resize","e","_programMgr","_placeholderTexture","dpr","style","setViewport","getWidth","getHeight","getViewportAspect","setDevicePixelRatio","getDevicePixelRatio","getGLParameter","x","y","obj","saveViewport","restoreViewport","pop","saveClear","restoreClear","opt","bindSceneRendering","render","camera","notUpdateScene","preZ","colorMask","depthMask","needsScissor","viewportDpr","enable","SCISSOR_TEST","scissor","clear","disable","update","updateLights","getMainCamera","renderList","updateRenderList","opaqueList","opaque","transparentList","transparent","sceneMaterial","trigger","renderPreZ","depthFunc","LEQUAL","LESS","worldViewMat","posViewSpace","vec3","multiplyAffine","viewMatrix","worldTransform","transformMat4","position","__depth","renderPass","getMaterial","sortCompare","opaqueSortCompare","transparentSortCompare","renderMaterial","validateProgram","updatePrograms","list","passConfig","prevJointsLen","jointsLen","getUniform","isMaterialChanged","ifRenderObject","ifRender","sort","vDpr","viewportUniform","windowDpr","windowSizeUniform","getTextureWidth","getTextureHeight","viewportSizeUniform","time","Date","now","copy","matrices","VIEW","PROJECTION","projectionMatrix","VIEWINVERSE","identity","multiply","VIEWPROJECTION","invert","PROJECTIONINVERSE","VIEWPROJECTIONINVERSE","prevProgram","depthTest","drawID","currentVAO","materialTakesTextureSlot","vaoExt","worldM","isSceneNode","offsetMatrix","IDENTITY","currentDrawID","drawIDChanged","bindVertexArrayOES","WORLD","WORLDVIEWPROJECTION","WORLDVIEW","matrixSemantics","WORLDINVERSE","WORLDINVERSETRANSPOSE","WORLDVIEWINVERSE","WORLDVIEWINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE","programChanged","near","far","setLightUniforms","DEPTH_TEST","BLEND","blend","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","_bindMaterial","matrixSemanticKeys","k","matrix","isTranspose","matrixNoTranspose","semanticNoTranspose","transpose","CULL_FACE","_updateSkeleton","_bindVAO","_renderObject","object","skeleton","skinMatricesTexture","getSubSkinMatricesTexture","skinMatricesArray","getSubSkinMatrices","glDrawMode","isInstanced","instancedAttrLocations","_bindInstancedAttributes","uintExt","useUintExt","indices","Uint32Array","indicesType","UNSIGNED_INT","drawElementsInstancedANGLE","getInstanceCount","drawElements","drawArraysInstancedANGLE","drawArrays","warn","instancedBuffers","getInstancedAttributesBuffers","locations","bufferObj","glType","bindBuffer","ARRAY_BUFFER","buffer","vertexAttribPointer","size","vertexAttribDivisorANGLE","divisor","getUniformValue","sameProgram","enabledUniforms","getEnabledUniforms","textureUniforms","getTextureUniforms","placeholderTexture","u","uniformValue","uniformType","__slot","uniform","isTexture","prevUniformValue","res","arr","newSlot","isStatic","dynamic","vaoId","__vaoCache","getBufferChunks","chunk","attributeBuffers","a","attributeBufferInfo","needsBindAttributes","createVertexArrayOES","isUseIndices","ELEMENT_ARRAY_BUFFER","preZPassMaterial","_prezMaterial","Material","source","matA","matB","get","depthMaterial","isDefined","alphaCutoff","disposeScene","disposeNode","dispose","root","disposeGeometry","disposeTexture","getParent","remove","disposedMap","traverse","node","uniformName","disposeFrameBuffer","frameBuffer","screenToNDC","Vector2","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","programKeyCache","lightNumbers","lightTypes","id","util","genGUID","RenderList","_opaqueCount","_transparentCount","startCount","add","isTransparent","endCount","Scene","lights","viewBoundingBoxLastFrame","BoundingBox","shadowUniforms","_cameraList","_lightUniforms","_previousLightNumber","_lightNumber","_lightProgramKeys","_nodeRepository","_renderLists","LRUCache","_scene","addToScene","Camera","Light","removeFromScene","splice","getNode","setMainCamera","unshift","getLights","lightNumber","light","group","groupId","_updateLightUniforms","cloneNode","newNode","clonedNodesMap","buildNodesMap","sNode","tNode","_children","sChild","tChild","newChild","updateSceneBoundingBox","put","min","set","Infinity","max","sceneMaterialTransparent","_doUpdateRenderList","getRenderList","parent","child","isFrustumCulled","cullingBoundingBox","cullingMatrix","Matrix4","geoBBox","transformFrom","intersectBoundingBox","frustum","applyProjection","lightSortFunc","lightUniforms","uniformTemplates","uniformTpl","lu","getLightGroups","lightGroups","getNumberChangedLightGroups","isLightNumberChanged","prevLightNumber","currentLightNumber","setUniforms","texSlots","_opaqueList","_transparentList","b","uniformRegex","attributeRegex","defineRegex","uniformTypeMap","createZeroArray","len","uniformValueConstructor","attributeSizeMap","shaderIDCache","shaderCodeCache","getShaderID","removeComment","code","logSyntaxError","parseDeclarations","line","speratorsRegexp","tokens","newTokens","charAt","slice","currentDeclaration","TYPE_SYMBOL","TYPE_ASSIGN","TYPE_VEC","TYPE_ARR","TYPE_SEMANTIC","TYPE_NORMAL","opType","declarations","declarationValue","addSymbol","arrResult","arraySize","token","ignore","parseFloat","_shaderID","_vertexCode","parseImport","_fragmentCode","textures","_parseAttributes","_parseUniforms","_parseDefines","constructor","createUniforms","_parseImport","_addSemanticUniform","_addMaterialUniform","defaultValueFunc","materialUniforms","self","shaderType","makeDefaultValueFunc","_uniformParser","str","content","declaredUniforms","uniformMainStr","uniformInfo","tmpStr","_uniformList","_attributeParser","declaredAttributes","attributeMainStr","_defineParser","trim","defineProperty","importRegex","importSymbol","importName","exportRegex","exportSymbol","exportName","parts","codes","Texture","format","wrapS","REPEAT","wrapT","minFilter","LINEAR_MIPMAP_LINEAR","magFilter","LINEAR","useMipmap","anisotropic","flipY","sRGB","unpackAlignment","premultiplyAlpha","NPOT","__used","Cache","getWebGLTexture","use","miss","isDirty","fresh","dirty","dirtyAll","updateCommon","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","DEPTH_COMPONENT","sRGBExt","SRGB","RGB","SRGB_ALPHA","isPowerOfTwo","getAvailableWrapS","CLAMP_TO_EDGE","getAvailableWrapT","getAvailableMinFilter","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","NEAREST","LINEAR_MIPMAP_NEAREST","getAvailableMagFilter","nextHighestPowerOfTwo","deleteTexture","deleteContext","INT","HALF_FLOAT","UNSIGNED_INT_24_8_WEBGL","DEPTH_STENCIL","ALPHA","LUMINANCE","LUMINANCE_ALPHA","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","MIRRORED_REPEAT","mathUtil","nearestPowerOfTwo","Math","pow","round","log","LN2","convertTextureToPowerOfTwo","document","createElement","ctx","drawImage","image","Texture2D","pixels","mipmaps","convertToPOT","textureType","glFormat","texParameteri","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","anisotropicExt","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","halfFloatExt","mipmap","_updateTextureData","generateMipmap","data","level","imgData","_potCanvas","compressedTexImage2D","load","src","crossOrigin","createImage","onload","onerror","targetList","TextureCube","px","nx","py","ny","pz","nz","TEXTURE_CUBE_MAP","target","img","TEXTURE_CUBE_MAP_POSITIVE_X","isImageRenderable","imageList","loading","each","Orthographic","left","right","top","bottom","updateProjectionMatrix","ortho","decomposeProjectionMatrix","m","Perspective","fov","aspect","rad","PI","perspective","atan","vertexGlsl","planeGeo","Plane","mesh","Mesh","OrthoCamera","Pass","outputs","blendWithPrevious","clearDepth","enableTexturesAll","attachOutput","attachment","COLOR_ATTACHMENT0","detachOutput","attach","bufs","drawBuffersEXT","cc","renderQuad","TexturePool","_pool","_allocatedTextures","generateKey","hasOwnProperty","defaultParams","defaultParamPropList","defaultsWithPropList","fallBack","IPOT","CompositorNode","inputLinks","outputLinks","_prevOutputTextures","_outputTextures","_outputReferences","_rendering","_rendered","_compositor","updateParameter","outputName","outputInfo","parametersCopy","_parametersCopy","Function","setParameter","setParameters","getOutput","outputLastFrame","allocateTexture","removeReference","keepLastFrame","releaseTexture","link","inputPinName","fromNode","fromPinName","pin","pass","enableTexture","updateReference","inputName","beforeFrame","afterFrame","Graph","nodes","_dirty","addNode","removeNode","getNodeByName","inputs","isUniformEnabled","fromPinInfo","fromPin","findPin","input","GraphNode","tmp","inputPin","Compositor","_outputs","_texturePool","_frameBuffer","FrameBuffer","depthBuffer","getFrameBuffer","SceneNode","autoUpdateScene","renderInfo","TextureNode","color","FilterNode","inputTexture","attachedTextures","updateMipmap","ceil","define","undefine","disableTexturesAll","registerBuiltinCompositor","shaderSourceReg","createCompositor","json","compositor","lib","afterLoad","shaderLib","textureLib","nodeInfo","createNode","paramInfo","convertParameter","loadTextures","shaderExp","exec","shaders","substr","CompoSceneNode","CompoTextureNode","CompoFilterNode","on","createSizeSetHandler","tryConvertExpr","defaultWidthFunc","defaultHeightFunc","param","forEach","sizeScale","scale","createSizeParser","callback","cbd","textureRootPath","textureInfo","path","map","relative2absolute","once","exprFunc","result","exprRes","func","derive","makeDefaultOpt","initialize","proto","propList","_super","propName","sub","options","apply","arguments","extendWithPropList","initializers","__initializers__","__super__","Ctor","extendMixin","notifierMixin","DIRTY_PREFIX","_contextId","_caches","_context","contextId","documentSchema","caches","field","freshAll","context","delete","clearAll","eachContext","cb","LinkedList","head","tail","_length","insert","entry","Entry","insertEntry","insertAt","next","prev","insertBeforeEntry","removeAt","curr","getHead","getTail","getAt","isEmpty","haveContext","LRU","maxSize","_list","_map","_maxSize","setMaxSize","leastUsedEntry","colorUtil","kCSSColorTable","clampCssByte","clampCssAngle","clampCssFloat","f","parseCssInt","parseCssFloat","cssHueToRgb","m1","m2","h","lerpNumber","p","setRgba","r","g","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","hsla2rgba","hsla","rgba","s","l","rgba2hsla","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","parse","cached","toLowerCase","op","ep","fname","params","iv","parseToFloat","lift","colorArr","stringify","toHex","fastLerp","normalizedValue","colors","leftIndex","floor","rightIndex","leftColor","rightColor","dv","fastMapToColor","lerp","fullOutput","mapToColor","modifyHSL","modifyAlpha","arrColor","ZERO","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","BLEND_EQUATION","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","BLEND_DST_RGB","BLEND_SRC_RGB","BLEND_DST_ALPHA","BLEND_SRC_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND_COLOR","ARRAY_BUFFER_BINDING","ELEMENT_ARRAY_BUFFER_BINDING","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","BUFFER_SIZE","BUFFER_USAGE","CURRENT_VERTEX_ATTRIB","DITHER","STENCIL_TEST","POLYGON_OFFSET_FILL","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","NO_ERROR","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","LINE_WIDTH","ALIASED_POINT_SIZE_RANGE","ALIASED_LINE_WIDTH_RANGE","CULL_FACE_MODE","FRONT_FACE","DEPTH_RANGE","DEPTH_WRITEMASK","DEPTH_CLEAR_VALUE","DEPTH_FUNC","STENCIL_CLEAR_VALUE","STENCIL_FUNC","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_WRITEMASK","STENCIL_BACK_FUNC","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_BACK_WRITEMASK","VIEWPORT","SCISSOR_BOX","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","PACK_ALIGNMENT","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","SUBPIXEL_BITS","RED_BITS","GREEN_BITS","BLUE_BITS","ALPHA_BITS","DEPTH_BITS","STENCIL_BITS","POLYGON_OFFSET_UNITS","POLYGON_OFFSET_FACTOR","TEXTURE_BINDING_2D","SAMPLE_BUFFERS","SAMPLES","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","COMPRESSED_TEXTURE_FORMATS","DONT_CARE","FASTEST","NICEST","GENERATE_MIPMAP_HINT","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_VARYING_VECTORS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_IMAGE_UNITS","MAX_FRAGMENT_UNIFORM_VECTORS","SHADER_TYPE","DELETE_STATUS","VALIDATE_STATUS","ATTACHED_SHADERS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","SHADING_LANGUAGE_VERSION","CURRENT_PROGRAM","NEVER","EQUAL","GREATER","NOTEQUAL","GEQUAL","ALWAYS","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","VENDOR","RENDERER","VERSION","TEXTURE","TEXTURE_BINDING_CUBE_MAP","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","MAX_CUBE_MAP_TEXTURE_SIZE","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","ACTIVE_TEXTURE","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","VERTEX_ATTRIB_ARRAY_POINTER","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","LOW_FLOAT","MEDIUM_FLOAT","HIGH_FLOAT","LOW_INT","MEDIUM_INT","HIGH_INT","FRAMEBUFFER","RENDERBUFFER","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","RENDERBUFFER_WIDTH","RENDERBUFFER_HEIGHT","RENDERBUFFER_INTERNAL_FORMAT","RENDERBUFFER_RED_SIZE","RENDERBUFFER_GREEN_SIZE","RENDERBUFFER_BLUE_SIZE","RENDERBUFFER_ALPHA_SIZE","RENDERBUFFER_DEPTH_SIZE","RENDERBUFFER_STENCIL_SIZE","FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","NONE","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_BINDING","RENDERBUFFER_BINDING","MAX_RENDERBUFFER_SIZE","INVALID_FRAMEBUFFER_OPERATION","CONTEXT_LOST_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","Handler","action","notifier","__handlers__","hdls","args","handlers","has","handler","wrapper","off","before","after","success","retains","guid","ArrayProto","nativeForEach","basePath","pathParts","basePathParts","shift","defaults","iterator","isObject","isArrayLike","ret","xhr","XMLHttpRequest","open","url","responseType","onprogress","lengthComputable","percent","loaded","total","status","response","send","supportWebGL","Int8Array","Uint8Array","Uint16Array","Int16Array","Float64Array","global","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","Image","request","addEventListener","dom","useCapture","removeEventListener","vec2","vec4","mat2","mat2d","mat3","quat","planeMatrix","Cube","Geometry","widthSegments","heightSegments","depthSegments","inside","build","planes","createPlane","attrList","vertexNumber","faceNumber","pos","init","faceOffset","vertexOffset","plane","attrName","attrArray","attrSize","isNormal","translate","Vector3","POSITIVE_X","rotateY","NEGATIVE_X","POSITIVE_Y","rotateX","NEGATIVE_Y","POSITIVE_Z","NEGATIVE_Z","applyTransform","positions","texcoords","normals","faces","t","fromArray","texcoord0","normal","initIndicesFromArray","Sphere","phiStart","phiLength","thetaStart","thetaLength","radius","positionAttr","texcoordAttr","normalAttr","z","v","i1","i2","i3","i4","IndicesCtor","uv","offset","divider","cos","sin","n","GLMAT_EPSILON","GLMAT_ARRAY_TYPE","GLMAT_RANDOM","random","a1","a0","a2","a3","det","b0","b1","b2","b3","mul","rotate","c","v0","v1","frob","sqrt","LDU","D","U","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","a01","a02","a12","a00","a10","a11","a20","a21","a22","b01","b11","b21","b00","b02","b10","b12","b20","b22","fromMat2d","fromQuat","q","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","mulAffine","axis","abs","rotateZ","fromRotationTranslation","xy","xz","yz","rl","tb","nf","fovy","tan","lr","bt","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","rotationTo","tmpvec3","xUnitVec3","fromValues","yUnitVec3","dot","cross","normalize","setAxisAngle","setAxes","matr","view","fromMat3","ax","ay","az","aw","bx","by","bz","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","acos","invDot","conjugate","squaredLength","sqrLen","fRoot","fTrace","subtract","divide","div","scaleAndAdd","distance","dist","squaredDistance","sqrDist","negate","inverse","transformMat2","transformMat2d","transformMat3","vec","stride","fn","arg","zScale","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","angle","tempA","tempB","cosine","AmbientLight","ambientLightColor","instance","intensity","AmbientCubemapLight","cubemap","_normalDistribution","_brdfLookup","prefilter","cubemapUtil","generateNormalDistribution","integrateBRDF","__prefiltered","prefilterEnvironmentMap","encodeRGBM","environmentMap","getBRDFLookup","ambientCubemapLightColor","ambientCubemapLightCubemap","ambientCubemapLightBRDFLookup","AmbientSHLight","coefficients","_coefficientsTmpArr","ambientSHLightColor","ambientSHLightCoefficients","coefficientsTmpArr","DirectionalLight","shadowBias","shadowSlopeScale","shadowCascade","cascadeSplitLogFactor","directionalLightDirection","__dir","directionalLightColor","PointLight","range","pointLightPosition","getWorldPosition","pointLightRange","pointLightColor","SpotLight","umbraAngle","penumbraAngle","falloffFactor","spotLightPosition","spotLightRange","spotLightUmbraAngleCosine","spotLightPenumbraAngleCosine","spotLightFalloffFactor","spotLightDirection","spotLightColor","vec3Set","vec3Copy","vertices","updateFromVertices","minArr","maxArr","bbox","intersection","_min","_max","_min2","_max2","containBoundingBox","containPoint","_p","isFinite","xa","xb","ya","yb","za","zb","v10","v11","v12","v20","v21","v22","v30","v31","v32","updateVertices","vec3TranformMat4","mathMin","mathMax","Frustum","setFromProjection","m0","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","zNear","zFar","farY","nearY","getTransformedBoundingBox","tmpVec3","Matrix2","setArray","adjoint","determinant","mulLeft","multiplyLeft","toArray","Matrix2d","Matrix3","fromMat4","_axisX","_axisY","_axisZ","m2d","decomposeMatrix","rotation","el","sx","sy","sz","distanceToPoint","point","projectPoint","d","invLen","intersectFrustum","coords","onPlane","intersectLine","rd","d0","d1","pn","ro","inverseTranspose","normalv4","pointv4","Quaternion","fromEuler","order","c1","c2","c3","s1","s2","s3","EPSILON","Ray","origin","direction","intersectPlane","mirrorAgainstPlane","lenSquared","intersectSphere","d2","r2","t0","t1","tmin","tmax","tymin","tymax","tzmin","tzmax","dir","invdirx","invdiry","invdirz","intersectTriangle","eBA","eCA","AO","vCross","singleSided","barycenteric","ray","eulerFromQuat","eulerFromMat3","clamp","atan2","asin","w2","te","m21","m22","m23","m31","m32","m33","defineProperties","UP","Vector4"],"sourceRoot":""}