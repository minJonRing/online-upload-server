{"version":3,"file":"static/client/js/chunk-vendors-8b67eea0.1a1c7336.js","mappings":"6HACIA,EAAY,CAAC,QAAS,SAAU,QAAS,YAAa,UAAW,UAAW,YAAa,aAE7F,SAASC,EAAsBC,EAAQC,GACrC,GAAID,GAAUA,EAAOC,KAAaD,EAAOC,GAASC,QAAUF,EAAOC,GAASE,UAAW,CACrF,IAAIC,EAAYJ,EAAOC,GAASC,OAC5BG,EAAcL,EAAOC,GAASE,SAE9BC,IACFJ,EAAOC,GAAWG,GAGhBC,IACFL,EAAOG,SAAWH,EAAOG,UAAY,CAAC,EACtCH,EAAOG,SAASF,GAAWI,EAE/B,CACF,CAEA,SAASC,EAA6BN,GACpCD,EAAsBC,EAAQ,aAC9BD,EAAsBC,EAAQ,aAC9BD,EAAsBC,EAAQ,aAC9BD,EAAsBC,EAAQ,QAChC,CAEA,SAASO,EAAsBC,GACxBA,IAICA,aAAmBC,QACvBD,EAAU,CAACA,IAGbE,EAAAA,GAAAA,KAAkBF,GAAS,SAAUG,GACnC,GAAIA,EAAQC,UAAW,CACrB,IAAIC,EAAWF,EAAQC,UACvBE,OAAOC,OAAOF,EAAUA,EAASG,WACjCH,EAASG,UAAY,IACvB,CACF,IACF,CAEe,SAAS,EAAChB,GACvBU,EAAAA,GAAAA,KAAkBV,EAAOiB,QAAQ,SAAUA,GACrCP,EAAAA,GAAAA,QAAqBZ,EAAWmB,EAAOC,OAAS,IAClDZ,EAA6BW,GAEG,WAA5BA,EAAOE,mBACTF,EAAOE,iBAAmB,WAC1BnB,EAAOoB,SAAWpB,EAAOqB,QAG/B,IACAd,EAAsBP,EAAOsB,SAC7Bf,EAAsBP,EAAOuB,SAC7BhB,EAAsBP,EAAOwB,SAC7BjB,EAAsBP,EAAOyB,QAC7B1B,EAAsBC,EAAO0B,MAC/B,CC5BA,SAASC,EAAUC,GACjBC,KAAKC,QAAU,CAAC,EAChBD,KAAKE,IAAMH,CACb,CAEAD,EAAUK,UAAUC,OAAS,SAAUC,EAASC,GAC9C,IAAIC,EAAOP,KACPD,EAAKO,EAAIE,QAEb,GAAKT,EAAGU,YAAeV,EAAGW,YAA1B,CA4DA,IAAK,IAAIC,KAAUX,KAAKC,QACtBD,KAAKC,QAAQU,GAAQC,iBAGvBP,EAAQQ,eAAc,SAAUC,EAAeC,GAC7C,GAAsB,WAAlBD,EAA4B,CAC9B,IAAIE,EAAOV,EAAIW,wBAAwBF,GACnCG,EAAWH,EAAezB,iBAE9B,GAAI0B,EAAKG,SAAU,CAGjB,GAAID,EAAU,CACZ,IAAKA,EAASE,OAEZ,YADAC,QAAQC,MAAM,sDAAyDP,EAAeQ,IAIxFH,EAASF,EAASE,MACpB,KAAO,CACL,IAAKL,EAAeK,OAElB,YADAC,QAAQC,MAAM,kCAAqCP,EAAeQ,IAIpEH,EAASF,EAASE,MACpB,CAEA,IAAIA,EAASF,EAASE,OAClBI,EAAUC,EAAWV,GACzBS,EAAQE,QAAQN,GAChBJ,EAAKW,aAAeX,EAAKW,YAAYZ,EAAgBV,EAASC,EAAKkB,GACnEI,EAAUZ,EAAKa,QAASd,EAAee,IAAI,UAC7C,CACF,CACF,IACAzB,EAAQ0B,YAAW,SAAUC,GAC3B,IAAIC,EAAY3B,EAAI4B,qBAAqBF,GACrCd,EAAWc,EAAY1C,iBAE3B,GAAI2C,EAAUd,SAAU,CACtB,GAAID,IAAaA,EAASE,SAAWa,EAAUb,OAE7C,YADAC,QAAQC,MAAM,+BAAkCW,EAAUV,IAI5D,IAAIH,EAASF,GAAYA,EAASE,QAAUa,EAAUb,OAElDI,EAAUC,EAAWO,GACzBR,EAAQE,QAAQN,GAChBa,EAAUN,aAAeM,EAAUN,YAAYK,EAAa3B,EAASC,EAAKkB,GAC1EI,EAAUK,EAAUJ,QAASG,EAAYF,IAAI,UAC/C,CACF,GA9GA,MAFET,QAAQc,KAAK,8BAIf,SAASV,EAAWW,GAGlB,IAAIzB,EADJZ,EAAGsC,mBAAmB,GAIpB1B,GADEyB,EAAM9C,kBAAoB8C,EAAM9C,iBAAiB8C,MAC1CA,EAAMN,IAAI,WAKrB,IAAIQ,EAAS/B,EAAKN,QACduB,EAAUc,EAAO3B,GAErB,IAAKa,EAAS,CAGZ,GAFAA,EAAUc,EAAO3B,GAAU,IAAI4B,EAAAA,EAAQ,MAAQ5B,EAAQZ,GAEnDA,EAAGyC,QAAQC,iBAAkB,CAC/BjB,EAAQkB,SAAU,EAGlB,IAAIC,EAAM,IAAI9D,EAAAA,GAAAA,GAAsB,CAClC+D,EAAG,IACHC,MAAO,CACLC,MAAOtB,EAAQuB,SAASC,QAE1BC,QAAQ,IAEVzB,EAAQ0B,YAAcP,EACtB5C,EAAGoD,IAAIR,EACT,CAEA5C,EAAGyC,QAAQY,YAAYzC,EAAQa,EACjC,CASA,OAPIA,EAAQ0B,aACV1B,EAAQ0B,YAAYG,SAAS,CAC3BC,MAAO9B,EAAQuB,SAAStC,WACxB8C,OAAQ/B,EAAQuB,SAASrC,cAItBc,CACT,CAEA,SAASI,EAAUC,EAASoB,GACtBpB,GACFA,EAAQ2B,UAAS,SAAUC,GACrBA,EAAKC,cAAgBD,EAAKC,iBAC5BD,EAAKE,cAAuC,MAAvBF,EAAKG,eAAyBH,EAAKG,eAAiBX,EAE7E,GAEJ,CAwDF,EAIApE,EAAAA,IAAyB,SAAUgF,GACjC,IAAI9D,EAAK8D,EAAMrD,QACXsD,EAAa/D,EAAGyC,QAAQuB,QAE5BhE,EAAGyC,QAAQuB,QAAU,WACgB,oBAAxB/D,KAAKgE,gBACdhE,KAAKgE,gBAAe,SAAUC,GACxBA,aAAiB1B,EAAAA,GACnB0B,EAAMF,SAEV,IAGFD,EAAWI,KAAKlE,KAClB,EAEAD,EAAGyC,QAAQ2B,kBAAoB,SAAUC,GAGvC,GAFAA,EAAOA,GAAQ,CAAC,EAEZpE,KAAKqE,cACP,OAAOrE,KAAKC,QAAQ,GAAGqE,IAGzB,IAAItB,EAASuB,SAASC,cAAc,UAChCC,EAAML,EAAKM,YAAc1E,KAAKyE,IAClCzB,EAAOM,MAAQtD,KAAKS,WAAagE,EACjCzB,EAAOO,OAASvD,KAAKU,YAAc+D,EACnC,IAAIE,EAAM3B,EAAO4B,WAAW,MAC5BD,EAAIF,IAAMA,EACVE,EAAIE,UAAU,EAAG,EAAG7B,EAAOM,MAAON,EAAOO,QAErCa,EAAKU,kBACPH,EAAII,UAAYX,EAAKU,gBACrBH,EAAIK,SAAS,EAAG,EAAGhC,EAAOM,MAAON,EAAOO,SAG1C,IAEI5C,EAFAsE,EAAcjF,KAAKkF,QAAQC,gBAAe,GAC1CC,EAAQ,CAAC,EAET7E,EAAOP,KAEX,SAASqF,EAAsBC,EAASC,GACtC,IAMIC,EANAC,EAAalF,EAAKmF,YAEP,MAAXJ,IACFA,GAAWK,KAKb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IAAK,CAC1C,IAAIhD,EAAI6C,EAAWG,GACf3B,EAAQ1D,EAAKN,QAAQ2C,GAEzB,IAAKqB,EAAM6B,aAAelD,EAAI0C,GAAW1C,EAAI2C,EAAQ,CACnDC,EAAoBvB,EACpB,KACF,CACF,CAEIuB,GAAqBA,EAAkBO,iBACzCpB,EAAIqB,OACJR,EAAkBO,eAAepB,GACjCA,EAAIsB,UAER,CAMA,IAJA,IAAIhC,EAAQ,CACVU,IAAKA,GAGEiB,EAAI,EAAGA,EAAIX,EAAYY,OAAQD,IAAK,CAC3C,IAAIM,EAAKjB,EAAYW,GAEjBM,EAAGvF,SAAWA,IAChB0E,EAAsB1E,EAAQuF,EAAGvF,QACjCA,EAASuF,EAAGvF,QAGdX,KAAKmG,WAAWD,EAAIjC,GAAO,EAAM,KAAMmB,EACzC,CAGA,OADAC,EAAsB1E,EAAQgF,KACvB3C,CACT,CACF,IACAnE,EAAAA,IAA2B,SAAUwB,EAASC,GAC5C,IAAIP,EAAKO,EAAIE,QACT4F,EAAMrG,EAAGsG,MAAQtG,EAAGsG,OAAS,IAAIvG,EAAUC,GAC/CqG,EAAIhG,OAAOC,EAASC,EACtB,IACAzB,EAAAA,GAA6ByH,E,mNC1P7B,2pICWA,SAASC,EAAkBC,GAKzB,IAJA,IAAIC,EAAO,IAAIC,WAAWF,EAAOA,EAAO,GACpCG,EAAI,EACJC,EAAK,IAAIC,EAAAA,EAEJjB,EAAI,EAAGA,EAAIY,EAAMZ,IACxB,IAAK,IAAIkB,EAAI,EAAGA,EAAIN,EAAMM,IACxBF,EAAGG,IAAoB,EAAhBC,KAAKC,SAAe,EAAmB,EAAhBD,KAAKC,SAAe,EAAG,GAAGC,YACxDT,EAAKE,KAA4B,KAAb,GAAPC,EAAGO,EAAU,IAC1BV,EAAKE,KAA4B,KAAb,GAAPC,EAAGQ,EAAU,IAC1BX,EAAKE,KAAO,EACZF,EAAKE,KAAO,IAIhB,OAAOF,CACT,CAEA,SAASY,EAAqBb,GAC5B,OAAO,IAAIc,EAAAA,EAAU,CACnBC,OAAQhB,EAAkBC,GAC1BgB,MAAOC,EAAAA,EAAQC,OACfC,MAAOF,EAAAA,EAAQC,OACfpE,MAAOkD,EACPjD,OAAQiD,GAEZ,CAEA,SAASoB,EAAepB,EAAMqB,EAAQC,GACpC,IAAIC,EAAS,IAAIC,aAAoB,EAAPxB,GAC9BqB,EAASA,GAAU,EAEnB,IAAK,IAAIjC,EAAI,EAAGA,EAAIY,EAAMZ,IAAK,CAC7B,IAAIqC,GAAMC,EAAAA,EAAAA,GAAOtC,EAAIiC,EAAQ,IAAMC,EAAa,EAAI,GAAKd,KAAKmB,GAC1DC,GAAQF,EAAAA,EAAAA,GAAOtC,EAAIiC,EAAQ,GAAKb,KAAKmB,GACrCE,EAAIrB,KAAKC,SACTE,EAAIH,KAAKsB,IAAIL,GAAOjB,KAAKuB,IAAIH,GAASC,EACtCjB,EAAIJ,KAAKsB,IAAIF,GAASC,EACtBzF,EAAIoE,KAAKuB,IAAIN,GAAOjB,KAAKuB,IAAIH,GAASC,EAC1CN,EAAW,EAAJnC,GAASuB,EAChBY,EAAW,EAAJnC,EAAQ,GAAKwB,EACpBW,EAAW,EAAJnC,EAAQ,GAAKhD,CACtB,CAEA,OAAOmF,CAUT,CAEA,SAASS,EAASC,GAChBA,EAAMA,GAAO,CAAC,EACdzI,KAAK0I,UAAY,IAAIC,EAAAA,EAAK,CACxBC,SAAUC,EAAAA,EAAOC,OAAO,wBAE1B9I,KAAK+I,UAAY,IAAIJ,EAAAA,EAAK,CACxBC,SAAUC,EAAAA,EAAOC,OAAO,oBAE1B9I,KAAKgJ,aAAe,IAAIC,EAAAA,EAAY,CAClCC,aAAa,IAEflJ,KAAKmJ,aAAe,IAAI7B,EAAAA,EACxBtH,KAAKoJ,aAAe,IAAI9B,EAAAA,EACxBtH,KAAKqJ,cAAgB,IAAI/B,EAAAA,EACzBtH,KAAKsJ,UAAYb,EAAIc,aACrBvJ,KAAKwJ,WAAaf,EAAIgB,cACtBzJ,KAAK0J,aAAa,GAClB1J,KAAK2J,cAAclB,EAAImB,YAAc,IAEnB,MAAdnB,EAAIoB,QACN7J,KAAK8J,aAAa,SAAUrB,EAAIoB,QAGjB,MAAbpB,EAAIsB,OACN/J,KAAK8J,aAAa,QAASrB,EAAIsB,OAG5B/J,KAAKwJ,aACRxJ,KAAK0I,UAAUsB,SAASC,eAAe,aAEvCjK,KAAK+I,UAAUiB,SAASC,eAAe,cAGpCjK,KAAKsJ,WACRtJ,KAAK+I,UAAUiB,SAASC,eAAe,YAGzCjK,KAAK+I,UAAUiB,SAASE,WAAW,YAAalK,KAAKwJ,YAErDxJ,KAAK+I,UAAUiB,SAASE,WAAW,WAAYlK,KAAKsJ,UACtD,CAlGAT,EAAAA,EAAOsB,OAAOC,GAoGd5B,EAASrI,UAAUkK,gBAAkB,SAAUC,GAC7CtK,KAAKsJ,UAAYgB,CACnB,EAEA9B,EAASrI,UAAUoK,iBAAmB,SAAUC,GAC9CxK,KAAKwJ,WAAagB,EAElBxK,KAAK0I,UAAUsB,SAASQ,EAAY,gBAAkB,kBAAkB,aAGxExK,KAAK2J,cAAc3J,KAAKyK,YAC1B,EAEAjC,EAASrI,UAAUC,OAAS,SAAU2C,EAAU2H,EAAQC,GACtD,IAAIrH,EAAQP,EAAStC,WACjB8C,EAASR,EAASrC,YAClBkK,EAAW5K,KAAK0I,UAChBmC,EAAW7K,KAAK+I,UACpB6B,EAASV,WAAW,SAAUlK,KAAK8K,SAASH,EAAQ3K,KAAK8K,SAASjF,SAClE+E,EAASV,WAAW,WAAYlK,KAAKsJ,WAEd,MAAnBtJ,KAAKwJ,YACPoB,EAASV,WAAW,YAAalK,KAAKwJ,YAGxCoB,EAASV,WAAW,eAAgB,CAAClK,KAAKsJ,UAAUhG,MAAOtD,KAAKsJ,UAAU/F,SAC1E,IAAIwH,EAAuB,IAAIC,EAAAA,EAC/BA,EAAAA,EAAQC,UAAUF,EAAsBL,EAAOQ,gBAC/CN,EAASV,WAAW,aAAcQ,EAAOS,iBAAiBC,OAC1DR,EAASV,WAAW,gBAAiBQ,EAAOW,oBAAoBD,OAChER,EAASV,WAAW,uBAAwBa,EAAqBK,OACjE,IAAIE,EAActL,KAAKmJ,aACnBoC,EAAcvL,KAAKoJ,aACnBoC,EAAexL,KAAKqJ,cACxBiC,EAAYhI,MAAQA,EAAQ,EAC5BgI,EAAY/H,OAASA,EAAS,EAC9BgI,EAAYjI,MAAQA,EACpBiI,EAAYhI,OAASA,EACrBiI,EAAalI,MAAQA,EACrBkI,EAAajI,OAASA,EAEtBvD,KAAKgJ,aAAayC,OAAOH,GAEzBtL,KAAKgJ,aAAa0C,KAAK3I,GAEvBA,EAAS4I,GAAGC,WAAW,EAAG,EAAG,EAAG,GAChC7I,EAAS4I,GAAGE,MAAM9I,EAAS4I,GAAGG,kBAC9BlB,EAASmB,OAAOhJ,GAChB8H,EAASX,WAAW,cAAe,CAAC5G,EAAQ,EAAGC,EAAS,IACxDsH,EAASX,WAAW,aAAcQ,EAAOS,iBAAiBC,OAE1DpL,KAAKgJ,aAAayC,OAAOF,GAEzBV,EAASX,WAAW,YAAa,GACjCW,EAASX,WAAW,cAAeoB,GACnCT,EAASkB,OAAOhJ,GAEhB/C,KAAKgJ,aAAayC,OAAOD,GAEzBX,EAASX,WAAW,cAAe,CAAC5G,EAAOC,IAC3CsH,EAASX,WAAW,YAAa,GACjCW,EAASX,WAAW,cAAeqB,GACnCV,EAASkB,OAAOhJ,GAEhB/C,KAAKgJ,aAAagD,OAAOjJ,GAGzB,IAAI6I,EAAa7I,EAAS6I,WAC1B7I,EAAS4I,GAAGC,WAAWA,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,GACjF,EAEApD,EAASrI,UAAU8L,iBAAmB,WACpC,OAAOjM,KAAKqJ,aACd,EAEAb,EAASrI,UAAU2J,aAAe,SAAUoC,EAAMC,GACnC,iBAATD,EACFlM,KAAK0J,aAAayC,GACA,eAATD,EACTlM,KAAK2J,cAAcwC,GACD,cAATD,EACTlM,KAAK0I,UAAUsB,SAASjD,IAAI,YAAaoF,GAEzCnM,KAAK0I,UAAUwB,WAAWgC,EAAMC,EAEpC,EAEA3D,EAASrI,UAAUwJ,cAAgB,SAAUnD,GAC3CxG,KAAKyK,YAAcjE,EAEnBxG,KAAK0I,UAAUsB,SAASoC,OAAO,WAAY,cAAe5F,GAE1DxG,KAAK8K,SAAW9K,KAAK8K,UAAY,GAEjC,IAAK,IAAIlF,EAAI,EAAGA,EAAI,GAAIA,IACtB5F,KAAK8K,SAASlF,GAAKgC,EAAepB,EAAMZ,EAAIY,IAAQxG,KAAKwJ,WAE7D,EAEAhB,EAASrI,UAAUuJ,aAAe,SAAUlD,GAC1C,IAAI6F,EAAUrM,KAAK0I,UAAU4D,WAAW,YAEnCD,GAKHA,EAAQ5F,KAAOF,EAAkBC,GACjC6F,EAAQ/I,MAAQ+I,EAAQ9I,OAASiD,EACjC6F,EAAQE,UANRF,EAAUhF,EAAqBb,GAE/BxG,KAAK0I,UAAUwB,WAAW,WAAY7C,EAAqBb,KAO7DxG,KAAK0I,UAAUwB,WAAW,eAAgB,CAAC1D,EAAMA,GACnD,EAEAgC,EAASrI,UAAU4D,QAAU,SAAUhB,GACrC/C,KAAKoJ,aAAarF,QAAQhB,GAE1B/C,KAAKmJ,aAAapF,QAAQhB,GAE1B/C,KAAKqJ,cAActF,QAAQhB,EAC7B,EAEA,Q,WCxOA,qpUCYA,SAASyJ,EAAQ/D,GACfA,EAAMA,GAAO,CAAC,EACdzI,KAAKyM,SAAW,IAAI9D,EAAAA,EAAK,CACvBC,SAAUC,EAAAA,EAAOC,OAAO,iBACxB8C,WAAY,CAAC,EAAG,EAAG,EAAG,KAExB5L,KAAK0M,WAAa,IAAI/D,EAAAA,EAAK,CACzBC,SAAUC,EAAAA,EAAOC,OAAO,iBACxB8C,WAAY,CAAC,EAAG,EAAG,EAAG,KAExB5L,KAAK2M,WAAa,IAAIhE,EAAAA,EAAK,CACzBC,SAAUC,EAAAA,EAAOC,OAAO,iBACxB8C,WAAY,CAAC,EAAG,EAAG,EAAG,KAExB5L,KAAK4M,WAAa,IAAIjE,EAAAA,EAAK,CACzBC,SAAUC,EAAAA,EAAOC,OAAO,2BAG1B9I,KAAK4M,WAAW5C,SAAS6C,qBAEzB7M,KAAK4M,WAAW5C,SAAS8C,cAAc,CAAC,WAAY,aAEpD9M,KAAKyM,SAASvC,WAAW,kBAAmBzB,EAAIgB,eAEhDzJ,KAAKyM,SAASvC,WAAW,kBAAmBzB,EAAIc,cAGhDvJ,KAAK0M,WAAWxC,WAAW,kBAAmBzB,EAAIgB,eAElDzJ,KAAK0M,WAAWxC,WAAW,kBAAmBzB,EAAIc,cAElDvJ,KAAK2M,WAAWzC,WAAW,kBAAmBzB,EAAIgB,eAElDzJ,KAAK2M,WAAWzC,WAAW,kBAAmBzB,EAAIc,cAElDvJ,KAAK2M,WAAW3C,SAASoC,OAAO,WAAY,YAE5CpM,KAAK2M,WAAW3C,SAASoC,OAAO,WAAY,SAE5CpM,KAAK+M,YAAc,IAAIzF,EAAAA,EAAU,CAC/BjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKiN,UAAY,IAAI3F,EAAAA,EAAU,CAC7BjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKkN,UAAY,IAAI5F,EAAAA,EAAU,CAC7BjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKmN,aAAe,IAAI7F,EAAAA,EAAU,CAChCjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKoN,gBAAkB,IAAI9F,EAAAA,EAAU,CACnCjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKqN,aAAe,IAAIpE,EAAAA,EAAY,CAClCC,aAAa,IAEflJ,KAAKsN,oBAAsB,KAC3BtN,KAAKuN,cAAgB,IACrBvN,KAAKwN,gBAAkB,EAEvBxN,KAAKyM,SAASzC,SAASoC,OAAO,WAAY,mBAAoBpM,KAAKwN,iBAEnExN,KAAKyM,SAASzC,SAASoC,OAAO,WAAY,gBAAiBpM,KAAKuN,eAEhEvN,KAAKyN,WAAa,CACpB,CApEA5E,EAAAA,EAAOsB,OAAOuD,GAsEdlB,EAAQrM,UAAUwN,kBAAoB,SAAUC,EAAiBC,GAC/D7N,KAAKyM,SAASzC,SAASjD,IAAI,kBAAmB6G,GAE9C5N,KAAKyM,SAASzC,SAASjD,IAAI,oBAAqB8G,GAEhD,IAAIC,EAAoBF,GAAmBC,EAE3C7N,KAAKyM,SAASzC,SAAS8D,EAAoB,gBAAkB,kBAAkB,kBACjF,EAEAtB,EAAQrM,UAAUC,OAAS,SAAU2C,EAAU2H,EAAQqD,EAAepD,GACpE,IAAIrH,EAAQP,EAAStC,WACjB8C,EAASR,EAASrC,YAClBsN,EAAahO,KAAK+M,YAClBkB,EAAWjO,KAAKiN,UAChBiB,EAAWlO,KAAKkN,UACpBc,EAAW1K,MAAQtD,KAAKmN,aAAa7J,MAAQtD,KAAKoN,gBAAgB9J,MAAQA,EAAQtD,KAAKyN,WACvFO,EAAWzK,OAASvD,KAAKmN,aAAa5J,OAASvD,KAAKoN,gBAAgB7J,OAASA,EAASvD,KAAKyN,WAC3FQ,EAAS3K,MAAQ4K,EAAS5K,MAAQA,EAClC2K,EAAS1K,OAAS2K,EAAS3K,OAASA,EACpC,IAAI4K,EAAcnO,KAAKqN,aACnBe,EAAUpO,KAAKyM,SACf4B,EAAYrO,KAAK0M,WACjB4B,EAAYtO,KAAK2M,WACjB4B,EAAYvO,KAAK4M,WACjB4B,EAAc,IAAIxD,EAAAA,EAClByD,EAAe,IAAIzD,EAAAA,EACvBA,EAAAA,EAAQC,UAAUuD,EAAa9D,EAAOQ,gBACtCF,EAAAA,EAAQC,UAAUwD,EAAc/D,EAAOgE,YACvCN,EAAQlE,WAAW,gBAAiB6D,GACpCK,EAAQlE,WAAW,aAAcQ,EAAOS,iBAAiBC,OACzDgD,EAAQlE,WAAW,gBAAiBQ,EAAOW,oBAAoBD,OAC/DgD,EAAQlE,WAAW,cAAesE,EAAYpD,OAC9CgD,EAAQlE,WAAW,eAAgBuE,EAAarD,OAChDgD,EAAQlE,WAAW,QAASQ,EAAOiE,MACnC,IAAIC,EAAUjE,EAAQ3K,KAAKuN,cAAgBvN,KAAKwN,gBAiChD,GAhCAY,EAAQlE,WAAW,eAAgB0E,GACnCR,EAAQlE,WAAW,eAAgBS,EAAQ3K,KAAKwN,iBAChDa,EAAUnE,WAAW,cAAe,CAAC8D,EAAW1K,MAAO0K,EAAWzK,SAClE+K,EAAUpE,WAAW,cAAe,CAAC5G,EAAOC,IAC5C+K,EAAUpE,WAAW,gBAAiB6D,GACtCM,EAAUnE,WAAW,aAAcQ,EAAOS,iBAAiBC,OAC3DkD,EAAUpE,WAAW,aAAcQ,EAAOS,iBAAiBC,OAC3D+C,EAAY1C,OAAOuC,GACnBG,EAAYzC,KAAK3I,GACjBqL,EAAQrC,OAAOhJ,GAEX/C,KAAK6O,qBACPV,EAAY1C,OAAOzL,KAAKoN,iBACxBmB,EAAUrE,WAAW,WAAYlK,KAAKmN,cACtCoB,EAAUrE,WAAW,WAAY8D,GACjCO,EAAUvE,SAASjD,IAAI,CACrB,QAAW4D,GAAS,EAAI,IAAO,EAC/B,QAAWA,GAAS,EAAI,IAAO,IAIjC4D,EAAUxC,OAAOhJ,IAGnBoL,EAAY1C,OAAOwC,GACnBI,EAAUnE,WAAW,UAAWlK,KAAK6O,mBAAqB7O,KAAKoN,gBAAkBY,GACjFK,EAAUtC,OAAOhJ,GACjBoL,EAAY1C,OAAOyC,GACnBI,EAAUpE,WAAW,UAAW+D,GAChCK,EAAUvC,OAAOhJ,GACjBoL,EAAYnC,OAAOjJ,GAEf/C,KAAK6O,mBAAoB,CAC3B,IAAIC,EAAM9O,KAAKmN,aACfnN,KAAKmN,aAAenN,KAAKoN,gBACzBpN,KAAKoN,gBAAkB0B,CACzB,CACF,EAEAtC,EAAQrM,UAAU8L,iBAAmB,WACnC,OAAOjM,KAAKkN,SACd,EAEAV,EAAQrM,UAAU2J,aAAe,SAAUoC,EAAMC,GAClC,iBAATD,EACFlM,KAAKyM,SAASzC,SAASoC,OAAO,WAAY,gBAAiBD,GAE3DnM,KAAKyM,SAASvC,WAAWgC,EAAMC,EAEnC,EAEAK,EAAQrM,UAAU4O,qBAAuB,SAAUC,GAC7CA,GACGhP,KAAKsN,sBACRtN,KAAKsN,oBAAsB2B,EAAAA,EAAYC,2BAA2B,GAAIlP,KAAKuN,gBAG7EvN,KAAKyM,SAASzC,SAASoC,OAAO,WAAY,sBAE1CpM,KAAKyM,SAASzC,SAASjD,IAAI,qBAAsB/G,KAAKsN,qBAEtDtN,KAAKyM,SAASzC,SAASjD,IAAI,yBAA0B,CAAC,GAAI/G,KAAKuN,iBAE/DvN,KAAKyM,SAASzC,SAASmF,SAAS,WAAY,sBAG9CnP,KAAK6O,mBAAqBG,CAC5B,EAEAxC,EAAQrM,UAAUiP,eAAiB,SAAU/C,GAC3C,IAAIkC,EAAYvO,KAAK2M,WAEjBN,GACFkC,EAAUvE,SAAS8C,cAAc,WACjCyB,EAAUvE,SAASjD,IAAI,UAAWsF,IAElCkC,EAAUvE,SAASC,eAAe,UAEtC,EAEAuC,EAAQrM,UAAUkP,WAAa,SAAU1E,GACvC,OAAI3K,KAAK6O,oBACAlE,EAAQ3K,KAAKuN,cAAgBvN,KAAKwN,eAI7C,EAEAhB,EAAQrM,UAAU4D,QAAU,SAAUhB,GACpC/C,KAAK+M,YAAYhJ,QAAQhB,GAEzB/C,KAAKiN,UAAUlJ,QAAQhB,GAEvB/C,KAAKkN,UAAUnJ,QAAQhB,GAEvB/C,KAAKmN,aAAapJ,QAAQhB,GAE1B/C,KAAKoN,gBAAgBrJ,QAAQhB,GAE7B/C,KAAKqN,aAAatJ,QAAQhB,EAC5B,EAEA,QCzNA,GAAgB,EAAK,GAAM,eAAiB,cAAgB,cAAgB,cAAgB,cAAgB,cAAgB,eAAiB,eAAiB,eAAiB,cAAgB,eAAiB,aAAe,eAAiB,eAAiB,cAAgB,eAAiB,cAAgB,cAAgB,eAAiB,eAAiB,eAAiB,cAAgB,cAAgB,eAAiB,cAAgB,eAAiB,eAAiB,eAAiB,eAAiB,eAAiB,eAAiB,eAAiB,cAAgB,eAAiB,eAAiB,cAAgB,cAAgB,cAAgB,eAAiB,cAAgB,eAAiB,cAAgB,gBAAkB,eAAiB,eAAiB,aAAe,cAAgB,cAAgB,cAAgB,cAAgB,eAAiB,eAAiB,eAAiB,eAAiB,cAAgB,cAAgB,cAAgB,cAAgB,eAAiB,cAAgB,cAAgB,e,+BCDzgC,2qDCYA,SAASuM,EAAoBvM,EAAUwM,EAASC,EAAQnD,EAASoD,GAC/D,IAAI9D,EAAK5I,EAAS4I,GAClB4D,EAAQrF,WAAWyB,EAAI,KAAM6D,EAAQC,GACrC9D,EAAG+D,cAAc/D,EAAGgE,SAAWF,GAE3BpD,EAAQ3I,eACV2I,EAAQX,KAAK3I,GAGbsJ,EAAQL,OAAOjJ,EAEnB,CAGA,SAAS6M,EAAoB7M,EAAU8M,EAAkBC,EAAgBC,EAAqBC,GAC5F,IAAIC,EACAC,EACAC,EACAC,EACAzE,EAAK5I,EAAS4I,GAClB,OAAO,SAAU0E,EAAYL,EAAgBM,GAE3C,IAAIF,GAAsBA,EAAmBpG,WAAaqG,EAAWrG,SAArE,CAIA,IAAIA,EAAWqG,EAAWrG,SACtBuF,EAAUc,EAAWE,UACrBC,EAAYxG,EAASlI,IAAI,aAEZ,MAAb0O,IACFA,EAAY,GAGd,IAAIC,EAAYzG,EAASlI,IAAI,cAAgB+N,EACzCa,EAAe1G,EAASlI,IAAI,gBAC5B6O,EAAU3G,EAASlI,IAAI,WACvB8O,EAAW5G,EAASlI,IAAI,YACxB+O,EAAW7G,EAASlI,IAAI,YACxBgP,EAAiB9G,EAASlI,IAAI,kBAC9BiP,EAAiB/G,EAASlI,IAAI,kBAC9BkP,IAAeL,GAAW3G,EAASiH,iBAAiB,WACpDC,IAAoBR,GAAgB1G,EAASiH,iBAAiB,gBAC9DE,EAAanH,EAASoH,UAAU,WAAY,gBAChDT,EAAUA,GAAWb,EACrBY,EAAeA,GAAgBX,EAE3BO,IAAuBN,GACzBA,EAAejJ,IAAI,YAAa0J,GAChCT,EAAejJ,IAAI,UAAW4J,GAC9BX,EAAejJ,IAAI,eAAgB2J,GACnCV,EAAejJ,IAAI,aAAciK,GACjChB,EAAejJ,IAAI,kBAAmBmK,GACtClB,EAAejJ,IAAI,aAAcoK,GACrB,MAAZP,GAAoBZ,EAAejJ,IAAI,WAAY6J,GACvC,MAAZC,GAAoBb,EAAejJ,IAAI,WAAY8J,GACjC,MAAlBC,GAA0Bd,EAAejJ,IAAI,iBAAkB+J,GAC7C,MAAlBC,GAA0Bf,EAAejJ,IAAI,iBAAkBgK,GAC/Df,EAAejJ,IAAI,YAAayJ,KAEhCjB,EAAQrF,WAAWyB,EAAI,KAAM,YAAa6E,GAEtCP,IAAsBQ,GACxBnB,EAAoBvM,EAAUwM,EAAS,YAAakB,EAAW,GAG7DP,IAAoBS,GAAWA,GACjCrB,EAAoBvM,EAAUwM,EAAS,UAAWoB,EAAS,GAGzDR,IAAyBO,GAAgBA,GAC3CpB,EAAoBvM,EAAUwM,EAAS,eAAgBmB,EAAc,GAGvD,MAAZE,GACFrB,EAAQrF,WAAWyB,EAAI,KAAM,WAAYiF,GAG3B,MAAZC,GACFtB,EAAQrF,WAAWyB,EAAI,KAAM,WAAYkF,GAGrB,MAAlBC,GACFvB,EAAQrF,WAAWyB,EAAI,KAAM,iBAAkBmF,GAG3B,MAAlBC,GACFxB,EAAQrF,WAAWyB,EAAI,KAAM,iBAAkBoF,GAGjDxB,EAAQrF,WAAWyB,EAAI,KAAM,cAAeqF,GAC5CzB,EAAQrF,WAAWyB,EAAI,KAAM,mBAAoBuF,GACjD3B,EAAQrF,WAAWyB,EAAI,KAAM,cAAewF,IAG9ClB,EAAoBQ,EACpBP,EAAkBS,EAClBR,EAAuBO,EACvBN,EAAqBC,CA1ErB,CA2EF,CACF,CAEA,SAASgB,EAAW5I,GAClBA,EAAMA,GAAO,CAAC,EACdzI,KAAKsJ,UAAY,IAAIhC,EAAAA,EAAU,CAC7BgK,OAAQ7J,EAAAA,EAAQ8J,gBAChBlS,KAAMoI,EAAAA,EAAQ+J,eAEhBxR,KAAKwJ,WAAa,IAAIlC,EAAAA,EAAU,CAC9BjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKgJ,aAAe,IAAIC,EAAAA,EAExBjJ,KAAKgJ,aAAayC,OAAOzL,KAAKwJ,YAE9BxJ,KAAKgJ,aAAayC,OAAOzL,KAAKsJ,UAAWL,EAAAA,EAAYwI,kBAErDzR,KAAK0R,gBAAkB,IAAIC,EAAAA,EAAS,CAClCC,OAAQ,IAAI/I,EAAAA,EAAOA,EAAAA,EAAOC,OAAO,sBAAuBD,EAAAA,EAAOC,OAAO,2BAGxE9I,KAAK0R,gBAAgB5E,cAAc,CAAC,YAAa,UAAW,iBAE5D9M,KAAK6R,kBAAoBC,EAAAA,EAAYC,YAAY,QACjD/R,KAAKgS,gBAAkBF,EAAAA,EAAYC,YAAY,QAC/C/R,KAAKiS,oBAAsBH,EAAAA,EAAYC,YAAY,QACnD/R,KAAKkS,WAAa,IAAIvJ,EAAAA,EAAK,CACzBC,SAAUC,EAAAA,EAAOC,OAAO,4BAG1B9I,KAAKkS,WAAWhI,WAAW,UAAWlK,KAAKwJ,YAE3CxJ,KAAKkS,WAAWlI,SAASmF,SAAS,WAAY,eAChD,CAvIAtG,EAAAA,EAAOsB,OAAOgI,GAyIdd,EAAWlR,UAAUiS,gBAAkB,WACrC,OAAOpS,KAAKsJ,SACd,EAEA+H,EAAWlR,UAAUkS,iBAAmB,WACtC,OAAOrS,KAAKwJ,UACd,EAEA6H,EAAWlR,UAAUC,OAAS,SAAU2C,EAAUuP,EAAO5H,GACvD,IAAIpH,EAAQP,EAAStC,WACjB8C,EAASR,EAASrC,YAClB6I,EAAevJ,KAAKsJ,UACpBG,EAAgBzJ,KAAKwJ,WACrBwG,EAAiBhQ,KAAK0R,gBAC1BnI,EAAajG,MAAQA,EACrBiG,EAAahG,OAASA,EACtBkG,EAAcnG,MAAQA,EACtBmG,EAAclG,OAASA,EACvB,IAAIgP,EAAaD,EAAME,cAAc9H,GAAQ+H,OAE7CzS,KAAKgJ,aAAa0C,KAAK3I,GAEvBA,EAAS4I,GAAGC,WAAW,EAAG,EAAG,EAAG,GAChC7I,EAAS4I,GAAGE,MAAM9I,EAAS4I,GAAGG,iBAAmB/I,EAAS4I,GAAG+G,kBAC7D3P,EAAS4I,GAAGgH,QAAQ5P,EAAS4I,GAAGiH,OAChC7P,EAAS8P,WAAWN,EAAY7H,EAAQ,CACtCoI,YAAa,WACX,OAAO9C,CACT,EACA+C,SAAU,SAAUC,GAClB,OAAOA,EAAOC,YAChB,EACAC,aAActD,EAAoB7M,EAAU/C,KAAK6R,kBAAmB7R,KAAKgS,gBAAiBhS,KAAKiS,oBAAqBjS,KAAK0R,iBACzHyB,KAAMpQ,EAASqQ,oBAGjBpT,KAAKgJ,aAAagD,OAAOjJ,EAC3B,EAEAsO,EAAWlR,UAAUkT,YAAc,SAAUtQ,GAC3C/C,KAAKkS,WAAWnG,OAAOhJ,EACzB,EAEAsO,EAAWlR,UAAU4D,QAAU,SAAUhB,GACvC/C,KAAKsJ,UAAUvF,QAAQhB,GAEvB/C,KAAKwJ,WAAWzF,QAAQhB,EAC1B,EAEA,QC5LA,SAASuQ,EAAS7K,GAChBA,EAAMA,GAAO,CAAC,EACdzI,KAAKuT,UAAY,IAAI5K,EAAAA,EAAK,CACxBC,SAAUC,EAAAA,EAAOC,OAAO,eAG1B9I,KAAKuT,UAAUrJ,WAAW,gBAAiBzB,EAAIgB,eAE/CzJ,KAAKuT,UAAUrJ,WAAW,eAAgBzB,EAAIc,cAE9CvJ,KAAKwT,eAAiB,IAAIlM,EAAAA,EAAU,CAClCjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAKqN,aAAe,IAAIpE,EAAAA,EAExBjJ,KAAKqN,aAAa5B,OAAOzL,KAAKwT,eAChC,CAEAF,EAASnT,UAAUC,OAAS,SAAU2C,EAAU2H,EAAQqD,EAAepD,GACrE,IAAIrH,EAAQP,EAAStC,WACjB8C,EAASR,EAASrC,YAClB2L,EAAUrM,KAAKwT,eACnBnH,EAAQ/I,MAAQA,EAChB+I,EAAQ9I,OAASA,EACjB,IAAI4K,EAAcnO,KAAKqN,aACvBc,EAAYzC,KAAK3I,GAEjB/C,KAAKuT,UAAUrJ,WAAW,gBAAiBQ,EAAOW,oBAAoBD,OAEtEpL,KAAKuT,UAAUrJ,WAAW,cAAe,CAAC5G,EAAOC,IAEjDvD,KAAKuT,UAAUrJ,WAAW,UAAW6D,GAErC/N,KAAKuT,UAAUxH,OAAOhJ,GAEtBoL,EAAYnC,OAAOjJ,EACrB,EAEAuQ,EAASnT,UAAU8L,iBAAmB,WACpC,OAAOjM,KAAKwT,cACd,EAEAF,EAASnT,UAAU2J,aAAe,SAAUoC,EAAMC,GAChDnM,KAAKuT,UAAUrJ,WAAWgC,EAAMC,EAClC,EAEAmH,EAASnT,UAAU4D,QAAU,SAAUhB,GACrC/C,KAAKwT,eAAezP,QAAQhB,GAE5B/C,KAAKqN,aAAatJ,QAAQhB,EAC5B,EAEA,QC5DA,GACE,KAAQ,aACR,MAAS,CAAC,CACR,KAAQ,SACR,KAAQ,UACR,QAAW,CACT,MAAS,CAAC,IAEX,CACD,KAAQ,cACR,OAAU,sCACV,OAAU,CACR,QAAW,UAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,YAAe,wCAEhB,CACD,KAAQ,SACR,OAAU,kCACV,OAAU,CACR,QAAW,eAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,UAAa,EACb,MAAS,EACT,YAAe,wCAEhB,CACD,KAAQ,sBACR,OAAU,sCACV,OAAU,CACR,QAAW,UAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,YAAe,0CAEhB,CACD,KAAQ,sBACR,OAAU,sCACV,OAAU,CACR,QAAW,uBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,YAAe,0CAEhB,CACD,KAAQ,uBACR,OAAU,sCACV,OAAU,CACR,QAAW,uBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,yBACT,OAAU,0BACV,KAAQ,gBAId,WAAc,CACZ,YAAe,0CAEhB,CACD,KAAQ,uBACR,OAAU,sCACV,OAAU,CACR,QAAW,wBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,yBACT,OAAU,0BACV,KAAQ,gBAId,WAAc,CACZ,YAAe,4CAEhB,CACD,KAAQ,4BACR,OAAU,yCACV,OAAU,CACR,QAAW,wBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,yBACT,OAAU,0BACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,4CAEhB,CACD,KAAQ,4BACR,OAAU,yCACV,OAAU,CACR,QAAW,6BAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,yBACT,OAAU,0BACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,kDAEhB,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,wBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,kDAEhB,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,4BAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,0BACR,OAAU,iCACV,OAAU,CACR,SAAY,2BACZ,SAAY,6BAEd,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,QAAW,GACX,QAAW,KAEZ,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,uBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,4BAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,0BACR,OAAU,iCACV,OAAU,CACR,SAAY,2BACZ,SAAY,2BAEd,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,QAAW,GACX,QAAW,KAEZ,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,uBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,2BACR,OAAU,yCACV,OAAU,CACR,QAAW,4BAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,0BACR,OAAU,iCACV,OAAU,CACR,SAAY,2BACZ,SAAY,2BAEd,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,wBACT,OAAU,yBACV,KAAQ,gBAId,WAAc,CACZ,QAAW,GACX,QAAW,KAEZ,CACD,KAAQ,8BACR,OAAU,yCACV,OAAU,CACR,QAAW,UAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,gDAEhB,CACD,KAAQ,8BACR,OAAU,yCACV,OAAU,CACR,QAAW,+BAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,gBAId,WAAc,CACZ,SAAY,EACZ,QAAW,EACX,YAAe,wCAEhB,CACD,KAAQ,kBACR,OAAU,iCACV,OAAU,CACR,SAAY,8BACZ,SAAY,2BAEd,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,gBAId,WAAc,CACZ,QAAW,GACX,QAAW,KAEZ,CACD,KAAQ,MACR,OAAU,wBACV,QAAW,CACT,MAAS,CACP,WAAc,CACZ,UAAa,UACb,UAAa,UACb,MAAS,oBACT,OAAU,wBAIhB,WAAc,CACZ,UAAa,GACb,WAAc,KAEf,CACD,KAAQ,eACR,OAAU,6BACV,OAAU,CACR,QAAW,SACX,IAAO,OAET,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,gBAId,WAAc,CACZ,YAAe,wCAEhB,CACD,KAAQ,gBACR,OAAU,6BACV,OAAU,CACR,QAAW,SACX,IAAO,OAET,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,gBAId,WAAc,CACZ,YAAe,uCAEjB,QAAW,CACT,eAAkB,OAEnB,CACD,KAAQ,eACR,OAAU,6BACV,OAAU,CACR,QAAW,OAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,UAAa,UACb,UAAa,UACb,MAAS,oBACT,OAAU,wBAIhB,WAAc,CACZ,YAAe,uCAEjB,QAAW,CACT,SAAY,OAEb,CACD,KAAQ,gBACR,OAAU,8BACV,OAAU,CACR,SAAY,SACZ,QAAW,eACX,UAAa,gBACb,IAAO,MACP,QAAW,gBAEb,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,qBACV,KAAQ,iBAIb,CACD,KAAQ,YACR,OAAU,yCACV,OAAU,CACR,QAAW,SACX,MAAS,mBAEX,QAAW,CACT,MAAS,CACP,WAAc,CACZ,MAAS,oBACT,OAAU,wBAIhB,QAAW,CAET,GAED,CACD,KAAQ,OACR,OAAU,gCACV,OAAU,CACR,QAAW,gB,iGCxgBjB,8iHCAA,o6CCmCA,SAAS0Q,EAAkBhT,EAAUC,GACnC,MAAO,CACLgT,MAAO,CACLC,WAAY,CACVrQ,MAAO7C,EACP8C,OAAQ7C,IAIhB,CArBAmI,EAAAA,EAAO,UAAU+K,EAAAA,GACjB/K,EAAAA,EAAO,UAAUgL,EAAAA,GACjBhL,EAAAA,EAAO,UAAUiL,EAAAA,GACjBjL,EAAAA,EAAO,UAAUkL,EAAAA,GACjBlL,EAAAA,EAAO,UAAUmL,EAAAA,GACjBnL,EAAAA,EAAO,UAAUoL,EAAAA,GACjBpL,EAAAA,EAAO,UAAUqL,EAAAA,GACjBrL,EAAAA,EAAO,UAAUsL,EAAAA,GACjBtL,EAAAA,EAAO,UAAUuL,EAAAA,GACjBvL,EAAAA,EAAO,UAAUwL,GACjBxL,EAAAA,EAAO,UAAUyL,GAajB,IAAIC,EAAoB,CAAC,YAAa,QAEtC,SAASC,IACPxU,KAAKyU,OACLzU,KAAK0U,QACL1U,KAAK2U,KACL3U,KAAK4U,eAAiB,IAAItN,EAAAA,EAAU,CAClCjI,KAAMoI,EAAAA,EAAQuF,aAEhBhN,KAAK6U,cAAgB,IAAIvN,EAAAA,EAAU,CACjCgK,OAAQ7J,EAAAA,EAAQ8J,gBAChBlS,KAAMoI,EAAAA,EAAQ+J,eAEhBxR,KAAKgJ,aAAe,IAAIC,EAAAA,EAExBjJ,KAAKgJ,aAAayC,OAAOzL,KAAK4U,gBAE9B5U,KAAKgJ,aAAayC,OAAOzL,KAAK6U,cAAe5L,EAAAA,EAAYwI,kBAEzDzR,KAAK8U,YAAc,IAAIzD,EACvBrR,KAAK+U,aAAcC,EAAAA,EAAAA,GAAiBC,GAEpC,IAAIC,EAAalV,KAAK+U,YAAYI,cAAc,UAEhDD,EAAW7I,QAAUrM,KAAK4U,eAE1B,IAAIQ,EAAUpV,KAAK+U,YAAYI,cAAc,OAE7CnV,KAAKqV,YAAcH,EACnBlV,KAAKsV,SAAWF,EAChBpV,KAAKuV,eAAiBvV,KAAK+U,YAAYI,cAAc,aACrDnV,KAAKwV,UAAYxV,KAAK+U,YAAYI,cAAc,QAChDnV,KAAKyV,cAAgB,CAAC,eAAgB,gBAAiB,gBAAgBC,KAAI,SAAUxJ,GACnF,OAAOlM,KAAK+U,YAAYI,cAAcjJ,EACxC,GAAGlM,MACHA,KAAK2V,eAAiB,EACtB3V,KAAK4V,mBAAqB,IAAI5N,aAAa,GAC3ChI,KAAK6V,iBAAmBtB,EAAkBmB,KAAI,SAAUxJ,GACtD,OAAOlM,KAAK+U,YAAYI,cAAcjJ,EACxC,GAAGlM,MACH,IAAI8V,EAAa,CACfrM,cAAezJ,KAAK8U,YAAYzC,mBAChC9I,aAAcvJ,KAAK8U,YAAY1C,mBAEjCpS,KAAK0I,UAAY,IAAIF,EAASsN,GAC9B9V,KAAKyM,SAAW,IAAID,EAAQsJ,GAC5B9V,KAAKuT,UAAY,IAAID,EAASwC,EAChC,CAEAtB,EAAiBrU,UAAU4V,OAAS,SAAUzS,EAAOC,EAAQkB,GAC3DA,EAAMA,GAAO,EACTnB,GAAgBmB,EAChBlB,GAAkBkB,EADtB,IAEIsJ,EAAgB/N,KAAK4U,eACrBrL,EAAevJ,KAAK6U,cACxB9G,EAAczK,MAAQA,EACtByK,EAAcxK,OAASA,EACvBgG,EAAajG,MAAQA,EACrBiG,EAAahG,OAASA,EACtB,IAAIyS,EAAe,CACjBvV,SAAU,WACR,OAAO6C,CACT,EACA5C,UAAW,WACT,OAAO6C,CACT,EACA0S,oBAAqB,WACnB,OAAOxR,CACT,GAGF,SAASyR,EAAaC,EAAKC,GACzB,GAAwB,oBAAbD,EAAIC,GAAqB,CAClC,IAAIC,EAAUF,EAAIC,GAAKE,YAAcH,EAAIC,GAEzCD,EAAIC,GAAO,SAAUrT,GACnB,OAAOsT,EAAQnS,KAAKlE,KAAMgW,EAC5B,EAEAG,EAAIC,GAAKE,WAAaD,CACxB,CACF,CAEArW,KAAK+U,YAAYwB,MAAMC,SAAQ,SAAUC,GACvC,IAAK,IAAIC,KAAUD,EAAKE,QAAS,CAC/B,IAAIhD,EAAa8C,EAAKE,QAAQD,GAAQ/C,WAElCA,IACFuC,EAAavC,EAAY,SACzBuC,EAAavC,EAAY,UAE7B,CAEA,IAAK,IAAIiD,KAAYH,EAAK9C,WACxBuC,EAAaO,EAAK9C,WAAYiD,EAElC,IAEA5W,KAAKyU,OAASnR,EACdtD,KAAK0U,QAAUnR,EACfvD,KAAK2U,KAAOlQ,CACd,EAEA+P,EAAiBrU,UAAUM,SAAW,WACpC,OAAOT,KAAKyU,MACd,EAEAD,EAAiBrU,UAAUO,UAAY,WACrC,OAAOV,KAAK0U,OACd,EAEAF,EAAiBrU,UAAU0W,oBAAsB,WAC/C,OAAO7W,KAAK8W,aAAe9W,KAAK+W,aAAe/W,KAAKgX,UACtD,EAEAxC,EAAiBrU,UAAU8W,aAAe,SAAUR,GAClD,IAAIS,EAAM3C,EAAkB4C,QAAQV,EAAKvK,MAAQ,EAC7CkL,EAAWpX,KAAK6V,iBAAiBqB,GAErC,MAAOE,IAAapX,KAAK+U,YAAYI,cAAciC,EAASlL,MAC1DgL,GAAO,EACPE,EAAWpX,KAAK6V,iBAAiBqB,GAGnC,OAAOE,CACT,EAEA5C,EAAiBrU,UAAUkX,aAAe,SAAUZ,GAClD,IAAIS,EAAM3C,EAAkB4C,QAAQV,EAAKvK,MAAQ,EAC7CoL,EAAWtX,KAAK6V,iBAAiBqB,GAErC,MAAOI,IAAatX,KAAK+U,YAAYI,cAAcmC,EAASpL,MAC1DgL,GAAO,EACPI,EAAWtX,KAAK6V,iBAAiBqB,GAGnC,OAAOI,CACT,EAEA9C,EAAiBrU,UAAUoX,cAAgB,SAAUd,GACnD,IAAIW,EAAWpX,KAAKiX,aAAaR,GAE7Ba,EAAWtX,KAAKqX,aAAaZ,GAE5BW,IAILX,EAAKe,OAAOnL,QAAU+K,EAASlL,KAE3BoL,GACFb,EAAKE,QAAUlD,EAAkBzT,KAAKS,SAASiL,KAAK1L,MAAOA,KAAKU,UAAUgL,KAAK1L,OAC/EsX,EAASE,OAAOnL,QAAUoK,EAAKvK,MAE/BuK,EAAKE,QAAU,KAGjB3W,KAAK+U,YAAY0C,QAAQhB,GAC3B,EAEAjC,EAAiBrU,UAAUuX,iBAAmB,SAAUjB,GACtD,IAAIW,EAAWpX,KAAKiX,aAAaR,GAE7Ba,EAAWtX,KAAKqX,aAAaZ,GAE5BW,IAIDE,GACFF,EAAST,QAAUlD,EAAkBzT,KAAKS,SAASiL,KAAK1L,MAAOA,KAAKU,UAAUgL,KAAK1L,OACnFsX,EAASE,OAAOnL,QAAU+K,EAASlL,MAEnCkL,EAAST,QAAU,KAGrB3W,KAAK+U,YAAY4C,WAAWlB,GAC9B,EAMAjC,EAAiBrU,UAAUyX,aAAe,SAAU7U,EAAUuP,EAAO5H,EAAQC,GACvE3K,KAAK6W,uBACP7W,KAAK8U,YAAY1U,OAAO2C,EAAUuP,EAAO5H,EAE7C,EAMA8J,EAAiBrU,UAAU0X,WAAa,SAAU9U,EAAUuP,EAAO5H,EAAQC,GACzE3K,KAAK0I,UAAUtI,OAAO2C,EAAU2H,EAAQC,EAC1C,EAMA6J,EAAiBrU,UAAU2X,WAAa,WACtC9X,KAAK8W,aAAc,CACrB,EAMAtC,EAAiBrU,UAAU4X,YAAc,WACvC/X,KAAK8W,aAAc,CACrB,EAMAtC,EAAiBrU,UAAU6X,UAAY,WACrChY,KAAKgX,YAAa,CACpB,EAMAxC,EAAiBrU,UAAU8X,WAAa,WACtCjY,KAAKgX,YAAa,CACpB,EAMAxC,EAAiBrU,UAAU+X,eAAiB,WAC1C,OAAOlY,KAAK0I,UAAUuD,kBACxB,EAMAuI,EAAiBrU,UAAUgY,qBAAuB,WAChD,OAAOnY,KAAKgJ,YACd,EAMAwL,EAAiBrU,UAAUiY,iBAAmB,WAC5C,OAAOpY,KAAK4U,cACd,EAMAJ,EAAiBrU,UAAUkY,YAAc,WACvCrY,KAAK0X,iBAAiB1X,KAAKwV,UAC7B,EAMAhB,EAAiBrU,UAAUmY,WAAa,WACtCtY,KAAKuX,cAAcvX,KAAKwV,UAC1B,EAMAhB,EAAiBrU,UAAUoY,YAAc,WACvCvY,KAAKuV,eAAeiC,OAAOgB,MAAQ,kBAEnCxY,KAAK+U,YAAYxI,OACnB,EAMAiI,EAAiBrU,UAAUsY,aAAe,WACxCzY,KAAKuV,eAAeiC,OAAOgB,MAAQ,KAEnCxY,KAAK+U,YAAYxI,OACnB,EAMAiI,EAAiBrU,UAAUuY,UAAY,WACrC1Y,KAAKuV,eAAeiC,OAAOnL,QAAU,gBAErCrM,KAAK+U,YAAYxI,OACnB,EAMAiI,EAAiBrU,UAAUwY,WAAa,WACtC3Y,KAAKuV,eAAeiC,OAAOnL,QAAU,SAErCrM,KAAK+U,YAAYxI,OACnB,EAMAiI,EAAiBrU,UAAUyY,sBAAwB,WACjD5Y,KAAKuV,eAAenJ,OAAO,oBAE3BpM,KAAK6Y,wBAAyB,CAChC,EAMArE,EAAiBrU,UAAU2Y,uBAAyB,WAClD9Y,KAAKuV,eAAepG,SAAS,oBAE7BnP,KAAK6Y,wBAAyB,CAChC,EAMArE,EAAiBrU,UAAU4Y,WAAa,WACtC/Y,KAAK+W,aAAc,CACrB,EAMAvC,EAAiBrU,UAAU6Y,YAAc,WACvChZ,KAAK+W,aAAc,CACrB,EAOAvC,EAAiBrU,UAAU8Y,kBAAoB,SAAUC,GACvDlZ,KAAKuV,eAAezL,aAAa,iBAAkBoP,EACrD,EAEA1E,EAAiBrU,UAAUgZ,iBAAmB,SAAUjN,EAAMgN,GAC5D,OAAQhN,GACN,IAAK,UAEH,IAAItC,EAAa,CACfwP,IAAK,EACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,IACPL,IAAU,GAEZlZ,KAAK0I,UAAUoB,aAAa,aAAcF,GAE1C,MAEF,IAAK,SACH5J,KAAK0I,UAAUoB,aAAaoC,EAAMgN,GAElClZ,KAAK0I,UAAUoB,aAAa,OAAQoP,EAAQ,KAE5C,MAEF,IAAK,YACHlZ,KAAK0I,UAAUoB,aAAaoC,EAAMgN,GAElC,MAEF,QACMM,EAKV,EAEAhF,EAAiBrU,UAAUsZ,gBAAkB,SAAUvN,EAAMgN,GAC3D,OAAQhN,GACN,IAAK,gBACL,IAAK,aACL,IAAK,QACHlM,KAAKsV,SAASxL,aAAaoC,EAAMgN,GAEjC,MAEF,IAAK,aACH,IAAK,IAAItT,EAAI,EAAGA,EAAI5F,KAAKyV,cAAc5P,OAAQD,IAC7C5F,KAAKyV,cAAc7P,GAAGkE,aAAa,aAAcoP,GAGnD,MAEF,IAAK,UACH,IAAItP,EAAa,CACfwP,IAAK,EACLC,OAAQ,EACRC,KAAM,GACNC,MAAO,IACPL,IAAU,EACZlZ,KAAK4V,mBAAqBhM,EAE1B,IAAShE,EAAI,EAAGA,EAAI5F,KAAKyV,cAAc5P,OAAQD,IAC7C5F,KAAKyV,cAAc7P,GAAG8T,KAAK1P,SAASoC,OAAO,sBAAuBxC,GAGpE5J,KAAK2V,eAAiB,IAAI3N,aAA0B,EAAb4B,GACvC,MAEF,QACM4P,EAKV,EAEAhF,EAAiBrU,UAAUwZ,gBAAkB,SAAUzN,EAAMgN,GAC3D,GAAa,MAATA,EAIJ,OAAQhN,GACN,IAAK,UAEH,IAAI0N,EAAe,CACjBR,IAAK,GACLC,OAAQ,GACRC,KAAM,GACNC,MAAO,IACPL,IAAU,GACRW,EAAc,CAChBT,IAAK,GACLC,OAAQ,GACRC,KAAM,EACNC,MAAO,GACPL,IAAU,GAEZlZ,KAAKyM,SAAS3C,aAAa,eAAgB8P,GAE3C5Z,KAAKyM,SAAS3C,aAAa,cAAe+P,GAE1C,MAEF,IAAK,eACH7Z,KAAKyM,SAAS3C,aAAa,gBAAiB9C,KAAK8S,IAAI9S,KAAK+S,IAAI,EAAMb,EAAO,GAAM,IAEjF,MAEF,IAAK,WACHlZ,KAAKga,wBAAwBd,GAC7B,MAEF,QACE7X,QAAQc,KAAK,wBAA0B+J,GAE7C,EAEAsI,EAAiBrU,UAAU6Z,wBAA0B,SAAUC,GAC7Dja,KAAKyM,SAASsC,qBAAqBkL,EACrC,EAMAzF,EAAiBrU,UAAU+Z,aAAe,SAAUhB,GAClD,IAAIxF,EAAQyG,EAAAA,EAAUC,WAAWlB,GAEjClZ,KAAKuT,UAAUzJ,aAAa,YAAa4J,EAC3C,EAEAc,EAAiBrU,UAAUka,YAAc,SAAUnB,GACjDlZ,KAAKuV,eAAezL,aAAa,WAAY9C,KAAKsT,IAAI,EAAGpB,GAC3D,EAEA1E,EAAiBrU,UAAUoa,sBAAwB,SAAUzX,EAAOxC,GAClEN,KAAKuV,eAAemE,KAAK1P,SAASwQ,gBAAgB,MAAOxa,KAAK6Y,uBAAyB/V,EAAQ,OAAQxC,EAAK,CAC1Gma,UAAWN,EAAAA,EAAU1S,QAAQiT,QAC7BC,UAAWR,EAAAA,EAAU1S,QAAQiT,QAC7BE,OAAO,GAEX,EAEApG,EAAiBrU,UAAU0a,mBAAqB,SAAUxb,EAAM6Z,GAC9DlZ,KAAKuV,eAAezL,aAAazK,EAAM6Z,EACzC,EAEA1E,EAAiBrU,UAAU2a,aAAe,WACxC,OAAO9a,KAAKgX,UACd,EAEAxC,EAAiBrU,UAAU4a,UAAY,SAAUhY,EAAUuP,EAAO5H,EAAQsQ,EAAarQ,GACrF,IAAIoD,EAAgB/N,KAAK4U,eACrBqG,EAAgBlN,EAEhB/N,KAAK+W,cACP/W,KAAKuT,UAAUnT,OAAO2C,EAAU2H,EAAQqD,EAAepD,GAEvDoD,EAAgBkN,EAAgBjb,KAAKuT,UAAUtH,oBAG7CjM,KAAKgX,aACPhX,KAAKyM,SAASrM,OAAO2C,EAAU2H,EAAQqD,EAAepD,GAEtDsQ,EAAgBjb,KAAKyM,SAASR,mBAE9BjM,KAAKyM,SAAS2C,eAAepP,KAAK8W,YAAc9W,KAAK0I,UAAUuD,mBAAqB,OAStFjM,KAAKqV,YAAYhJ,QAAU4O,EAE3Bjb,KAAKsV,SAASxL,aAAa,QAAS9J,KAAK6U,eAOzC,IALA,IAAIqG,EAAalb,KAAK2V,eAClBwF,EAAiBnb,KAAK4V,mBACtBwF,EAAWpU,KAAKqU,MAAMC,EAAczV,OAAS,EAAIsV,GACjDI,EAAe5Q,EAAQyQ,EAElBxV,EAAI,EAAGA,EAAqB,EAAjBuV,EAAoBvV,IACtCsV,EAAWtV,GAAK0V,EAAc1V,EAAI2V,EAAeJ,EAAiB,GAGpE,IAASvV,EAAI,EAAGA,EAAI5F,KAAKyV,cAAc5P,OAAQD,IAC7C5F,KAAKyV,cAAc7P,GAAGkE,aAAa,UAAWa,EAAQ,IAEtD3K,KAAKyV,cAAc7P,GAAGkE,aAAa,gBAAiBoR,GAGtDlb,KAAKsV,SAASxL,aAAa,QAASY,EAAOiE,MAE3C3O,KAAKsV,SAASxL,aAAa,OAAQY,EAAO8Q,KAE1Cxb,KAAK+U,YAAYhJ,OAAOhJ,EAAUiY,EACpC,EAEAxG,EAAiBrU,UAAU4D,QAAU,SAAUhB,GAC7C/C,KAAK4U,eAAe7Q,QAAQhB,GAE5B/C,KAAK6U,cAAc9Q,QAAQhB,GAE3B/C,KAAKgJ,aAAajF,QAAQhB,GAE1B/C,KAAK+U,YAAYhR,QAAQhB,GAEzB/C,KAAK8U,YAAY/Q,QAAQhB,GAEzB/C,KAAK0I,UAAU3E,QAAQhB,EACzB,EAEA,O,uGC9lBA,SAAS0Y,EAAsBC,GAG7B,IAFA,IAAIC,EAAiB,GAEZ/V,EAAI,EAAGA,EAAI,GAAIA,IACtB+V,EAAeC,KAAK,EAAC1T,EAAAA,EAAAA,GAAOtC,EAAG,IAAIsC,EAAAA,EAAAA,GAAOtC,EAAG,KAG/C5F,KAAK6b,gBAAkBF,EACvB3b,KAAK8b,OAAS,EACd9b,KAAK+b,WAAa,IAAIzU,EAAAA,EACtBtH,KAAKgc,UAAY,IAAI/S,EAAAA,EAErBjJ,KAAKgc,UAAUvQ,OAAOzL,KAAK+b,YAG3B/b,KAAKic,cAAgB,IAAI3U,EAAAA,EACzBtH,KAAKkc,WAAa,IAAI5U,EAAAA,EACtB,IAAIiH,EAAYvO,KAAK4M,WAAa,IAAIjE,EAAAA,EAAK,CACzCC,SAAUC,EAAAA,EAAOC,OAAO,2BAE1ByF,EAAUvE,SAAS6C,qBACnB0B,EAAUvE,SAAS8C,cAAc,CAAC,WAAY,aAC9C9M,KAAKmc,SAAW,IAAIlT,EAAAA,EAAY,CAC9BC,aAAa,IAEflJ,KAAKoc,YAAc,IAAIzT,EAAAA,EAAK,CAC1BC,SAAUC,EAAAA,EAAOC,OAAO,0BAExBuT,mBAAmB,IAGrBrc,KAAKoc,YAAYpS,SAASoC,OAAO,WAAY,gBAE7CpM,KAAKoc,YAAYpS,SAASsS,MAAQ,SAAUC,GAI1CA,EAAIC,sBAAsBD,EAAIE,SAAUF,EAAIE,UAE5CF,EAAIG,kBAAkBH,EAAII,IAAKJ,EAAIK,oBAAqBL,EAAII,IAAKJ,EAAIK,oBACvE,CACF,CAEAnB,EAAsBtb,UAAY,CAChC0c,YAAapB,EAObqB,iBAAkB,SAAU/Z,EAAU2H,GACpC,IAAIqS,EAAWha,EAASga,SACpBtY,EAAMsY,EAASC,kBAAoBja,EAASkT,sBAC5C3S,EAAQyZ,EAASzZ,MAAQmB,EACzBlB,EAASwZ,EAASxZ,OAASkB,EAC3BoD,EAAS7H,KAAK6b,gBAAgB7b,KAAK8b,OAAS9b,KAAK6b,gBAAgBhW,QACjEoX,EAAiB,IAAIjS,EAAAA,EACzBiS,EAAe7R,MAAM,KAAmB,EAAZvD,EAAO,GAAW,GAAOvE,EACrD2Z,EAAe7R,MAAM,KAAmB,EAAZvD,EAAO,GAAW,GAAOtE,EACrDyH,EAAAA,EAAQkS,IAAIxS,EAAOS,iBAAkB8R,EAAgBvS,EAAOS,kBAC5DH,EAAAA,EAAQmS,OAAOzS,EAAOW,oBAAqBX,EAAOS,iBACpD,EAKAiS,WAAY,WACVpd,KAAK8b,OAAS,CAChB,EAKAuB,SAAU,WACR,OAAOrd,KAAK8b,MACd,EAKA3D,qBAAsB,WACpB,OAAOnY,KAAKgc,SACd,EACAsB,iBAAkB,WAChB,OAAOtd,KAAKkc,UACd,EACAnG,OAAQ,SAAUzS,EAAOC,GACvBvD,KAAKic,cAAc3Y,MAAQA,EAC3BtD,KAAKic,cAAc1Y,OAASA,EAC5BvD,KAAKkc,WAAW5Y,MAAQA,EACxBtD,KAAKkc,WAAW3Y,OAASA,EACzBvD,KAAK+b,WAAWzY,MAAQA,EACxBtD,KAAK+b,WAAWxY,OAASA,EAEzBvD,KAAKic,cAAc1P,QAEnBvM,KAAKkc,WAAW3P,QAEhBvM,KAAK+b,WAAWxP,OAClB,EACA8C,WAAY,WACV,OAAOrP,KAAK8b,QAAU9b,KAAK6b,gBAAgBhW,MAC7C,EACAkG,OAAQ,SAAUhJ,EAAUwa,EAAWC,GACrC,IAAIjP,EAAYvO,KAAK4M,WAED,IAAhB5M,KAAK8b,QAEPvN,EAAUrE,WAAW,UAAW,GAChCqE,EAAUrE,WAAW,UAAW,KAEhCqE,EAAUrE,WAAW,UAAW,IAChCqE,EAAUrE,WAAW,UAAW,KAGlCqE,EAAUrE,WAAW,WAAYlK,KAAKic,eACtC1N,EAAUrE,WAAW,WAAYqT,GAAavd,KAAK+b,YAEnD/b,KAAKmc,SAAS1Q,OAAOzL,KAAKkc,YAE1Blc,KAAKmc,SAASzQ,KAAK3I,GAEnBwL,EAAUxC,OAAOhJ,GAEjB/C,KAAKmc,SAASnQ,OAAOjJ,GAEhBya,IACHxd,KAAKoc,YAAYlS,WAAW,UAAWlK,KAAKkc,YAE5Clc,KAAKoc,YAAYrQ,OAAOhJ,IAI1B,IAAI+L,EAAM9O,KAAKic,cACfjc,KAAKic,cAAgBjc,KAAKkc,WAC1Blc,KAAKkc,WAAapN,EAClB9O,KAAK8b,QACP,EACA/X,QAAS,SAAUhB,GACjB/C,KAAKgc,UAAUjY,QAAQhB,GAEvB/C,KAAKmc,SAASpY,QAAQhB,GAEtB/C,KAAKic,cAAclY,QAAQhB,GAE3B/C,KAAKkc,WAAWnY,QAAQhB,GAExB/C,KAAK+b,WAAWhY,QAAQhB,GAExB/C,KAAKoc,YAAYrY,QAAQhB,GAEzB/C,KAAK4M,WAAW7I,QAAQhB,EAC1B,GAEF,K,sBCjKA,SAASmF,EAAOuV,EAAOC,GACrB,IAAIC,EAAS,EACTC,EAAI,EAAIF,EACR9X,EAAI6X,EAER,MAAO7X,EAAI,EACT+X,GAAkBC,GAAKhY,EAAI8X,GAC3B9X,EAAIoB,KAAKqU,MAAMzV,EAAI8X,GACnBE,GAAQF,EAGV,OAAOC,CACT,CAEA,K,4PCJIE,EAAeC,EAAAA,EAASD,aACxBE,EAAuB,CACzBC,KAAM,EACNC,OAAQ,EACRC,MAAO,GAGT,SAASC,EAAehS,GAKtB,OAJMA,aAAevN,QACnBuN,EAAM,CAACA,EAAKA,IAGPA,CACT,CAMA,IAAIiS,EAAeC,EAAAA,EAAKC,QAAO,WAC7B,MAAO,CAILve,GAAI,KAKJqB,OAAQ,KAKRmd,QAAS,IAAI1X,EAAAA,EAQb2X,YAAa,GAQbC,YAAa,IAKbC,oBAAqB,IAKrBC,oBAAqB,GAKrBC,UAAW,GAKXC,SAAU,GAKVC,SAAUnZ,IAKVoZ,QAASpZ,IAKTqZ,qBAAsB,EAKtBC,oBAAqB,KAKrBC,gBAAiB,GAKjBC,QAAS,GAKTC,kBAAmB,EAKnBC,gBAAiB,EAKjBC,eAAgB,EAChBC,eAAgB,SAChBC,kBAAmB,OAOnBC,MAAO,SAMPC,QAAS,KACTC,cAAc,EACdC,WAAW,EAEXC,KAAM,EAENC,OAAQ,EACRC,QAAS,EACTC,QAAS,EACTC,gBAAiB,IAAIC,EAAAA,EACrBC,aAAc,IAAID,EAAAA,EAClBE,UAAW,IACXC,WAAY,EACZC,cAAe,EACfC,WAAY,GAEhB,IAAG,WAED,CAAC,oBAAqB,qBAAsB,oBAAqB,kBAAmB,gBAAiB,sBAAuB,WAAW/J,SAAQ,SAAUgK,GACvJxgB,KAAKwgB,GAAWxgB,KAAKwgB,GAAS9U,KAAK1L,KACrC,GAAGA,KACL,GAAG,CAKDygB,KAAM,WACJ,IAAI1gB,EAAKC,KAAKD,GAEVA,IACFA,EAAG2gB,GAAG,YAAa1gB,KAAK2gB,mBACxB5gB,EAAG2gB,GAAG,YAAa1gB,KAAK4gB,iBACxB7gB,EAAG2gB,GAAG,aAAc1gB,KAAK6gB,oBACzB9gB,EAAG2gB,GAAG,QAAS1gB,KAAK8gB,eACpB/gB,EAAGghB,UAAUL,GAAG,QAAS1gB,KAAKghB,SAC9BjhB,EAAGuE,IAAI2c,iBAAiB,cAAejhB,KAAKkhB,qBAEhD,EAMAnd,QAAS,WACP,IAAIhE,EAAKC,KAAKD,GAEVA,IACFA,EAAGohB,IAAI,YAAanhB,KAAK2gB,mBACzB5gB,EAAGohB,IAAI,YAAanhB,KAAKohB,mBACzBrhB,EAAGohB,IAAI,UAAWnhB,KAAK4gB,iBACvB7gB,EAAGohB,IAAI,aAAcnhB,KAAK6gB,oBAC1B9gB,EAAGohB,IAAI,QAASnhB,KAAK8gB,eACrB/gB,EAAGohB,IAAI,YAAanhB,KAAK4gB,iBACzB7gB,EAAGuE,IAAI+c,oBAAoB,cAAerhB,KAAKkhB,qBAC/CnhB,EAAGghB,UAAUI,IAAI,QAASnhB,KAAKghB,UAGjChhB,KAAKshB,kBACP,EAMAC,YAAa,WACX,OAAOvhB,KAAKogB,SACd,EAMAoB,YAAa,SAAUC,GACrBzhB,KAAKogB,UAAYqB,EACjBzhB,KAAK2f,cAAe,CACtB,EAMA+B,oBAAqB,WACnB,OAAO1hB,KAAK2hB,UACd,EAMAC,oBAAqB,SAAUpb,GAC7BxG,KAAK2hB,WAAanb,EAClBxG,KAAK2f,cAAe,CACtB,EAQAkC,SAAU,WACR,OAAO7hB,KAAK8f,OAAS9Y,KAAKmB,GAAK,GACjC,EAQA2Z,QAAS,WACP,OAAQ9hB,KAAK6f,KAAO7Y,KAAKmB,GAAK,GAChC,EAMA4Z,UAAW,WACT,OAAO/hB,KAAKue,QAAQyD,SACtB,EAMAC,SAAU,SAAUC,GAClBA,EAAQlb,KAAK8S,IAAI9S,KAAK+S,IAAI/Z,KAAK6e,SAAUqD,GAAQliB,KAAK4e,UACtD5e,KAAK8f,OAASoC,EAAQ,IAAMlb,KAAKmB,GACjCnI,KAAK2f,cAAe,CACtB,EAMAwC,QAAS,SAAUC,GACjBA,EAAOpb,KAAK8S,IAAI9S,KAAK+S,IAAI/Z,KAAK+e,QAASqD,GAAOpiB,KAAK8e,SACnD9e,KAAK6f,MAAQuC,EAAO,IAAMpb,KAAKmB,GAC/BnI,KAAK2f,cAAe,CACtB,EAMA0C,UAAW,SAAUC,GACnBtiB,KAAKue,QAAQgE,SAASD,EACxB,EAKAE,UAAW,SAAUphB,GACnBpB,KAAKoB,OAASA,CAChB,EAKAqhB,UAAW,WACT,OAAOziB,KAAKoB,OAAOsJ,MACrB,EACAgY,wBAAyB,SAAUC,EAAkBC,GACnDA,EAAYA,GAAa,CAAC,EAC1B,IAAIC,EAAeD,EAAUC,cAAgB,EACzCC,EAAgBF,EAAUE,eAAiB,EAC3CC,EAAaJ,EAAiB7gB,IAAI,cAEnB,gBAAfihB,GAA+C,iBAAfA,GAAgD,cAAfA,IAKnEA,EAAa,eAGf/iB,KAAKgjB,YAAcD,EACnB/iB,KAAKoB,OAAO6hB,cAAcF,GAC1B,IAAIG,EAAiBP,EAAiB7gB,IAAI,YAAc+gB,EACpDM,EAAyBR,EAAiB7gB,IAAI,oBAAsBghB,EACxE,CAAC,CAAC,UAAW,IAAM,CAAC,cAAc,GAAQ,CAAC,uBAAwB,GAAI,CAAC,sBAAuB,MAAO,CAAC,kBAAmB,IAAK,CAAC,cAAe,IAAK,CAAC,cAAe,KAAM,CAAC,sBAAuB,IAAK,CAAC,sBAAuB,KAAM,CAAC,YAAa,IAAK,CAAC,WAAY,IAAK,CAAC,WAAYnd,KAAW,CAAC,UAAWA,KAAW,CAAC,oBAAqB,GAAI,CAAC,kBAAmB,GAAI,CAAC,iBAAkB,GAAI,CAAC,iBAAkB,QAAS,CAAC,oBAAqB,WAAW6Q,SAAQ,SAAU4M,GAC/cpjB,KAAKojB,EAAK,IAAMvF,EAAa8E,EAAiB7gB,IAAIshB,EAAK,IAAKA,EAAK,GACnE,GAAGpjB,MACHA,KAAKwe,aAAeqE,EACpB7iB,KAAKye,aAAeoE,EACpB7iB,KAAK2e,qBAAuBmE,EAAe9iB,KAAK0e,qBAAuBoE,EACvE,IAAIziB,EAAUsiB,EAAiBtiB,QAC3BgjB,EAAgB,CAAC,EACrB,CAAC,YAAa,0BAA2B,yBAAyB7M,SAAQ,SAAUJ,GAClFiN,EAAcjN,GAAOyH,EAAa8E,EAAiB7gB,IAAIsU,GAAM/V,GAAWA,EAAQyB,IAAIsU,GACtF,IACA,IAAI8L,EAAQrE,EAAa+E,EAAUV,MAAOS,EAAiB7gB,IAAI,WAAa,EACxEsgB,EAAOvE,EAAa+E,EAAUR,KAAMO,EAAiB7gB,IAAI,UAAY,EACrEwhB,EAASzF,EAAa+E,EAAUU,OAAQX,EAAiB7gB,IAAI,YAAc,CAAC,EAAG,EAAG,GAElFuhB,EAActC,WAAasC,EAAcE,wBAA0B,GAAKvjB,KAAKwjB,UAC/ExjB,KAAKyjB,UAAU,CACbvB,MAAOA,EACPE,KAAMA,EACNkB,OAAQA,EACR7B,SAAUyB,EACVQ,iBAAkBP,EAClBQ,OAAQN,EAAcO,sBACtBC,SAAUR,EAAcE,2BAG1BvjB,KAAKwhB,YAAY0B,GACjBljB,KAAKiiB,SAASC,GACdliB,KAAKmiB,QAAQC,GACbpiB,KAAKqiB,UAAUiB,GACftjB,KAAK4hB,oBAAoBuB,IAG3BnjB,KAAKwjB,WAAY,EAEjBxjB,KAAK8jB,qBACP,EACAA,oBAAqB,WACftK,CAaN,EAWAiK,UAAW,SAAUrf,GACnB,IAAIrE,EAAKC,KAAKD,GACVQ,EAAOP,KACPmW,EAAM,CAAC,EACP4N,EAAS,CAAC,EA2Bd,OAzBqB,MAAjB3f,EAAKqd,WACPtL,EAAIsL,SAAWzhB,KAAKuhB,cACpBwC,EAAOtC,SAAWrd,EAAKqd,UAGI,MAAzBrd,EAAKsf,mBACPvN,EAAIuN,iBAAmB1jB,KAAK0hB,sBAC5BqC,EAAOL,iBAAmBtf,EAAKsf,kBAGf,MAAdtf,EAAK8d,QACP/L,EAAI+L,MAAQliB,KAAK6hB,WACjBkC,EAAO7B,MAAQ9d,EAAK8d,OAGL,MAAb9d,EAAKge,OACPjM,EAAIiM,KAAOpiB,KAAK8hB,UAChBiC,EAAO3B,KAAOhe,EAAKge,MAGF,MAAfhe,EAAKkf,SACPnN,EAAImN,OAAStjB,KAAK+hB,YAClBgC,EAAOT,OAASlf,EAAKkf,QAGhBtjB,KAAKgkB,aAAajkB,EAAGghB,UAAUkD,QAAQ9N,GAAK+N,KAAK9f,EAAKyf,UAAY,IAAME,GAAQI,QAAO,WAC3E,MAAbhO,EAAI+L,OACN3hB,EAAK0hB,SAAS9L,EAAI+L,OAGJ,MAAZ/L,EAAIiM,MACN7hB,EAAK4hB,QAAQhM,EAAIiM,MAGC,MAAhBjM,EAAIsL,UACNlhB,EAAKihB,YAAYrL,EAAIsL,UAGL,MAAdtL,EAAImN,QACN/iB,EAAK8hB,UAAUlM,EAAImN,QAGO,MAAxBnN,EAAIuN,kBACNnjB,EAAKqhB,oBAAoBzL,EAAIuN,kBAG/BnjB,EAAKof,cAAe,CACtB,KAAIyE,MAAMhgB,EAAKuf,QAAU,SAC3B,EAKArC,iBAAkB,WAChB,IAAK,IAAI1b,EAAI,EAAGA,EAAI5F,KAAKugB,WAAW1a,OAAQD,IAC1C5F,KAAKugB,WAAW3a,GAAGye,OAGrBrkB,KAAKugB,WAAW1a,OAAS,CAC3B,EACAzF,OAAQ,WACNJ,KAAK2f,cAAe,EAEpB3f,KAAKghB,QAAQ,GACf,EACAsD,aAAc,WACZ,OAAOtkB,KAAKugB,WAAW1a,OAAS,CAClC,EAMAmb,QAAS,SAAUuD,GACjB,GAAIvkB,KAAK4f,UAAW,CAClB,IAAI4E,GAAuC,OAA7BxkB,KAAKif,oBAA+B,GAAK,GAAKjf,KAAKkf,gBAAkB,IAAMlY,KAAKmB,GAC9FnI,KAAK6f,MAAQ2E,EAASD,EAAY,IAClCvkB,KAAK2f,cAAe,CACtB,MAAW3f,KAAKigB,gBAAgBwE,MAAQ,IACtCzkB,KAAK2f,cAAe,IAGlB3Y,KAAK0d,IAAI1kB,KAAKqgB,YAAc,IAAOrgB,KAAKmgB,aAAasE,MAAQ,KAC/DzkB,KAAK2f,cAAe,GAGjB3f,KAAK2f,eAIV4E,EAAYvd,KAAK+S,IAAIwK,EAAW,IAEhCvkB,KAAK2kB,sBAAsBJ,GAE3BvkB,KAAK4kB,WAAWL,GAEhBvkB,KAAK6kB,cAAcN,GAEnBvkB,KAAK8kB,mBAEL9kB,KAAKyiB,YAAYriB,SACjBJ,KAAKD,IAAMC,KAAKD,GAAGglB,UACnB/kB,KAAKglB,QAAQ,UACbhlB,KAAK2f,cAAe,EACtB,EACAkF,cAAe,SAAUN,GACvB,IAAIU,EAAWjlB,KAAKigB,gBACpBjgB,KAAK6f,KAAOoF,EAAS7d,EAAImd,EAAY,GAAKvkB,KAAK6f,KAC/C7f,KAAK8f,OAASmF,EAAS9d,EAAIod,EAAY,GAAKvkB,KAAK8f,OACjD9f,KAAKiiB,SAASjiB,KAAK6hB,YACnB7hB,KAAKmiB,QAAQniB,KAAK8hB,WAElB9hB,KAAKklB,eAAeD,EAAUje,KAAKsT,IAAIta,KAAKmf,QAASoF,EAAY,IACnE,EACAI,sBAAuB,SAAUJ,GACN,gBAArBvkB,KAAKgjB,YACPhjB,KAAKmlB,aAAanlB,KAAKogB,UAAYpgB,KAAKqgB,WAAakE,EAAY,IAEjEvkB,KAAKolB,cAAcplB,KAAK2hB,WAAa3hB,KAAKqgB,WAAakE,EAAY,IAGrEvkB,KAAKqgB,YAAcrZ,KAAKsT,IAAIta,KAAKmf,QAASoF,EAAY,GACxD,EACAY,aAAc,SAAU1D,GACtBzhB,KAAKogB,UAAYpZ,KAAK8S,IAAI9S,KAAK+S,IAAI0H,EAAUzhB,KAAKye,aAAcze,KAAKwe,YACvE,EACA4G,cAAe,SAAU5e,GACvBxG,KAAK2hB,WAAa3a,KAAK8S,IAAI9S,KAAK+S,IAAIvT,EAAMxG,KAAK0e,qBAAsB1e,KAAK2e,qBAC1E,IAAIjU,EAAS1K,KAAKyiB,YACd4C,EAAerlB,KAAK2hB,WACpB2D,EAAcD,EAAerlB,KAAKoB,OAAO2b,SAASxZ,OAASvD,KAAKoB,OAAO2b,SAASzZ,MACpFoH,EAAOsT,MAAQsH,EAAc,EAC7B5a,EAAOwT,MAAQoH,EAAc,EAC7B5a,EAAO6a,IAAMF,EAAe,EAC5B3a,EAAO8a,QAAUH,EAAe,CAClC,EACAT,WAAY,SAAUL,GACpB,IAAIU,EAAWjlB,KAAKmgB,aAChBsE,EAAMzkB,KAAKogB,UACX2D,EAAS/jB,KAAKyiB,YACdgD,EAAQ1B,EAAO7Y,eAAe9D,EAC9Bse,EAAQ3B,EAAO7Y,eAAe/D,EAElCnH,KAAKue,QAAQoH,YAAYD,GAAQT,EAAS9d,EAAIsd,EAAM,KAAKkB,YAAYF,GAAQR,EAAS7d,EAAIqd,EAAM,KAEhGzkB,KAAKklB,eAAeD,EAAU,EAChC,EACAH,iBAAkB,WAChB,IAAIpa,EAAS1K,KAAKyiB,YACdmD,EAAM,IAAI/e,EAAAA,EACVuB,EAAQpI,KAAK8f,OAAS9Y,KAAKmB,GAAK,EAChCF,EAAMjI,KAAK6f,KAAO7Y,KAAKmB,GAAK,EAC5BE,EAAIrB,KAAKuB,IAAIH,GACjBwd,EAAIze,EAAIkB,EAAIrB,KAAKsB,IAAIL,GACrB2d,EAAIxe,GAAKJ,KAAKsB,IAAIF,GAClBwd,EAAIhjB,EAAIyF,EAAIrB,KAAKuB,IAAIN,GACrByC,EAAOmb,SAASC,KAAK9lB,KAAKue,SAASoH,YAAYC,EAAK5lB,KAAKogB,WACzD1V,EAAOqb,SAASC,WACfC,SAASjmB,KAAK6f,MAAMqG,SAASlmB,KAAK8f,OACrC,EACAqG,oBAAqB,WACnBC,aAAapmB,KAAKsgB,eAClB,IAAI+F,EAAOrmB,KAAKgf,qBACZze,EAAOP,MAENsmB,MAAMD,IAASA,EAAO,IACzBrmB,KAAKsgB,cAAgBiG,YAAW,WAC9BhmB,EAAKqf,WAAY,CACnB,GAAU,IAAPyG,GAEP,EACAnB,eAAgB,SAAUsB,EAAGrH,GAC3B,IAAIsH,EAAQD,EAAE/B,MACdgC,GAAgBtH,EAEZsH,EAAQ,OACVA,EAAQ,GAGVD,EAAEtf,YAAYwf,MAAMD,EACtB,EACAE,oBAAqB,WACnB,GAAK3mB,KAAKyiB,YAAV,CAIAziB,KAAKyiB,YAAYmE,uBACjB,IAAIC,EAAU7mB,KAAKyiB,YAAYvX,eAAetI,EAC1Csf,EAAQlb,KAAK8f,KAAKD,EAAQzf,GAC1Bgb,EAAOpb,KAAK+f,MAAMF,EAAQ1f,EAAG0f,EAAQjkB,GACzC5C,KAAK8f,OAASoC,EACdliB,KAAK6f,MAAQuC,EACbpiB,KAAKmiB,QAAQniB,KAAK8hB,WAClB9hB,KAAKiiB,SAASjiB,KAAK6hB,YAEf7hB,KAAKyiB,YAAYuE,OACnBhnB,KAAKmlB,aAAanlB,KAAKyiB,YAAYoD,SAASoB,KAAKjnB,KAAKue,UAEtDve,KAAKolB,cAAcplB,KAAKyiB,YAAY8C,IAAMvlB,KAAKyiB,YAAY+C,OAd7D,CAgBF,EACA7E,kBAAmB,SAAUuG,GAC3B,IAAIA,EAAEnD,SAKF/jB,KAAKskB,eAAT,CAIA,IAAInd,EAAI+f,EAAEC,QACN/f,EAAI8f,EAAEE,QAENpnB,KAAKoB,SAAWpB,KAAKoB,OAAOimB,aAAalgB,EAAGC,KAIhDpH,KAAKD,GAAG2gB,GAAG,YAAa1gB,KAAKohB,mBAC7BphB,KAAKD,GAAG2gB,GAAG,UAAW1gB,KAAK4gB,iBAEvBsG,EAAEI,MAAMC,cAC2B,IAAjCL,EAAEI,MAAMC,cAAc1hB,SACxB7F,KAAKyf,MAAQ,UAGXyH,EAAEI,MAAME,SAAWzJ,EAAqB/d,KAAKwf,mBAC/Cxf,KAAKyf,MAAQ,SACJyH,EAAEI,MAAME,SAAWzJ,EAAqB/d,KAAKuf,gBACtDvf,KAAKyf,MAAQ,MAEbzf,KAAKyf,MAAQ,GAKjBzf,KAAKigB,gBAAgBlZ,IAAI,EAAG,GAE5B/G,KAAK4f,WAAY,EAEb5f,KAAKynB,YACPznB,KAAKmmB,sBAGPnmB,KAAK+f,QAAUmH,EAAEC,QACjBnnB,KAAKggB,QAAUkH,EAAEE,QApCjB,CAqCF,EACAhG,kBAAmB,SAAU8F,GAC3B,KAAIA,EAAEnD,SAAUmD,EAAEnD,OAAO2D,mBAIrB1nB,KAAKskB,eAAT,CAIA,IAAIhF,EAAiBnB,EAAene,KAAKsf,gBACrCF,EAAoBjB,EAAene,KAAKof,mBAEzB,WAAfpf,KAAKyf,OACPzf,KAAKigB,gBAAgB7Y,GAAK8f,EAAEC,QAAUnnB,KAAK+f,SAAW/f,KAAKD,GAAGW,YAAc,EAAI0e,EAAkB,GAClGpf,KAAKigB,gBAAgB9Y,GAAK+f,EAAEE,QAAUpnB,KAAKggB,SAAWhgB,KAAKD,GAAGU,WAAa,EAAI2e,EAAkB,IACzE,QAAfpf,KAAKyf,QACdzf,KAAKmgB,aAAahZ,GAAK+f,EAAEC,QAAUnnB,KAAK+f,SAAW/f,KAAKD,GAAGU,WAAa6e,EAAe,GAAK,IAC5Ftf,KAAKmgB,aAAa/Y,IAAM8f,EAAEE,QAAUpnB,KAAKggB,SAAWhgB,KAAKD,GAAGW,YAAc4e,EAAe,GAAK,KAGhGtf,KAAK+f,QAAUmH,EAAEC,QACjBnnB,KAAKggB,QAAUkH,EAAEE,QACjBF,EAAEI,MAAMK,gBAfR,CAgBF,EACA9G,mBAAoB,SAAUqG,GAC5B,IAAIlnB,KAAKskB,eAAT,CAIA,IAAIsD,EAAQV,EAAEI,MAAMO,aAChBX,EAAEI,MAAMQ,OAEZ9nB,KAAK+nB,aAAab,EAAGU,EALrB,CAMF,EACA9G,cAAe,SAAUoG,GACnBlnB,KAAKskB,iBAITtkB,KAAK+nB,aAAab,EAAGA,EAAEc,WAAa,EAAI,GAAK,GAG7ChoB,KAAKyf,MAAQ,GACf,EACAsI,aAAc,SAAUb,EAAGU,GACzB,GAAc,IAAVA,EAAJ,CAIA,IAOInB,EAPAtf,EAAI+f,EAAEC,QACN/f,EAAI8f,EAAEE,QAEV,IAAIpnB,KAAKoB,QAAWpB,KAAKoB,OAAOimB,aAAalgB,EAAGC,GAO9Cqf,EADuB,gBAArBzmB,KAAKgjB,YACChc,KAAK8S,IAAI9S,KAAK8S,IAAI9S,KAAK+S,IAAI/Z,KAAKogB,UAAYpgB,KAAKwe,YAAaxe,KAAKye,YAAcze,KAAKogB,YAAc,GAAI,IAExGpZ,KAAK8S,IAAI9S,KAAK8S,IAAI9S,KAAK+S,IAAI/Z,KAAK2hB,WAAa3hB,KAAK2e,oBAAqB3e,KAAK0e,oBAAsB1e,KAAK2hB,aAAe,GAAI,IAGpI3hB,KAAKqgB,YAAcuH,EAAQ,GAAK,EAAI,GAAKnB,EAAQzmB,KAAKqf,gBACtDrf,KAAK4f,WAAY,EAEb5f,KAAKynB,YAA6B,WAAfznB,KAAKyf,OAC1Bzf,KAAKmmB,sBAGPe,EAAEI,MAAMK,gBAxBR,CAyBF,EACA/G,gBAAiB,WACf5gB,KAAKD,GAAGohB,IAAI,YAAanhB,KAAKohB,mBAC9BphB,KAAKD,GAAGohB,IAAI,UAAWnhB,KAAK4gB,gBAC9B,EACAqH,wBAAyB,WACvB,MAAkC,UAA3BjoB,KAAKwf,mBAAyD,UAAxBxf,KAAKuf,cACpD,EACA2B,oBAAqB,SAAUgG,GACzBlnB,KAAKioB,2BACPf,EAAES,gBAEN,EACA3D,aAAc,SAAUkE,GACtB,IAAIC,EAAYnoB,KAAKugB,WASrB,OARA4H,EAAUvM,KAAKsM,GACfA,EAASE,MAAK,WACZ,IAAIlR,EAAMiR,EAAUhR,QAAQ+Q,GAExBhR,GAAO,GACTiR,EAAUE,OAAOnR,EAAK,EAE1B,IACOgR,CACT,IAQFjpB,OAAOqpB,eAAelK,EAAaje,UAAW,aAAc,CAC1D2B,IAAK,SAAUqK,GACb,OAAOnM,KAAKuoB,WACd,EACAxhB,IAAK,SAAUoF,GACbnM,KAAKuoB,YAAcpc,EACnBnM,KAAK4f,UAAYzT,CACnB,IAEF,K,iCC/uBA,SAASqc,EAAKC,EAAKC,EAAGC,GACpB,IAAI7Z,EAAM2Z,EAAIC,GACdD,EAAIC,GAAKD,EAAIE,GACbF,EAAIE,GAAK7Z,CACX,CAEA,SAAS8Z,EAAUH,EAAKI,EAAO7K,EAAME,EAAO4K,GAC1C,IAAIC,EAAa/K,EACbgL,EAAaP,EAAII,GAErBL,EAAKC,EAAKI,EAAO3K,GAEjB,IAAK,IAAIsI,EAAIxI,EAAMwI,EAAItI,EAAOsI,IACxBsC,EAAQL,EAAIjC,GAAIwC,GAAc,IAChCR,EAAKC,EAAKjC,EAAGuC,GACbA,KAMJ,OADAP,EAAKC,EAAKvK,EAAO6K,GACVA,CACT,CAEA,SAASE,EAAU7d,EAAO0d,EAAS9K,EAAME,GACvC,GAAIF,EAAOE,EAAO,CAChB,IAAI2K,EAAQ7hB,KAAKqU,OAAO2C,EAAOE,GAAS,GACpCgL,EAAWN,EAAUxd,EAAOyd,EAAO7K,EAAME,EAAO4K,GACpDG,EAAU7d,EAAO0d,EAAS9K,EAAMkL,EAAW,GAC3CD,EAAU7d,EAAO0d,EAASI,EAAW,EAAGhL,EAC1C,CACF,CAGA,SAASiL,IAEPnpB,KAAKopB,OAAS,EAChB,CAEAD,EAAqBhpB,UAAUkpB,KAAO,SAAUZ,EAAKK,EAASne,GAC5D,IAAI8Z,EAAMgE,EAAI5iB,OAEd,GAAc,IAAV8E,EAAa,CACf3K,KAAKopB,OAAS,GACdppB,KAAKspB,SAAU,EAEf,IAAIT,EAAQ7hB,KAAKqU,MAAMoJ,EAAM,GAE7BzkB,KAAKopB,OAAOxN,KAAK,CACfiN,MAAOA,EACP7K,KAAM,EACNE,MAAOuG,EAAM,IAGfzkB,KAAKupB,oBAAsB,CAC7B,CAEA,IAAIvpB,KAAKspB,QAAT,CAIA,IAAIE,EAAQxpB,KAAKopB,OAEjB,GAAqB,IAAjBI,EAAM3jB,OAGR,OAFA7F,KAAKspB,SAAU,GAER,EACF,GAAIE,EAAM3jB,OAAS,IAAK,CAE7B,IAAK,IAAID,EAAI,EAAGA,EAAI4jB,EAAM3jB,OAAQD,IAEhC4jB,EAAM5jB,GAAGijB,MAAQD,EAAUH,EAAKe,EAAM5jB,GAAGijB,MAAOW,EAAM5jB,GAAGoY,KAAMwL,EAAM5jB,GAAGsY,MAAO4K,GAGjF,IAAIW,EAAkB,GAEtB,IAAS7jB,EAAI,EAAGA,EAAI4jB,EAAM3jB,OAAQD,IAAK,CAErC,IAAIoY,EAAOwL,EAAM5jB,GAAGoY,KAChBE,EAAQsL,EAAM5jB,GAAGijB,MAAQ,EAEzB3K,EAAQF,GACVyL,EAAgB7N,KAAK,CACnBiN,MAAO7hB,KAAKqU,OAAO6C,EAAQF,GAAQ,GACnCA,KAAMA,EACNE,MAAOA,IAKPF,EAAOwL,EAAM5jB,GAAGijB,MAAQ,EACxB3K,EAAQsL,EAAM5jB,GAAGsY,MAEjBA,EAAQF,GACVyL,EAAgB7N,KAAK,CACnBiN,MAAO7hB,KAAKqU,OAAO6C,EAAQF,GAAQ,GACnCA,KAAMA,EACNE,MAAOA,GAGb,CAEAsL,EAAQxpB,KAAKopB,OAASK,CACxB,MAGE,IAAS7jB,EAAI,EAAGA,EAAIoB,KAAKqU,MAAMmO,EAAM3jB,OAAS,IAAKD,IAAK,CAEtD,IAAIsR,EAAMsS,EAAM3jB,OAAS,EAAI7F,KAAKupB,oBAIlC,GAHAN,EAAUR,EAAKK,EAASU,EAAMtS,GAAK8G,KAAMwL,EAAMtS,GAAKgH,OACpDle,KAAKupB,sBAEDvpB,KAAKupB,sBAAwBC,EAAM3jB,OAErC,OADA7F,KAAKspB,SAAU,GACR,CAEX,CAIF,OAAO,CA7DP,CA8DF,EAEAH,EAAqBhW,KAAO8V,EAC5B,K,uCCtHIS,EAAgBrL,EAAAA,EAAKC,QAAO,WAC9B,MAAO,CAILve,GAAI,KAKJqB,OAAQ,KACRuoB,QAAS,GACTC,QAAS,EACTjK,cAAc,EACdkK,IAAK,EACLC,IAAK,EACLC,MAAO,EAEX,IAAG,WAED/pB,KAAK2gB,kBAAoB3gB,KAAK2gB,kBAAkBjV,KAAK1L,MACrDA,KAAK6gB,mBAAqB7gB,KAAK6gB,mBAAmBnV,KAAK1L,MACvDA,KAAKohB,kBAAoBphB,KAAKohB,kBAAkB1V,KAAK1L,MACrDA,KAAK4gB,gBAAkB5gB,KAAK4gB,gBAAgBlV,KAAK1L,MACjDA,KAAKghB,QAAUhhB,KAAKghB,QAAQtV,KAAK1L,KACnC,GAAG,CACDygB,KAAM,WACJ,IAAI1gB,EAAKC,KAAKD,GACdA,EAAG2gB,GAAG,YAAa1gB,KAAK2gB,mBACxB5gB,EAAG2gB,GAAG,aAAc1gB,KAAK6gB,oBACzB9gB,EAAG2gB,GAAG,YAAa1gB,KAAK4gB,iBACxB7gB,EAAGghB,UAAUL,GAAG,QAAS1gB,KAAKghB,QAChC,EACAgJ,UAAW,SAAUjG,GACnB/jB,KAAKiqB,QAAUlG,CACjB,EACAmG,QAAS,SAAUC,GACjBnqB,KAAK+pB,MAAQ/iB,KAAK8S,IAAI9S,KAAK+S,IAAIoQ,EAAMnqB,KAAK4pB,SAAU5pB,KAAK2pB,SACzD3pB,KAAK2f,cAAe,CACtB,EACAyK,UAAW,SAAUviB,GACnB7H,KAAK6pB,IAAMhiB,EAAO,GAClB7H,KAAK8pB,IAAMjiB,EAAO,GAClB7H,KAAK2f,cAAe,CACtB,EACA0K,QAAS,WACP,OAAOrqB,KAAK+pB,KACd,EACAO,UAAW,WACT,MAAO,CAACtqB,KAAK6pB,IAAK7pB,KAAK8pB,IACzB,EACA9I,QAAS,WACP,GAAKhhB,KAAKiqB,SAILjqB,KAAK2f,aAAV,CAIA,IAAIoE,EAAS/jB,KAAKiqB,QACdvD,EAAQ1mB,KAAK+pB,MACjBhG,EAAO8B,SAAS1e,EAAInH,KAAK6pB,IACzB9F,EAAO8B,SAASze,EAAIpH,KAAK8pB,IACzB/F,EAAO2C,MAAM3f,IAAI2f,EAAOA,EAAOA,GAC/B1mB,KAAKD,GAAGglB,UACR/kB,KAAK2f,cAAe,EACpB3f,KAAKglB,QAAQ,SATb,CAUF,EACArE,kBAAmB,SAAUuG,GAC3B,IAAIA,EAAEnD,OAAN,CAIA,IAAI5c,EAAI+f,EAAEC,QACN/f,EAAI8f,EAAEE,QAEV,IAAIpnB,KAAKoB,QAAWpB,KAAKoB,OAAOimB,aAAalgB,EAAGC,GAAhD,CAIApH,KAAKD,GAAG2gB,GAAG,YAAa1gB,KAAKohB,mBAC7BphB,KAAKD,GAAG2gB,GAAG,UAAW1gB,KAAK4gB,iBAE3B,IAAI2J,EAAMvqB,KAAKwqB,YAAYrjB,EAAGC,GAE9BpH,KAAKyqB,GAAKF,EAAIpjB,EACdnH,KAAK0qB,GAAKH,EAAInjB,CARd,CAPA,CAgBF,EAEAojB,YAAa,SAAUrjB,EAAGC,GACxB,IAAIsD,EAAS1K,KAAKoB,OAAOsJ,OACrBqS,EAAW/c,KAAKoB,OAAO2b,SAE3B,MAAO,CACL5V,GAAIA,EAAI4V,EAAS5V,GAAK4V,EAASzZ,OAASoH,EAAOwT,MAAQxT,EAAOsT,MAAQtT,EAAOsT,KAC7E5W,GAAIA,EAAI2V,EAAS3V,GAAK2V,EAASxZ,QAAUmH,EAAO8a,OAAS9a,EAAO6a,KAAO7a,EAAO6a,IAElF,EACAnE,kBAAmB,SAAU8F,GAC3B,IAAIqD,EAAMvqB,KAAKwqB,YAAYtD,EAAEC,QAASD,EAAEE,SAExCpnB,KAAK6pB,KAAOU,EAAIpjB,EAAInH,KAAKyqB,GACzBzqB,KAAK8pB,KAAOS,EAAInjB,EAAIpH,KAAK0qB,GACzB1qB,KAAKyqB,GAAKF,EAAIpjB,EACdnH,KAAK0qB,GAAKH,EAAInjB,EACdpH,KAAK2f,cAAe,CACtB,EACAiB,gBAAiB,SAAUsG,GACzBlnB,KAAKD,GAAGohB,IAAI,YAAanhB,KAAKohB,mBAC9BphB,KAAKD,GAAGohB,IAAI,UAAWnhB,KAAK4gB,gBAC9B,EACAC,mBAAoB,SAAUqG,GAC5BA,EAAIA,EAAEI,MACN,IAAIM,EAAQV,EAAEW,aACVX,EAAEY,OAEN,GAAc,IAAVF,EAAJ,CAIA,IAAIzgB,EAAI+f,EAAEC,QACN/f,EAAI8f,EAAEE,QAEV,IAAIpnB,KAAKoB,QAAWpB,KAAKoB,OAAOimB,aAAalgB,EAAGC,GAAhD,CAIA,IAAIujB,EAAY/C,EAAQ,EAAI,IAAM,GAC9BgD,EAAU5jB,KAAK8S,IAAI9S,KAAK+S,IAAI/Z,KAAK+pB,MAAQY,EAAW3qB,KAAK4pB,SAAU5pB,KAAK2pB,SAC5EgB,EAAYC,EAAU5qB,KAAK+pB,MAE3B,IAAIQ,EAAMvqB,KAAKwqB,YAAYrjB,EAAGC,GAE1ByjB,GAAQN,EAAIpjB,EAAInH,KAAK6pB,MAAQc,EAAY,GACzCG,GAAQP,EAAInjB,EAAIpH,KAAK8pB,MAAQa,EAAY,GAC7C3qB,KAAK6pB,KAAOgB,EACZ7qB,KAAK8pB,KAAOgB,EACZ9qB,KAAK+pB,MAAQa,EACb5qB,KAAK2f,cAAe,CAbpB,CAPA,CAqBF,EACA5b,QAAS,WACP,IAAIhE,EAAKC,KAAKD,GACdA,EAAGohB,IAAI,YAAanhB,KAAK2gB,mBACzB5gB,EAAGohB,IAAI,YAAanhB,KAAKohB,mBACzBrhB,EAAGohB,IAAI,UAAWnhB,KAAK4gB,iBACvB7gB,EAAGohB,IAAI,aAAcnhB,KAAK6gB,oBAC1B9gB,EAAGohB,IAAI,YAAanhB,KAAK4gB,iBACzB7gB,EAAGghB,UAAUI,IAAI,QAASnhB,KAAKghB,QACjC,IAEF,K,2DCpJA,SAAS+J,EAA0BhrB,EAAIonB,EAASC,EAAS9jB,EAAOC,EAAQynB,EAAKvmB,GAC3EzE,KAAKE,IAAMH,EAOXC,KAAKyqB,GAAK,EAMVzqB,KAAK0qB,GAAK,EACV1qB,KAAKirB,WAAa,EAOlBjrB,KAAKsD,MAAQA,EAObtD,KAAKuD,OAASA,EAMdvD,KAAKmnB,QAAUA,EAMfnnB,KAAKonB,QAAUA,EACfpnB,KAAKyE,IAAMA,EACXzE,KAAKgrB,IAAMA,CACb,CAuGA,SAASE,EAAsBziB,GAC7BA,EAAMA,GAAO,CAAC,EACdA,EAAInF,MAAQmF,EAAInF,OAAS,IACzBmF,EAAIlF,OAASkF,EAAIlF,QAAU,IAC3BkF,EAAIuU,iBAAmBvU,EAAIuU,kBAAoB,EAC/CvU,EAAIuiB,IAAiB,MAAXviB,EAAIuiB,IAAc,EAAIviB,EAAIuiB,IACpC,IAAIhoB,EAASuB,SAASC,cAAc,UACpCxB,EAAOM,MAAQmF,EAAInF,MAAQmF,EAAIuU,iBAC/Bha,EAAOO,OAASkF,EAAIlF,OAASkF,EAAIuU,iBACjChd,KAAKmrB,QAAUnoB,EACfhD,KAAKorB,SAAW,IAAI9jB,EAAAA,EAAU,CAC5BxE,MAAOE,EACP4X,OAAO,IAET,IAAIra,EAAOP,KAMXA,KAAKE,IAAMrB,EAAAA,GAAAA,KAAqBmE,GAChC,IAAIqoB,EAAwBrrB,KAAKE,IAAIorB,mBAErCtrB,KAAKE,IAAIorB,mBAAqB,WAC5BD,EAAsBnnB,KAAKlE,MAE3BO,EAAK6qB,SAAS7e,QAEdhM,EAAKgrB,UAAYhrB,EAAKgrB,UACxB,EAEAvrB,KAAK2U,KAAOlM,EAAIuU,iBAMhBhd,KAAKwrB,QAAU,CAAC,EAChBxrB,KAAKurB,SAAW9iB,EAAI8iB,SACpBvrB,KAAKyrB,KAAOhjB,EAAIuiB,IAEhBhrB,KAAK0rB,mBAAqB,CAAC,IAAIX,EAA0B/qB,KAAKE,IAAK,EAAG,EAAGuI,EAAInF,MAAOmF,EAAIlF,OAAQvD,KAAKyrB,KAAMzrB,KAAK2U,OAChH3U,KAAK2rB,WAAaljB,EAAInF,MACtBtD,KAAK4rB,YAAcnjB,EAAIlF,OACvBvD,KAAK6rB,gBAAkB,CACzB,CAlJAd,EAA0B5qB,UAAY,CACpC0c,YAAakO,EACblf,MAAO,WACL7L,KAAKyqB,GAAK,EACVzqB,KAAK0qB,GAAK,EACV1qB,KAAKirB,WAAa,CACpB,EASA9nB,IAAK,SAAU+C,EAAI5C,EAAOC,GAGxB,IAAIuoB,EAAO5lB,EAAG6lB,kBAED,MAATzoB,IACFA,EAAQwoB,EAAKxoB,OAGD,MAAVC,IACFA,EAASuoB,EAAKvoB,QAGhBD,GAAStD,KAAKyE,IACdlB,GAAUvD,KAAKyE,IAEfzE,KAAKgsB,YAAY9lB,EAAI5C,EAAOC,GAQ5B,IAAI4D,EAAInH,KAAKyqB,GACTrjB,EAAIpH,KAAK0qB,GACTuB,EAAcjsB,KAAKsD,MAAQtD,KAAKyE,IAChCynB,EAAelsB,KAAKuD,OAASvD,KAAKyE,IAClCumB,EAAMhrB,KAAKgrB,IAcf,GAZI7jB,EAAI7D,EAAQ0nB,EAAMiB,IAEpB9kB,EAAInH,KAAKyqB,GAAK,EACdrjB,GAAKpH,KAAKirB,WAAaD,EACvBhrB,KAAK0qB,GAAKtjB,EAEVpH,KAAKirB,WAAa,GAGpBjrB,KAAKyqB,IAAMnnB,EAAQ0nB,EACnBhrB,KAAKirB,WAAajkB,KAAK8S,IAAI9Z,KAAKirB,WAAY1nB,GAExC6D,EAAI7D,EAASynB,EAAMkB,EAErB,OAAO,KAIThmB,EAAGiB,GAAKnH,KAAKmnB,QAAUnnB,KAAKyE,IAAM0C,EAClCjB,EAAGkB,GAAKpH,KAAKonB,QAAUpnB,KAAKyE,IAAM2C,EAElCpH,KAAKE,IAAIiD,IAAI+C,GAEb,IAAIimB,EAAe,CAACnsB,KAAKmnB,QAAUnnB,KAAKsD,MAAOtD,KAAKonB,QAAUpnB,KAAKuD,QAC/D6oB,EAAS,CAAC,CAACjlB,EAAI8kB,EAAcE,EAAa,GAAI/kB,EAAI8kB,EAAeC,EAAa,IAAK,EAAEhlB,EAAI7D,GAAS2oB,EAAcE,EAAa,IAAK/kB,EAAI7D,GAAU2oB,EAAeC,EAAa,KAChL,OAAOC,CACT,EAQAJ,YAAa,SAAU9lB,EAAImmB,EAAaC,GAEtC,IAAIR,EAAO5lB,EAAG6lB,kBACVQ,EAASF,EAAcP,EAAKxoB,MAC5BkpB,EAASF,EAAeR,EAAKvoB,OACjC2C,EAAGiB,GAAK2kB,EAAK3kB,EAAIolB,EACjBrmB,EAAGkB,GAAK0kB,EAAK1kB,EAAIolB,EACjBtmB,EAAGqmB,OAASA,EACZrmB,EAAGsmB,OAASA,EACZtmB,EAAG9F,QACL,GA2DF8qB,EAAsB/qB,UAAY,CAIhC0L,MAAO,WACL,IAAK,IAAIjG,EAAI,EAAGA,EAAI5F,KAAK0rB,mBAAmB7lB,OAAQD,IAClD5F,KAAK0rB,mBAAmB9lB,GAAGiG,QAG7B7L,KAAK6rB,gBAAkB,EAEvB7rB,KAAKE,IAAI2L,QAET7L,KAAKwrB,QAAU,CAAC,CAClB,EAKA/qB,SAAU,WACR,OAAOT,KAAKyU,MACd,EAKA/T,UAAW,WACT,OAAOV,KAAK0U,OACd,EAKA+X,WAAY,WACV,OAAOzsB,KAAKorB,QACd,EAKAnV,oBAAqB,WACnB,OAAOjW,KAAK2U,IACd,EACAnU,MAAO,WACL,OAAOR,KAAKE,GACd,EACAwsB,gBAAiB,WACf,OAAO1sB,KAAK0rB,mBAAmB1rB,KAAK6rB,gBACtC,EACAc,QAAS,WAGP,GAFA3sB,KAAK6rB,kBAED7rB,KAAK0rB,mBAAmB1rB,KAAK6rB,iBAE/B,OAAO7rB,KAAK0rB,mBAAmB1rB,KAAK6rB,iBAGtC,IAAIe,EAAU,KAAO5sB,KAAK2U,KACtBkY,EAAoB7sB,KAAK0rB,mBACzBoB,EAAUD,EAAkBhnB,OAC5BshB,EAAU2F,EAAU9sB,KAAK2rB,WAAaiB,EAEtCxF,EAAUpgB,KAAKqU,MAAMyR,EAAU9sB,KAAK2rB,WAAaiB,GAAW5sB,KAAK4rB,YAErE,KAAIxE,GAAWwF,GAAf,CASA,IAAItpB,GAAS6jB,EAAUnnB,KAAK2rB,YAAc3rB,KAAK2U,KAC3CpR,GAAU6jB,EAAUpnB,KAAK4rB,aAAe5rB,KAAK2U,KAEjD,IAEE3U,KAAKE,IAAI6V,OAAO,CACdzS,MAAOA,EACPC,OAAQA,GAEZ,CAAE,MAAO2jB,GACPlnB,KAAKmrB,QAAQ7nB,MAAQA,EACrBtD,KAAKmrB,QAAQ5nB,OAASA,CACxB,CAEA,IAAIwpB,EAAU,IAAIhC,EAA0B/qB,KAAKE,IAAKinB,EAASC,EAASpnB,KAAK2rB,WAAY3rB,KAAK4rB,YAAa5rB,KAAKyrB,KAAMzrB,KAAK2U,MAI3H,OAFA3U,KAAK0rB,mBAAmB9P,KAAKmR,GAEtBA,CApBP,CAqBF,EACA5pB,IAAK,SAAU+C,EAAI5C,EAAOC,GACxB,GAAIvD,KAAKwrB,QAAQtlB,EAAG3E,IAKlB,OAAOvB,KAAKwrB,QAAQtlB,EAAG3E,IAGzB,IAAI6qB,EAASpsB,KAAK0sB,kBAAkBvpB,IAAI+C,EAAI5C,EAAOC,GAEnD,IAAK6oB,EAAQ,CACX,IAAIW,EAAU/sB,KAAK2sB,UAEnB,IAAKI,EAEH,OAGFX,EAASW,EAAQ5pB,IAAI+C,EAAI5C,EAAOC,EAClC,CAGA,OADAvD,KAAKwrB,QAAQtlB,EAAG3E,IAAM6qB,EACfA,CACT,EAMAY,eAAgB,WACd,IAAIvoB,EAAMzE,KAAK2U,KACf,MAAO,CAAC3U,KAAK2rB,WAAa3rB,KAAKmrB,QAAQ7nB,MAAQmB,EAAKzE,KAAK4rB,YAAc5rB,KAAKmrB,QAAQ5nB,OAASkB,EAC/F,EAOAwoB,UAAW,SAAU1rB,GACnB,OAAOvB,KAAKwrB,QAAQjqB,EACtB,EACAwC,QAAS,WACP/D,KAAKE,IAAI6D,SACX,GAEF,K,iCCpVA,SAASmpB,EAAOzmB,EAAM0mB,EAAaC,GACjCA,EAAMA,GAAO,EACb,IAKIC,EAAMC,EAAMC,EAAMC,EAAMrmB,EAAGC,EAAGZ,EAL9BinB,EAAWN,GAAeA,EAAYtnB,OACtC6nB,EAAWD,EAAWN,EAAY,GAAKC,EAAM3mB,EAAKZ,OAClD8nB,EAAYC,EAAWnnB,EAAM,EAAGinB,EAAUN,GAAK,GAC/CS,EAAY,GAChB,IAAKF,EAAW,OAAOE,EAIvB,GAFIJ,IAAUE,EAAYG,EAAernB,EAAM0mB,EAAaQ,EAAWP,IAEnE3mB,EAAKZ,OAAS,GAAKunB,EAAK,CAC1BC,EAAOE,EAAO9mB,EAAK,GACnB6mB,EAAOE,EAAO/mB,EAAK,GAEnB,IAAK,IAAIb,EAAIwnB,EAAKxnB,EAAI8nB,EAAU9nB,GAAKwnB,EACnCjmB,EAAIV,EAAKb,GACTwB,EAAIX,EAAKb,EAAI,GACTuB,EAAIkmB,IAAMA,EAAOlmB,GACjBC,EAAIkmB,IAAMA,EAAOlmB,GACjBD,EAAIomB,IAAMA,EAAOpmB,GACjBC,EAAIomB,IAAMA,EAAOpmB,GAIvBZ,EAAOQ,KAAK8S,IAAIyT,EAAOF,EAAMG,EAAOF,EACtC,CAGA,OADAS,EAAaJ,EAAWE,EAAWT,EAAKC,EAAMC,EAAM9mB,GAC7CqnB,CACT,CAGA,SAASD,EAAWnnB,EAAM2d,EAAO4J,EAAKZ,EAAKa,GACzC,IAAIroB,EAAGsoB,EAEP,GAAID,IAAcE,EAAW1nB,EAAM2d,EAAO4J,EAAKZ,GAAO,EACpD,IAAKxnB,EAAIwe,EAAOxe,EAAIooB,EAAKpoB,GAAKwnB,EAAKc,EAAOE,EAAWxoB,EAAGa,EAAKb,GAAIa,EAAKb,EAAI,GAAIsoB,QAE9E,IAAKtoB,EAAIooB,EAAMZ,EAAKxnB,GAAKwe,EAAOxe,GAAKwnB,EAAKc,EAAOE,EAAWxoB,EAAGa,EAAKb,GAAIa,EAAKb,EAAI,GAAIsoB,GAQvF,OALIA,GAAQG,EAAOH,EAAMA,EAAKI,QAC5B3W,EAAWuW,GACXA,EAAOA,EAAKI,MAGPJ,CACT,CAGA,SAASK,EAAanK,EAAO4J,GAC3B,IAAK5J,EAAO,OAAOA,EACd4J,IAAKA,EAAM5J,GAChB,IACIoK,EADAC,EAAIrK,EAGR,GAGE,GAFAoK,GAAQ,EAEHC,EAAEC,UAAYL,EAAOI,EAAGA,EAAEH,OAAqC,IAA5BK,EAAKF,EAAEG,KAAMH,EAAGA,EAAEH,MAMxDG,EAAIA,EAAEH,SANgE,CAGtE,GAFA3W,EAAW8W,GACXA,EAAIT,EAAMS,EAAEG,KACRH,IAAMA,EAAEH,KAAM,OAAO,KACzBE,GAAQ,CACV,QAGOA,GAASC,IAAMT,GAExB,OAAOA,CACT,CAGA,SAASD,EAAac,EAAKhB,EAAWT,EAAKC,EAAMC,EAAM9mB,EAAMkT,GAC3D,GAAKmV,EAAL,EAEKnV,GAAQlT,GAAMsoB,EAAWD,EAAKxB,EAAMC,EAAM9mB,GAC/C,IACIooB,EACAN,EAFAjK,EAAOwK,EAIX,MAAOA,EAAID,OAASC,EAAIP,KAItB,GAHAM,EAAOC,EAAID,KACXN,EAAOO,EAAIP,KAEP9nB,EAAOuoB,EAAYF,EAAKxB,EAAMC,EAAM9mB,GAAQwoB,EAAMH,GAEpDhB,EAAUjS,KAAKgT,EAAKhpB,EAAIwnB,GACxBS,EAAUjS,KAAKiT,EAAIjpB,EAAIwnB,GACvBS,EAAUjS,KAAK0S,EAAK1oB,EAAIwnB,GACxBzV,EAAWkX,GAEXA,EAAMP,EAAKA,KACXjK,EAAOiK,EAAKA,UAMd,GAFAO,EAAMP,EAEFO,IAAQxK,EAAM,CAEX3K,EAEe,IAATA,GACTmV,EAAMI,EAAuBJ,EAAKhB,EAAWT,GAC7CW,EAAac,EAAKhB,EAAWT,EAAKC,EAAMC,EAAM9mB,EAAM,IAClC,IAATkT,GACTwV,EAAYL,EAAKhB,EAAWT,EAAKC,EAAMC,EAAM9mB,GAL7CunB,EAAaQ,EAAaM,GAAMhB,EAAWT,EAAKC,EAAMC,EAAM9mB,EAAM,GAQpE,KACF,CArCc,CAuClB,CAGA,SAASwoB,EAAMH,GACb,IAAInG,EAAImG,EAAID,KACRjG,EAAIkG,EACJM,EAAIN,EAAIP,KACZ,GAAIK,EAAKjG,EAAGC,EAAGwG,IAAM,EAAG,OAAO,EAG/B,IAAIV,EAAII,EAAIP,KAAKA,KAEjB,MAAOG,IAAMI,EAAID,KAAM,CACrB,GAAIQ,EAAgB1G,EAAEvhB,EAAGuhB,EAAEthB,EAAGuhB,EAAExhB,EAAGwhB,EAAEvhB,EAAG+nB,EAAEhoB,EAAGgoB,EAAE/nB,EAAGqnB,EAAEtnB,EAAGsnB,EAAErnB,IAAMunB,EAAKF,EAAEG,KAAMH,EAAGA,EAAEH,OAAS,EAAG,OAAO,EACpGG,EAAIA,EAAEH,IACR,CAEA,OAAO,CACT,CAEA,SAASS,EAAYF,EAAKxB,EAAMC,EAAM9mB,GACpC,IAAIkiB,EAAImG,EAAID,KACRjG,EAAIkG,EACJM,EAAIN,EAAIP,KACZ,GAAIK,EAAKjG,EAAGC,EAAGwG,IAAM,EAAG,OAAO,EAG/B,IAAIE,EAAQ3G,EAAEvhB,EAAIwhB,EAAExhB,EAAIuhB,EAAEvhB,EAAIgoB,EAAEhoB,EAAIuhB,EAAEvhB,EAAIgoB,EAAEhoB,EAAIwhB,EAAExhB,EAAIgoB,EAAEhoB,EAAIwhB,EAAExhB,EAAIgoB,EAAEhoB,EAChEmoB,EAAQ5G,EAAEthB,EAAIuhB,EAAEvhB,EAAIshB,EAAEthB,EAAI+nB,EAAE/nB,EAAIshB,EAAEthB,EAAI+nB,EAAE/nB,EAAIuhB,EAAEvhB,EAAI+nB,EAAE/nB,EAAIuhB,EAAEvhB,EAAI+nB,EAAE/nB,EAChEmoB,EAAQ7G,EAAEvhB,EAAIwhB,EAAExhB,EAAIuhB,EAAEvhB,EAAIgoB,EAAEhoB,EAAIuhB,EAAEvhB,EAAIgoB,EAAEhoB,EAAIwhB,EAAExhB,EAAIgoB,EAAEhoB,EAAIwhB,EAAExhB,EAAIgoB,EAAEhoB,EAChEqoB,EAAQ9G,EAAEthB,EAAIuhB,EAAEvhB,EAAIshB,EAAEthB,EAAI+nB,EAAE/nB,EAAIshB,EAAEthB,EAAI+nB,EAAE/nB,EAAIuhB,EAAEvhB,EAAI+nB,EAAE/nB,EAAIuhB,EAAEvhB,EAAI+nB,EAAE/nB,EAEhEqoB,EAAOC,EAAOL,EAAOC,EAAOjC,EAAMC,EAAM9mB,GACxCmpB,EAAOD,EAAOH,EAAOC,EAAOnC,EAAMC,EAAM9mB,GAExCioB,EAAII,EAAIe,MAEZ,MAAOnB,GAAKA,EAAE7rB,GAAK+sB,EAAM,CACvB,GAAIlB,IAAMI,EAAID,MAAQH,IAAMI,EAAIP,MAAQc,EAAgB1G,EAAEvhB,EAAGuhB,EAAEthB,EAAGuhB,EAAExhB,EAAGwhB,EAAEvhB,EAAG+nB,EAAEhoB,EAAGgoB,EAAE/nB,EAAGqnB,EAAEtnB,EAAGsnB,EAAErnB,IAAMunB,EAAKF,EAAEG,KAAMH,EAAGA,EAAEH,OAAS,EAAG,OAAO,EACxIG,EAAIA,EAAEmB,KACR,CAGAnB,EAAII,EAAIgB,MAER,MAAOpB,GAAKA,EAAE7rB,GAAK6sB,EAAM,CACvB,GAAIhB,IAAMI,EAAID,MAAQH,IAAMI,EAAIP,MAAQc,EAAgB1G,EAAEvhB,EAAGuhB,EAAEthB,EAAGuhB,EAAExhB,EAAGwhB,EAAEvhB,EAAG+nB,EAAEhoB,EAAGgoB,EAAE/nB,EAAGqnB,EAAEtnB,EAAGsnB,EAAErnB,IAAMunB,EAAKF,EAAEG,KAAMH,EAAGA,EAAEH,OAAS,EAAG,OAAO,EACxIG,EAAIA,EAAEoB,KACR,CAEA,OAAO,CACT,CAGA,SAASZ,EAAuB7K,EAAOyJ,EAAWT,GAChD,IAAIqB,EAAIrK,EAER,EAAG,CACD,IAAIsE,EAAI+F,EAAEG,KACNjG,EAAI8F,EAAEH,KAAKA,MAEVD,EAAO3F,EAAGC,IAAMmH,EAAWpH,EAAG+F,EAAGA,EAAEH,KAAM3F,IAAMoH,EAAcrH,EAAGC,IAAMoH,EAAcpH,EAAGD,KAC1FmF,EAAUjS,KAAK8M,EAAE9iB,EAAIwnB,GACrBS,EAAUjS,KAAK6S,EAAE7oB,EAAIwnB,GACrBS,EAAUjS,KAAK+M,EAAE/iB,EAAIwnB,GAErBzV,EAAW8W,GACX9W,EAAW8W,EAAEH,MACbG,EAAIrK,EAAQuE,GAGd8F,EAAIA,EAAEH,IACR,OAASG,IAAMrK,GAEf,OAAOqK,CACT,CAGA,SAASS,EAAY9K,EAAOyJ,EAAWT,EAAKC,EAAMC,EAAM9mB,GAEtD,IAAIkiB,EAAItE,EAER,EAAG,CACD,IAAIuE,EAAID,EAAE4F,KAAKA,KAEf,MAAO3F,IAAMD,EAAEkG,KAAM,CACnB,GAAIlG,EAAE9iB,IAAM+iB,EAAE/iB,GAAKoqB,EAAgBtH,EAAGC,GAAI,CAExC,IAAIwG,EAAIc,EAAavH,EAAGC,GAOxB,OALAD,EAAI6F,EAAa7F,EAAGA,EAAE4F,MACtBa,EAAIZ,EAAaY,EAAGA,EAAEb,MAEtBP,EAAarF,EAAGmF,EAAWT,EAAKC,EAAMC,EAAM9mB,QAC5CunB,EAAaoB,EAAGtB,EAAWT,EAAKC,EAAMC,EAAM9mB,EAE9C,CAEAmiB,EAAIA,EAAE2F,IACR,CAEA5F,EAAIA,EAAE4F,IACR,OAAS5F,IAAMtE,EACjB,CAGA,SAAS0J,EAAernB,EAAM0mB,EAAaQ,EAAWP,GACpD,IACIxnB,EACA6e,EACAL,EACA4J,EACAkC,EALAC,EAAQ,GAOZ,IAAKvqB,EAAI,EAAG6e,EAAM0I,EAAYtnB,OAAQD,EAAI6e,EAAK7e,IAC7Cwe,EAAQ+I,EAAYvnB,GAAKwnB,EACzBY,EAAMpoB,EAAI6e,EAAM,EAAI0I,EAAYvnB,EAAI,GAAKwnB,EAAM3mB,EAAKZ,OACpDqqB,EAAOtC,EAAWnnB,EAAM2d,EAAO4J,EAAKZ,GAAK,GACrC8C,IAASA,EAAK5B,OAAM4B,EAAKxB,SAAU,GACvCyB,EAAMvU,KAAKwU,EAAYF,IAKzB,IAFAC,EAAMhd,KAAKkd,GAENzqB,EAAI,EAAGA,EAAIuqB,EAAMtqB,OAAQD,IAC5B0qB,EAAcH,EAAMvqB,GAAI+nB,GACxBA,EAAYY,EAAaZ,EAAWA,EAAUW,MAGhD,OAAOX,CACT,CAEA,SAAS0C,EAAS3H,EAAGC,GACnB,OAAOD,EAAEvhB,EAAIwhB,EAAExhB,CACjB,CAGA,SAASmpB,EAAcC,EAAM5C,GAG3B,GAFAA,EAAY6C,EAAeD,EAAM5C,GAE7BA,EAAW,CACb,IAAIhF,EAAIsH,EAAatC,EAAW4C,GAChChC,EAAa5F,EAAGA,EAAE2F,KACpB,CACF,CAGA,SAASkC,EAAeD,EAAM5C,GAC5B,IAII8C,EAJAhC,EAAId,EACJ+C,EAAKH,EAAKppB,EACVwpB,EAAKJ,EAAKnpB,EACVwpB,GAAMjrB,IAIV,EAAG,CACD,GAAIgrB,GAAMlC,EAAErnB,GAAKupB,GAAMlC,EAAEH,KAAKlnB,GAAKqnB,EAAEH,KAAKlnB,IAAMqnB,EAAErnB,EAAG,CACnD,IAAID,EAAIsnB,EAAEtnB,GAAKwpB,EAAKlC,EAAErnB,IAAMqnB,EAAEH,KAAKnnB,EAAIsnB,EAAEtnB,IAAMsnB,EAAEH,KAAKlnB,EAAIqnB,EAAErnB,GAE5D,GAAID,GAAKupB,GAAMvpB,EAAIypB,EAAI,CAGrB,GAFAA,EAAKzpB,EAEDA,IAAMupB,EAAI,CACZ,GAAIC,IAAOlC,EAAErnB,EAAG,OAAOqnB,EACvB,GAAIkC,IAAOlC,EAAEH,KAAKlnB,EAAG,OAAOqnB,EAAEH,IAChC,CAEAmC,EAAIhC,EAAEtnB,EAAIsnB,EAAEH,KAAKnnB,EAAIsnB,EAAIA,EAAEH,IAC7B,CACF,CAEAG,EAAIA,EAAEH,IACR,OAASG,IAAMd,GAEf,IAAK8C,EAAG,OAAO,KACf,GAAIC,IAAOE,EAAI,OAAOH,EAAE7B,KAKxB,IAIIiC,EAJAxM,EAAOoM,EACPK,EAAKL,EAAEtpB,EACP4pB,EAAKN,EAAErpB,EACP4pB,EAASrrB,IAEb8oB,EAAIgC,EAAEnC,KAEN,MAAOG,IAAMpK,EACPqM,GAAMjC,EAAEtnB,GAAKsnB,EAAEtnB,GAAK2pB,GAAMJ,IAAOjC,EAAEtnB,GAAKioB,EAAgBuB,EAAKI,EAAKL,EAAKE,EAAID,EAAIG,EAAIC,EAAIJ,EAAKI,EAAKH,EAAKF,EAAIC,EAAIlC,EAAEtnB,EAAGsnB,EAAErnB,KACvHypB,EAAM7pB,KAAK0d,IAAIiM,EAAKlC,EAAErnB,IAAMspB,EAAKjC,EAAEtnB,IAE9B0pB,EAAMG,GAAUH,IAAQG,GAAUvC,EAAEtnB,EAAIspB,EAAEtpB,IAAM4oB,EAActB,EAAG8B,KACpEE,EAAIhC,EACJuC,EAASH,IAIbpC,EAAIA,EAAEH,KAGR,OAAOmC,CACT,CAGA,SAAS3B,EAAW1K,EAAOiJ,EAAMC,EAAM9mB,GACrC,IAAIioB,EAAIrK,EAER,GACc,OAARqK,EAAE7rB,IAAY6rB,EAAE7rB,EAAI8sB,EAAOjB,EAAEtnB,EAAGsnB,EAAErnB,EAAGimB,EAAMC,EAAM9mB,IACrDioB,EAAEoB,MAAQpB,EAAEG,KACZH,EAAEmB,MAAQnB,EAAEH,KACZG,EAAIA,EAAEH,WACCG,IAAMrK,GAEfqK,EAAEoB,MAAMD,MAAQ,KAChBnB,EAAEoB,MAAQ,KACVoB,EAAWxC,EACb,CAIA,SAASwC,EAAWf,GAClB,IAAItqB,EACA6oB,EACAyC,EACAhK,EACAiK,EACAC,EACAC,EACAC,EACAC,EAAS,EAEb,EAAG,CACD9C,EAAIyB,EACJA,EAAO,KACPiB,EAAO,KACPC,EAAY,EAEZ,MAAO3C,EAAG,CAKR,IAJA2C,IACAF,EAAIzC,EACJ4C,EAAQ,EAEHzrB,EAAI,EAAGA,EAAI2rB,EAAQ3rB,IAGtB,GAFAyrB,IACAH,EAAIA,EAAEtB,OACDsB,EAAG,MAGVI,EAAQC,EAER,MAAOF,EAAQ,GAAKC,EAAQ,GAAKJ,EACjB,IAAVG,IAA0B,IAAVC,IAAgBJ,GAAKzC,EAAE7rB,GAAKsuB,EAAEtuB,IAChDskB,EAAIuH,EACJA,EAAIA,EAAEmB,MACNyB,MAEAnK,EAAIgK,EACJA,EAAIA,EAAEtB,MACN0B,KAGEH,EAAMA,EAAKvB,MAAQ1I,EAAOgJ,EAAOhJ,EACrCA,EAAE2I,MAAQsB,EACVA,EAAOjK,EAGTuH,EAAIyC,CACN,CAEAC,EAAKvB,MAAQ,KACb2B,GAAU,CACZ,OAASH,EAAY,GAErB,OAAOlB,CACT,CAGA,SAASR,EAAOvoB,EAAGC,EAAGimB,EAAMC,EAAM9mB,GAYhC,OAVAW,EAAI,OAASA,EAAIkmB,GAAQ7mB,EACzBY,EAAI,OAASA,EAAIkmB,GAAQ9mB,EACzBW,EAAmB,UAAdA,EAAIA,GAAK,GACdA,EAAmB,WAAdA,EAAIA,GAAK,GACdA,EAAmB,WAAdA,EAAIA,GAAK,GACdA,EAAmB,YAAdA,EAAIA,GAAK,GACdC,EAAmB,UAAdA,EAAIA,GAAK,GACdA,EAAmB,WAAdA,EAAIA,GAAK,GACdA,EAAmB,WAAdA,EAAIA,GAAK,GACdA,EAAmB,YAAdA,EAAIA,GAAK,GACPD,EAAIC,GAAK,CAClB,CAGA,SAASgpB,EAAYhM,GACnB,IAAIqK,EAAIrK,EACJoN,EAAWpN,EAEf,GACMqK,EAAEtnB,EAAIqqB,EAASrqB,IAAGqqB,EAAW/C,GACjCA,EAAIA,EAAEH,WACCG,IAAMrK,GAEf,OAAOoN,CACT,CAGA,SAASpC,EAAgBqC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GACnD,OAAQH,EAAKE,IAAOL,EAAKM,IAAOP,EAAKM,IAAOD,EAAKE,IAAO,IAAMP,EAAKM,IAAOH,EAAKI,IAAOL,EAAKI,IAAOL,EAAKM,IAAO,IAAML,EAAKI,IAAOD,EAAKE,IAAOH,EAAKE,IAAOH,EAAKI,IAAO,CACtK,CAGA,SAAShC,EAAgBtH,EAAGC,GAC1B,OAAOD,EAAE4F,KAAK1oB,IAAM+iB,EAAE/iB,GAAK8iB,EAAEkG,KAAKhpB,IAAM+iB,EAAE/iB,IAAMqsB,EAAkBvJ,EAAGC,IAAMoH,EAAcrH,EAAGC,IAAMoH,EAAcpH,EAAGD,IAAMwJ,EAAaxJ,EAAGC,EAC3I,CAGA,SAASgG,EAAKF,EAAGyC,EAAG7oB,GAClB,OAAQ6oB,EAAE9pB,EAAIqnB,EAAErnB,IAAMiB,EAAElB,EAAI+pB,EAAE/pB,IAAM+pB,EAAE/pB,EAAIsnB,EAAEtnB,IAAMkB,EAAEjB,EAAI8pB,EAAE9pB,EAC5D,CAGA,SAASinB,EAAO8D,EAAIC,GAClB,OAAOD,EAAGhrB,IAAMirB,EAAGjrB,GAAKgrB,EAAG/qB,IAAMgrB,EAAGhrB,CACtC,CAGA,SAAS0oB,EAAWqC,EAAIE,EAAID,EAAIE,GAC9B,SAAIjE,EAAO8D,EAAIE,IAAOhE,EAAO+D,EAAIE,IAAOjE,EAAO8D,EAAIG,IAAOjE,EAAO+D,EAAIC,KAC9D1D,EAAKwD,EAAIE,EAAID,GAAM,IAAMzD,EAAKwD,EAAIE,EAAIC,GAAM,GAAK3D,EAAKyD,EAAIE,EAAIH,GAAM,IAAMxD,EAAKyD,EAAIE,EAAID,GAAM,CACtG,CAGA,SAASJ,EAAkBvJ,EAAGC,GAC5B,IAAI8F,EAAI/F,EAER,EAAG,CACD,GAAI+F,EAAE7oB,IAAM8iB,EAAE9iB,GAAK6oB,EAAEH,KAAK1oB,IAAM8iB,EAAE9iB,GAAK6oB,EAAE7oB,IAAM+iB,EAAE/iB,GAAK6oB,EAAEH,KAAK1oB,IAAM+iB,EAAE/iB,GAAKkqB,EAAWrB,EAAGA,EAAEH,KAAM5F,EAAGC,GAAI,OAAO,EAC9G8F,EAAIA,EAAEH,IACR,OAASG,IAAM/F,GAEf,OAAO,CACT,CAGA,SAASqH,EAAcrH,EAAGC,GACxB,OAAOgG,EAAKjG,EAAEkG,KAAMlG,EAAGA,EAAE4F,MAAQ,EAAIK,EAAKjG,EAAGC,EAAGD,EAAE4F,OAAS,GAAKK,EAAKjG,EAAGA,EAAEkG,KAAMjG,IAAM,EAAIgG,EAAKjG,EAAGC,EAAGD,EAAEkG,MAAQ,GAAKD,EAAKjG,EAAGA,EAAE4F,KAAM3F,GAAK,CAC3I,CAGA,SAASuJ,EAAaxJ,EAAGC,GACvB,IAAI8F,EAAI/F,EACJ6J,GAAS,EACTR,GAAMrJ,EAAEvhB,EAAIwhB,EAAExhB,GAAK,EACnB6qB,GAAMtJ,EAAEthB,EAAIuhB,EAAEvhB,GAAK,EAEvB,GACMqnB,EAAErnB,EAAI4qB,IAAOvD,EAAEH,KAAKlnB,EAAI4qB,GAAMvD,EAAEH,KAAKlnB,IAAMqnB,EAAErnB,GAAK2qB,GAAMtD,EAAEH,KAAKnnB,EAAIsnB,EAAEtnB,IAAM6qB,EAAKvD,EAAErnB,IAAMqnB,EAAEH,KAAKlnB,EAAIqnB,EAAErnB,GAAKqnB,EAAEtnB,IAAGorB,GAAUA,GAC7H9D,EAAIA,EAAEH,WACCG,IAAM/F,GAEf,OAAO6J,CACT,CAIA,SAAStC,EAAavH,EAAGC,GACvB,IAAI6J,EAAK,IAAIC,EAAK/J,EAAE9iB,EAAG8iB,EAAEvhB,EAAGuhB,EAAEthB,GAC1BsrB,EAAK,IAAID,EAAK9J,EAAE/iB,EAAG+iB,EAAExhB,EAAGwhB,EAAEvhB,GAC1BurB,EAAKjK,EAAE4F,KACPsE,EAAKjK,EAAEiG,KASX,OARAlG,EAAE4F,KAAO3F,EACTA,EAAEiG,KAAOlG,EACT8J,EAAGlE,KAAOqE,EACVA,EAAG/D,KAAO4D,EACVE,EAAGpE,KAAOkE,EACVA,EAAG5D,KAAO8D,EACVE,EAAGtE,KAAOoE,EACVA,EAAG9D,KAAOgE,EACHF,CACT,CAGA,SAAStE,EAAWxoB,EAAGuB,EAAGC,EAAG8mB,GAC3B,IAAIO,EAAI,IAAIgE,EAAK7sB,EAAGuB,EAAGC,GAYvB,OAVK8mB,GAIHO,EAAEH,KAAOJ,EAAKI,KACdG,EAAEG,KAAOV,EACTA,EAAKI,KAAKM,KAAOH,EACjBP,EAAKI,KAAOG,IANZA,EAAEG,KAAOH,EACTA,EAAEH,KAAOG,GAQJA,CACT,CAEA,SAAS9W,EAAW8W,GAClBA,EAAEH,KAAKM,KAAOH,EAAEG,KAChBH,EAAEG,KAAKN,KAAOG,EAAEH,KACZG,EAAEoB,QAAOpB,EAAEoB,MAAMD,MAAQnB,EAAEmB,OAC3BnB,EAAEmB,QAAOnB,EAAEmB,MAAMC,MAAQpB,EAAEoB,MACjC,CAEA,SAAS4C,EAAK7sB,EAAGuB,EAAGC,GAElBpH,KAAK4F,EAAIA,EAET5F,KAAKmH,EAAIA,EACTnH,KAAKoH,EAAIA,EAETpH,KAAK4uB,KAAO,KACZ5uB,KAAKsuB,KAAO,KAEZtuB,KAAK4C,EAAI,KAET5C,KAAK6vB,MAAQ,KACb7vB,KAAK4vB,MAAQ,KAEb5vB,KAAK0uB,SAAU,CACjB,CA6BA,SAASP,EAAW1nB,EAAM2d,EAAO4J,EAAKZ,GAGpC,IAFA,IAAIyF,EAAM,EAEDjtB,EAAIwe,EAAOtd,EAAIknB,EAAMZ,EAAKxnB,EAAIooB,EAAKpoB,GAAKwnB,EAC/CyF,IAAQpsB,EAAKK,GAAKL,EAAKb,KAAOa,EAAKb,EAAI,GAAKa,EAAKK,EAAI,IACrDA,EAAIlB,EAGN,OAAOitB,CACT,CA/jBA,MA6hBA3F,EAAO4F,UAAY,SAAUrsB,EAAM0mB,EAAaC,EAAKS,GACnD,IAAIJ,EAAWN,GAAeA,EAAYtnB,OACtC6nB,EAAWD,EAAWN,EAAY,GAAKC,EAAM3mB,EAAKZ,OAClDktB,EAAc/rB,KAAK0d,IAAIyJ,EAAW1nB,EAAM,EAAGinB,EAAUN,IAEzD,GAAIK,EACF,IAAK,IAAI7nB,EAAI,EAAG6e,EAAM0I,EAAYtnB,OAAQD,EAAI6e,EAAK7e,IAAK,CACtD,IAAIwe,EAAQ+I,EAAYvnB,GAAKwnB,EACzBY,EAAMpoB,EAAI6e,EAAM,EAAI0I,EAAYvnB,EAAI,GAAKwnB,EAAM3mB,EAAKZ,OACxDktB,GAAe/rB,KAAK0d,IAAIyJ,EAAW1nB,EAAM2d,EAAO4J,EAAKZ,GACvD,CAGF,IAAI4F,EAAgB,EAEpB,IAAKptB,EAAI,EAAGA,EAAIioB,EAAUhoB,OAAQD,GAAK,EAAG,CACxC,IAAI8iB,EAAImF,EAAUjoB,GAAKwnB,EACnBzE,EAAIkF,EAAUjoB,EAAI,GAAKwnB,EACvB+B,EAAItB,EAAUjoB,EAAI,GAAKwnB,EAC3B4F,GAAiBhsB,KAAK0d,KAAKje,EAAKiiB,GAAKjiB,EAAK0oB,KAAO1oB,EAAKkiB,EAAI,GAAKliB,EAAKiiB,EAAI,KAAOjiB,EAAKiiB,GAAKjiB,EAAKkiB,KAAOliB,EAAK0oB,EAAI,GAAK1oB,EAAKiiB,EAAI,IAC9H,CAEA,OAAuB,IAAhBqK,GAAuC,IAAlBC,EAAsB,EAAIhsB,KAAK0d,KAAKsO,EAAgBD,GAAeA,EACjG,C,uCCpjBIE,EAAa,CAEjBA,kBAA+B,SAAUjxB,EAAakxB,EAAWC,EAAQC,EAAUC,GACjFF,EAASA,GAAU,SACnB,IAAI1sB,EAAOzE,EAAYsxB,QAAQF,GAC3BG,EAAY9sB,EAAK+sB,aAAaN,GAC9BO,EAASzxB,EAAY0xB,cAAcR,EAAWE,GAElC,MAAZC,GAAoBI,EAAOva,iBAAiBta,QAC9C60B,EAAOva,MAAQua,EAAOva,MAAMma,IAG9B,IAMIM,EANAC,EAAYL,EAAUzxB,IAAe,WAAXqxB,EAAsB,CAAC,QAAS,aAAe,CAAC,WAAY,QAAS,cAenG,OAbiB,MAAbS,IACFA,EAAYL,EAAUzxB,IAAI,CAAC,QAAS,eAKb,oBAAd8xB,GACTH,EAAON,OAASA,EAChBQ,EAAOC,EAAUH,IACa,kBAAdG,IAChBD,EAAO90B,EAAAA,GAAAA,UAAyB+0B,EAAWH,IAGtCE,CACT,EAQAV,iBAA8B,SAAU/Z,GACtC,OAAOA,aAAiBta,MAAQsa,EAAiB,MAATA,EAAgB,GAAK,CAACA,EAChE,GAEA,K,kJC9BI2a,EAAOC,EAAAA,EAASD,KAChBE,EAAOD,EAAAA,EAASC,KAOhBC,EAAeC,EAAAA,EAAS3V,QAAO,WACjC,MAAO,CACL4V,WAAY,CACVrO,SAAU,IAAIoO,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,YACzD91B,OAAQ,IAAI41B,EAAAA,EAASE,UAAU,SAAU,QAAS,EAAG,UACrDzgB,MAAO,IAAIugB,EAAAA,EAASE,UAAU,QAAS,QAAS,EAAG,SACnDC,aAAc,IAAIH,EAAAA,EAASE,UAAU,eAAgB,QAAS,GAC9DE,WAAY,IAAIJ,EAAAA,EAASE,UAAU,aAAc,QAAS,IAE5DG,SAAS,EACTC,cAAc,EACdC,UAAW,EACXC,cAAe,EAEfC,aAAc,KACdC,cAAe,EACfC,gBAAiB,EAErB,GAEA,CACEC,YAAa,WACX70B,KAAK20B,cAAgB,EACrB30B,KAAK40B,gBAAkB,CACzB,EACAE,YAAa,SAAUC,GACrB,IAAIR,EAAev0B,KAAKu0B,aACpBS,EAAch1B,KAAKi1B,oBAAsBF,EACzCG,EAAgBl1B,KAAKm1B,sBAAwBJ,EAE7C/0B,KAAKg1B,cAAgBA,IACvBh1B,KAAKk0B,WAAWrO,SAASpF,KAAKuU,GAE1BT,EACFv0B,KAAKk0B,WAAW71B,OAAOoiB,KAAKuU,GAE5Bh1B,KAAKk0B,WAAW71B,OAAO6a,MAAQ,KAGjClZ,KAAKk0B,WAAWxgB,MAAM+M,KAAKuU,IAGzBh1B,KAAKk1B,gBAAkBA,IACzBl1B,KAAKo1B,QAAUJ,EAAc,MAAS,IAAIK,YAA4B,EAAhBH,GAAqB,IAAII,YAA4B,EAAhBJ,GAC3Fl1B,KAAK00B,aAAe,IAAIW,YAAYL,GAExC,EACAC,kBAAmB,WACjB,IAAIR,EAAgBz0B,KAAKw0B,UAAY,EAAIx0B,KAAKy0B,cAAgB,EAC9D,OAAOA,EAAgB,EAAIz0B,KAAKu1B,wBAAwBd,GAAiBz0B,KAAKu0B,aAAe,GAAK,CACpG,EACAY,oBAAqB,WACnB,IAAIV,EAAgBz0B,KAAKw0B,UAAY,EAAIx0B,KAAKy0B,cAAgB,EAC9D,OAAOA,EAAgB,EAAIz0B,KAAKw1B,0BAA0Bf,GAAiB,EAC7E,EACAc,wBAAyB,SAAUd,GACjC,OAA6B,GAArBA,EAAgB,IAAUA,EAAgB,GAAK,CACzD,EACAe,0BAA2B,SAAUf,GACnC,IAAIgB,EAAgC,EAAhBhB,EAAoB,EACpCiB,EAAiC,EAAhBjB,EAAoB,EACzC,OAAQgB,EAAgB,GAAKC,EAAiB,EAAI,CACpD,EACAC,SAAU,SAAUze,EAAKxD,GAKvB,IAJA,IAAIshB,EAAch1B,KAAKi1B,oBACnB7Q,EAAQ4Q,EAAc9d,EACtB8W,EAAMgH,GAAe9d,EAAM,GAEtBtR,EAAIwe,EAAOxe,EAAIooB,EAAKpoB,IAC3B5F,KAAKk0B,WAAWxgB,MAAM3M,IAAInB,EAAG8N,GAG/B1T,KAAK41B,eAAe,QACtB,EAMAC,qBAAsB,SAAUC,GAC9B,OAAO91B,KAAK00B,aAAe10B,KAAK00B,aAAaoB,GAAe,IAC9D,EAUAC,OAAQ,WAaN,IAZA,IAAIC,EAAWnC,EAAKoC,OAChBC,EAAgBrC,EAAKlO,YACrBqI,EAAMgI,IACNjE,EAAKiE,IACLhE,EAAKgE,IACLG,EAAKH,IACLI,EAAKJ,IACLK,EAAKL,IACLM,EAAKN,IACLO,EAAM,GACNC,EAAU,GAEL5wB,EAAI,EAAGA,EAAI,EAAGA,IACrB2wB,EAAI3wB,GAAKowB,IAGX,IAAIS,EAAa,CACjB,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IACNC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3BC,EAAa,GAEjB,IAAS/wB,EAAI,EAAGA,EAAI6wB,EAAW5wB,OAAQD,IAGrC,IAFA,IAAIgxB,EAAQH,EAAW7wB,GAEdkB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAG1B,IAFA,IAAI+vB,EAAO,GAEFC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAKjb,KAAKgb,EAAMF,EAAa,EAAJ5vB,EAAQgwB,KAGnCH,EAAW/a,KAAKib,EAClB,CAGF,OAAO,SAAUzS,EAAOwB,EAAKmR,EAASvwB,EAAMkN,EAAOwf,GAEjD,IAAI8D,EAAch3B,KAAK20B,cAEvB,GAAI30B,KAAKw0B,UAAY,GAAKx0B,KAAKy0B,cAAgB,EAC7Cz0B,KAAKi3B,aAAa7S,EAAOwB,EAAKmR,EAASvwB,EAAMxG,KAAKw0B,UAAWx0B,KAAKy0B,cAAe/gB,OAC5E,CACLmgB,EAAK/N,KAAKkM,EAAIpM,GACdiO,EAAK3sB,UAAU8qB,EAAIA,GAEnB6B,EAAKqD,MAAMf,EAAIY,EAAS/E,GACxB6B,EAAK3sB,UAAUivB,EAAIA,GAEnBtC,EAAKqD,MAAMnF,EAAIC,EAAImE,GACnBtC,EAAK3sB,UAAUivB,EAAIA,GACnBtC,EAAKsD,OAAOf,EAAIrE,GAChB8B,EAAKsD,OAAOd,EAAIrE,GAChB6B,EAAKsD,OAAOb,EAAIH,GAChBD,EAAcK,EAAI,GAAInS,EAAO2N,EAAIvrB,EAAK,GAAK,GAC3C0vB,EAAcK,EAAI,GAAIA,EAAI,GAAIJ,EAAI3vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAInS,EAAO2N,EAAIvrB,EAAK,GAAK,GAC3C0vB,EAAcK,EAAI,GAAIA,EAAI,GAAID,EAAI9vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAInS,EAAOgS,EAAI5vB,EAAK,GAAK,GAC3C0vB,EAAcK,EAAI,GAAIA,EAAI,GAAID,EAAI9vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAInS,EAAOgS,EAAI5vB,EAAK,GAAK,GAC3C0vB,EAAcK,EAAI,GAAIA,EAAI,GAAIJ,EAAI3vB,EAAK,GAAK,GAC5C0vB,EAAclI,EAAK5J,EAAO4N,EAAIxrB,EAAK,IACnC0vB,EAAcK,EAAI,GAAIvI,EAAK+D,EAAIvrB,EAAK,GAAK,GACzC0vB,EAAcK,EAAI,GAAIA,EAAI,GAAIJ,EAAI3vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAIvI,EAAK+D,EAAIvrB,EAAK,GAAK,GACzC0vB,EAAcK,EAAI,GAAIA,EAAI,GAAID,EAAI9vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAIvI,EAAKoI,EAAI5vB,EAAK,GAAK,GACzC0vB,EAAcK,EAAI,GAAIA,EAAI,GAAID,EAAI9vB,EAAK,GAAK,GAC5C0vB,EAAcK,EAAI,GAAIvI,EAAKoI,EAAI5vB,EAAK,GAAK,GACzC0vB,EAAcK,EAAI,GAAIA,EAAI,GAAIJ,EAAI3vB,EAAK,GAAK,GAC5C,IAAI0tB,EAAal0B,KAAKk0B,WAEtB,GAAIl0B,KAAKu0B,aAAc,CACrBiC,EAAQ,GAAKzE,EACbyE,EAAQ,GAAKJ,EACbI,EAAQ,GAAKxE,EACbwE,EAAQ,GAAKH,EACbG,EAAQ,GAAKL,EACbK,EAAQ,GAAKF,EAGb,IAFA,IAAIc,EAAep3B,KAAK20B,cAEf/uB,EAAI,EAAGA,EAAI6wB,EAAW5wB,OAAQD,IAAK,CAG1C,IAFA,IAAIyxB,EAA8B,EAAvBr3B,KAAK40B,gBAEPkC,EAAI,EAAGA,EAAI,EAAGA,IACrB92B,KAAKo1B,QAAQiC,KAAUD,EAAeV,EAASI,GAGjDM,GAAgB,EAChBp3B,KAAK40B,iBAAmB,CAC1B,CAEA,IAAShvB,EAAI,EAAGA,EAAI6wB,EAAW5wB,OAAQD,IACrC,KAAIvH,EAASm4B,EAAQ5wB,GAErB,IAASkxB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAI5f,EAAMuf,EAAW7wB,GAAGkxB,GACxB5C,EAAWrO,SAAS9e,IAAI/G,KAAK20B,cAAe4B,EAAIrf,IAChDgd,EAAW71B,OAAO0I,IAAI/G,KAAK20B,cAAet2B,GAC1C61B,EAAWxgB,MAAM3M,IAAI/G,KAAK20B,gBAAiBjhB,EAC7C,CAPuB,CAS3B,KAAO,CACL,IAAS9N,EAAI,EAAGA,EAAI+wB,EAAW9wB,OAAQD,IAAK,CAG1C,IAFIyxB,EAA8B,EAAvBr3B,KAAK40B,gBAEPkC,EAAI,EAAGA,EAAI,EAAGA,IACrB92B,KAAKo1B,QAAQiC,EAAOP,GAAKH,EAAW/wB,GAAGkxB,GAAK92B,KAAK20B,cAGnD30B,KAAK40B,iBACP,CAEA,IAAShvB,EAAI,EAAGA,EAAI2wB,EAAI1wB,OAAQD,IAC9BsuB,EAAWrO,SAAS9e,IAAI/G,KAAK20B,cAAe4B,EAAI3wB,IAChDsuB,EAAWxgB,MAAM3M,IAAI/G,KAAK20B,gBAAiBjhB,EAE/C,CACF,CAEA,IAAI4jB,EAAWt3B,KAAK20B,cAEpB,IAAS/uB,EAAIoxB,EAAapxB,EAAI0xB,EAAU1xB,IACtC5F,KAAK00B,aAAa9uB,GAAKstB,CAE3B,CACF,CApIQ,GAgJR+D,aAAc,WACZ,IAAIlF,EAAK8B,EAAKoC,SACVjE,EAAK6B,EAAKoC,SACVE,EAAKtC,EAAKoC,SACVsB,EAAYxD,EAAKkC,SACjBuB,EAAiB,GACjBC,EAAW,CAAC,GAAI,GAAI,EAAG,GACvBC,EAAW,CAAC,EAAG,GAAI,GAAI,GACvBC,EAAW,CAAC,EAAG,GACnB,OAAO,SAAUvT,EAAOwB,EAAKmR,EAASvwB,EAAMguB,EAAWC,EAAe/gB,GACpEmgB,EAAK/N,KAAKkM,EAAIpM,GACdiO,EAAK3sB,UAAU8qB,EAAIA,GAEnB6B,EAAKqD,MAAMf,EAAIY,EAAS/E,GACxB6B,EAAK3sB,UAAUivB,EAAIA,GAEnBtC,EAAKqD,MAAMnF,EAAIC,EAAImE,GACnBtC,EAAK3sB,UAAUivB,EAAIA,GACnBoB,EAAU,GAAKxF,EAAG,GAClBwF,EAAU,GAAKxF,EAAG,GAClBwF,EAAU,GAAKxF,EAAG,GAClBwF,EAAU,GAAKvF,EAAG,GAClBuF,EAAU,GAAKvF,EAAG,GAClBuF,EAAU,GAAKvF,EAAG,GAClBuF,EAAU,GAAKpB,EAAG,GAClBoB,EAAU,GAAKpB,EAAG,GAClBoB,EAAU,GAAKpB,EAAG,GAClB3B,EAAYxtB,KAAK+S,IAAIvT,EAAK,GAAIA,EAAK,IAAM,EAAIguB,EAE7C,IAAK,IAAI5uB,EAAI,EAAGA,EAAI,EAAGA,IACrB4xB,EAAe5xB,GAAKoB,KAAK8S,IAAItT,EAAKZ,GAAiB,EAAZ4uB,EAAe,GAGxD,IAAIoD,GAAMpxB,EAAK,GAAKgxB,EAAe,IAAM,EACrCK,GAAMrxB,EAAK,GAAKgxB,EAAe,IAAM,EACrCM,GAAMtxB,EAAK,GAAKgxB,EAAe,IAAM,EACrCjN,EAAM,GACNlsB,EAAS,GACT+4B,EAAep3B,KAAK20B,cACpBoD,EAAa,GAEjB,IAASnyB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BmyB,EAAWnyB,GAAKmyB,EAAWnyB,GAAK,GAEhC,IAAK,IAAI6qB,EAAI,EAAGA,GAAKgE,EAAehE,IAClC,IAAK,IAAI3pB,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAChB,IAAN2pB,GAAiB,IAAN7qB,GAAiB,IAANA,GAAW6qB,IAAMgE,IACzCsD,EAAWnyB,GAAGgW,KAAKwb,GAGrB,IAAK,IAAIzwB,EAAI,EAAGA,GAAK8tB,EAAe9tB,IAAK,CACvC,IAAIsB,EAAMtB,EAAI8tB,EAAgBztB,KAAKmB,GAAK,EAAInB,KAAKmB,GAAK,EAAIrB,EACtDsB,EAAQqoB,EAAIgE,EAAgBztB,KAAKmB,GAAK,EAAInB,KAAKmB,GAAK,EAAIvC,EAE5DvH,EAAO,GAAKu5B,EAAK5wB,KAAKsB,IAAIL,GAAOjB,KAAKuB,IAAIH,GAC1C/J,EAAO,GAAKw5B,EAAK7wB,KAAKsB,IAAIF,GAC1B/J,EAAO,GAAKy5B,EAAK9wB,KAAKuB,IAAIN,GAAOjB,KAAKuB,IAAIH,GAC1CmiB,EAAI,GAAKlsB,EAAO,GAAKo5B,EAAS3wB,GAAK0wB,EAAe,GAAK,EACvDjN,EAAI,GAAKlsB,EAAO,GAAKw5B,EAAKF,EAAS/xB,GAAK4xB,EAAe,GAAK,EAC5DjN,EAAI,GAAKlsB,EAAO,GAAKq5B,EAAS5wB,GAAK0wB,EAAe,GAAK,EAEjDxwB,KAAK0d,IAAIkT,EAAKC,GAAM,MAAQ7wB,KAAK0d,IAAImT,EAAKC,GAAM,OACpDz5B,EAAO,IAAMu5B,EAAKA,EAClBv5B,EAAO,IAAMw5B,EAAKA,EAClBx5B,EAAO,IAAMy5B,EAAKA,GAGpBjE,EAAK3sB,UAAU7I,EAAQA,GACvBw1B,EAAKmE,cAAczN,EAAKA,EAAKgN,GAC7B1D,EAAKmE,cAAc35B,EAAQA,EAAQk5B,GACnC1D,EAAK1wB,IAAIonB,EAAKA,EAAKnG,GACnBpkB,KAAKk0B,WAAWrO,SAAS9e,IAAIqwB,EAAc7M,GAEvCvqB,KAAKu0B,cACPv0B,KAAKk0B,WAAW71B,OAAO0I,IAAIqwB,EAAc/4B,GAG3C2B,KAAKk0B,WAAWxgB,MAAM3M,IAAIqwB,EAAc1jB,GACxC0jB,GACF,CACF,CAEJ,CAEA,IAAI3B,EAAgC,EAAhBhB,EAAoB,EACpCiB,EAAiC,EAAhBjB,EAAoB,EACrChQ,EAAMgR,EAAgB,EAE1B,IAAS3uB,EAAI,EAAGA,EAAI4uB,EAAgB5uB,IAClC,IAASlB,EAAI,EAAGA,GAAK6vB,EAAe7vB,IAAK,CACvC,IAAIqyB,EAAKnxB,EAAI2d,EAAM7e,EAAI5F,KAAK20B,cACxBuD,EAAKpxB,EAAI2d,GAAO7e,EAAI,GAAK6e,EAAMzkB,KAAK20B,cACpCwD,GAAMrxB,EAAI,GAAK2d,GAAO7e,EAAI,GAAK6e,EAAMzkB,KAAK20B,cAC1CyD,GAAMtxB,EAAI,GAAK2d,EAAM7e,EAAI5F,KAAK20B,cAClC30B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACuD,EAAIF,EAAIC,IACzDl4B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACuD,EAAIC,EAAIH,GAC3D,CAIFj4B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACmD,EAAW,GAAG,GAAIA,EAAW,GAAG,GAAIA,EAAW,GAAG,KACnG/3B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACmD,EAAW,GAAG,GAAIA,EAAW,GAAG,GAAIA,EAAW,GAAG,KACnG/3B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACmD,EAAW,GAAG,GAAIA,EAAW,GAAG,GAAIA,EAAW,GAAG,KACnG/3B,KAAKq4B,mBAAmBr4B,KAAK40B,kBAAmB,CAACmD,EAAW,GAAG,GAAIA,EAAW,GAAG,GAAIA,EAAW,GAAG,KACnG/3B,KAAK20B,cAAgByC,CACvB,CACF,CA1Gc,KA4GhBv4B,EAAAA,GAAAA,SAAsBm1B,EAAa7zB,UAAWm4B,EAAAA,GAC9Cz5B,EAAAA,GAAAA,SAAsBm1B,EAAa7zB,UAAWo4B,EAAAA,GAC9C,K,sICjWIC,EAAOC,EAAAA,EAASD,KAGhBE,EAAmB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAOhCC,EAAgB1E,EAAAA,EAAS3V,QAAO,WAClC,MAAO,CACLsa,aAAc,EACdtE,SAAS,EAKTuE,eAAe,EACf3E,WAAY,CACVrO,SAAU,IAAIoO,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,YACzD91B,OAAQ,IAAI41B,EAAAA,EAASE,UAAU,SAAU,QAAS,GAClDtsB,OAAQ,IAAIosB,EAAAA,EAASE,UAAU,SAAU,QAAS,GAClDzgB,MAAO,IAAIugB,EAAAA,EAASE,UAAU,QAAS,QAAS,EAAG,UAGzD,GAEA,CAIEU,YAAa,WACX70B,KAAK20B,cAAgB,EACrB30B,KAAK84B,YAAc,EACnB94B,KAAK+4B,mBAAqB,EAC5B,EAKAC,eAAgB,SAAUC,GACxB,IAAI/E,EAAal0B,KAAKk0B,WAElBl0B,KAAKg1B,cAAgBiE,IACvB/E,EAAWrO,SAASpF,KAAKwY,GACzB/E,EAAWxgB,MAAM+M,KAAKwY,GAEjBj5B,KAAK64B,gBACR3E,EAAWrsB,OAAO4Y,KAAKwY,GACvB/E,EAAW71B,OAAOoiB,KAAKwY,IAGrBA,EAAU,MACRj5B,KAAKo1B,mBAAmBE,cAC1Bt1B,KAAKo1B,QAAU,IAAIC,YAAYr1B,KAAKo1B,UAGlCp1B,KAAKo1B,mBAAmBC,cAC1Br1B,KAAKo1B,QAAU,IAAIE,YAAYt1B,KAAKo1B,UAI5C,EAKA8D,iBAAkB,SAAUC,GACtBn5B,KAAKk1B,gBAAkBiE,IAEvBn5B,KAAKo1B,QADW,IAAd+D,EACa,KAEAn5B,KAAKg1B,YAAc,MAAS,IAAIK,YAAwB,EAAZ8D,GAAiB,IAAI7D,YAAwB,EAAZ6D,GAGlG,EACAC,yBAA0B,SAAUC,EAAIlH,EAAIC,EAAIkH,GAC9C,IAAI7U,EAAM+T,EAAKvR,KAAKoS,EAAIlH,GAAMqG,EAAKvR,KAAKmL,EAAID,GAAMqG,EAAKvR,KAAKqS,EAAIlH,GAC5D/I,EAAO,GAAK5E,EAAM,GAAKzkB,KAAK44B,aAChC,OAAOvP,CACT,EAUAkQ,yBAA0B,SAAUF,EAAIlH,EAAIC,EAAIkH,GAC9C,IAAIjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDE,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GAE7B,OAAKrpB,KAAK64B,cAGU,EAAXW,EAFW,EAAXA,EAAe,CAI1B,EAUAE,2BAA4B,SAAUL,EAAIlH,EAAIC,EAAIkH,GAChD,IAAIjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDE,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GAE7B,OAAKrpB,KAAK64B,cAGD,EAFW,EAAXW,CAIX,EAMAG,mBAAoB,WAClB,OAAO35B,KAAK45B,uBAAuBlB,EACrC,EAMAmB,qBAAsB,WACpB,OAAO75B,KAAK85B,yBAAyBpB,EACvC,EAOAkB,uBAAwB,SAAUG,GAChC,IAAIC,EAEJ,GAAsB,kBAAXD,EACTC,EAAYD,MACP,CACL,IAAIE,EAAiC,kBAAdF,EAAO,GAC9BC,EAAYC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,CAC1D,CAEA,OAAQ7F,KAAK64B,cAA4D,GAAjBmB,EAAY,GAArB,GAAjBA,EAAY,GAAS,CACrD,EAOAF,yBAA0B,SAAUC,GAClC,IAAIC,EAEJ,GAAsB,kBAAXD,EACTC,EAAYD,MACP,CACL,IAAIE,EAAiC,kBAAdF,EAAO,GAC9BC,EAAYC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,CAC1D,CAEA,OAAQ7F,KAAK64B,cAAsC,EAAJ,GAAjBmB,EAAY,EAC5C,EAWAE,cAAe,SAAUb,EAAIlH,EAAIC,EAAIkH,EAAI5lB,EAAOymB,GAC7B,MAAbA,IACFA,EAAY,GAKd,IAAIC,EAAKf,EAAG,GACRgB,EAAKhB,EAAG,GACRiB,EAAKnI,EAAG,GACRoI,EAAKpI,EAAG,GACRqI,EAAKpI,EAAG,GACRqI,EAAKrI,EAAG,GACRsI,EAAKpB,EAAG,GACRqB,EAAKrB,EAAG,GAERjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDsB,EAAQvR,EAAOA,EACfwR,EAAQD,EAAQvR,EAChByR,EAAO,EAAMzR,EACb0R,EAAO,EAAMH,EACbI,EAAO,EAAMJ,EACbK,EAAO,EAAMJ,EACbK,EAAQd,EAAU,EAALE,EAAWE,EACxBW,EAAQd,EAAU,EAALE,EAAWE,EACxBW,EAAoB,GAAXd,EAAKE,GAAYJ,EAAKM,EAC/BW,EAAoB,GAAXd,EAAKE,GAAYJ,EAAKM,EAC/BW,EAAKlB,EACLmB,EAAKlB,EACLmB,GAAOlB,EAAKF,GAAMU,EAAOI,EAAQH,EAAOK,EAAQP,EAChDY,GAAOlB,EAAKF,GAAMS,EAAOK,EAAQJ,EAAOM,EAAQR,EAChDa,EAAOR,EAAQF,EAAOI,EAAQH,EAC9BU,EAAOR,EAAQH,EAAOK,EAAQJ,EAC9BW,EAAQR,EAAQH,EAChBY,EAAQR,EAAQJ,EAChBa,EAAI,EACJhF,EAAI,EACJ0C,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GACzB0Q,EAAS,IAAI/xB,aAA8B,GAAhBwxB,EAAW,IAEtC3xB,GADAkyB,EAAS,GACA,GAEb,IAASjD,EAAI,EAAGA,EAAI0C,EAAW,EAAG1C,IAChCiD,EAAOlyB,KAAYyzB,EACnBvB,EAAOlyB,KAAY0zB,EACnBD,GAAME,EACND,GAAME,EACND,GAAOE,EACPD,GAAOE,EACPD,GAAQE,EACRD,GAAQE,EACRC,GAAKzS,EAEDyS,EAAI,IACNR,EAAKE,EAAM,EAAIx0B,KAAK+S,IAAIuhB,EAAIZ,GAAM1zB,KAAK8S,IAAIwhB,EAAIZ,GAC/Ca,EAAKE,EAAM,EAAIz0B,KAAK+S,IAAIwhB,EAAIZ,GAAM3zB,KAAK8S,IAAIyhB,EAAIZ,IAInD36B,KAAK+7B,YAAYhC,EAAQrmB,EAAOymB,EAClC,EASA6B,QAAS,SAAU3C,EAAIlH,EAAIze,EAAOymB,GAChCn6B,KAAK+7B,YAAY,CAAC1C,EAAIlH,GAAKze,EAAOymB,EACpC,EAUA4B,YAAa,WACX,IAAIE,EAAOzD,EAAKvC,SACZiG,EAAO1D,EAAKvC,SACZ53B,EAASm6B,EAAKvC,SACdkG,EAAU3D,EAAKvC,SACfmG,EAAQ,GACRC,EAAY,GACZC,EAAY,GAChB,OAAO,SAAUvC,EAAQrmB,EAAOymB,EAAWoC,EAAaC,GACtD,GAAKzC,EAAOl0B,OAAZ,CAIA,IAAIo0B,EAAiC,kBAAdF,EAAO,GAM9B,GAJmB,MAAfyC,IACFA,EAAcvC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,KAGxD22B,EAAc,GAAlB,CAImB,MAAfD,IACFA,EAAc,GAGC,MAAbpC,IACFA,EAAY,GAGdn6B,KAAK+4B,mBAAmBnd,KAAK5b,KAAK20B,eAWlC,IATA,IAOI8H,EAPAC,EAAkBzC,EAAgC,kBAAbvmB,EAAM,GAAkBA,EAAM7N,OAAS,IAAM22B,EAClFG,EAAe38B,KAAKk0B,WAAWrO,SAC/B+W,EAAY58B,KAAKk0B,WAAWxgB,MAC5BmpB,EAAa78B,KAAKk0B,WAAWrsB,OAC7Bi1B,EAAa98B,KAAKk0B,WAAW71B,OAC7B+2B,EAAUp1B,KAAKo1B,QACfgC,EAAep3B,KAAK20B,cAGfmC,EAAI,EAAGA,EAAI0F,EAAa1F,IAAK,CACpC,GAAImD,EACFmC,EAAQrC,EAAOjD,EAAIyF,GAGjBE,EADEC,EACWhpB,EAAMojB,EAAIyF,GAEV7oB,MAEV,CACL,IAAIqpB,EAAS,EAAJjG,EAAQyF,EAKjB,GAJAH,EAAQA,GAAS,GACjBA,EAAM,GAAKrC,EAAOgD,GAClBX,EAAM,GAAKrC,EAAOgD,EAAK,GAEnBL,EAAiB,CACnB,IAAIM,EAAS,EAAJlG,EAAQyF,EACjBE,EAAaA,GAAc,GAC3BA,EAAW,GAAK/oB,EAAMspB,GACtBP,EAAW,GAAK/oB,EAAMspB,EAAK,GAC3BP,EAAW,GAAK/oB,EAAMspB,EAAK,GAC3BP,EAAW,GAAK/oB,EAAMspB,EAAK,EAC7B,MACEP,EAAa/oB,CAEjB,CAEA,GAAK1T,KAAK64B,cAoDJ/B,EAAI,IACN6F,EAAa7W,KAAKsR,EAAcA,EAAe,GAC/CwF,EAAU9W,KAAKsR,EAAcA,EAAe,GAC5CA,SAvDqB,CACvB,IAAIvvB,EAEJ,GAAIivB,EAAI0F,EAAc,EAAG,CACvB,GAAIvC,EACFzB,EAAK1S,KAAKuW,EAAWtC,EAAOjD,EAAI,QAC3B,CACDiG,EAAe,GAATjG,EAAI,GAASyF,EACvBF,EAAYA,GAAa,GACzBA,EAAU,GAAKtC,EAAOgD,GACtBV,EAAU,GAAKtC,EAAOgD,EAAK,EAC7B,CAIA,GAAIjG,EAAI,EAAG,CACT0B,EAAKyE,IAAIhB,EAAMG,EAAOE,GACtB9D,EAAKyE,IAAIf,EAAMG,EAAWD,GAC1B5D,EAAKtxB,UAAU+0B,EAAMA,GACrBzD,EAAKtxB,UAAUg1B,EAAMA,GACrB1D,EAAKr1B,IAAIg5B,EAASF,EAAMC,GACxB1D,EAAKtxB,UAAUi1B,EAASA,GACxB,IAAIe,EAAQ/C,EAAY,EAAInzB,KAAK+S,IAAI,EAAIye,EAAK2E,IAAIlB,EAAME,GAAU,GAClE99B,EAAO,IAAM89B,EAAQ,GACrB99B,EAAO,GAAK89B,EAAQ,GACpBt0B,EAASq1B,CACX,MACE1E,EAAKyE,IAAIhB,EAAMI,EAAWD,GAC1B5D,EAAKtxB,UAAU+0B,EAAMA,GACrB59B,EAAO,IAAM49B,EAAK,GAClB59B,EAAO,GAAK49B,EAAK,GACjBp0B,EAASsyB,EAAY,CAEzB,MACE3B,EAAKyE,IAAIhB,EAAMG,EAAOE,GACtB9D,EAAKtxB,UAAU+0B,EAAMA,GACrB59B,EAAO,IAAM49B,EAAK,GAClB59B,EAAO,GAAK49B,EAAK,GACjBp0B,EAASsyB,EAAY,EAGvB2C,EAAW/1B,IAAIqwB,EAAc/4B,GAC7By+B,EAAW/1B,IAAIqwB,EAAe,EAAG/4B,GACjCw+B,EAAW91B,IAAIqwB,EAAcvvB,GAC7Bg1B,EAAW91B,IAAIqwB,EAAe,GAAIvvB,GAClC2wB,EAAK1S,KAAKwW,EAAWF,GACrBO,EAAa51B,IAAIqwB,EAAcgF,GAC/BO,EAAa51B,IAAIqwB,EAAe,EAAGgF,GACnCQ,EAAU71B,IAAIqwB,EAAcqF,GAC5BG,EAAU71B,IAAIqwB,EAAe,EAAGqF,GAChCrF,GAAgB,CAClB,CAQA,GAAKp3B,KAAK64B,cAgBR+D,EAAU71B,IAAIqwB,EAAcqF,GAC5BE,EAAa51B,IAAIqwB,EAAcgF,GAC/BhF,SAjBA,GAAIN,EAAI,EAAG,CACT,IAAIO,EAA0B,EAAnBr3B,KAAK84B,YACZ1D,EAAUp1B,KAAKo1B,QAInBA,EAAQiC,GAAQD,EAAe,EAC/BhC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnCp3B,KAAK84B,aAAe,CACtB,CAMJ,CAEA94B,KAAK20B,cAAgByC,CAjIrB,CAVA,CA4IF,CACF,CAxJa,GA6JbgG,aAAc,SAAUlmB,EAAKxD,GAI3B,IAHA,IAAI2pB,EAAcr9B,KAAK+4B,mBAAmB7hB,GACtComB,EAAYpmB,EAAMlX,KAAK+4B,mBAAmBlzB,OAAS,EAAI7F,KAAK+4B,mBAAmB7hB,EAAM,GAAKlX,KAAK20B,cAE1F/uB,EAAIy3B,EAAaz3B,EAAI03B,EAAW13B,IACvC5F,KAAKk0B,WAAWxgB,MAAM3M,IAAInB,EAAG8N,GAG/B1T,KAAKuM,MAAM,QACb,IAEF1N,EAAAA,GAAAA,SAAsB85B,EAAcx4B,UAAWm4B,EAAAA,GAC/C,K,uICnbIzE,EAAO4E,EAAAA,EAAS5E,KAGhB6E,EAAmB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAOhCC,EAAgB1E,EAAAA,EAAS3V,QAAO,WAClC,MAAO,CACLsa,aAAc,EACdtE,SAAS,EAKTuE,eAAe,EACf3E,WAAY,CACVrO,SAAU,IAAIoO,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,YACzDoJ,aAAc,IAAItJ,EAAAA,EAASE,UAAU,eAAgB,QAAS,GAC9DqJ,aAAc,IAAIvJ,EAAAA,EAASE,UAAU,eAAgB,QAAS,GAC9DsJ,iBAAkB,IAAIxJ,EAAAA,EAASE,UAAU,mBAAoB,QAAS,GACtEC,aAAc,IAAIH,EAAAA,EAASE,UAAU,eAAgB,QAAS,GAC9DuJ,iBAAkB,IAAIzJ,EAAAA,EAASE,UAAU,mBAAoB,QAAS,GACtEtsB,OAAQ,IAAIosB,EAAAA,EAASE,UAAU,SAAU,QAAS,GAClDzgB,MAAO,IAAIugB,EAAAA,EAASE,UAAU,QAAS,QAAS,EAAG,UAGzD,GAEA,CAIEU,YAAa,WACX70B,KAAK20B,cAAgB,EACrB30B,KAAK40B,gBAAkB,EACvB50B,KAAK+4B,mBAAqB,EAC5B,EAKAC,eAAgB,SAAUC,GACxB,IAAI/E,EAAal0B,KAAKk0B,WAElBl0B,KAAKg1B,cAAgBiE,IACvB/E,EAAWrO,SAASpF,KAAKwY,GACzB/E,EAAWxgB,MAAM+M,KAAKwY,GAEjBj5B,KAAK64B,gBACR3E,EAAWqJ,aAAa9c,KAAKwY,GAC7B/E,EAAWsJ,aAAa/c,KAAKwY,GAC7B/E,EAAWrsB,OAAO4Y,KAAKwY,IAGrBA,EAAU,MACRj5B,KAAKo1B,mBAAmBE,cAC1Bt1B,KAAKo1B,QAAU,IAAIC,YAAYr1B,KAAKo1B,UAGlCp1B,KAAKo1B,mBAAmBC,cAC1Br1B,KAAKo1B,QAAU,IAAIE,YAAYt1B,KAAKo1B,UAI5C,EAKA8D,iBAAkB,SAAUC,GACtBn5B,KAAKk1B,gBAAkBiE,IAEvBn5B,KAAKo1B,QADW,IAAd+D,EACa,KAEAn5B,KAAKg1B,YAAc,MAAS,IAAIK,YAAwB,EAAZ8D,GAAiB,IAAI7D,YAAwB,EAAZ6D,GAGlG,EACAC,yBAA0B,SAAUC,EAAIlH,EAAIC,EAAIkH,GAC9C,IAAI7U,EAAMoP,EAAK5M,KAAKoS,EAAIlH,GAAM0B,EAAK5M,KAAKmL,EAAID,GAAM0B,EAAK5M,KAAKqS,EAAIlH,GAC5D/I,EAAO,GAAK5E,EAAM,GAAKzkB,KAAK44B,aAChC,OAAOvP,CACT,EAUAkQ,yBAA0B,SAAUF,EAAIlH,EAAIC,EAAIkH,GAC9C,IAAIjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDE,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GAE7B,OAAKrpB,KAAK64B,cAGU,EAAXW,EAFW,EAAXA,EAAe,CAI1B,EAUAE,2BAA4B,SAAUL,EAAIlH,EAAIC,EAAIkH,GAChD,IAAIjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDE,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GAE7B,OAAKrpB,KAAK64B,cAGD,EAFW,EAAXW,CAIX,EAMAG,mBAAoB,WAClB,OAAO35B,KAAK45B,uBAAuBlB,EACrC,EAMAmB,qBAAsB,WACpB,OAAO75B,KAAK85B,yBAAyBpB,EACvC,EAOAkB,uBAAwB,SAAUG,GAChC,IAAIC,EAEJ,GAAsB,kBAAXD,EACTC,EAAYD,MACP,CACL,IAAIE,EAAiC,kBAAdF,EAAO,GAC9BC,EAAYC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,CAC1D,CAEA,OAAQ7F,KAAK64B,cAA4D,GAAjBmB,EAAY,GAArB,GAAjBA,EAAY,GAAS,CACrD,EAOAF,yBAA0B,SAAUC,GAClC,IAAIC,EAEJ,GAAsB,kBAAXD,EACTC,EAAYD,MACP,CACL,IAAIE,EAAiC,kBAAdF,EAAO,GAC9BC,EAAYC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,CAC1D,CAEA,OAAQ7F,KAAK64B,cAAiD,EAAJ,EAA7B7xB,KAAK8S,IAAIkgB,EAAY,EAAG,EACvD,EAWAE,cAAe,SAAUb,EAAIlH,EAAIC,EAAIkH,EAAI5lB,EAAOymB,GAC7B,MAAbA,IACFA,EAAY,GAKd,IAAIC,EAAKf,EAAG,GACRgB,EAAKhB,EAAG,GACRsE,EAAKtE,EAAG,GACRiB,EAAKnI,EAAG,GACRoI,EAAKpI,EAAG,GACRyL,EAAKzL,EAAG,GACRqI,EAAKpI,EAAG,GACRqI,EAAKrI,EAAG,GACRyL,EAAKzL,EAAG,GACRsI,EAAKpB,EAAG,GACRqB,EAAKrB,EAAG,GACRwE,EAAKxE,EAAG,GAERjQ,EAAOrpB,KAAKo5B,yBAAyBC,EAAIlH,EAAIC,EAAIkH,GAEjDsB,EAAQvR,EAAOA,EACfwR,EAAQD,EAAQvR,EAChByR,EAAO,EAAMzR,EACb0R,EAAO,EAAMH,EACbI,EAAO,EAAMJ,EACbK,EAAO,EAAMJ,EACbK,EAAQd,EAAU,EAALE,EAAWE,EACxBW,EAAQd,EAAU,EAALE,EAAWE,EACxBsD,EAAQJ,EAAU,EAALC,EAAWC,EACxBzC,EAAoB,GAAXd,EAAKE,GAAYJ,EAAKM,EAC/BW,EAAoB,GAAXd,EAAKE,GAAYJ,EAAKM,EAC/BqD,EAAoB,GAAXJ,EAAKC,GAAYF,EAAKG,EAC/BxC,EAAKlB,EACLmB,EAAKlB,EACL4D,EAAKN,EACLnC,GAAOlB,EAAKF,GAAMU,EAAOI,EAAQH,EAAOK,EAAQP,EAChDY,GAAOlB,EAAKF,GAAMS,EAAOK,EAAQJ,EAAOM,EAAQR,EAChDqD,GAAON,EAAKD,GAAM7C,EAAOiD,EAAQhD,EAAOiD,EAAQnD,EAChDa,EAAOR,EAAQF,EAAOI,EAAQH,EAC9BU,EAAOR,EAAQH,EAAOK,EAAQJ,EAC9BkD,EAAOJ,EAAQ/C,EAAOgD,EAAQ/C,EAC9BW,EAAQR,EAAQH,EAChBY,EAAQR,EAAQJ,EAChBmD,EAAQJ,EAAQ/C,EAChBa,EAAI,EACJhF,EAAI,EACJ0C,EAAWxyB,KAAKyyB,KAAK,EAAIpQ,GACzB0Q,EAAS,IAAI/xB,aAA8B,GAAhBwxB,EAAW,IAEtC3xB,GADAkyB,EAAS,GACA,GAEb,IAASjD,EAAI,EAAGA,EAAI0C,EAAW,EAAG1C,IAChCiD,EAAOlyB,KAAYyzB,EACnBvB,EAAOlyB,KAAY0zB,EACnBxB,EAAOlyB,KAAYo2B,EACnB3C,GAAME,EACND,GAAME,EACNwC,GAAMC,EACN1C,GAAOE,EACPD,GAAOE,EACPuC,GAAOC,EACPzC,GAAQE,EACRD,GAAQE,EACRsC,GAAQC,EACRtC,GAAKzS,EAEDyS,EAAI,IACNR,EAAKE,EAAM,EAAIx0B,KAAK+S,IAAIuhB,EAAIZ,GAAM1zB,KAAK8S,IAAIwhB,EAAIZ,GAC/Ca,EAAKE,EAAM,EAAIz0B,KAAK+S,IAAIwhB,EAAIZ,GAAM3zB,KAAK8S,IAAIyhB,EAAIZ,GAC/CsD,EAAKC,EAAM,EAAIl3B,KAAK+S,IAAIkkB,EAAIH,GAAM92B,KAAK8S,IAAImkB,EAAIH,IAInD,OAAO99B,KAAK+7B,YAAYhC,EAAQrmB,EAAOymB,EACzC,EASA6B,QAAS,SAAU3C,EAAIlH,EAAIze,EAAOymB,GAChC,OAAOn6B,KAAK+7B,YAAY,CAAC1C,EAAIlH,GAAKze,EAAOymB,EAC3C,EAUA4B,YAAa,SAAUhC,EAAQrmB,EAAOymB,EAAWkD,EAAab,GAC5D,GAAKzC,EAAOl0B,OAAZ,CAIA,IAAIo0B,EAAiC,kBAAdF,EAAO,GAM9B,GAJmB,MAAfyC,IACFA,EAAcvC,EAAYF,EAAOl0B,OAASk0B,EAAOl0B,OAAS,KAGxD22B,EAAc,GAAlB,CAImB,MAAfa,IACFA,EAAc,GAGC,MAAblD,IACFA,EAAY,GAGdn6B,KAAK+4B,mBAAmBnd,KAAK5b,KAAK20B,eAE9BsF,EAAiC,kBAAdF,EAAO,GAA9B,IASIqC,EACAK,EATAC,EAAkBzC,EAAgC,kBAAbvmB,EAAM,GAAkBA,EAAM7N,OAAS,IAAM22B,EAClFG,EAAe38B,KAAKk0B,WAAWrO,SAC/BwY,EAAmBr+B,KAAKk0B,WAAWqJ,aACnCe,EAAmBt+B,KAAKk0B,WAAWsJ,aACnCZ,EAAY58B,KAAKk0B,WAAWxgB,MAC5BmpB,EAAa78B,KAAKk0B,WAAWrsB,OAC7ButB,EAAUp1B,KAAKo1B,QACfgC,EAAep3B,KAAK20B,cAGxBwF,EAAYnzB,KAAK8S,IAAIqgB,EAAW,KAEhC,IAAK,IAAIrD,EAAIuG,EAAavG,EAAI0F,EAAa1F,IAAK,CAC9C,GAAImD,EACFmC,EAAQrC,EAAOjD,GAGb2F,EADEC,EACWhpB,EAAMojB,GAENpjB,MAEV,CACL,IAAI6qB,EAAS,EAAJzH,EAMT,GALAsF,EAAQA,GAAS,GACjBA,EAAM,GAAKrC,EAAOwE,GAClBnC,EAAM,GAAKrC,EAAOwE,EAAK,GACvBnC,EAAM,GAAKrC,EAAOwE,EAAK,GAEnB7B,EAAiB,CACnB,IAAIM,EAAS,EAAJlG,EACT2F,EAAaA,GAAc,GAC3BA,EAAW,GAAK/oB,EAAMspB,GACtBP,EAAW,GAAK/oB,EAAMspB,EAAK,GAC3BP,EAAW,GAAK/oB,EAAMspB,EAAK,GAC3BP,EAAW,GAAK/oB,EAAMspB,EAAK,EAC7B,MACEP,EAAa/oB,CAEjB,CA8BA,GA5BK1T,KAAK64B,cAqBJ/B,EAAI,IACN6F,EAAa7W,KAAKsR,EAAcA,EAAe,GAC/CwF,EAAU9W,KAAKsR,EAAcA,EAAe,GAC5CA,MAvBEN,EAAI0F,EAAc,IAEpB6B,EAAiBt3B,IAAIqwB,EAAe,EAAGgF,GACvCiC,EAAiBt3B,IAAIqwB,EAAe,EAAGgF,IAGrCtF,EAAI,IAENwH,EAAiBv3B,IAAIqwB,EAAe,EAAGgF,GACvCkC,EAAiBv3B,IAAIqwB,EAAe,EAAGgF,IAGzCO,EAAa51B,IAAIqwB,EAAcgF,GAC/BO,EAAa51B,IAAIqwB,EAAe,EAAGgF,GACnCQ,EAAU71B,IAAIqwB,EAAcqF,GAC5BG,EAAU71B,IAAIqwB,EAAe,EAAGqF,GAChCI,EAAW91B,IAAIqwB,EAAc+C,EAAY,GACzC0C,EAAW91B,IAAIqwB,EAAe,GAAI+C,EAAY,GAC9C/C,GAAgB,GASbp3B,KAAK64B,cAgBR+D,EAAU71B,IAAIqwB,EAAcqF,GAC5BE,EAAa51B,IAAIqwB,EAAcgF,GAC/BhF,SAjBA,GAAIN,EAAI,EAAG,CACT,IAAIO,EAA8B,EAAvBr3B,KAAK40B,gBACZQ,EAAUp1B,KAAKo1B,QAInBA,EAAQiC,GAAQD,EAAe,EAC/BhC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnChC,EAAQiC,EAAO,GAAKD,EAAe,EACnCp3B,KAAK40B,iBAAmB,CAC1B,CAMJ,CAEA,IAAK50B,KAAK64B,cAAe,CACvB,IAAIzU,EAAQpkB,KAAK20B,cACb3G,EAAMhuB,KAAK20B,cAA8B,EAAd6H,EAC/B6B,EAAiBvY,KAAK1B,EAAOA,EAAQ,GACrCia,EAAiBvY,KAAK1B,EAAQ,EAAGA,EAAQ,GACzCka,EAAiBxY,KAAKkI,EAAM,EAAGA,EAAM,GACrCsQ,EAAiBxY,KAAKkI,EAAM,EAAGA,EAAM,EACvC,CAGA,OADAhuB,KAAK20B,cAAgByC,EACdp3B,KAAK20B,aAjHZ,CAVA,CA4HF,EAKAyI,aAAc,SAAUlmB,EAAKxD,GAI3B,IAHA,IAAI2pB,EAAcr9B,KAAK+4B,mBAAmB7hB,GACtComB,EAAYpmB,EAAMlX,KAAK+4B,mBAAmBlzB,OAAS,EAAI7F,KAAK+4B,mBAAmB7hB,EAAM,GAAKlX,KAAK20B,cAE1F/uB,EAAIy3B,EAAaz3B,EAAI03B,EAAW13B,IACvC5F,KAAKk0B,WAAWxgB,MAAM3M,IAAInB,EAAG8N,GAG/B1T,KAAKuM,MAAM,QACb,EAKAiyB,sBAAuB,WACrB,OAAOx+B,KAAK40B,eACd,EAKA6J,oBAAqB,WACnB,OAAOz+B,KAAK20B,aACd,IAEF91B,EAAAA,GAAAA,SAAsB85B,EAAcx4B,UAAWm4B,EAAAA,GAC/C,K,8HC/bIzE,EAAO4E,EAAAA,EAAS5E,KAOhB6K,EAAgBzK,EAAAA,EAAS3V,QAAO,WAClC,MAAO,CACLsa,aAAc,EAKdC,eAAe,EACf3E,WAAY,CACVrO,SAAU,IAAIoO,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,YACzD91B,OAAQ,IAAI41B,EAAAA,EAASE,UAAU,SAAU,QAAS,EAAG,UACrDzgB,MAAO,IAAIugB,EAAAA,EAASE,UAAU,QAAS,QAAS,EAAG,UAGzD,GAEA,CAIEU,YAAa,WACX70B,KAAK20B,cAAgB,EACrB30B,KAAK84B,YAAc,CACrB,EAKA6F,aAAc,SAAUC,GACtB,IAAI1K,EAAal0B,KAAKk0B,WAClBc,EAAch1B,KAAK6+B,qBAAuBD,EAC1C1J,EAAgBl1B,KAAK8+B,uBAAyBF,EAE9C5+B,KAAKg1B,cAAgBA,IACvBd,EAAWrO,SAASpF,KAAKuU,GACzBd,EAAW71B,OAAOoiB,KAAKuU,GACvBd,EAAWxgB,MAAM+M,KAAKuU,IAGpBh1B,KAAKk1B,gBAAkBA,IACzBl1B,KAAKo1B,QAAUJ,EAAc,MAAS,IAAIK,YAA4B,EAAhBH,GAAqB,IAAII,YAA4B,EAAhBJ,GAE/F,EACA2J,mBAAoB,WAClB,OAAO,CACT,EACAC,qBAAsB,WACpB,OAAO,CACT,EAOAC,QAAS,WACP,IAAIrW,EAAImL,EAAKoC,SACTtN,EAAIkL,EAAKoC,SACT53B,EAASw1B,EAAKoC,SACdb,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9B,OAAO,SAAUhJ,EAAQ1Y,GACvB,IAAIipB,EAAe38B,KAAKk0B,WAAWrO,SAC/BiX,EAAa98B,KAAKk0B,WAAW71B,OAC7Bu+B,EAAY58B,KAAKk0B,WAAWxgB,MAChCmgB,EAAKoJ,IAAIvU,EAAG0D,EAAO,GAAIA,EAAO,IAC9ByH,EAAKoJ,IAAItU,EAAGyD,EAAO,GAAIA,EAAO,IAC9ByH,EAAKqD,MAAM74B,EAAQqqB,EAAGC,GACtBkL,EAAK3sB,UAAU7I,EAAQA,GAEvB,IAAK,IAAIuH,EAAI,EAAGA,EAAI,EAAGA,IACrB+2B,EAAa51B,IAAI/G,KAAK20B,cAAgB/uB,EAAGwmB,EAAOxmB,IAChDg3B,EAAU71B,IAAI/G,KAAK20B,cAAgB/uB,EAAG8N,GACtCopB,EAAW/1B,IAAI/G,KAAK20B,cAAgB/uB,EAAGvH,GAGzC,IAAI6Y,EAAyB,EAAnBlX,KAAK84B,YAEf,IAASlzB,EAAI,EAAGA,EAAI,EAAGA,IACrB5F,KAAKo1B,QAAQle,EAAMtR,GAAKwvB,EAAQxvB,GAAK5F,KAAK20B,cAG5C30B,KAAK20B,eAAiB,EACtB30B,KAAK84B,aAAe,CACtB,CACF,CA7BS,KA+BXj6B,EAAAA,GAAAA,SAAsB6/B,EAAcv+B,UAAWm4B,EAAAA,GAC/C,K,8ECtGA,KACE0G,sBAAuB,SAAUnzB,GAC3BA,GACF7L,KAAK60B,cAGP,IAAIX,EAAal0B,KAAKk0B,WAEtB,IAAK,IAAIhoB,KAAQgoB,EACXroB,IAAUqoB,EAAWhoB,GAAMgN,MAC7Bgb,EAAWhoB,GAAMgN,MAAQ,GAEzBgb,EAAWhoB,GAAMgN,MAAQta,MAAMuB,UAAU8+B,MAAM/6B,KAAKgwB,EAAWhoB,GAAMgN,OAIrErN,IAAU7L,KAAKo1B,QACjBp1B,KAAKo1B,QAAU,GAEfp1B,KAAKo1B,QAAUx2B,MAAMuB,UAAU8+B,MAAM/6B,KAAKlE,KAAKo1B,QAEnD,EACA8J,oBAAqB,WACnB,IAAIhL,EAAal0B,KAAKk0B,WAEtB,IAAK,IAAIhoB,KAAQgoB,EACXA,EAAWhoB,GAAMgN,OAASgb,EAAWhoB,GAAMgN,MAAMrT,OAAS,EAC5DquB,EAAWhoB,GAAMgN,MAAQ,IAAIlR,aAAaksB,EAAWhoB,GAAMgN,OAE3Dgb,EAAWhoB,GAAMgN,MAAQ,KAIzBlZ,KAAKo1B,SAAWp1B,KAAKo1B,QAAQvvB,OAAS,IACxC7F,KAAKo1B,QAAUp1B,KAAKg1B,YAAc,MAAS,IAAIK,YAAYr1B,KAAKo1B,SAAW,IAAIE,YAAYt1B,KAAKo1B,UAGlGp1B,KAAKuM,OACP,E,wGCpCEsnB,EAAO4E,EAAAA,EAAS5E,KAChBwF,EAAKxF,EAAKoC,SACV9D,EAAK0B,EAAKoC,SACV7D,EAAKyB,EAAKoC,SAEd,KACEkJ,mBAAoB,WAClB,OAAOn/B,KAAKo1B,SAAWp1B,KAAKo/B,aAC9B,EACAC,gCAAiC,WAC/B,OAAOr/B,KAAKm/B,sBAAwBn/B,KAAKk1B,eAAiB,GAC5D,EACAoK,gBAAiB,SAAUC,EAAW50B,GACpC,IAAIyqB,EAAUp1B,KAAKo1B,QAEnB,GAAc,IAAVzqB,EAAa,CACf,IAAI60B,EAAUx/B,KAAKk0B,WAAWrO,SAC1B0Z,EAAYA,EAAUn0B,MAErBpL,KAAKy/B,gBAAkBz/B,KAAKy/B,eAAe55B,SAAW7F,KAAKk1B,gBAC9Dl1B,KAAKy/B,eAAiB,IAAIz3B,aAAahI,KAAKk1B,eAC5Cl1B,KAAK0/B,uBAAyB,IAAIrK,YAAYr1B,KAAKk1B,eACnDl1B,KAAK2/B,YAAc,IAAIvK,EAAQvY,YAAYuY,EAAQvvB,QACnD7F,KAAK4/B,kBAAoB,IAAI53B,aAAahI,KAAKk1B,gBAMjD,IAHA,IACI2K,EADAC,EAAS,EAGJl6B,EAAI,EAAGA,EAAIwvB,EAAQvvB,QAAS,CACnC25B,EAAQ19B,IAAIszB,EAAQxvB,KAAMyzB,GAC1BmG,EAAQ19B,IAAIszB,EAAQxvB,KAAMusB,GAC1BqN,EAAQ19B,IAAIszB,EAAQxvB,KAAMwsB,GAO1B,IAAIuL,EAAK9J,EAAKkM,QAAQ1G,EAAIkG,GACtB3B,EAAK/J,EAAKkM,QAAQ5N,EAAIoN,GACtB1B,EAAKhK,EAAKkM,QAAQ3N,EAAImN,GACtBS,EAAOh5B,KAAK+S,IAAI4jB,EAAIC,GACxBoC,EAAOh5B,KAAK+S,IAAIimB,EAAMnC,GAEZ,IAANj4B,GACFi6B,EAASG,EACTA,EAAO,GAGPA,GAAcH,EAGhB7/B,KAAKy/B,eAAeK,KAAYE,CAClC,CACF,CAEA,IAAIC,EAAwBjgC,KAAK0/B,uBAEjC,IAAS95B,EAAI,EAAGA,EAAIq6B,EAAsBp6B,OAAQD,IAChDq6B,EAAsBr6B,GAAKA,EAG7B,GAAI5F,KAAKk1B,cAAgB,IAET,IAAVvqB,GAEF3K,KAAKkgC,aAAY,QAGnB,IAASt6B,EAAI,EAAGA,EAAI,EAAGA,IACrB5F,KAAKmgC,sBAA8B,EAARx1B,EAAY/E,GAI3C,IAAIw6B,EAAgBpgC,KAAK2/B,YACrBU,EAAsBrgC,KAAK4/B,kBAC3BU,EAAYtgC,KAAKy/B,eAErB,IAAS75B,EAAI,EAAGA,EAAI5F,KAAKk1B,cAAetvB,IAAK,CAC3C,IAAI26B,EAAsC,EAA3BN,EAAsBr6B,GACjC46B,EAAa,EAAJ56B,EACbw6B,EAAcI,KAAYpL,EAAQmL,KAClCH,EAAcI,KAAYpL,EAAQmL,KAClCH,EAAcI,GAAUpL,EAAQmL,GAChCF,EAAoBz6B,GAAK06B,EAAUL,EAAsBr6B,GAC3D,CAGA,IAAIkJ,EAAM9O,KAAK2/B,YACf3/B,KAAK2/B,YAAc3/B,KAAKo1B,QACxBp1B,KAAKo1B,QAAUtmB,EACXA,EAAM9O,KAAK4/B,kBACf5/B,KAAK4/B,kBAAoB5/B,KAAKy/B,eAC9Bz/B,KAAKy/B,eAAiB3wB,EACtB9O,KAAKygC,cACP,EACAP,YAAa,SAAUQ,GACrB,IAAIJ,EAAYtgC,KAAKy/B,eACjBQ,EAAwBjgC,KAAK0/B,uBAEjC,SAAS5W,EAAQJ,EAAGC,GAElB,OAAO2X,EAAU3X,GAAK2X,EAAU5X,EAClC,CAEIgY,EACF9hC,MAAMuB,UAAUgT,KAAKjP,KAAK+7B,EAAuBnX,GAEjDK,EAAAA,EAAqBhW,KAAK8sB,EAAuBnX,EAAS,EAAGmX,EAAsBp6B,OAAS,EAEhG,EACAs6B,sBAAuB,SAAUx1B,GAC/B,IAAI21B,EAAYtgC,KAAKy/B,eACjBQ,EAAwBjgC,KAAK0/B,uBACjC1/B,KAAK2gC,WAAa3gC,KAAK2gC,YAAc,IAAIxX,EAAAA,EAEzCnpB,KAAK2gC,WAAWtX,KAAK4W,GAAuB,SAAUvX,EAAGC,GACvD,OAAO2X,EAAU3X,GAAK2X,EAAU5X,EAClC,GAAG/d,EACL,E,wGCxHEkpB,EAAO4E,EAAAA,EAAS5E,KACpB,KACE+M,kBAAmB,WACjB,OAAO5gC,KAAK6gC,YACd,EACAC,+BAAgC,WAC9B,OAAO9gC,KAAK4gC,qBAAuB5gC,KAAKg1B,aAAe,GACzD,EACA+L,eAAgB,SAAUxB,EAAW50B,GACnC,IAAIyqB,EAAUp1B,KAAKo1B,QACf3G,EAAIoF,EAAKoC,SAEb,IAAKb,EAAS,CACZA,EAAUp1B,KAAKo1B,QAAUp1B,KAAKg1B,YAAc,MAAS,IAAIK,YAAYr1B,KAAKg1B,aAAe,IAAIM,YAAYt1B,KAAKg1B,aAE9G,IAAK,IAAIpvB,EAAI,EAAGA,EAAIwvB,EAAQvvB,OAAQD,IAClCwvB,EAAQxvB,GAAKA,CAEjB,CAGA,GAAc,IAAV+E,EAAa,CACf,IAQIk1B,EARAL,EAAUx/B,KAAKk0B,WAAWrO,SAE1Bmb,GADAzB,EAAYA,EAAUn0B,MACV,GAEXpL,KAAKihC,QAAUjhC,KAAKihC,OAAOp7B,SAAW7F,KAAKg1B,cAC9Ch1B,KAAKihC,OAAS,IAAIj5B,aAAahI,KAAKg1B,cAKtC,IAASpvB,EAAI,EAAGA,EAAI5F,KAAKg1B,YAAapvB,IAAK,CACzC45B,EAAQ19B,IAAI8D,EAAG6oB,GAEf,IAAI7rB,EAAIixB,EAAKkM,QAAQtR,EAAG8Q,GAEpBjZ,MAAM1jB,KAERA,EAAI,IACJo+B,KAGQ,IAANp7B,GACFi6B,EAASj9B,EACTA,EAAI,GAGJA,GAAQi9B,EAGV7/B,KAAKihC,OAAOr7B,GAAKhD,CACnB,CAEA5C,KAAKkhC,WAAaF,CACpB,CAEA,GAAIhhC,KAAKg1B,YAAc,IAEP,IAAVrqB,GACF3K,KAAKkgC,YAAYlgC,KAAKkhC,WAAalhC,KAAKg1B,YAAc,UAGxD,IAASpvB,EAAI,EAAGA,EAAI,EAAGA,IACrB5F,KAAKmgC,sBAA8B,EAARx1B,EAAY/E,GAI3C5F,KAAKygC,cACP,EACAP,YAAa,SAAUQ,GACrB,IAAIS,EAAQnhC,KAAKihC,OACb7L,EAAUp1B,KAAKo1B,QAEnB,SAAStM,EAAQJ,EAAGC,GAElB,OAAOwY,EAAMxY,GAAKwY,EAAMzY,EAC1B,CAMIgY,EACF9hC,MAAMuB,UAAUgT,KAAKjP,KAAKkxB,EAAStM,GAEnCK,EAAAA,EAAqBhW,KAAKiiB,EAAStM,EAAS,EAAGsM,EAAQvvB,OAAS,EAEpE,EACAs6B,sBAAuB,SAAUx1B,GAC/B,IAAIw2B,EAAQnhC,KAAKihC,OACb7L,EAAUp1B,KAAKo1B,QACnBp1B,KAAK2gC,WAAa3gC,KAAK2gC,YAAc,IAAIxX,EAAAA,EAEzCnpB,KAAK2gC,WAAWtX,KAAK+L,GAAS,SAAU1M,EAAGC,GACzC,OAAOwY,EAAMxY,GAAKwY,EAAMzY,EAC1B,GAAG/d,EACL,E,4NCzFEy2B,EAAS,CAAC,YAAa,UAAW,YAAa,YAAa,WAAY,QAAS,WAAY,eAEjG,SAASC,EAAgBC,GACvB,MAAO,MAAQA,CACjB,CAQA,IAAIC,EAAiB,SAAU19B,GAC7B,IAAItD,EAAOP,KACXA,KAAKorB,SAAW,IAAI9jB,EAAAA,EAAU,CAC5Bk6B,YAAa,GACb5mB,OAAO,EACP6mB,QAASzhC,KACT+D,QAAS,SAAUhB,GACjBxC,EAAKwD,UACLuD,EAAAA,EAAUnH,UAAU4D,QAAQG,KAAKlE,KAAM+C,EACzC,IAEFq+B,EAAO5qB,SAAQ,SAAU8qB,GACvBthC,KAAKqhC,EAAgBC,IAAc,SAAUI,GACtCA,EAAOC,UAIZ3hC,KAAK4hC,QAAQprB,SAAQ,SAAU/S,GAC7BzD,KAAK6hC,cAAcP,EAAW79B,EAAMi+B,EAAOC,SAAUD,EAAOtF,MAC9D,GAAGp8B,KACL,CACF,GAAGA,MACHA,KAAK4hC,QAAU,GAEX/9B,GACF7D,KAAK8hC,WAAWj+B,GAIlB7D,KAAKurB,SAAW,IAClB,EAEAgW,EAAephC,UAAY,CACzB0c,YAAa0kB,EACb9U,WAAY,WACV,OAAOzsB,KAAKorB,QACd,EACA0W,WAAY,SAAUj+B,GACpB7D,KAAK+hC,OAASl+B,EACd,IAAIb,EAASa,EAAMm+B,SAEnB,GAAMh/B,aAAkBi/B,kBAIjB,CACL,IAAI1hC,EAAOP,KAEPD,EAAK8D,EAAMrD,QACX6qB,EAAwBtrB,EAAGmiC,yBAA2BniC,EAAGurB,mBAE7DvrB,EAAGurB,mBAAqB,WACtBD,EAAsBnnB,KAAKlE,MAE3BO,EAAK6qB,SAAS7e,QAEdhM,EAAKgrB,UAAYhrB,EAAKgrB,UACxB,EAEAxrB,EAAGmiC,wBAA0B7W,CAC/B,MAlBEhqB,QAAQC,MAAM,yDAEd0B,EAASuB,SAASC,cAAc,UAkBlCxE,KAAKorB,SAAStoB,MAAQE,EAEtBhD,KAAKorB,SAAS7e,QAEdvM,KAAKurB,UAAYvrB,KAAKurB,UACxB,EAQAsW,cAAe,WACb,IAAIxI,EAAK,IAAIxyB,EAAAA,EACTsrB,EAAK,IAAItrB,EAAAA,EACTurB,EAAK,IAAIvrB,EAAAA,EACTs7B,EAAM,IAAIjiB,EAAAA,EACVkiB,EAAM,IAAIliB,EAAAA,EACVmiB,EAAM,IAAIniB,EAAAA,EACVoiB,EAAK,IAAIpiB,EAAAA,EACTqiB,EAAS,IAAI17B,EAAAA,EACjB,OAAO,SAAUy6B,EAAWkB,EAAcb,EAAUvF,GAClD,IAAIqG,EAAMD,EAAaE,SACnB7c,EAAW4c,EAAIvO,WAAWrO,SAC1B8c,EAAWF,EAAIvO,WAAW0O,UAC1BzF,EAAMt2B,EAAAA,EAAQs2B,IACdjG,EAAQrwB,EAAAA,EAAQqwB,MACpBrR,EAAS/jB,IAAI6/B,EAAS,GAAItI,EAAGjuB,OAC7Bya,EAAS/jB,IAAI6/B,EAAS,GAAIxP,EAAG/mB,OAC7Bya,EAAS/jB,IAAI6/B,EAAS,GAAIvP,EAAGhnB,OAC7Bu3B,EAAS7gC,IAAI6/B,EAAS,GAAIQ,EAAI/2B,OAC9Bu3B,EAAS7gC,IAAI6/B,EAAS,GAAIS,EAAIh3B,OAC9Bu3B,EAAS7gC,IAAI6/B,EAAS,GAAIU,EAAIj3B,OAC9B8rB,EAAMqL,EAAQpQ,EAAIC,GAClB,IAAIyQ,EAAM1F,EAAI9D,EAAIkJ,GACdzG,EAAIqB,EAAIf,EAAOmG,GAAUM,EAC7B3L,EAAMqL,EAAQnQ,EAAIiH,GAClB,IAAIyJ,EAAI3F,EAAIf,EAAOmG,GAAUM,EAC7B3L,EAAMqL,EAAQlJ,EAAIlH,GAClB,IAAI3L,EAAI2W,EAAIf,EAAOmG,GAAUM,EAC7B3iB,EAAAA,EAAQwG,MAAM4b,EAAIH,EAAKrG,GACvB5b,EAAAA,EAAQyF,YAAY2c,EAAIA,EAAIF,EAAKU,GACjC5iB,EAAAA,EAAQyF,YAAY2c,EAAIA,EAAID,EAAK7b,GAEjC,IAAIrf,EAAIm7B,EAAGn7B,EAAInH,KAAK+hC,OAAOthC,WAEvB2G,EAAIk7B,EAAGl7B,EAAIpH,KAAK+hC,OAAOrhC,YAE3BV,KAAK+hC,OAAOvhC,QAAQuiC,QAAQC,SAAS1B,EAAW,CAC9C2B,IAAK97B,EACL+7B,IAAK97B,GAET,CACF,CAzCe,GA0Cf+7B,aAAc,SAAU1/B,GAClBzD,KAAK4hC,QAAQzqB,QAAQ1T,IAAS,IAIlC29B,EAAO5qB,SAAQ,SAAU8qB,GACvB79B,EAAKid,GAAG4gB,EAAWthC,KAAKqhC,EAAgBC,IAAathC,KACvD,GAAGA,MAEHA,KAAK4hC,QAAQhmB,KAAKnY,GACpB,EACA2/B,eAAgB,SAAU3/B,GACxB,IAAIyT,EAAMlX,KAAK4hC,QAAQzqB,QAAQ1T,GAE3ByT,GAAO,GACTlX,KAAK4hC,QAAQvZ,OAAOnR,EAAK,GAG3BkqB,EAAO5qB,SAAQ,SAAU8qB,GACvB79B,EAAK0d,IAAImgB,EAAWthC,KAAKqhC,EAAgBC,IAC3C,GAAGthC,KACL,EACA+D,QAAS,WACP/D,KAAK4hC,QAAQprB,SAAQ,SAAU/S,GAC7BzD,KAAKojC,eAAe3/B,EACtB,GAAGzD,KACL,GAEF,Q,sQCtKIqjC,EAAkB,CACpB9iB,WAAY,KACZ+iB,aAAc,WAEZ,OADAtjC,KAAKugB,WAAavgB,KAAKugB,YAAc,GAC9BvgB,KAAKugB,UACd,EACA0D,QAAS,SAAUsf,EAAMn/B,GACvBpE,KAAKugB,WAAavgB,KAAKugB,YAAc,GACrC,IACIwD,EADA7d,EAAKlG,KAGT,GAAIujC,EAAM,CAIR,IAHA,IAAIC,EAAeD,EAAKE,MAAM,KAC1BrgB,EAAOld,EAEFN,EAAI,EAAG89B,EAAIF,EAAa39B,OAAQD,EAAI89B,EAAG99B,IACzCwd,IAILA,EAAOA,EAAKogB,EAAa59B,KAGvBwd,IACFW,EAASX,EAEb,MACEW,EAAS7d,EAGX,GAAc,MAAV6d,EACF,MAAM,IAAI4f,MAAM,UAAYJ,EAAO,eAGrC,IAAIpb,EAAYnoB,KAAKugB,WACjB2H,EAAW,IAAI0b,EAAAA,EAAS7f,EAAQ3f,GAChC7D,EAAOP,KAkBX,OAjBAkoB,EAAS/D,QAAO,WACV5jB,EAAKsjC,MACPtjC,EAAKsjC,KAAK9e,SAEd,IAAGqD,MAAK,WACN,IAAIlR,EAAMiR,EAAUhR,QAAQ+Q,GAExBhR,GAAO,GACTiR,EAAUE,OAAOnR,EAAK,EAE1B,IACAiR,EAAUvM,KAAKsM,GAEXloB,KAAK6jC,MACP7jC,KAAK6jC,KAAK9iB,UAAU+iB,YAAY5b,GAG3BA,CACT,EACA6b,cAAe,SAAUC,GACvBhkC,KAAKugB,WAAavgB,KAAKugB,YAAc,GAIrC,IAHA,IAAI4H,EAAYnoB,KAAKugB,WACjBkE,EAAM0D,EAAUtiB,OAEXD,EAAI,EAAGA,EAAI6e,EAAK7e,IACvBuiB,EAAUviB,GAAGye,KAAK2f,GAIpB,OADA7b,EAAUtiB,OAAS,EACZ7F,IACT,EACAikC,iBAAkB,SAAUlkC,GAC1B,GAAIC,KAAKugB,WACP,IAAK,IAAI3a,EAAI,EAAGA,EAAI5F,KAAKugB,WAAW1a,OAAQD,IAC1C7F,EAAGghB,UAAU+iB,YAAY9jC,KAAKugB,WAAW3a,GAG/C,EACAs+B,sBAAuB,SAAUnkC,GAC/B,GAAIC,KAAKugB,WACP,IAAK,IAAI3a,EAAI,EAAGA,EAAI5F,KAAKugB,WAAW1a,OAAQD,IAC1C7F,EAAGghB,UAAUojB,eAAenkC,KAAKugB,WAAW3a,GAGlD,GAEF,I,oBCpFA,8nNCAA,8nECAA,2/HCAA,i1MCAA,ywHCAA,ypBC2DA,SAASw+B,GAAYlrB,GACnB,OAAQA,GAAmB,SAAVA,CACnB,CAEA,SAASmrB,GAAanrB,GACpB,OAAOA,aAAiB+oB,mBAAqB/oB,aAAiBorB,kBAAoBprB,aAAiBqrB,KACrG,CAEA,SAASC,GAAUtrB,GACjB,OAAOA,EAAM1Y,OAAS0Y,EAAMurB,SAC9B,CApBAxlC,OAAOC,OAAOwlC,EAAAA,EAAOvkC,UAAWkjC,GAChCx6B,EAAAA,EAAOsB,OAAOw6B,EAAAA,GACd97B,EAAAA,EAAOsB,OAAOy6B,EAAAA,GACd/7B,EAAAA,EAAOsB,OAAO06B,GACdh8B,EAAAA,EAAOsB,OAAO26B,GACdj8B,EAAAA,EAAOsB,OAAO46B,GACdl8B,EAAAA,EAAOsB,OAAO66B,GACdn8B,EAAAA,EAAOsB,OAAO86B,GACdp8B,EAAAA,EAAOsB,OAAO+6B,IAed,IAAIC,GAAgBC,EAAAA,EAAMjlC,UAAUklC,WAChCC,GAAqBF,EAAAA,EAAMjlC,UAAUolC,gBAEzCH,EAAAA,EAAMjlC,UAAUklC,WAAa,SAAU5uB,GAGrC,GAFA0uB,GAAcjhC,KAAKlE,KAAMyW,GAErBzW,KAAK6jC,KAAM,CACb,IAAI9jC,EAAKC,KAAK6jC,KACdptB,EAAKjT,UAAS,SAAUgiC,GACtBA,EAAM3B,KAAO9jC,EAETylC,EAAMvB,kBACRuB,EAAMvB,iBAAiBlkC,EAE3B,GACF,CACF,EAEAqlC,EAAAA,EAAMjlC,UAAUolC,gBAAkB,SAAU9uB,GAC1C6uB,GAAmBphC,KAAKlE,KAAMyW,GAC9BA,EAAKjT,UAAS,SAAUgiC,GACtB,IAAIzlC,EAAKylC,EAAM3B,KACf2B,EAAM3B,KAAO,KAET9jC,GAAMylC,EAAMtB,uBACdsB,EAAMtB,sBAAsBnkC,EAEhC,GACF,EASA4R,EAAAA,EAASxR,UAAUqa,gBAAkB,SAAUirB,EAAaC,EAAUplC,EAAKqlC,GACzE,GAAK3lC,KAAK4R,OAAV,CAIA,IAEIvF,EAFAtM,EAAKO,EAAIE,QACTwJ,EAAWhK,KAef,OAbAgK,EAAS47B,yBAA0B,EAEnC57B,EAASC,eAAew7B,GAEnBrB,GAAYsB,KACfr5B,EAAU8N,GAAU0rB,YAAYH,EAAUplC,EAAKqlC,GAAa,SAAUt5B,GACpErC,EAAS8C,cAAc24B,GACvB1lC,GAAMA,EAAGglB,SACX,IAEA/a,EAASjD,IAAI0+B,EAAap5B,IAGrBA,CAlBP,CAmBF,EAEA,IAAI8N,GAAY,CAAC,EACjBA,GAAU2rB,SAAWA,EAAAA,EACrB3rB,GAAUsY,KAAOiS,EAAAA,EACjBvqB,GAAU4rB,KAAOA,EAAAA,EACjB5rB,GAAUtR,OAASA,EAAAA,EACnBsR,GAAUxI,SAAWA,EAAAA,EACrBwI,GAAU1S,QAAUA,EAAAA,EACpB0S,GAAU7S,UAAYA,EAAAA,EAEtB6S,GAAU8Z,SAAWA,EAAAA,EACrB9Z,GAAU6rB,eAAiBA,EAAAA,EAC3B7rB,GAAU8rB,cAAgBA,EAAAA,EAC1B9rB,GAAU+rB,aAAeA,EAAAA,EAEzB/rB,GAAUgsB,aAAeA,EAAAA,EACzBhsB,GAAUisB,iBAAmBA,EAAAA,EAC7BjsB,GAAUksB,WAAaA,EAAAA,EACvBlsB,GAAUmsB,UAAYA,EAAAA,EAEtBnsB,GAAUosB,kBAAoBA,EAAAA,EAC9BpsB,GAAUqsB,mBAAqBA,EAAAA,EAE/BrsB,GAAU+F,QAAUA,EAAAA,EACpB/F,GAAUtT,QAAUA,EAAAA,EACpBsT,GAAUssB,QAAUA,EAAAA,EACpBtsB,GAAUusB,WAAaA,EAAAA,EACvBvsB,GAAUwsB,QAAUA,EAAAA,EACpBxsB,GAAUysB,SAAWA,EAAAA,EACrBzsB,GAAU0sB,QAAUA,EAAAA,EACpB1sB,GAAUnP,QAAUA,EAAAA,EACpBmP,GAAU2sB,MAAQA,EAAAA,EAClB3sB,GAAU4sB,IAAMA,EAAAA,EAChB5sB,GAAU6sB,YAAcA,EAAAA,EACxB7sB,GAAU8sB,QAAUA,EAAAA,EAEpB,IAAIC,GAAa,KAEjB,SAASC,KACP,OAAmB,OAAfD,KAIJA,GAAap1B,EAAAA,EAAYC,YAAY,uBAAuBjP,OAHnDokC,EAKX,CAEA,SAASE,GAAkBj7B,GACzB,OAAOnF,KAAKsT,IAAI,EAAGtT,KAAKqgC,MAAMrgC,KAAKsgC,IAAIn7B,GAAOnF,KAAKugC,KACrD,CAEA,SAASC,GAA2Bn7B,GAClC,IAAKA,EAAQ7E,QAAUC,EAAAA,EAAQC,QAAU2E,EAAQ1E,QAAUF,EAAAA,EAAQC,SAAW2E,EAAQvJ,MAAO,CAE3F,IAAIQ,EAAQ8jC,GAAkB/6B,EAAQ/I,OAClCC,EAAS6jC,GAAkB/6B,EAAQ9I,QAEvC,GAAID,IAAU+I,EAAQ/I,OAASC,IAAW8I,EAAQ9I,OAAQ,CACxD,IAAIP,EAASuB,SAASC,cAAc,UACpCxB,EAAOM,MAAQA,EACfN,EAAOO,OAASA,EAChB,IAAIoB,EAAM3B,EAAO4B,WAAW,MAC5BD,EAAI8iC,UAAUp7B,EAAQvJ,MAAO,EAAG,EAAGQ,EAAOC,GAC1C8I,EAAQvJ,MAAQE,CAClB,CACF,CACF,CAUAmX,GAAU0rB,YAAc,SAAUH,EAAUplC,EAAKqlC,EAAa+B,GACjC,oBAAhB/B,IACT+B,EAAK/B,EACLA,EAAc,CAAC,GAGjBA,EAAcA,GAAe,CAAC,EAI9B,IAHA,IAAIgC,EAAO1oC,OAAO0oC,KAAKhC,GAAaxyB,OAChCy0B,EAAS,GAEJhiC,EAAI,EAAGA,EAAI+hC,EAAK9hC,OAAQD,IAC/BgiC,GAAUD,EAAK/hC,GAAK,IAAM+/B,EAAYgC,EAAK/hC,IAAM,IAGnD,IAAIiiC,EAAevnC,EAAIwnC,eAAiBxnC,EAAIwnC,gBAAkB,IAAIC,EAAAA,GAAS,IAE3E,GAAIvD,GAAUkB,GAAW,CACvB,IAAInkC,EAAKmkC,EAASsC,cACdC,EAAaJ,EAAa/lC,IAAI8lC,EAASrmC,GAE3C,GAAK0mC,EAoBHA,EAAW57B,QAAQo1B,QAAQK,WAAW4D,GACtCgC,GAAMA,EAAGO,EAAW57B,aArBL,CACf,IAAIo1B,EAAU,IAAIF,EAAemE,GAEjCjE,EAAQlW,SAAW,WACjBjrB,EAAIE,QAAQukB,SACd,EAEAkjB,EAAa,CACX57B,QAASo1B,EAAQhV,cAGnB,IAAS7mB,EAAI,EAAGA,EAAI+hC,EAAK9hC,OAAQD,IAC/BqiC,EAAW57B,QAAQs7B,EAAK/hC,IAAM+/B,EAAYgC,EAAK/hC,IAGjDrE,EAAKmkC,EAASsC,eAAiB,cAAgBC,EAAW57B,QAAQ67B,QAClExC,EAASsC,cAAgBzmC,EACzBsmC,EAAaM,IAAIP,EAASrmC,EAAI0mC,GAC9BP,GAAMA,EAAGO,EAAW57B,QACtB,CAKA,OAAO47B,EAAW57B,OACpB,CAAO,GAAIg4B,GAAaqB,GAAW,CAC7BnkC,EAAKmkC,EAASsC,cACdC,EAAaJ,EAAa/lC,IAAI8lC,EAASrmC,GAE3C,IAAK0mC,EAAY,CACfA,EAAa,CACX57B,QAAS,IAAI8N,GAAU7S,UAAU,CAC/BxE,MAAO4iC,KAIX,IAAS9/B,EAAI,EAAGA,EAAI+hC,EAAK9hC,OAAQD,IAC/BqiC,EAAW57B,QAAQs7B,EAAK/hC,IAAM+/B,EAAYgC,EAAK/hC,IAGjDrE,EAAKmkC,EAASsC,eAAiB,iBAAmBC,EAAW57B,QAAQ67B,QACrExC,EAASsC,cAAgBzmC,EACzBsmC,EAAaM,IAAIP,EAASrmC,EAAI0mC,GAC9BT,GAA2BS,EAAW57B,SAEtCq7B,GAAMA,EAAGO,EAAW57B,QACtB,CAEA,OAAO47B,EAAW57B,OACpB,CACM47B,EAAaJ,EAAa/lC,IAAI8lC,EAASlC,GAE3C,GAAIuC,EACEA,EAAWG,UAEbH,EAAWG,UAAUxsB,KAAK8rB,GAG1BA,GAAMA,EAAGO,EAAW57B,cAItB,GAAIq5B,EAAS2C,MAAM,yCAA0C,CAC3DJ,EAAa,CACXG,UAAW,CAACV,IAEd,IAAIr7B,EAAUyF,EAAAA,EAAY+zB,YAAYH,EAAU,CAC9C4C,SAAU3C,EAAY2C,SACtBC,SAAU,QACT,WACDl8B,EAAQE,QACR07B,EAAWG,UAAU5xB,SAAQ,SAAUkxB,GACrCA,GAAMA,EAAGr7B,EACX,IACA47B,EAAWG,UAAY,IACzB,IACAH,EAAW57B,QAAUA,EACrBw7B,EAAaM,IAAIP,EAASlC,EAAUuC,EACtC,KAAO,CAKL,IAJI57B,EAAU,IAAI8N,GAAU7S,UAAU,CACpCxE,MAAO,IAAIyhC,QAGJ3+B,EAAI,EAAGA,EAAI+hC,EAAK9hC,OAAQD,IAC/ByG,EAAQs7B,EAAK/hC,IAAM+/B,EAAYgC,EAAK/hC,IAGtCqiC,EAAa,CACX57B,QAASA,EACT+7B,UAAW,CAACV,IAEd,IAAIc,EAAgBn8B,EAAQvJ,MAE5B0lC,EAAcC,OAAS,WACrBp8B,EAAQvJ,MAAQ0lC,EAChBhB,GAA2Bn7B,GAC3BA,EAAQE,QACR07B,EAAWG,UAAU5xB,SAAQ,SAAUkxB,GACrCA,GAAMA,EAAGr7B,EACX,IACA47B,EAAWG,UAAY,IACzB,EAEAI,EAAcE,YAAc,YAC5BF,EAAcG,IAAMjD,EAEpBr5B,EAAQvJ,MAAQqkC,KAChBU,EAAaM,IAAIP,EAASlC,EAAUuC,EACtC,CAGF,OAAOA,EAAW57B,OAEtB,EAOA8N,GAAUyuB,qBAAuB,SAAUngC,EAAK1F,EAAUzC,EAAKonC,GAC7Dj/B,EAAMA,GAAO,CAAC,EACd,IAAIogC,EAAapgC,EAAI4D,QACjBi8B,EAAWxqB,EAAAA,EAASD,aAAapV,EAAI6/B,SAAU,GAC/CQ,EAAiB,IAAIC,EAAAA,EAAoB,CAC3CC,UAAWlrB,EAAAA,EAASD,aAAapV,EAAIoF,kBAAmB,KAEtDo7B,EAAY,IAAIC,EAAAA,EAAe,CACjCF,UAAWlrB,EAAAA,EAASD,aAAapV,EAAI0gC,iBAAkB,GACvDC,aAAc,CAAC,KAAO,KAAO,MAAQ,KAAO,KAAO,KAAO,KAAO,KAAO,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,MAAQ,KAAO,KAAO,MAAQ,KAAQ,MAAQ,IAAO,KAAO,KAAO,OAwBrN,OAtBAN,EAAeO,QAAUlvB,GAAU0rB,YAAYgD,EAAYvoC,EAAK,CAC9DgoC,SAAUA,IACT,WAEDQ,EAAeO,QAAQzuB,OAAQ,EAM/BkuB,EAAeQ,UAAUvmC,EAAU,IAOnCkmC,EAAUG,aAAeG,EAAAA,EAAOC,sBAAsBzmC,EAAU+lC,EAAeO,QAAS,CACtFI,IAAK,IAEP/B,GAAMA,GACR,IACO,CACLgC,SAAUZ,EACVa,QAASV,EAEb,EAMA9uB,GAAUyvB,mBAAqB93B,EAAAA,EAAYC,YAO3CoI,GAAU0vB,QAAUxF,GAEpBlqB,GAAU2vB,cAAgB,SAAUn+B,GAClCA,EAAGo+B,cAAcp+B,EAAG8Q,UACpB9Q,EAAGq+B,UAAUr+B,EAAGs+B,UAAWt+B,EAAGgR,IAChC,EAQAxC,GAAUC,WAAa,SAAU8vB,EAAUC,GACzC,OAAID,aAAoBtrC,OACjBurC,IACHA,EAAO,IAITA,EAAK,GAAKD,EAAS,GACnBC,EAAK,GAAKD,EAAS,GACnBC,EAAK,GAAKD,EAAS,GAEfA,EAASrkC,OAAS,EACpBskC,EAAK,GAAKD,EAAS,GAEnBC,EAAK,GAAK,EAGLA,IAGTA,EAAOtrC,EAAAA,GAAAA,MAAoBqrC,GAAY,OAAQC,IAAS,CAAC,EAAG,EAAG,EAAG,GAClEA,EAAK,IAAM,IACXA,EAAK,IAAM,IACXA,EAAK,IAAM,IACJA,EACT,EASAhwB,GAAUiwB,uBAAyB,SAAUloB,EAAOE,GAClD,IAAIha,EAAQ8Z,EAAQ,IAAMlb,KAAKmB,GAAKnB,KAAKmB,GAAK,EAC1CF,GAAOma,EAAO,IAAMpb,KAAKmB,GAAKnB,KAAKmB,GAAK,EACxCyd,EAAM,GACNvd,EAAIrB,KAAKuB,IAAIH,GAIjB,OAHAwd,EAAI,GAAKvd,EAAIrB,KAAKsB,IAAIL,GACtB2d,EAAI,IAAM5e,KAAKsB,IAAIF,GACnBwd,EAAI,GAAKvd,EAAIrB,KAAKuB,IAAIN,GACf2d,CACT,EAMAzL,GAAUkwB,oBAAsB,SAAUC,GACxC,IAAIC,EAAmB,KAEvB,OAAQD,GACN,IAAK,MACHC,EAAmB,IACnB,MAEF,IAAK,SACH,MAEF,IAAK,OACHA,EAAmB,KACnB,MAEF,IAAK,QACHA,EAAmB,KACnB,MAGJ,OAAOA,CACT,EAMApwB,GAAUqwB,eAAiB,CAAC,UAAW,QAAS,YAAa,WAAY,UAMzErwB,GAAUswB,aAAe,SAAU7C,GAClB,gBAAXA,IACFA,EAAS,sBAGX,IAAI8C,EAAkB7hC,EAAAA,EAAOC,OAAO8+B,EAAS,WACzC+C,EAAoB9hC,EAAAA,EAAOC,OAAO8+B,EAAS,aAE1C8C,GACHrpC,QAAQC,MAAM,kCAAqCsmC,GAGhD+C,GACHtpC,QAAQC,MAAM,oCAAuCsmC,GAGvD,IAAIh2B,EAAS,IAAI/I,EAAAA,EAAO6hC,EAAiBC,GAEzC,OADA/4B,EAAO1F,KAAO07B,EACPh2B,CACT,EAEAuI,GAAUywB,eAAiB,SAAUhD,EAAQiD,GACrCA,aAAmBjsC,QACvBisC,EAAU,CAACA,IAGb,IAAIj5B,EAASuI,GAAUswB,aAAa7C,GAChC59B,EAAW,IAAI2H,EAAAA,EAAS,CAC1BC,OAAQA,IAOV,OALAi5B,EAAQr0B,SAAQ,SAAUs0B,GACE,kBAAfA,GACT9gC,EAASoC,OAAO0+B,EAEpB,IACO9gC,CACT,EASAmQ,GAAU4wB,qBAAuB,SAAUC,EAAShhC,EAAU5H,EAAO9B,GACnE0J,EAAS47B,yBAA0B,EACnC,IAAIqF,EAAgB7oC,EAAM8oC,SAASF,EAAU,YACzCG,EAAgBF,EAAcnpC,IAAI,iBAClC8O,EAAWkN,EAAAA,EAASD,aAAaotB,EAAcnpC,IAAI,iBAAkB,GACrE+O,EAAWiN,EAAAA,EAASD,aAAaotB,EAAcnpC,IAAI,iBAAkB,GAEjD,kBAAb8O,IACTA,EAAW,CAACA,EAAUA,IAGA,kBAAbC,IACTA,EAAW,CAACA,EAAUA,IAGxB,IAAIu6B,EAAcx6B,EAAS,GAAK,GAAKA,EAAS,GAAK,EAAIuJ,GAAU1S,QAAQC,OAASyS,GAAU1S,QAAQ4jC,cAChGC,EAAa,CACf9J,YAAa,EACbh6B,MAAO4jC,EACPzjC,MAAOyjC,GAGT,GAAgB,cAAZJ,EAAyB,CAC3B,IAAIx6B,EAAYy6B,EAAcnpC,IAAI,aAC9BypC,EAAYN,EAAcnpC,IAAI,aAEjB,MAAbypC,EAEEjlB,MAAMilB,KACRvhC,EAASwQ,gBAAgB,eAAgB+wB,EAAWjrC,EAAKgrC,GACzDC,EAAYztB,EAAAA,EAASD,aAAaotB,EAAcnpC,IAAI,mBAAoB,KAI1EypC,EAAY,EAGG,MAAb/6B,EAEE8V,MAAM9V,KACRxG,EAASwQ,gBAAgB,eAAgBhK,EAAWlQ,EAAKgrC,GACzD96B,EAAYsN,EAAAA,EAASD,aAAaotB,EAAcnpC,IAAI,mBAAoB,KAI1E0O,EAAY,GAGd,IAAIg7B,EAAmBP,EAAcnpC,IAAI,iBACzCkI,EAASwQ,gBAAgB,YAAa2wB,EAAe7qC,EAAKgrC,GAC1DthC,EAASwQ,gBAAgB,YAAagxB,EAAkBlrC,EAAKgrC,GAC7DthC,EAASjD,IAAI,CACXyJ,UAAWA,EACX+6B,UAAWA,EACXz6B,eAAgBF,EAChBG,eAAgBF,GAMpB,MAAO,GAAgB,YAAZm6B,EACThhC,EAASwQ,gBAAgB,YAAa2wB,EAAe7qC,EAAKgrC,GAC1DthC,EAASjD,IAAI,CACX+J,eAAgBF,EAChBG,eAAgBF,SAEb,GAAgB,UAAZm6B,EACThhC,EAASwQ,gBAAgB,YAAa2wB,EAAe7qC,EAAKgrC,GAC1DthC,EAASjD,IAAI,CACX+J,eAAgBF,EAChBG,eAAgBF,SAEb,GAAgB,aAAZm6B,EAAwB,CACjC,IAAIS,EAAOR,EAAcnpC,IAAI,qBAAuB,GAEhD2pC,EAAK5lC,OAMT,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,IACrBoE,EAASwQ,gBAAgB,SAAW5U,EAAI,GAAI6lC,EAAK7lC,GAAItF,EAAK,CACxDkhC,YAAa,EACbh6B,MAAO2S,GAAU1S,QAAQC,OACzBC,MAAOwS,GAAU1S,QAAQC,SAI7BsC,EAASjD,IAAI,CACX+J,eAAgBF,EAChBG,eAAgBF,GAEpB,CACF,EAEAsJ,GAAUuxB,sBAAwB,SAAUC,EAAmBC,EAAcC,EAAa7pC,GACxF,IAAI8pC,EAAkB9pC,EAAYF,IAAI,aAClC+hB,EAAW7hB,EAAYF,IAAI,2BAC3B6hB,EAAS3hB,EAAYF,IAAI,yBACzBiqC,EAAsBF,EAAYE,oBAEtC,GAAID,GAAmBF,GAAgB/nB,EAAW,GAC/C+nB,EAAalJ,SAAS1N,cAAgB6W,EAAYnJ,SAAS1N,YAAa,CACzE6W,EAAY7hC,SAASoC,OAAO,SAAU,oBACtCy/B,EAAYG,YAAa,EAErBD,GACFA,EAAoB3/B,OAAO,SAAU,oBAGvC,IAAK,IAAIxG,EAAI,EAAGA,EAAI+lC,EAAkB9lC,OAAQD,IAC5CimC,EAAYnJ,SAASxO,WAAWyX,EAAkB/lC,GAAG,IAAIsT,MAAQ0yB,EAAalJ,SAASxO,WAAWyX,EAAkB/lC,GAAG,IAAIsT,MAG7H2yB,EAAYnJ,SAASn2B,QACrBs/B,EAAYI,UAAY,EACxBJ,EAAY7hC,SAASjD,IAAI,UAAW,GACpC8kC,EAAY9H,gBACZ8H,EAAY5nB,UAAUC,KAAKL,EAAU,CACnCooB,UAAW,IACV9nB,QAAO,WACR0nB,EAAY7hC,SAASjD,IAAI,UAAW8kC,EAAYI,WAE5CF,GACFA,EAAoBhlC,IAAI,UAAW8kC,EAAYI,UAEnD,IAAG7jB,MAAK,WACNyjB,EAAYG,YAAa,EACzBH,EAAY7hC,SAASmF,SAAS,SAAU,oBAEpC48B,GACFA,EAAoB58B,SAAS,SAAU,mBAE3C,IAAGiV,MAAMT,EACX,MACEkoB,EAAY7hC,SAASmF,SAAS,SAAU,oBAEpC48B,GACFA,EAAoB58B,SAAS,SAAU,mBAG7C,EAEA,S,+JClqBI+8B,EAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAClCC,EAAkBlY,EAAAA,EAAS3V,QAAO,WACpC,MAAO,CACL4V,WAAY,CACVrO,SAAU,IAAIoO,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,YACzDwO,SAAU,IAAI1O,EAAAA,EAASE,UAAU,WAAY,QAAS,EAAG,cACzDtsB,OAAQ,IAAIosB,EAAAA,EAASE,UAAU,SAAU,QAAS,GAClDzgB,MAAO,IAAIugB,EAAAA,EAASE,UAAU,QAAS,QAAS,EAAG,UAGzD,GAAG,CACDU,YAAa,WACX70B,KAAK20B,cAAgB,EACrB30B,KAAK84B,YAAc,CACrB,EACAsT,eAAgB,SAAUC,GACxBrsC,KAAKssC,aAAeD,EACpB,IAAIrX,EAA4B,EAAdqX,EACdnX,EAA8B,EAAdmX,EAEhBrsC,KAAKg1B,cAAgBA,IACvBh1B,KAAKk0B,WAAWrO,SAASpF,KAAKuU,GAC9Bh1B,KAAKk0B,WAAWrsB,OAAO4Y,KAAKuU,GAC5Bh1B,KAAKk0B,WAAWxgB,MAAM+M,KAAKuU,IAGzBh1B,KAAKk1B,gBAAkBA,IACzBl1B,KAAKo1B,QAAUJ,EAAc,MAAS,IAAIK,YAA4B,EAAhBH,GAAqB,IAAII,YAA4B,EAAhBJ,GAE/F,EACAqX,eAAgB,SAAUC,EAAchmC,EAAMimC,EAAOC,EAAeC,GASlE,IAAIC,EAAYC,EAAWC,EAAaC,EAGxC,OAXa,MAATN,IACFA,EAAQ,QAGW,MAAjBC,IACFA,EAAgB,OAIlBC,EAASA,GAAU,EAEXF,GACN,IAAK,OACHG,EAAaD,EACbG,EAActmC,EAAK,GAAKmmC,EACxB,MAEF,IAAK,SACL,IAAK,SACHC,GAAcpmC,EAAK,GAAK,EACxBsmC,EAActmC,EAAK,GAAK,EACxB,MAEF,IAAK,QACHomC,GAAcpmC,EAAK,GAAKmmC,EACxBG,GAAeH,EACf,MAGJ,OAAQD,GACN,IAAK,SACHG,EAAYF,EACZI,EAAevmC,EAAK,GAAKmmC,EACzB,MAEF,IAAK,SACHE,GAAarmC,EAAK,GAAK,EACvBumC,EAAevmC,EAAK,GAAK,EACzB,MAEF,IAAK,MACHqmC,GAAarmC,EAAK,GAAKmmC,EACvBI,GAAgBJ,EAChB,MAKJ,IAAIvV,EAA8B,EAAfoV,EACf3P,EAAa78B,KAAKk0B,WAAWrsB,OACjCg1B,EAAW91B,IAAIqwB,EAAc,CAACwV,EAAYG,IAC1ClQ,EAAW91B,IAAIqwB,EAAe,EAAG,CAAC0V,EAAaC,IAC/ClQ,EAAW91B,IAAIqwB,EAAe,EAAG,CAAC0V,EAAaD,IAC/ChQ,EAAW91B,IAAIqwB,EAAe,EAAG,CAACwV,EAAYC,GAChD,EAWAG,UAAW,SAAUnnB,EAAUrf,EAAM4lB,EAAQqgB,EAAOC,EAAeO,GACjE,IAAI7V,EAAep3B,KAAK20B,cACxB30B,KAAKktC,UAAUltC,KAAK20B,cAAgB,EAAG9O,EAAUrf,EAAM4lB,EAAQqgB,EAAOC,EAAeO,GAErF,IAAK,IAAIrnC,EAAI,EAAGA,EAAIsmC,EAAgBrmC,OAAQD,IAC1C5F,KAAKo1B,QAA2B,EAAnBp1B,KAAK84B,YAAkBlzB,GAAKsmC,EAAgBtmC,GAAKwxB,EAKhE,OAFAp3B,KAAK84B,aAAe,EACpB94B,KAAK20B,eAAiB,EACfyC,EAAe,CACxB,EACA8V,UAAW,SAAUV,EAAc3mB,EAAUrf,EAAM4lB,EAAQqgB,EAAOC,EAAeO,GAI/E,IAHA,IAAI7V,EAA8B,EAAfoV,EACftY,EAAal0B,KAAKk0B,WAEbtuB,EAAI,EAAGA,EAAI,EAAGA,IACrBsuB,EAAWrO,SAAS9e,IAAIqwB,EAAexxB,EAAGigB,GAK5C,IAAIsnB,EAAejZ,EAAWyO,SAC9BwK,EAAapmC,IAAIqwB,EAAc,CAAChL,EAAO,GAAG,GAAIA,EAAO,GAAG,KACxD+gB,EAAapmC,IAAIqwB,EAAe,EAAG,CAAChL,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC5D+gB,EAAapmC,IAAIqwB,EAAe,EAAG,CAAChL,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC5D+gB,EAAapmC,IAAIqwB,EAAe,EAAG,CAAChL,EAAO,GAAG,GAAIA,EAAO,GAAG,KAC5DpsB,KAAKusC,eAAeC,EAAchmC,EAAMimC,EAAOC,EAAeO,EAChE,IAEFpuC,EAAAA,GAAAA,SAAsBstC,EAAgBhsC,UAAWm4B,EAAAA,GACjD,QCxIA,imCCGAne,EAAAA,EAAUtR,OAAOsB,OAAOijC,GACxB,MAAejzB,EAAAA,EAAU4rB,KAAKznB,QAAO,WACnC,IAAIokB,EAAW,IAAIyJ,EAAgB,CACjC7X,SAAS,IAEPtqB,EAAW,IAAImQ,EAAAA,EAAUxI,SAAS,CACpCC,OAAQuI,EAAAA,EAAUswB,aAAa,eAC/B4C,aAAa,EACbC,WAAW,IAEb,MAAO,CACL5K,SAAUA,EACV14B,SAAUA,EACVujC,SAAS,EACTC,YAAY,EACZ7pC,eAAe,EAEnB,G,uCCnBIma,EAAW,CACbD,aAAc,WACZ,IAAK,IAAIjY,EAAI,EAAG6e,EAAMgpB,UAAU5nC,OAAQD,EAAI6e,EAAK7e,IAC/C,GAAoB,MAAhB6nC,UAAU7nC,GACZ,OAAO6nC,UAAU7nC,EAGvB,EAQA8nC,eAAgB,SAAUjnC,EAAMknC,GAC9B,OAA+B,MAA3BA,EAAQC,gBACHD,EAAQC,gBACe,MAArBD,EAAQza,UACVr0B,EAAAA,GAAAA,QAAqB8uC,EAAQza,WAAar0B,EAAAA,GAAAA,IAAiB8uC,EAAQza,WAAW,SAAUha,GAC7F,OAAOzS,EAAKonC,gBAAgB30B,EAC9B,IAAKzS,EAAKonC,gBAAgBF,EAAQza,WACT,MAAhBya,EAAQzhC,KACVrN,EAAAA,GAAAA,QAAqB8uC,EAAQzhC,MAAQrN,EAAAA,GAAAA,IAAiB8uC,EAAQzhC,MAAM,SAAUgN,GACnF,OAAOzS,EAAKqnC,YAAY50B,EAC1B,IAAKzS,EAAKqnC,YAAYH,EAAQzhC,WAHzB,CAKT,GAEF,K,sBC9BA,20C,sBCAA,84C,sBCAA,21G,uCCEA,SAAS6hC,EAAWvnC,EAAMxD,EAAQgrC,GAM5BhrC,EAASA,GAAUuB,SAASC,cAAc,UAC9CxB,EAAOM,MAAQkD,EACfxD,EAAOO,OAASiD,EAChB,IAAI7B,EAAM3B,EAAO4B,WAAW,MAE5B,OADAopC,GAAQA,EAAKrpC,GACN3B,CACT,CAEA,SAASirC,EAASz+B,EAAQ0+B,EAAYrrC,EAAOsrC,GACtCtvC,EAAAA,GAAAA,QAAqBqvC,KACxBA,EAAa,CAACA,EAAYA,IAG5B,IAAIvB,EAASyB,EAAWC,iBAAiBxrC,EAAOsrC,GAC5C7qC,EAAQ4qC,EAAW,GAAKvB,EAAO3uB,KAAO2uB,EAAOzuB,MAC7C3a,EAAS2qC,EAAW,GAAKvB,EAAOpnB,IAAMonB,EAAOnnB,OAC7C+d,EAAO1kC,EAAAA,GAAAA,aAA4B2Q,EAAQ,EAAG,EAAG0+B,EAAW,GAAIA,EAAW,IAC3E1nC,EAAOQ,KAAK8S,IAAIxW,EAAOC,GAC3BggC,EAAKp8B,EAAIwlC,EAAO3uB,KAChBulB,EAAKn8B,EAAIulC,EAAOpnB,IAEZjiB,EAAQC,EACVggC,EAAKn8B,IAAMZ,EAAOjD,GAAU,EAE5BggC,EAAKp8B,IAAMX,EAAOlD,GAAS,EAG7B,IAAIwoB,EAAOyX,EAAKxX,kBAMhB,OALAwX,EAAKp8B,GAAK2kB,EAAK3kB,EACfo8B,EAAKn8B,GAAK0kB,EAAK1kB,EACfm8B,EAAKlgC,SAASR,GACd0gC,EAAKnjC,SACLmjC,EAAK+K,OAAS9nC,EACP+8B,CACT,CAGA,SAASgL,EAAY5pC,EAAK6pC,EAAiBC,GACzC,IAAIC,EAAcF,EAAgBlrC,MAC9BqrC,EAAeH,EAAgBjrC,OAC/BD,EAAQqB,EAAI3B,OAAOM,MACnBC,EAASoB,EAAI3B,OAAOO,OACpBgpB,EAASmiB,EAAcprC,EACvBkpB,EAASmiB,EAAeprC,EAE5B,SAASqrC,EAAKvmC,GACZ,OAAOA,EAAI,IAAM,GAAK,CACxB,CAEA,SAASwmC,EAAkB1nC,EAAGC,GAC5B,IAAI0nC,EAAanpC,IACjBwB,EAAIH,KAAKqU,MAAMlU,EAAIolB,GACnBnlB,EAAIJ,KAAKqU,MAAMjU,EAAIolB,GAKnB,IAJA,IAAI5mB,EAAIwB,EAAIsnC,EAAcvnC,EACtBkB,EAAImmC,EAAgB/nC,KAAS,EAAJb,GACzB8iB,EAAIkmB,EAAKvmC,GAEJoyB,EAAKzzB,KAAK8S,IAAI1S,EAAIqnC,EAAO,GAAIhU,EAAKzzB,KAAK+S,IAAI3S,EAAIqnC,EAAOE,GAAelU,IAC5E,IAAK,IAAID,EAAKxzB,KAAK8S,IAAI3S,EAAIsnC,EAAO,GAAIjU,EAAKxzB,KAAK+S,IAAI5S,EAAIsnC,EAAOC,GAAclU,IAAM,CAC7E50B,EAAI60B,EAAKiU,EAAclU,EAA3B,IACIuU,EAAKP,EAAgB/nC,KAAS,EAAJb,GAC1B+iB,EAAIimB,EAAKG,GACTC,EAAKxU,EAAKrzB,EACV8nC,EAAKxU,EAAKrzB,EAEd,GAAIshB,IAAMC,EAAG,CACX,IAAIumB,EAAUF,EAAKA,EAAKC,EAAKA,EAEzBC,EAAUJ,IACZA,EAAaI,EAEjB,CACF,CAGF,OAAOxmB,EAAI1hB,KAAKmoC,KAAKL,EACvB,CAIA,IAFA,IAAIM,EAAezqC,EAAI0qC,gBAAgB/rC,EAAOC,GAErC6D,EAAI,EAAGA,EAAI7D,EAAQ6D,IAC1B,IAAK,IAAID,EAAI,EAAGA,EAAI7D,EAAO6D,IAAK,CAC9B,IAAI8f,EAAO4nB,EAAkB1nC,EAAGC,GAC5BkoC,EAAaroB,EAAOwnB,EAAQ,GAAM,GAClC7oC,EAAsB,GAAjBwB,EAAI9D,EAAQ6D,GACrBioC,EAAa3oC,KAAKb,KAA4B,KAApB,EAAM0pC,GAChCF,EAAa3oC,KAAKb,KAA4B,KAApB,EAAM0pC,GAChCF,EAAa3oC,KAAKb,KAA4B,KAApB,EAAM0pC,GAChCF,EAAa3oC,KAAKb,KAAO,GAC3B,CAGF,OAAOwpC,CACT,CAEA,IAAIhB,EAAa,CACfC,iBAAkB,SAAUxrC,GAC1B,IAAI0sC,EAAY1sC,EAAM0sC,WAAa,EAC/BpV,EAAY,EAEZt3B,EAAM2sC,QAA2B,SAAjB3sC,EAAM2sC,SACxBrV,EAA+B,MAAnBt3B,EAAMs3B,UAAoB,EAAIt3B,EAAMs3B,WAGlD,IAAIsV,EAAiB5sC,EAAM6sC,YAAc,EACrCC,EAAgB9sC,EAAM8sC,eAAiB,EACvCC,EAAgB/sC,EAAM+sC,eAAiB,EACvCjD,EAAS,CAAC,EAKd,OAJAA,EAAO3uB,KAAOhX,KAAK8S,IAAIqgB,EAAY,GAAIwV,EAAgBF,EAAgBF,GACvE5C,EAAOzuB,MAAQlX,KAAK8S,IAAIqgB,EAAY,EAAGwV,EAAgBF,EAAgBF,GACvE5C,EAAOpnB,IAAMve,KAAK8S,IAAIqgB,EAAY,GAAIyV,EAAgBH,EAAgBF,GACtE5C,EAAOnnB,OAASxe,KAAK8S,IAAIqgB,EAAY,EAAGyV,EAAgBH,EAAgBF,GACjE5C,CACT,EAQAkD,mBAAoB,SAAUrgC,EAAQ0+B,EAAYrrC,EAAOG,GACvD,IAAIugC,EAAO0K,EAASz+B,EAAQ0+B,EAAYrrC,GACpC8pC,EAASyB,EAAWC,iBAAiBxrC,GACzC,MAAO,CACLC,MAAOirC,EAAWxK,EAAK+K,OAAQtrC,GAAQ,SAAU2B,GAC/C9F,EAAAA,GAAiC8F,EAAK4+B,EACxC,IACAoJ,OAAQA,EAEZ,EACAmD,oBAAqB,SAAU9sC,EAAQwD,EAAMioC,EAAOsB,GAElD,OAAOhC,EAAWvnC,EAAMupC,GAAW,SAAUC,GAC3C,IAAIrrC,EAAM3B,EAAO4B,WAAW,MACxBqrC,EAAUtrC,EAAIurC,aAAa,EAAG,EAAGltC,EAAOM,MAAON,EAAOO,QAC1DysC,EAAOG,aAAa5B,EAAYyB,EAAQC,EAASxB,GAAQ,EAAG,EAC9D,GACF,EACA2B,mBAAoB,SAAU5pC,EAAMxD,GAClC,OAAO+qC,EAAWvnC,EAAMxD,GAAQ,SAAU2B,GACxC,IAAI0rC,EAAW7pC,EAAO,EACtB7B,EAAI2rC,YACJ3rC,EAAI4rC,IAAIF,EAAUA,EAAU,GAAI,EAAa,EAAVrpC,KAAKmB,IAAQ,GAChDxD,EAAI6rC,YACJ,IAAIC,EAAW9rC,EAAI+rC,qBAAqBL,EAAUA,EAAU,EAAGA,EAAUA,EAAUA,GACnFI,EAASE,aAAa,EAAG,0BACzBF,EAASE,aAAa,GAAK,4BAC3BF,EAASE,aAAa,EAAG,0BACzBhsC,EAAII,UAAY0rC,EAChB9rC,EAAIisC,MACN,GACF,GAEF,K,sBC5JA,IAAIzoC,EAAKnB,KAAKmB,GACVI,EAAMvB,KAAKuB,IACXD,EAAMtB,KAAKsB,IACXuoB,EAAM7pB,KAAK6pB,IACX/J,EAAO9f,KAAK8f,KACZ+pB,EAAO7pC,KAAK+f,MACZ+pB,EAAM3oC,EAAK,IAGX4oC,EAAQ,MACRC,EAAQ,QACRC,EAAQ,QAEZ,SAASC,EAASC,GAChB,OAAOA,EAAKC,UAAYL,EAAQ,GAAMC,CACxC,CAEA,SAASK,EAAOF,GACd,OAAOD,EAASC,GAAQF,CAC1B,CAGA,IAAI/pB,EAAU,QAAN4pB,EAER,SAASQ,EAAe5N,EAAG/a,GACzB,OAAOkoB,EAAKtoC,EAAIm7B,GAAKp7B,EAAI4e,GAAK2J,EAAIlI,GAAKpgB,EAAI2e,GAAI5e,EAAIo7B,GACrD,CAEA,SAAS6N,EAAY7N,EAAG/a,GACtB,OAAO7B,EAAKve,EAAIogB,GAAKrgB,EAAI4e,GAAK5e,EAAIqgB,GAAKpgB,EAAI2e,GAAK3e,EAAIm7B,GACtD,CAEA,SAAS8N,EAAQC,EAAGxpC,EAAKypC,GACvB,OAAOb,EAAKtoC,EAAIkpC,GAAInpC,EAAImpC,GAAKlpC,EAAIN,GAAO4oB,EAAI6gB,GAAOppC,EAAIL,GACzD,CAEA,SAAS0pC,EAASF,EAAGxpC,EAAKypC,GACxB,OAAO5qB,EAAKve,EAAIN,GAAOM,EAAImpC,GAAOppC,EAAIL,GAAOK,EAAIopC,GAAOppC,EAAImpC,GAC9D,CAEA,SAASG,EAAaC,EAAGC,GACvB,OAAOhB,GAAO,OAAS,YAAce,GAAKC,CAC5C,CAGA,SAASC,EAAiBF,GACxB,OAAOf,GAAO,SAAW,UAAae,EACxC,CAEA,SAASG,EAAkBC,GACzB,IAAIC,EAAIpB,GAAO,OAASvoC,EAAI0pC,GAAK,IAAO1pC,EAAI,EAAI0pC,GAAK,KAAS1pC,EAAI,EAAI0pC,IAEtEE,EAAU,SAANrB,EAEJ,OAAOmB,EAAIC,EAAIC,EAAIhqC,CACrB,CAEA,SAASiqC,EAAUP,GACjB,IAAII,EAAIF,EAAiBF,GACrBQ,EAAIL,EAAkBC,GAC1B,MAAO,CACLP,IAAKH,EAAYc,EAAG,GACpBC,GAAIhB,EAAee,EAAG,GAE1B,CAEA,IAAIE,EAAU,CAEdA,YAAsB,SAAUpB,EAAMqB,EAAKC,GACzC,IAAIX,EAAKhB,GAAO2B,EACZxqC,EAAM6oC,EAAM0B,EACZX,EAAIR,EAAOF,GACXhiB,EAAIijB,EAAUP,GACdJ,EAAIG,EAAaC,EAAGC,GAAM3iB,EAAEmjB,GAChC,MAAO,CACLd,QAASA,EAAQC,EAAGxpC,EAAKknB,EAAEuiB,KAC3BC,SAAUA,EAASF,EAAGxpC,EAAKknB,EAAEuiB,KAEjC,GAEA,K,wBCtFO,SAASgB,EAAejsC,GAC7B,MAAM5D,EAAQ4D,EAAKksC,UAAU,SAE7B,GAAI9vC,EAAO,CACT,MAAM+vC,EAAWnsC,EAAKksC,UAAU,YAChC,OAAO9vC,EAAM+vC,EACf,CACF,CACO,SAASC,EAAiBpsC,GAC/B,MAAM5D,EAAQ4D,EAAKksC,UAAU,SAC7B,OAAO9vC,EAAMiwC,OACf,CACO,SAASC,EAAmBtsC,EAAMyQ,GACvC,MAAMrU,EAAQ4D,EAAKusC,cAAc97B,EAAK,SAEtC,GAAIrU,EAAO,CACT,MAAM+vC,EAAWnsC,EAAKksC,UAAU,YAChC,OAAO9vC,EAAM+vC,EACf,CACF,CACO,SAASK,EAAqBxsC,EAAMyQ,GACzC,MAAMrU,EAAQ4D,EAAKusC,cAAc97B,EAAK,SACtC,OAAOrU,GAASA,EAAMiwC,OACxB,C,60BCsCAI,EAAAA,EAAAA,GAAI,CAACC,EAAAA,KAGLD,EAAAA,EAAAA,GAAI,CAACE,EAAAA,KAULF,EAAAA,EAAAA,GAAI,CAACG,EAAAA,EAAWC,EAAAA,EAAUC,EAAAA,EAAUC,EAAAA,EAAcC,EAAAA,EAAYC,EAAAA,EAAUC,EAAAA,EAAWC,EAAAA,EAAcC,EAAAA,EAAYC,EAAAA,EAAYC,EAAAA,EAAaC,EAAAA,EAAeC,EAAAA,EAAaC,EAAAA,EAAcC,EAAAA,EAAkBC,EAAAA,EAAoBC,EAAAA,EAAYC,EAAAA,EAAcC,EAAAA,EAAmBC,EAAAA,EAAiBC,EAAAA,EAAeC,EAAAA,KAenSxB,EAAAA,EAAAA,GAAIyB,EAAAA,IAUJzB,EAAAA,EAAAA,GAAI0B,EAAAA,IAQJ1B,EAAAA,EAAAA,GAAI2B,EAAAA,IAOJ3B,EAAAA,EAAAA,GAAI4B,EAAAA,IASJ5B,EAAAA,EAAAA,GAAI6B,EAAAA,IAQJ7B,EAAAA,EAAAA,GAAI8B,EAAAA,IAQJ9B,EAAAA,EAAAA,GAAI+B,EAAAA,IAKJ/B,EAAAA,EAAAA,GAAIgC,EAAAA,IAKJhC,EAAAA,EAAAA,GAAIiC,EAAAA,IASJjC,EAAAA,EAAAA,GAAIkC,EAAAA,IASJlC,EAAAA,EAAAA,GAAImC,EAAAA,IAKJnC,EAAAA,EAAAA,GAAIoC,EAAAA,IAKJpC,EAAAA,EAAAA,GAAIqC,EAAAA,IAKJrC,EAAAA,EAAAA,GAAIsC,EAAAA,IAKJtC,EAAAA,EAAAA,GAAIuC,EAAAA,IAKJvC,EAAAA,EAAAA,GAAIwC,EAAAA,IAKJxC,EAAAA,EAAAA,GAAIyC,EAAAA,IAEJzC,EAAAA,EAAAA,GAAI0C,EAAAA,IAMJ1C,EAAAA,EAAAA,GAAI2C,EAAAA,IAKJ3C,EAAAA,EAAAA,GAAI4C,EAAAA,IAEJ5C,EAAAA,EAAAA,GAAI6C,EAAAA,IAKJ7C,EAAAA,EAAAA,GAAI8C,EAAAA,IAKJ9C,EAAAA,EAAAA,GAAI+C,EAAAA,IAKJ/C,EAAAA,EAAAA,GAAIgD,EAAAA,IAOJhD,EAAAA,EAAAA,GAAIiD,EAAAA,IACJjD,EAAAA,EAAAA,GAAIkD,GAAAA,IAOJlD,EAAAA,EAAAA,GAAImD,GAAAA,IAOJnD,EAAAA,EAAAA,GAAIoD,GAAAA,E","sources":["webpack://d1/./node_modules/echarts-gl/lib/preprocessor/backwardCompat.js","webpack://d1/./node_modules/echarts-gl/lib/echarts-gl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/SSAO.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/SSAOPass.js","webpack://d1/./node_modules/echarts-gl/lib/effect/SSR.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/SSRPass.js","webpack://d1/./node_modules/echarts-gl/lib/effect/poissonKernel.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/normal.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/NormalPass.js","webpack://d1/./node_modules/echarts-gl/lib/effect/EdgePass.js","webpack://d1/./node_modules/echarts-gl/lib/effect/composite.js","webpack://d1/./node_modules/echarts-gl/lib/effect/DOF.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/edge.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/effect/EffectCompositor.js","webpack://d1/./node_modules/echarts-gl/lib/effect/TemporalSuperSampling.js","webpack://d1/./node_modules/echarts-gl/lib/effect/halton.js","webpack://d1/./node_modules/echarts-gl/lib/util/OrbitControl.js","webpack://d1/./node_modules/echarts-gl/lib/util/ProgressiveQuickSort.js","webpack://d1/./node_modules/echarts-gl/lib/util/Roam2DControl.js","webpack://d1/./node_modules/echarts-gl/lib/util/ZRTextureAtlasSurface.js","webpack://d1/./node_modules/echarts-gl/lib/util/earcut.js","webpack://d1/./node_modules/echarts-gl/lib/util/format.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/Bars3DGeometry.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/Lines2D.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/Lines3D.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/Quads.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/dynamicConvertMixin.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/trianglesSortMixin.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/verticesSortMixin.js","webpack://d1/./node_modules/echarts-gl/lib/util/EChartsSurface.js","webpack://d1/./node_modules/echarts-gl/lib/util/animatableMixin.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/common.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/color.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/lambert.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/realistic.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/hatching.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/shadow.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/graphicGL.js","webpack://d1/./node_modules/echarts-gl/lib/util/geometry/Sprites.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/labels.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/mesh/LabelsMesh.js","webpack://d1/./node_modules/echarts-gl/lib/util/retrieve.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/displayShadow.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/lines2D.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/shader/lines3D.glsl.js","webpack://d1/./node_modules/echarts-gl/lib/util/sprite.js","webpack://d1/./node_modules/echarts-gl/lib/util/sunCalc.js","webpack://d1/./node_modules/echarts-gl/lib/util/visual.js","webpack://d1/./node_modules/echarts/index.js"],"sourcesContent":["import * as echarts from 'echarts/lib/echarts';\nvar GL_SERIES = ['bar3D', 'line3D', 'map3D', 'scatter3D', 'surface', 'lines3D', 'scatterGL', 'scatter3D'];\n\nfunction convertNormalEmphasis(option, optType) {\n  if (option && option[optType] && (option[optType].normal || option[optType].emphasis)) {\n    var normalOpt = option[optType].normal;\n    var emphasisOpt = option[optType].emphasis;\n\n    if (normalOpt) {\n      option[optType] = normalOpt;\n    }\n\n    if (emphasisOpt) {\n      option.emphasis = option.emphasis || {};\n      option.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction convertNormalEmphasisForEach(option) {\n  convertNormalEmphasis(option, 'itemStyle');\n  convertNormalEmphasis(option, 'lineStyle');\n  convertNormalEmphasis(option, 'areaStyle');\n  convertNormalEmphasis(option, 'label');\n}\n\nfunction removeTextStyleInAxis(axesOpt) {\n  if (!axesOpt) {\n    return;\n  }\n\n  if (!(axesOpt instanceof Array)) {\n    axesOpt = [axesOpt];\n  }\n\n  echarts.util.each(axesOpt, function (axisOpt) {\n    if (axisOpt.axisLabel) {\n      var labelOpt = axisOpt.axisLabel;\n      Object.assign(labelOpt, labelOpt.textStyle);\n      labelOpt.textStyle = null;\n    }\n  });\n}\n\nexport default function (option) {\n  echarts.util.each(option.series, function (series) {\n    if (echarts.util.indexOf(GL_SERIES, series.type) >= 0) {\n      convertNormalEmphasisForEach(series); // Compatitable with original mapbox\n\n      if (series.coordinateSystem === 'mapbox') {\n        series.coordinateSystem = 'mapbox3D';\n        option.mapbox3D = option.mapbox;\n      }\n    }\n  });\n  removeTextStyleInAxis(option.xAxis3D);\n  removeTextStyleInAxis(option.yAxis3D);\n  removeTextStyleInAxis(option.zAxis3D);\n  removeTextStyleInAxis(option.grid3D);\n  convertNormalEmphasis(option.geo3D);\n}\n;","/**\n * echarts-gl\n * Extension pack of ECharts providing 3d plots and globe visualization\n *\n * Copyright (c) 2014, echarts-gl\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *   list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport LayerGL from './core/LayerGL';\nimport backwardCompat from './preprocessor/backwardCompat';\n\nfunction EChartsGL(zr) {\n  this._layers = {};\n  this._zr = zr;\n}\n\nEChartsGL.prototype.update = function (ecModel, api) {\n  var self = this;\n  var zr = api.getZr();\n\n  if (!zr.getWidth() || !zr.getHeight()) {\n    console.warn('Dom has no width or height');\n    return;\n  }\n\n  function getLayerGL(model) {\n    // Disable auto sleep in gl layer.\n    zr.setSleepAfterStill(0);\n    var zlevel; // Host on coordinate system.\n\n    if (model.coordinateSystem && model.coordinateSystem.model) {\n      zlevel = model.get('zlevel');\n    } else {\n      zlevel = model.get('zlevel');\n    }\n\n    var layers = self._layers;\n    var layerGL = layers[zlevel];\n\n    if (!layerGL) {\n      layerGL = layers[zlevel] = new LayerGL('gl-' + zlevel, zr);\n\n      if (zr.painter.isSingleCanvas()) {\n        layerGL.virtual = true; // If container is canvas, use image to represent LayerGL\n        // FIXME Performance\n\n        var img = new echarts.graphic.Image({\n          z: 1e4,\n          style: {\n            image: layerGL.renderer.canvas\n          },\n          silent: true\n        });\n        layerGL.__hostImage = img;\n        zr.add(img);\n      }\n\n      zr.painter.insertLayer(zlevel, layerGL);\n    }\n\n    if (layerGL.__hostImage) {\n      layerGL.__hostImage.setStyle({\n        width: layerGL.renderer.getWidth(),\n        height: layerGL.renderer.getHeight()\n      });\n    }\n\n    return layerGL;\n  }\n\n  function setSilent(groupGL, silent) {\n    if (groupGL) {\n      groupGL.traverse(function (mesh) {\n        if (mesh.isRenderable && mesh.isRenderable()) {\n          mesh.ignorePicking = mesh.$ignorePicking != null ? mesh.$ignorePicking : silent;\n        }\n      });\n    }\n  }\n\n  for (var zlevel in this._layers) {\n    this._layers[zlevel].removeViewsAll();\n  }\n\n  ecModel.eachComponent(function (componentType, componentModel) {\n    if (componentType !== 'series') {\n      var view = api.getViewOfComponentModel(componentModel);\n      var coordSys = componentModel.coordinateSystem; // View with __ecgl__ flag is a echarts-gl component.\n\n      if (view.__ecgl__) {\n        var viewGL;\n\n        if (coordSys) {\n          if (!coordSys.viewGL) {\n            console.error('Can\\'t find viewGL in coordinateSystem of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        } else {\n          if (!componentModel.viewGL) {\n            console.error('Can\\'t find viewGL of component ' + componentModel.id);\n            return;\n          }\n\n          viewGL = coordSys.viewGL;\n        }\n\n        var viewGL = coordSys.viewGL;\n        var layerGL = getLayerGL(componentModel);\n        layerGL.addView(viewGL);\n        view.afterRender && view.afterRender(componentModel, ecModel, api, layerGL);\n        setSilent(view.groupGL, componentModel.get('silent'));\n      }\n    }\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = api.getViewOfSeriesModel(seriesModel);\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (chartView.__ecgl__) {\n      if (coordSys && !coordSys.viewGL && !chartView.viewGL) {\n        console.error('Can\\'t find viewGL of series ' + chartView.id);\n        return;\n      }\n\n      var viewGL = coordSys && coordSys.viewGL || chartView.viewGL; // TODO Check zlevel not same with component of coordinate system ?\n\n      var layerGL = getLayerGL(seriesModel);\n      layerGL.addView(viewGL);\n      chartView.afterRender && chartView.afterRender(seriesModel, ecModel, api, layerGL);\n      setSilent(chartView.groupGL, seriesModel.get('silent'));\n    }\n  });\n}; // Hack original getRenderedCanvas. Will removed after new echarts released\n// TODO\n\n\necharts.registerPostInit(function (chart) {\n  var zr = chart.getZr();\n  var oldDispose = zr.painter.dispose;\n\n  zr.painter.dispose = function () {\n    if (typeof this.eachOtherLayer === 'function') {\n      this.eachOtherLayer(function (layer) {\n        if (layer instanceof LayerGL) {\n          layer.dispose();\n        }\n      });\n    }\n\n    oldDispose.call(this);\n  };\n\n  zr.painter.getRenderedCanvas = function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var canvas = document.createElement('canvas');\n    var dpr = opts.pixelRatio || this.dpr;\n    canvas.width = this.getWidth() * dpr;\n    canvas.height = this.getHeight() * dpr;\n    var ctx = canvas.getContext('2d');\n    ctx.dpr = dpr;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (opts.backgroundColor) {\n      ctx.fillStyle = opts.backgroundColor;\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        ctx.save();\n        intermediateLayer.renderToCanvas(ctx);\n        ctx.restore();\n      }\n    }\n\n    var layer = {\n      ctx: ctx\n    };\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, layer, true, null, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return canvas;\n  };\n});\necharts.registerPostUpdate(function (ecModel, api) {\n  var zr = api.getZr();\n  var egl = zr.__egl = zr.__egl || new EChartsGL(zr);\n  egl.update(ecModel, api);\n});\necharts.registerPreprocessor(backwardCompat);\nexport default EChartsGL;","export default \"@export ecgl.ssao.estimate\\n\\nuniform sampler2D depthTex;\\n\\nuniform sampler2D normalTex;\\n\\nuniform sampler2D noiseTex;\\n\\nuniform vec2 depthTexSize;\\n\\nuniform vec2 noiseTexSize;\\n\\nuniform mat4 projection;\\n\\nuniform mat4 projectionInv;\\n\\nuniform mat4 viewInverseTranspose;\\n\\nuniform vec3 kernel[KERNEL_SIZE];\\n\\nuniform float radius : 1;\\n\\nuniform float power : 1;\\n\\nuniform float bias: 1e-2;\\n\\nuniform float intensity: 1.0;\\n\\nvarying vec2 v_Texcoord;\\n\\nfloat ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {\\n float occlusion = 0.0;\\n\\n for (int i = 0; i < KERNEL_SIZE; i++) {\\n vec3 samplePos = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n samplePos = kernelBasis * samplePos;\\n#endif\\n samplePos = samplePos * radius + originPos;\\n\\n vec4 texCoord = projection * vec4(samplePos, 1.0);\\n texCoord.xy /= texCoord.w;\\n\\n vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);\\n\\n float sampleDepth = depthTexel.r * 2.0 - 1.0;\\n if (projection[3][3] == 0.0) {\\n sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);\\n }\\n else {\\n sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];\\n }\\n \\n float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));\\n occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);\\n }\\n#ifdef NORMALTEX_ENABLED\\n occlusion = 1.0 - occlusion / float(KERNEL_SIZE);\\n#else\\n occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);\\n#endif\\n return pow(occlusion, power);\\n}\\n\\nvoid main()\\n{\\n\\n vec4 depthTexel = texture2D(depthTex, v_Texcoord);\\n\\n#ifdef NORMALTEX_ENABLED\\n vec4 tex = texture2D(normalTex, v_Texcoord);\\n if (dot(tex.rgb, tex.rgb) == 0.0) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n vec3 N = tex.rgb * 2.0 - 1.0;\\n N = (viewInverseTranspose * vec4(N, 0.0)).xyz;\\n\\n vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;\\n vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;\\n vec3 T = normalize(rvec - N * dot(rvec, N));\\n vec3 BT = normalize(cross(N, T));\\n mat3 kernelBasis = mat3(T, BT, N);\\n#else\\n if (depthTexel.r > 0.99999) {\\n gl_FragColor = vec4(1.0);\\n return;\\n }\\n mat3 kernelBasis;\\n#endif\\n\\n float z = depthTexel.r * 2.0 - 1.0;\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * projectedPos;\\n\\n vec3 position = p4.xyz / p4.w;\\n\\n float ao = ssaoEstimator(position, kernelBasis);\\n ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);\\n gl_FragColor = vec4(vec3(ao), 1.0);\\n}\\n\\n@end\\n\\n\\n@export ecgl.ssao.blur\\n#define SHADER_NAME SSAO_BLUR\\n\\nuniform sampler2D ssaoTexture;\\n\\n#ifdef NORMALTEX_ENABLED\\nuniform sampler2D normalTex;\\n#endif\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\nuniform int direction: 0.0;\\n\\n#ifdef DEPTHTEX_ENABLED\\nuniform sampler2D depthTex;\\nuniform mat4 projection;\\nuniform float depthRange : 0.5;\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n#endif\\n\\nvoid main()\\n{\\n float kernel[5];\\n kernel[0] = 0.122581;\\n kernel[1] = 0.233062;\\n kernel[2] = 0.288713;\\n kernel[3] = 0.233062;\\n kernel[4] = 0.122581;\\n\\n vec2 off = vec2(0.0);\\n if (direction == 0) {\\n off[0] = blurSize / textureSize.x;\\n }\\n else {\\n off[1] = blurSize / textureSize.y;\\n }\\n\\n vec2 coord = v_Texcoord;\\n\\n float sum = 0.0;\\n float weightAll = 0.0;\\n\\n#ifdef NORMALTEX_ENABLED\\n vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;\\n#endif\\n#if defined(DEPTHTEX_ENABLED)\\n float centerDepth = getLinearDepth(v_Texcoord);\\n#endif\\n\\n for (int i = 0; i < 5; i++) {\\n vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));\\n\\n float w = kernel[i];\\n#ifdef NORMALTEX_ENABLED\\n vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;\\n w *= clamp(dot(normal, centerNormal), 0.0, 1.0);\\n#endif\\n#ifdef DEPTHTEX_ENABLED\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));\\n#endif\\n\\n weightAll += w;\\n sum += texture2D(ssaoTexture, coord).r * w;\\n }\\n\\n gl_FragColor = vec4(vec3(sum / weightAll), 1.0);\\n}\\n\\n@end\\n\";","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport SSAOGLSL from './SSAO.glsl.js';\nShader.import(SSAOGLSL);\n\nfunction generateNoiseData(size) {\n  var data = new Uint8Array(size * size * 4);\n  var n = 0;\n  var v3 = new Vector3();\n\n  for (var i = 0; i < size; i++) {\n    for (var j = 0; j < size; j++) {\n      v3.set(Math.random() * 2 - 1, Math.random() * 2 - 1, 0).normalize();\n      data[n++] = (v3.x * 0.5 + 0.5) * 255;\n      data[n++] = (v3.y * 0.5 + 0.5) * 255;\n      data[n++] = 0;\n      data[n++] = 255;\n    }\n  }\n\n  return data;\n}\n\nfunction generateNoiseTexture(size) {\n  return new Texture2D({\n    pixels: generateNoiseData(size),\n    wrapS: Texture.REPEAT,\n    wrapT: Texture.REPEAT,\n    width: size,\n    height: size\n  });\n}\n\nfunction generateKernel(size, offset, hemisphere) {\n  var kernel = new Float32Array(size * 3);\n  offset = offset || 0;\n\n  for (var i = 0; i < size; i++) {\n    var phi = halton(i + offset, 2) * (hemisphere ? 1 : 2) * Math.PI;\n    var theta = halton(i + offset, 3) * Math.PI;\n    var r = Math.random();\n    var x = Math.cos(phi) * Math.sin(theta) * r;\n    var y = Math.cos(theta) * r;\n    var z = Math.sin(phi) * Math.sin(theta) * r;\n    kernel[i * 3] = x;\n    kernel[i * 3 + 1] = y;\n    kernel[i * 3 + 2] = z;\n  }\n\n  return kernel; // var kernel = new Float32Array(size * 3);\n  // var v3 = new Vector3();\n  // for (var i = 0; i < size; i++) {\n  //     v3.set(Math.random() * 2 - 1, Math.random() * 2 - 1, Math.random())\n  //         .normalize().scale(Math.random());\n  //     kernel[i * 3] = v3.x;\n  //     kernel[i * 3 + 1] = v3.y;\n  //     kernel[i * 3 + 2] = v3.z;\n  // }\n  // return kernel;\n}\n\nfunction SSAOPass(opt) {\n  opt = opt || {};\n  this._ssaoPass = new Pass({\n    fragment: Shader.source('ecgl.ssao.estimate')\n  });\n  this._blurPass = new Pass({\n    fragment: Shader.source('ecgl.ssao.blur')\n  });\n  this._framebuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._ssaoTexture = new Texture2D();\n  this._blurTexture = new Texture2D();\n  this._blurTexture2 = new Texture2D();\n  this._depthTex = opt.depthTexture;\n  this._normalTex = opt.normalTexture;\n  this.setNoiseSize(4);\n  this.setKernelSize(opt.kernelSize || 12);\n\n  if (opt.radius != null) {\n    this.setParameter('radius', opt.radius);\n  }\n\n  if (opt.power != null) {\n    this.setParameter('power', opt.power);\n  }\n\n  if (!this._normalTex) {\n    this._ssaoPass.material.disableTexture('normalTex');\n\n    this._blurPass.material.disableTexture('normalTex');\n  }\n\n  if (!this._depthTex) {\n    this._blurPass.material.disableTexture('depthTex');\n  }\n\n  this._blurPass.material.setUniform('normalTex', this._normalTex);\n\n  this._blurPass.material.setUniform('depthTex', this._depthTex);\n}\n\nSSAOPass.prototype.setDepthTexture = function (depthTex) {\n  this._depthTex = depthTex;\n};\n\nSSAOPass.prototype.setNormalTexture = function (normalTex) {\n  this._normalTex = normalTex;\n\n  this._ssaoPass.material[normalTex ? 'enableTexture' : 'disableTexture']('normalTex'); // Switch between hemisphere and shere kernel.\n\n\n  this.setKernelSize(this._kernelSize);\n};\n\nSSAOPass.prototype.update = function (renderer, camera, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssaoPass = this._ssaoPass;\n  var blurPass = this._blurPass;\n  ssaoPass.setUniform('kernel', this._kernels[frame % this._kernels.length]);\n  ssaoPass.setUniform('depthTex', this._depthTex);\n\n  if (this._normalTex != null) {\n    ssaoPass.setUniform('normalTex', this._normalTex);\n  }\n\n  ssaoPass.setUniform('depthTexSize', [this._depthTex.width, this._depthTex.height]);\n  var viewInverseTranspose = new Matrix4();\n  Matrix4.transpose(viewInverseTranspose, camera.worldTransform);\n  ssaoPass.setUniform('projection', camera.projectionMatrix.array);\n  ssaoPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssaoPass.setUniform('viewInverseTranspose', viewInverseTranspose.array);\n  var ssaoTexture = this._ssaoTexture;\n  var blurTexture = this._blurTexture;\n  var blurTexture2 = this._blurTexture2;\n  ssaoTexture.width = width / 2;\n  ssaoTexture.height = height / 2;\n  blurTexture.width = width;\n  blurTexture.height = height;\n  blurTexture2.width = width;\n  blurTexture2.height = height;\n\n  this._framebuffer.attach(ssaoTexture);\n\n  this._framebuffer.bind(renderer);\n\n  renderer.gl.clearColor(1, 1, 1, 1);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT);\n  ssaoPass.render(renderer);\n  blurPass.setUniform('textureSize', [width / 2, height / 2]);\n  blurPass.setUniform('projection', camera.projectionMatrix.array);\n\n  this._framebuffer.attach(blurTexture);\n\n  blurPass.setUniform('direction', 0);\n  blurPass.setUniform('ssaoTexture', ssaoTexture);\n  blurPass.render(renderer);\n\n  this._framebuffer.attach(blurTexture2);\n\n  blurPass.setUniform('textureSize', [width, height]);\n  blurPass.setUniform('direction', 1);\n  blurPass.setUniform('ssaoTexture', blurTexture);\n  blurPass.render(renderer);\n\n  this._framebuffer.unbind(renderer); // Restore clear\n\n\n  var clearColor = renderer.clearColor;\n  renderer.gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\n};\n\nSSAOPass.prototype.getTargetTexture = function () {\n  return this._blurTexture2;\n};\n\nSSAOPass.prototype.setParameter = function (name, val) {\n  if (name === 'noiseTexSize') {\n    this.setNoiseSize(val);\n  } else if (name === 'kernelSize') {\n    this.setKernelSize(val);\n  } else if (name === 'intensity') {\n    this._ssaoPass.material.set('intensity', val);\n  } else {\n    this._ssaoPass.setUniform(name, val);\n  }\n};\n\nSSAOPass.prototype.setKernelSize = function (size) {\n  this._kernelSize = size;\n\n  this._ssaoPass.material.define('fragment', 'KERNEL_SIZE', size);\n\n  this._kernels = this._kernels || [];\n\n  for (var i = 0; i < 30; i++) {\n    this._kernels[i] = generateKernel(size, i * size, !!this._normalTex);\n  }\n};\n\nSSAOPass.prototype.setNoiseSize = function (size) {\n  var texture = this._ssaoPass.getUniform('noiseTex');\n\n  if (!texture) {\n    texture = generateNoiseTexture(size);\n\n    this._ssaoPass.setUniform('noiseTex', generateNoiseTexture(size));\n  } else {\n    texture.data = generateNoiseData(size);\n    texture.width = texture.height = size;\n    texture.dirty();\n  }\n\n  this._ssaoPass.setUniform('noiseTexSize', [size, size]);\n};\n\nSSAOPass.prototype.dispose = function (renderer) {\n  this._blurTexture.dispose(renderer);\n\n  this._ssaoTexture.dispose(renderer);\n\n  this._blurTexture2.dispose(renderer);\n};\n\nexport default SSAOPass;","export default \"@export ecgl.ssr.main\\n\\n#define SHADER_NAME SSR\\n#define MAX_ITERATION 20;\\n#define SAMPLE_PER_FRAME 5;\\n#define TOTAL_SAMPLES 128;\\n\\nuniform sampler2D sourceTexture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform sampler2D gBufferTexture3;\\nuniform samplerCube specularCubemap;\\nuniform float specularIntensity: 1;\\n\\nuniform mat4 projection;\\nuniform mat4 projectionInv;\\nuniform mat4 toViewSpace;\\nuniform mat4 toWorldSpace;\\n\\nuniform float maxRayDistance: 200;\\n\\nuniform float pixelStride: 16;\\nuniform float pixelStrideZCutoff: 50; \\nuniform float screenEdgeFadeStart: 0.9; \\nuniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; \\nuniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;\\n\\nuniform float nearZ;\\nuniform vec2 viewportSize : VIEWPORT_SIZE;\\n\\nuniform float jitterOffset: 0;\\n\\nvarying vec2 v_Texcoord;\\n\\n#ifdef DEPTH_DECODE\\n@import clay.util.decode_float\\n#endif\\n\\n#ifdef PHYSICALLY_CORRECT\\nuniform sampler2D normalDistribution;\\nuniform float sampleOffset: 0;\\nuniform vec2 normalDistributionSize;\\n\\nvec3 transformNormal(vec3 H, vec3 N) {\\n vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);\\n vec3 tangentX = normalize(cross(N, upVector));\\n vec3 tangentZ = cross(N, tangentX);\\n return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);\\n}\\nvec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {\\n float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));\\n vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;\\n return transformNormal(H, N);\\n}\\nfloat G_Smith(float g, float ndv, float ndl) {\\n float roughness = 1.0 - g;\\n float k = roughness * roughness / 2.0;\\n float G1V = ndv / (ndv * (1.0 - k) + k);\\n float G1L = ndl / (ndl * (1.0 - k) + k);\\n return G1L * G1V;\\n}\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\n#endif\\n\\nfloat fetchDepth(sampler2D depthTexture, vec2 uv)\\n{\\n vec4 depthTexel = texture2D(depthTexture, uv);\\n return depthTexel.r * 2.0 - 1.0;\\n}\\n\\nfloat linearDepth(float depth)\\n{\\n if (projection[3][3] == 0.0) {\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n }\\n else {\\n return (depth - projection[3][2]) / projection[2][2];\\n }\\n}\\n\\nbool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)\\n{\\n if (rayZFar > rayZNear)\\n {\\n float t = rayZFar; rayZFar = rayZNear; rayZNear = t;\\n }\\n float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));\\n return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;\\n}\\n\\n\\nbool traceScreenSpaceRay(\\n vec3 rayOrigin, vec3 rayDir, float jitter,\\n out vec2 hitPixel, out vec3 hitPoint, out float iterationCount\\n)\\n{\\n float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)\\n ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;\\n\\n vec3 rayEnd = rayOrigin + rayDir * rayLength;\\n\\n vec4 H0 = projection * vec4(rayOrigin, 1.0);\\n vec4 H1 = projection * vec4(rayEnd, 1.0);\\n\\n float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;\\n\\n vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;\\n\\n vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;\\n vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;\\n\\n P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;\\n vec2 delta = P1 - P0;\\n\\n bool permute = false;\\n if (abs(delta.x) < abs(delta.y)) {\\n permute = true;\\n delta = delta.yx;\\n P0 = P0.yx;\\n P1 = P1.yx;\\n }\\n float stepDir = sign(delta.x);\\n float invdx = stepDir / delta.x;\\n\\n vec3 dQ = (Q1 - Q0) * invdx;\\n float dk = (k1 - k0) * invdx;\\n\\n vec2 dP = vec2(stepDir, delta.y * invdx);\\n\\n float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);\\n float pixStride = 1.0 + strideScaler * pixelStride;\\n\\n dP *= pixStride; dQ *= pixStride; dk *= pixStride;\\n\\n vec4 pqk = vec4(P0, Q0.z, k0);\\n vec4 dPQK = vec4(dP, dQ.z, dk);\\n\\n pqk += dPQK * jitter;\\n float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n float rayZNear;\\n\\n bool intersect = false;\\n\\n vec2 texelSize = 1.0 / viewportSize;\\n\\n iterationCount = 0.0;\\n\\n for (int i = 0; i < MAX_ITERATION; i++)\\n {\\n pqk += dPQK;\\n\\n rayZNear = rayZFar;\\n rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);\\n\\n hitPixel = permute ? pqk.yx : pqk.xy;\\n hitPixel *= texelSize;\\n\\n intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);\\n\\n iterationCount += 1.0;\\n\\n dPQK *= 1.2;\\n\\n if (intersect) {\\n break;\\n }\\n }\\n\\n Q0.xy += dQ.xy * iterationCount;\\n Q0.z = pqk.z;\\n hitPoint = Q0 / pqk.w;\\n\\n return intersect;\\n}\\n\\nfloat calculateAlpha(\\n float iterationCount, float reflectivity,\\n vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir\\n)\\n{\\n float alpha = clamp(reflectivity, 0.0, 1.0);\\n alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));\\n vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;\\n float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));\\n alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);\\n\\n float _eyeFadeStart = eyeFadeStart;\\n float _eyeFadeEnd = eyeFadeEnd;\\n if (_eyeFadeStart > _eyeFadeEnd) {\\n float tmp = _eyeFadeEnd;\\n _eyeFadeEnd = _eyeFadeStart;\\n _eyeFadeStart = tmp;\\n }\\n\\n float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);\\n alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);\\n\\n alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);\\n\\n return alpha;\\n}\\n\\n@import clay.util.rand\\n\\n@import clay.util.rgbm\\n\\nvoid main()\\n{\\n vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);\\n\\n if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {\\n discard;\\n }\\n\\n float g = normalAndGloss.a;\\n#if !defined(PHYSICALLY_CORRECT)\\n if (g <= minGlossiness) {\\n discard;\\n }\\n#endif\\n\\n float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);\\n\\n vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);\\n N = normalize((toViewSpace * vec4(N, 0.0)).xyz);\\n\\n vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);\\n vec4 pos = projectionInv * projectedPos;\\n vec3 rayOrigin = pos.xyz / pos.w;\\n vec3 V = -normalize(rayOrigin);\\n\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n float iterationCount;\\n float jitter = rand(fract(v_Texcoord + jitterOffset));\\n\\n#ifdef PHYSICALLY_CORRECT\\n vec4 color = vec4(vec3(0.0), 1.0);\\n vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);\\n vec3 albedo = albedoMetalness.rgb;\\n float m = albedoMetalness.a;\\n vec3 diffuseColor = albedo * (1.0 - m);\\n vec3 spec = mix(vec3(0.04), albedo, m);\\n\\n float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);\\n\\n for (int i = 0; i < SAMPLE_PER_FRAME; i++) {\\n vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);\\n vec3 rayDir = normalize(reflect(-V, H));\\n#else\\n vec3 rayDir = normalize(reflect(-V, N));\\n#endif\\n vec2 hitPixel;\\n vec3 hitPoint;\\n\\n bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);\\n\\n float dist = distance(rayOrigin, hitPoint);\\n\\n vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;\\n hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);\\n#ifdef PHYSICALLY_CORRECT\\n float ndl = clamp(dot(N, rayDir), 0.0, 1.0);\\n float vdh = clamp(dot(V, H), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n vec3 litTexel = vec3(0.0);\\n if (dot(hitNormal, rayDir) < 0.0 && intersect) {\\n litTexel = texture2D(sourceTexture, hitPixel).rgb;\\n litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);\\n\\n }\\n else {\\n #ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;\\n#endif\\n }\\n color.rgb += ndl * litTexel * (\\n F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)\\n );\\n }\\n color.rgb /= float(SAMPLE_PER_FRAME);\\n#else\\n #if !defined(SPECULARCUBEMAP_ENABLED)\\n if (dot(hitNormal, rayDir) >= 0.0) {\\n discard;\\n }\\n if (!intersect) {\\n discard;\\n }\\n#endif\\n float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);\\n vec4 color = texture2D(sourceTexture, hitPixel);\\n color.rgb *= alpha;\\n\\n#ifdef SPECULARCUBEMAP_ENABLED\\n vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;\\n alpha = alpha * (intersect ? 1.0 : 0.0);\\n float bias = (1.0 -g) * 5.0;\\n color.rgb += (1.0 - alpha)\\n * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb\\n * specularIntensity;\\n#endif\\n\\n#endif\\n\\n gl_FragColor = encodeHDR(color);\\n}\\n@end\\n\\n@export ecgl.ssr.blur\\n\\nuniform sampler2D texture;\\nuniform sampler2D gBufferTexture1;\\nuniform sampler2D gBufferTexture2;\\nuniform mat4 projection;\\nuniform float depthRange : 0.05;\\n\\nvarying vec2 v_Texcoord;\\n\\nuniform vec2 textureSize;\\nuniform float blurSize : 1.0;\\n\\n#ifdef BLEND\\n #ifdef SSAOTEX_ENABLED\\nuniform sampler2D ssaoTex;\\n #endif\\nuniform sampler2D sourceTexture;\\n#endif\\n\\nfloat getLinearDepth(vec2 coord)\\n{\\n float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;\\n return projection[3][2] / (depth * projection[2][3] - projection[2][2]);\\n}\\n\\n@import clay.util.rgbm\\n\\n\\nvoid main()\\n{\\n @import clay.compositor.kernel.gaussian_9\\n\\n vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);\\n float g = centerNTexel.a;\\n float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;\\n#ifdef VERTICAL\\n vec2 off = vec2(0.0, maxBlurSize / textureSize.y);\\n#else\\n vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);\\n#endif\\n\\n vec2 coord = v_Texcoord;\\n\\n vec4 sum = vec4(0.0);\\n float weightAll = 0.0;\\n\\n vec3 cN = centerNTexel.rgb * 2.0 - 1.0;\\n float cD = getLinearDepth(v_Texcoord);\\n for (int i = 0; i < 9; i++) {\\n vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));\\n float w = gaussianKernel[i]\\n * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);\\n float d = getLinearDepth(coord);\\n w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));\\n\\n weightAll += w;\\n sum += decodeHDR(texture2D(texture, coord)) * w;\\n }\\n\\n#ifdef BLEND\\n float aoFactor = 1.0;\\n #ifdef SSAOTEX_ENABLED\\n aoFactor = texture2D(ssaoTex, v_Texcoord).r;\\n #endif\\n gl_FragColor = encodeHDR(\\n sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))\\n );\\n#else\\n gl_FragColor = encodeHDR(sum / weightAll);\\n#endif\\n}\\n\\n@end\";","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport halton from './halton';\nimport cubemapUtil from 'claygl/src/util/cubemap';\nimport SSRGLSLCode from './SSR.glsl.js';\nShader.import(SSRGLSLCode);\n\nfunction SSRPass(opt) {\n  opt = opt || {};\n  this._ssrPass = new Pass({\n    fragment: Shader.source('ecgl.ssr.main'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass1 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blurPass2 = new Pass({\n    fragment: Shader.source('ecgl.ssr.blur'),\n    clearColor: [0, 0, 0, 0]\n  });\n  this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n\n  this._blendPass.material.disableTexturesAll();\n\n  this._blendPass.material.enableTexture(['texture1', 'texture2']);\n\n  this._ssrPass.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._ssrPass.setUniform('gBufferTexture2', opt.depthTexture); // this._ssrPass.setUniform('gBufferTexture3', opt.albedoTexture);\n\n\n  this._blurPass1.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass1.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.setUniform('gBufferTexture1', opt.normalTexture);\n\n  this._blurPass2.setUniform('gBufferTexture2', opt.depthTexture);\n\n  this._blurPass2.material.define('fragment', 'VERTICAL');\n\n  this._blurPass2.material.define('fragment', 'BLEND');\n\n  this._ssrTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture2 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._texture3 = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._prevTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._currentTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._normalDistribution = null;\n  this._totalSamples = 256;\n  this._samplePerFrame = 4;\n\n  this._ssrPass.material.define('fragment', 'SAMPLE_PER_FRAME', this._samplePerFrame);\n\n  this._ssrPass.material.define('fragment', 'TOTAL_SAMPLES', this._totalSamples);\n\n  this._downScale = 1;\n}\n\nSSRPass.prototype.setAmbientCubemap = function (specularCubemap, specularIntensity) {\n  this._ssrPass.material.set('specularCubemap', specularCubemap);\n\n  this._ssrPass.material.set('specularIntensity', specularIntensity);\n\n  var enableSpecularMap = specularCubemap && specularIntensity;\n\n  this._ssrPass.material[enableSpecularMap ? 'enableTexture' : 'disableTexture']('specularCubemap');\n};\n\nSSRPass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var ssrTexture = this._ssrTexture;\n  var texture2 = this._texture2;\n  var texture3 = this._texture3;\n  ssrTexture.width = this._prevTexture.width = this._currentTexture.width = width / this._downScale;\n  ssrTexture.height = this._prevTexture.height = this._currentTexture.height = height / this._downScale;\n  texture2.width = texture3.width = width;\n  texture2.height = texture3.height = height;\n  var frameBuffer = this._frameBuffer;\n  var ssrPass = this._ssrPass;\n  var blurPass1 = this._blurPass1;\n  var blurPass2 = this._blurPass2;\n  var blendPass = this._blendPass;\n  var toViewSpace = new Matrix4();\n  var toWorldSpace = new Matrix4();\n  Matrix4.transpose(toViewSpace, camera.worldTransform);\n  Matrix4.transpose(toWorldSpace, camera.viewMatrix);\n  ssrPass.setUniform('sourceTexture', sourceTexture);\n  ssrPass.setUniform('projection', camera.projectionMatrix.array);\n  ssrPass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n  ssrPass.setUniform('toViewSpace', toViewSpace.array);\n  ssrPass.setUniform('toWorldSpace', toWorldSpace.array);\n  ssrPass.setUniform('nearZ', camera.near);\n  var percent = frame / this._totalSamples * this._samplePerFrame;\n  ssrPass.setUniform('jitterOffset', percent);\n  ssrPass.setUniform('sampleOffset', frame * this._samplePerFrame);\n  blurPass1.setUniform('textureSize', [ssrTexture.width, ssrTexture.height]);\n  blurPass2.setUniform('textureSize', [width, height]);\n  blurPass2.setUniform('sourceTexture', sourceTexture);\n  blurPass1.setUniform('projection', camera.projectionMatrix.array);\n  blurPass2.setUniform('projection', camera.projectionMatrix.array);\n  frameBuffer.attach(ssrTexture);\n  frameBuffer.bind(renderer);\n  ssrPass.render(renderer);\n\n  if (this._physicallyCorrect) {\n    frameBuffer.attach(this._currentTexture);\n    blendPass.setUniform('texture1', this._prevTexture);\n    blendPass.setUniform('texture2', ssrTexture);\n    blendPass.material.set({\n      'weight1': frame >= 1 ? 0.95 : 0,\n      'weight2': frame >= 1 ? 0.05 : 1 // weight1: frame >= 1 ? 1 : 0,\n      // weight2: 1\n\n    });\n    blendPass.render(renderer);\n  }\n\n  frameBuffer.attach(texture2);\n  blurPass1.setUniform('texture', this._physicallyCorrect ? this._currentTexture : ssrTexture);\n  blurPass1.render(renderer);\n  frameBuffer.attach(texture3);\n  blurPass2.setUniform('texture', texture2);\n  blurPass2.render(renderer);\n  frameBuffer.unbind(renderer);\n\n  if (this._physicallyCorrect) {\n    var tmp = this._prevTexture;\n    this._prevTexture = this._currentTexture;\n    this._currentTexture = tmp;\n  }\n};\n\nSSRPass.prototype.getTargetTexture = function () {\n  return this._texture3;\n};\n\nSSRPass.prototype.setParameter = function (name, val) {\n  if (name === 'maxIteration') {\n    this._ssrPass.material.define('fragment', 'MAX_ITERATION', val);\n  } else {\n    this._ssrPass.setUniform(name, val);\n  }\n};\n\nSSRPass.prototype.setPhysicallyCorrect = function (isPhysicallyCorrect) {\n  if (isPhysicallyCorrect) {\n    if (!this._normalDistribution) {\n      this._normalDistribution = cubemapUtil.generateNormalDistribution(64, this._totalSamples);\n    }\n\n    this._ssrPass.material.define('fragment', 'PHYSICALLY_CORRECT');\n\n    this._ssrPass.material.set('normalDistribution', this._normalDistribution);\n\n    this._ssrPass.material.set('normalDistributionSize', [64, this._totalSamples]);\n  } else {\n    this._ssrPass.material.undefine('fragment', 'PHYSICALLY_CORRECT');\n  }\n\n  this._physicallyCorrect = isPhysicallyCorrect;\n};\n\nSSRPass.prototype.setSSAOTexture = function (texture) {\n  var blendPass = this._blurPass2;\n\n  if (texture) {\n    blendPass.material.enableTexture('ssaoTex');\n    blendPass.material.set('ssaoTex', texture);\n  } else {\n    blendPass.material.disableTexture('ssaoTex');\n  }\n};\n\nSSRPass.prototype.isFinished = function (frame) {\n  if (this._physicallyCorrect) {\n    return frame > this._totalSamples / this._samplePerFrame;\n  } else {\n    return true;\n  }\n};\n\nSSRPass.prototype.dispose = function (renderer) {\n  this._ssrTexture.dispose(renderer);\n\n  this._texture2.dispose(renderer);\n\n  this._texture3.dispose(renderer);\n\n  this._prevTexture.dispose(renderer);\n\n  this._currentTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default SSRPass;","// Based on https://bl.ocks.org/mbostock/19168c663618b707158\nexport default [0.0, 0.0, -0.321585265978, -0.154972575841, 0.458126042375, 0.188473391593, 0.842080129861, 0.527766490688, 0.147304551086, -0.659453822776, -0.331943915203, -0.940619700594, 0.0479226680259, 0.54812163202, 0.701581552186, -0.709825561388, -0.295436780218, 0.940589268233, -0.901489676764, 0.237713156085, 0.973570876096, -0.109899459384, -0.866792314779, -0.451805525005, 0.330975007087, 0.800048655954, -0.344275183665, 0.381779221166, -0.386139432542, -0.437418421534, -0.576478634965, -0.0148463392551, 0.385798197415, -0.262426961053, -0.666302061145, 0.682427250835, -0.628010632582, -0.732836215494, 0.10163141741, -0.987658134403, 0.711995289051, -0.320024291314, 0.0296005138058, 0.950296523438, 0.0130612307608, -0.351024443122, -0.879596633704, -0.10478487883, 0.435712737232, 0.504254490347, 0.779203817497, 0.206477676721, 0.388264289969, -0.896736162545, -0.153106280781, -0.629203242522, -0.245517550697, 0.657969239148, 0.126830499058, 0.26862328493, -0.634888119007, -0.302301223431, 0.617074219636, 0.779817204925];","export default \"@export ecgl.normal.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n@import ecgl.common.attributes\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\n@import ecgl.common.normalMap.vertexHeader\\n\\n@import ecgl.common.vertexAnimation.header\\n\\nvoid main()\\n{\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n @import ecgl.common.uv.main\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n @import ecgl.common.normalMap.vertexMain\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n}\\n\\n\\n@end\\n\\n\\n@export ecgl.normal.fragment\\n\\n#define ROUGHNESS_CHANEL 0\\n\\nuniform bool useBumpMap;\\nuniform bool useRoughnessMap;\\nuniform bool doubleSide;\\nuniform float roughness;\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n@import ecgl.common.normalMap.fragmentHeader\\n@import ecgl.common.bumpMap.header\\n\\nuniform sampler2D roughnessMap;\\n\\nvoid main()\\n{\\n vec3 N = v_Normal;\\n \\n bool flipNormal = false;\\n if (doubleSide) {\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n flipNormal = true;\\n }\\n }\\n\\n @import ecgl.common.normalMap.fragmentMain\\n\\n if (useBumpMap) {\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n }\\n\\n float g = 1.0 - roughness;\\n\\n if (useRoughnessMap) {\\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n }\\n\\n if (flipNormal) {\\n N = -N;\\n }\\n\\n gl_FragColor.rgb = (N.xyz + 1.0) * 0.5;\\n gl_FragColor.a = g;\\n}\\n@end\";","// NormalPass will generate normal and depth data.\n// TODO Animation\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Material from 'claygl/src/Material';\nimport Pass from 'claygl/src/compositor/Pass';\nimport textureUtil from 'claygl/src/util/texture';\nimport normalGLSL from '../util/shader/normal.glsl.js';\nShader.import(normalGLSL);\n\nfunction attachTextureToSlot(renderer, program, symbol, texture, slot) {\n  var gl = renderer.gl;\n  program.setUniform(gl, '1i', symbol, slot);\n  gl.activeTexture(gl.TEXTURE0 + slot); // Maybe texture is not loaded yet;\n\n  if (texture.isRenderable()) {\n    texture.bind(renderer);\n  } else {\n    // Bind texture to null\n    texture.unbind(renderer);\n  }\n} // TODO Use globalShader insteadof globalMaterial?\n\n\nfunction getBeforeRenderHook(renderer, defaultNormalMap, defaultBumpMap, defaultRoughnessMap, normalMaterial) {\n  var previousNormalMap;\n  var previousBumpMap;\n  var previousRoughnessMap;\n  var previousRenderable;\n  var gl = renderer.gl;\n  return function (renderable, normalMaterial, prevNormalMaterial) {\n    // Material not change\n    if (previousRenderable && previousRenderable.material === renderable.material) {\n      return;\n    }\n\n    var material = renderable.material;\n    var program = renderable.__program;\n    var roughness = material.get('roughness');\n\n    if (roughness == null) {\n      roughness = 1;\n    }\n\n    var normalMap = material.get('normalMap') || defaultNormalMap;\n    var roughnessMap = material.get('roughnessMap');\n    var bumpMap = material.get('bumpMap');\n    var uvRepeat = material.get('uvRepeat');\n    var uvOffset = material.get('uvOffset');\n    var detailUvRepeat = material.get('detailUvRepeat');\n    var detailUvOffset = material.get('detailUvOffset');\n    var useBumpMap = !!bumpMap && material.isTextureEnabled('bumpMap');\n    var useRoughnessMap = !!roughnessMap && material.isTextureEnabled('roughnessMap');\n    var doubleSide = material.isDefined('fragment', 'DOUBLE_SIDED');\n    bumpMap = bumpMap || defaultBumpMap;\n    roughnessMap = roughnessMap || defaultRoughnessMap;\n\n    if (prevNormalMaterial !== normalMaterial) {\n      normalMaterial.set('normalMap', normalMap);\n      normalMaterial.set('bumpMap', bumpMap);\n      normalMaterial.set('roughnessMap', roughnessMap);\n      normalMaterial.set('useBumpMap', useBumpMap);\n      normalMaterial.set('useRoughnessMap', useRoughnessMap);\n      normalMaterial.set('doubleSide', doubleSide);\n      uvRepeat != null && normalMaterial.set('uvRepeat', uvRepeat);\n      uvOffset != null && normalMaterial.set('uvOffset', uvOffset);\n      detailUvRepeat != null && normalMaterial.set('detailUvRepeat', detailUvRepeat);\n      detailUvOffset != null && normalMaterial.set('detailUvOffset', detailUvOffset);\n      normalMaterial.set('roughness', roughness);\n    } else {\n      program.setUniform(gl, '1f', 'roughness', roughness);\n\n      if (previousNormalMap !== normalMap) {\n        attachTextureToSlot(renderer, program, 'normalMap', normalMap, 0);\n      }\n\n      if (previousBumpMap !== bumpMap && bumpMap) {\n        attachTextureToSlot(renderer, program, 'bumpMap', bumpMap, 1);\n      }\n\n      if (previousRoughnessMap !== roughnessMap && roughnessMap) {\n        attachTextureToSlot(renderer, program, 'roughnessMap', roughnessMap, 2);\n      }\n\n      if (uvRepeat != null) {\n        program.setUniform(gl, '2f', 'uvRepeat', uvRepeat);\n      }\n\n      if (uvOffset != null) {\n        program.setUniform(gl, '2f', 'uvOffset', uvOffset);\n      }\n\n      if (detailUvRepeat != null) {\n        program.setUniform(gl, '2f', 'detailUvRepeat', detailUvRepeat);\n      }\n\n      if (detailUvOffset != null) {\n        program.setUniform(gl, '2f', 'detailUvOffset', detailUvOffset);\n      }\n\n      program.setUniform(gl, '1i', 'useBumpMap', +useBumpMap);\n      program.setUniform(gl, '1i', 'useRoughnessMap', +useRoughnessMap);\n      program.setUniform(gl, '1i', 'doubleSide', +doubleSide);\n    }\n\n    previousNormalMap = normalMap;\n    previousBumpMap = bumpMap;\n    previousRoughnessMap = roughnessMap;\n    previousRenderable = renderable;\n  };\n}\n\nfunction NormalPass(opt) {\n  opt = opt || {};\n  this._depthTex = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._normalTex = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._framebuffer = new FrameBuffer();\n\n  this._framebuffer.attach(this._normalTex);\n\n  this._framebuffer.attach(this._depthTex, FrameBuffer.DEPTH_ATTACHMENT);\n\n  this._normalMaterial = new Material({\n    shader: new Shader(Shader.source('ecgl.normal.vertex'), Shader.source('ecgl.normal.fragment'))\n  });\n\n  this._normalMaterial.enableTexture(['normalMap', 'bumpMap', 'roughnessMap']);\n\n  this._defaultNormalMap = textureUtil.createBlank('#000');\n  this._defaultBumpMap = textureUtil.createBlank('#000');\n  this._defaultRoughessMap = textureUtil.createBlank('#000');\n  this._debugPass = new Pass({\n    fragment: Shader.source('clay.compositor.output')\n  });\n\n  this._debugPass.setUniform('texture', this._normalTex);\n\n  this._debugPass.material.undefine('fragment', 'OUTPUT_ALPHA');\n}\n\nNormalPass.prototype.getDepthTexture = function () {\n  return this._depthTex;\n};\n\nNormalPass.prototype.getNormalTexture = function () {\n  return this._normalTex;\n};\n\nNormalPass.prototype.update = function (renderer, scene, camera) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var depthTexture = this._depthTex;\n  var normalTexture = this._normalTex;\n  var normalMaterial = this._normalMaterial;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  normalTexture.width = width;\n  normalTexture.height = height;\n  var opaqueList = scene.getRenderList(camera).opaque;\n\n  this._framebuffer.bind(renderer);\n\n  renderer.gl.clearColor(0, 0, 0, 0);\n  renderer.gl.clear(renderer.gl.COLOR_BUFFER_BIT | renderer.gl.DEPTH_BUFFER_BIT);\n  renderer.gl.disable(renderer.gl.BLEND);\n  renderer.renderPass(opaqueList, camera, {\n    getMaterial: function () {\n      return normalMaterial;\n    },\n    ifRender: function (object) {\n      return object.renderNormal;\n    },\n    beforeRender: getBeforeRenderHook(renderer, this._defaultNormalMap, this._defaultBumpMap, this._defaultRoughessMap, this._normalMaterial),\n    sort: renderer.opaqueSortCompare\n  });\n\n  this._framebuffer.unbind(renderer);\n};\n\nNormalPass.prototype.renderDebug = function (renderer) {\n  this._debugPass.render(renderer);\n};\n\nNormalPass.prototype.dispose = function (renderer) {\n  this._depthTex.dispose(renderer);\n\n  this._normalTex.dispose(renderer);\n};\n\nexport default NormalPass;","import Matrix4 from 'claygl/src/math/Matrix4';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Pass from 'claygl/src/compositor/Pass';\nimport Shader from 'claygl/src/Shader';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\n\nfunction EdgePass(opt) {\n  opt = opt || {};\n  this._edgePass = new Pass({\n    fragment: Shader.source('ecgl.edge')\n  });\n\n  this._edgePass.setUniform('normalTexture', opt.normalTexture);\n\n  this._edgePass.setUniform('depthTexture', opt.depthTexture);\n\n  this._targetTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._frameBuffer = new FrameBuffer();\n\n  this._frameBuffer.attach(this._targetTexture);\n}\n\nEdgePass.prototype.update = function (renderer, camera, sourceTexture, frame) {\n  var width = renderer.getWidth();\n  var height = renderer.getHeight();\n  var texture = this._targetTexture;\n  texture.width = width;\n  texture.height = height;\n  var frameBuffer = this._frameBuffer;\n  frameBuffer.bind(renderer);\n\n  this._edgePass.setUniform('projectionInv', camera.invProjectionMatrix.array);\n\n  this._edgePass.setUniform('textureSize', [width, height]);\n\n  this._edgePass.setUniform('texture', sourceTexture);\n\n  this._edgePass.render(renderer);\n\n  frameBuffer.unbind(renderer);\n};\n\nEdgePass.prototype.getTargetTexture = function () {\n  return this._targetTexture;\n};\n\nEdgePass.prototype.setParameter = function (name, val) {\n  this._edgePass.setUniform(name, val);\n};\n\nEdgePass.prototype.dispose = function (renderer) {\n  this._targetTexture.dispose(renderer);\n\n  this._frameBuffer.dispose(renderer);\n};\n\nexport default EdgePass;","export default {\n  'type': 'compositor',\n  'nodes': [{\n    'name': 'source',\n    'type': 'texture',\n    'outputs': {\n      'color': {}\n    }\n  }, {\n    'name': 'source_half',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'source'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'bright',\n    'shader': '#source(clay.compositor.bright)',\n    'inputs': {\n      'texture': 'source_half'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'threshold': 2,\n      'scale': 4,\n      'textureSize': 'expr([width * 1.0 / 2, height / 2])'\n    }\n  }, {\n    'name': 'bright_downsample_4',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 2, height / 2] )'\n    }\n  }, {\n    'name': 'bright_downsample_8',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_4'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 4, height / 4] )'\n    }\n  }, {\n    'name': 'bright_downsample_16',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_8'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 8, height / 8] )'\n    }\n  }, {\n    'name': 'bright_downsample_32',\n    'shader': '#source(clay.compositor.downsample)',\n    'inputs': {\n      'texture': 'bright_downsample_16'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 32)',\n          'height': 'expr(height * 1.0 / 32)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0 / 16, height / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_16_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_32'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 32, height / 32] )'\n    }\n  }, {\n    'name': 'bright_upsample_16_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_16_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 16)',\n          'height': 'expr(height * 1.0 / 16)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_16'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 16, height * 1.0 / 16] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_8_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n    }\n  }, {\n    'name': 'bright_upsample_8_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_8_blur_v',\n      'texture2': 'bright_upsample_16_blur_v'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 8)',\n          'height': 'expr(height * 1.0 / 8)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_4_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_8'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 8, height * 1.0 / 8] )'\n    }\n  }, {\n    'name': 'bright_upsample_4_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_4_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n    }\n  }, {\n    'name': 'bright_upsample_4_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_4_blur_v',\n      'texture2': 'bright_upsample_8_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 4)',\n          'height': 'expr(height * 1.0 / 4)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_2_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_downsample_4'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 4, height * 1.0 / 4] )'\n    }\n  }, {\n    'name': 'bright_upsample_2_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_2_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n    }\n  }, {\n    'name': 'bright_upsample_2_blend',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_2_blur_v',\n      'texture2': 'bright_upsample_4_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0 / 2)',\n          'height': 'expr(height * 1.0 / 2)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'bright_upsample_full_blur_h',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 0.0,\n      'textureSize': 'expr( [width * 1.0 / 2, height * 1.0 / 2] )'\n    }\n  }, {\n    'name': 'bright_upsample_full_blur_v',\n    'shader': '#source(clay.compositor.gaussian_blur)',\n    'inputs': {\n      'texture': 'bright_upsample_full_blur_h'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'blurSize': 1,\n      'blurDir': 1.0,\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'bloom_composite',\n    'shader': '#source(clay.compositor.blend)',\n    'inputs': {\n      'texture1': 'bright_upsample_full_blur_v',\n      'texture2': 'bright_upsample_2_blend'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'weight1': 0.3,\n      'weight2': 0.7\n    }\n  }, {\n    'name': 'coc',\n    'shader': '#source(ecgl.dof.coc)',\n    'outputs': {\n      'color': {\n        'parameters': {\n          'minFilter': 'NEAREST',\n          'magFilter': 'NEAREST',\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'parameters': {\n      'focalDist': 50,\n      'focalRange': 30\n    }\n  }, {\n    'name': 'dof_far_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'source',\n      'coc': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    }\n  }, {\n    'name': 'dof_near_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'source',\n      'coc': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    },\n    'defines': {\n      'BLUR_NEARFIELD': null\n    }\n  }, {\n    'name': 'dof_coc_blur',\n    'shader': '#source(ecgl.dof.diskBlur)',\n    'inputs': {\n      'texture': 'coc'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'minFilter': 'NEAREST',\n          'magFilter': 'NEAREST',\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'parameters': {\n      'textureSize': 'expr( [width * 1.0, height * 1.0] )'\n    },\n    'defines': {\n      'BLUR_COC': null\n    }\n  }, {\n    'name': 'dof_composite',\n    'shader': '#source(ecgl.dof.composite)',\n    'inputs': {\n      'original': 'source',\n      'blurred': 'dof_far_blur',\n      'nearfield': 'dof_near_blur',\n      'coc': 'coc',\n      'nearcoc': 'dof_coc_blur'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)',\n          'type': 'HALF_FLOAT'\n        }\n      }\n    }\n  }, {\n    'name': 'composite',\n    'shader': '#source(clay.compositor.hdr.composite)',\n    'inputs': {\n      'texture': 'source',\n      'bloom': 'bloom_composite'\n    },\n    'outputs': {\n      'color': {\n        'parameters': {\n          'width': 'expr(width * 1.0)',\n          'height': 'expr(height * 1.0)'\n        }\n      }\n    },\n    'defines': {// Images are all premultiplied alpha before composite because of blending.\n      // 'PREMULTIPLY_ALPHA': null,\n      // 'DEBUG': 2\n    }\n  }, {\n    'name': 'FXAA',\n    'shader': '#source(clay.compositor.fxaa)',\n    'inputs': {\n      'texture': 'composite'\n    }\n  }]\n};","export default \"@export ecgl.dof.coc\\n\\nuniform sampler2D depth;\\n\\nuniform float zNear: 0.1;\\nuniform float zFar: 2000;\\n\\nuniform float focalDistance: 3;\\nuniform float focalRange: 1;\\nuniform float focalLength: 30;\\nuniform float fstop: 2.8;\\n\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.encode_float\\n\\nvoid main()\\n{\\n float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;\\n\\n float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));\\n\\n float aperture = focalLength / fstop;\\n\\n float coc;\\n\\n float uppper = focalDistance + focalRange;\\n float lower = focalDistance - focalRange;\\n if (dist <= uppper && dist >= lower) {\\n coc = 0.5;\\n }\\n else {\\n float focalAdjusted = dist > uppper ? uppper : lower;\\n\\n coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));\\n coc = clamp(coc, 0.0, 2.0) / 2.00001;\\n\\n if (dist < lower) {\\n coc = -coc;\\n }\\n coc = coc * 0.5 + 0.5;\\n }\\n\\n gl_FragColor = encodeFloat(coc);\\n}\\n@end\\n\\n\\n@export ecgl.dof.composite\\n\\n#define DEBUG 0\\n\\nuniform sampler2D original;\\nuniform sampler2D blurred;\\nuniform sampler2D nearfield;\\nuniform sampler2D coc;\\nuniform sampler2D nearcoc;\\nvarying vec2 v_Texcoord;\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\nvoid main()\\n{\\n vec4 blurredColor = texture2D(blurred, v_Texcoord);\\n vec4 originalColor = texture2D(original, v_Texcoord);\\n\\n float fCoc = decodeFloat(texture2D(coc, v_Texcoord));\\n\\n fCoc = abs(fCoc * 2.0 - 1.0);\\n\\n float weight = smoothstep(0.0, 1.0, fCoc);\\n \\n#ifdef NEARFIELD_ENABLED\\n vec4 nearfieldColor = texture2D(nearfield, v_Texcoord);\\n float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));\\n fNearCoc = abs(fNearCoc * 2.0 - 1.0);\\n\\n gl_FragColor = encodeHDR(\\n mix(\\n nearfieldColor, mix(originalColor, blurredColor, weight),\\n pow(1.0 - fNearCoc, 4.0)\\n )\\n );\\n#else\\n gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));\\n#endif\\n\\n}\\n\\n@end\\n\\n\\n\\n@export ecgl.dof.diskBlur\\n\\n#define POISSON_KERNEL_SIZE 16;\\n\\nuniform sampler2D texture;\\nuniform sampler2D coc;\\nvarying vec2 v_Texcoord;\\n\\nuniform float blurRadius : 10.0;\\nuniform vec2 textureSize : [512.0, 512.0];\\n\\nuniform vec2 poissonKernel[POISSON_KERNEL_SIZE];\\n\\nuniform float percent;\\n\\nfloat nrand(const in vec2 n) {\\n return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\n@import clay.util.rgbm\\n@import clay.util.float\\n\\n\\nvoid main()\\n{\\n vec2 offset = blurRadius / textureSize;\\n\\n float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );\\n float cosa = cos(rnd);\\n float sina = sin(rnd);\\n vec4 basis = vec4(cosa, -sina, sina, cosa);\\n\\n#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)\\n offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);\\n#endif\\n\\n#ifdef BLUR_COC\\n float cocSum = 0.0;\\n#else\\n vec4 color = vec4(0.0);\\n#endif\\n\\n\\n float weightSum = 0.0;\\n\\n for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {\\n vec2 ofs = poissonKernel[i];\\n\\n ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));\\n\\n vec2 uv = v_Texcoord + ofs * offset;\\n vec4 texel = texture2D(texture, uv);\\n\\n float w = 1.0;\\n#ifdef BLUR_COC\\n float fCoc = decodeFloat(texel) * 2.0 - 1.0;\\n cocSum += clamp(fCoc, -1.0, 0.0) * w;\\n#else\\n texel = texel;\\n #if !defined(BLUR_NEARFIELD)\\n float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;\\n w *= abs(fCoc);\\n #endif\\n texel.rgb *= texel.a;\\n color += texel * w;\\n#endif\\n\\n weightSum += w;\\n }\\n\\n#ifdef BLUR_COC\\n gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);\\n#else\\n color /= weightSum;\\n color.rgb /= (color.a + 0.0001);\\n gl_FragColor = color;\\n#endif\\n}\\n\\n@end\";","export default \"@export ecgl.edge\\n\\nuniform sampler2D texture;\\n\\nuniform sampler2D normalTexture;\\nuniform sampler2D depthTexture;\\n\\nuniform mat4 projectionInv;\\n\\nuniform vec2 textureSize;\\n\\nuniform vec4 edgeColor: [0,0,0,0.8];\\n\\nvarying vec2 v_Texcoord;\\n\\nvec3 packColor(vec2 coord) {\\n float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;\\n vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);\\n vec4 p4 = projectionInv * p;\\n\\n return vec3(\\n texture2D(normalTexture, coord).rg,\\n -p4.z / p4.w / 5.0\\n );\\n}\\n\\nvoid main() {\\n vec2 cc = v_Texcoord;\\n vec3 center = packColor(cc);\\n\\n float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;\\n float dx = size / textureSize.x;\\n float dy = size / textureSize.y;\\n\\n vec2 coord;\\n vec3 topLeft = packColor(cc+vec2(-dx, -dy));\\n vec3 top = packColor(cc+vec2(0.0, -dy));\\n vec3 topRight = packColor(cc+vec2(dx, -dy));\\n vec3 left = packColor(cc+vec2(-dx, 0.0));\\n vec3 right = packColor(cc+vec2(dx, 0.0));\\n vec3 bottomLeft = packColor(cc+vec2(-dx, dy));\\n vec3 bottom = packColor(cc+vec2(0.0, dy));\\n vec3 bottomRight = packColor(cc+vec2(dx, dy));\\n\\n vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;\\n vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;\\n\\n float edge = sqrt(dot(h, h) + dot(v, v));\\n\\n edge = smoothstep(0.8, 1.0, edge);\\n\\n gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);\\n}\\n@end\";","import Shader from 'claygl/src/Shader';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport createCompositor from 'claygl/src/compositor/createCompositor';\nimport SSAOPass from './SSAOPass';\nimport SSRPass from './SSRPass';\nimport poissonKernel from './poissonKernel';\nimport graphicGL from '../util/graphicGL';\nimport NormalPass from './NormalPass';\nimport EdgePass from './EdgePass';\nimport effectJson from './composite.js';\nimport blurCode from 'claygl/src/shader/source/compositor/blur.glsl.js';\nimport lutCode from 'claygl/src/shader/source/compositor/lut.glsl.js';\nimport outputCode from 'claygl/src/shader/source/compositor/output.glsl.js';\nimport brightCode from 'claygl/src/shader/source/compositor/bright.glsl.js';\nimport downsampleCode from 'claygl/src/shader/source/compositor/downsample.glsl.js';\nimport upsampleCode from 'claygl/src/shader/source/compositor/upsample.glsl.js';\nimport hdrCode from 'claygl/src/shader/source/compositor/hdr.glsl.js';\nimport blendCode from 'claygl/src/shader/source/compositor/blend.glsl.js';\nimport fxaaCode from 'claygl/src/shader/source/compositor/fxaa.glsl.js';\nimport DOFCode from './DOF.glsl.js';\nimport edgeCode from './edge.glsl.js';\nShader['import'](blurCode);\nShader['import'](lutCode);\nShader['import'](outputCode);\nShader['import'](brightCode);\nShader['import'](downsampleCode);\nShader['import'](upsampleCode);\nShader['import'](hdrCode);\nShader['import'](blendCode);\nShader['import'](fxaaCode);\nShader['import'](DOFCode);\nShader['import'](edgeCode);\n\nfunction makeCommonOutputs(getWidth, getHeight) {\n  return {\n    color: {\n      parameters: {\n        width: getWidth,\n        height: getHeight\n      }\n    }\n  };\n}\n\nvar FINAL_NODES_CHAIN = ['composite', 'FXAA'];\n\nfunction EffectCompositor() {\n  this._width;\n  this._height;\n  this._dpr;\n  this._sourceTexture = new Texture2D({\n    type: Texture.HALF_FLOAT\n  });\n  this._depthTexture = new Texture2D({\n    format: Texture.DEPTH_COMPONENT,\n    type: Texture.UNSIGNED_INT\n  });\n  this._framebuffer = new FrameBuffer();\n\n  this._framebuffer.attach(this._sourceTexture);\n\n  this._framebuffer.attach(this._depthTexture, FrameBuffer.DEPTH_ATTACHMENT);\n\n  this._normalPass = new NormalPass();\n  this._compositor = createCompositor(effectJson);\n\n  var sourceNode = this._compositor.getNodeByName('source');\n\n  sourceNode.texture = this._sourceTexture;\n\n  var cocNode = this._compositor.getNodeByName('coc');\n\n  this._sourceNode = sourceNode;\n  this._cocNode = cocNode;\n  this._compositeNode = this._compositor.getNodeByName('composite');\n  this._fxaaNode = this._compositor.getNodeByName('FXAA');\n  this._dofBlurNodes = ['dof_far_blur', 'dof_near_blur', 'dof_coc_blur'].map(function (name) {\n    return this._compositor.getNodeByName(name);\n  }, this);\n  this._dofBlurKernel = 0;\n  this._dofBlurKernelSize = new Float32Array(0);\n  this._finalNodesChain = FINAL_NODES_CHAIN.map(function (name) {\n    return this._compositor.getNodeByName(name);\n  }, this);\n  var gBufferObj = {\n    normalTexture: this._normalPass.getNormalTexture(),\n    depthTexture: this._normalPass.getDepthTexture()\n  };\n  this._ssaoPass = new SSAOPass(gBufferObj);\n  this._ssrPass = new SSRPass(gBufferObj);\n  this._edgePass = new EdgePass(gBufferObj);\n}\n\nEffectCompositor.prototype.resize = function (width, height, dpr) {\n  dpr = dpr || 1;\n  var width = width * dpr;\n  var height = height * dpr;\n  var sourceTexture = this._sourceTexture;\n  var depthTexture = this._depthTexture;\n  sourceTexture.width = width;\n  sourceTexture.height = height;\n  depthTexture.width = width;\n  depthTexture.height = height;\n  var rendererMock = {\n    getWidth: function () {\n      return width;\n    },\n    getHeight: function () {\n      return height;\n    },\n    getDevicePixelRatio: function () {\n      return dpr;\n    }\n  };\n\n  function wrapCallback(obj, key) {\n    if (typeof obj[key] === 'function') {\n      var oldFunc = obj[key].__original || obj[key]; // Use viewport width/height instead of renderer width/height\n\n      obj[key] = function (renderer) {\n        return oldFunc.call(this, rendererMock);\n      };\n\n      obj[key].__original = oldFunc;\n    }\n  }\n\n  this._compositor.nodes.forEach(function (node) {\n    for (var outKey in node.outputs) {\n      var parameters = node.outputs[outKey].parameters;\n\n      if (parameters) {\n        wrapCallback(parameters, 'width');\n        wrapCallback(parameters, 'height');\n      }\n    }\n\n    for (var paramKey in node.parameters) {\n      wrapCallback(node.parameters, paramKey);\n    }\n  });\n\n  this._width = width;\n  this._height = height;\n  this._dpr = dpr;\n};\n\nEffectCompositor.prototype.getWidth = function () {\n  return this._width;\n};\n\nEffectCompositor.prototype.getHeight = function () {\n  return this._height;\n};\n\nEffectCompositor.prototype._ifRenderNormalPass = function () {\n  return this._enableSSAO || this._enableEdge || this._enableSSR;\n};\n\nEffectCompositor.prototype._getPrevNode = function (node) {\n  var idx = FINAL_NODES_CHAIN.indexOf(node.name) - 1;\n  var prevNode = this._finalNodesChain[idx];\n\n  while (prevNode && !this._compositor.getNodeByName(prevNode.name)) {\n    idx -= 1;\n    prevNode = this._finalNodesChain[idx];\n  }\n\n  return prevNode;\n};\n\nEffectCompositor.prototype._getNextNode = function (node) {\n  var idx = FINAL_NODES_CHAIN.indexOf(node.name) + 1;\n  var nextNode = this._finalNodesChain[idx];\n\n  while (nextNode && !this._compositor.getNodeByName(nextNode.name)) {\n    idx += 1;\n    nextNode = this._finalNodesChain[idx];\n  }\n\n  return nextNode;\n};\n\nEffectCompositor.prototype._addChainNode = function (node) {\n  var prevNode = this._getPrevNode(node);\n\n  var nextNode = this._getNextNode(node);\n\n  if (!prevNode) {\n    return;\n  }\n\n  node.inputs.texture = prevNode.name;\n\n  if (nextNode) {\n    node.outputs = makeCommonOutputs(this.getWidth.bind(this), this.getHeight.bind(this));\n    nextNode.inputs.texture = node.name;\n  } else {\n    node.outputs = null;\n  }\n\n  this._compositor.addNode(node);\n};\n\nEffectCompositor.prototype._removeChainNode = function (node) {\n  var prevNode = this._getPrevNode(node);\n\n  var nextNode = this._getNextNode(node);\n\n  if (!prevNode) {\n    return;\n  }\n\n  if (nextNode) {\n    prevNode.outputs = makeCommonOutputs(this.getWidth.bind(this), this.getHeight.bind(this));\n    nextNode.inputs.texture = prevNode.name;\n  } else {\n    prevNode.outputs = null;\n  }\n\n  this._compositor.removeNode(node);\n};\n/**\n * Update normal\n */\n\n\nEffectCompositor.prototype.updateNormal = function (renderer, scene, camera, frame) {\n  if (this._ifRenderNormalPass()) {\n    this._normalPass.update(renderer, scene, camera);\n  }\n};\n/**\n * Render SSAO after render the scene, before compositing\n */\n\n\nEffectCompositor.prototype.updateSSAO = function (renderer, scene, camera, frame) {\n  this._ssaoPass.update(renderer, camera, frame);\n};\n/**\n * Enable SSAO effect\n */\n\n\nEffectCompositor.prototype.enableSSAO = function () {\n  this._enableSSAO = true;\n};\n/**\n * Disable SSAO effect\n */\n\n\nEffectCompositor.prototype.disableSSAO = function () {\n  this._enableSSAO = false;\n};\n/**\n * Enable SSR effect\n */\n\n\nEffectCompositor.prototype.enableSSR = function () {\n  this._enableSSR = true; // this._normalPass.enableTargetTexture3 = true;\n};\n/**\n * Disable SSR effect\n */\n\n\nEffectCompositor.prototype.disableSSR = function () {\n  this._enableSSR = false; // this._normalPass.enableTargetTexture3 = false;\n};\n/**\n * Render SSAO after render the scene, before compositing\n */\n\n\nEffectCompositor.prototype.getSSAOTexture = function () {\n  return this._ssaoPass.getTargetTexture();\n};\n/**\n * @return {clay.FrameBuffer}\n */\n\n\nEffectCompositor.prototype.getSourceFrameBuffer = function () {\n  return this._framebuffer;\n};\n/**\n * @return {clay.Texture2D}\n */\n\n\nEffectCompositor.prototype.getSourceTexture = function () {\n  return this._sourceTexture;\n};\n/**\n * Disable fxaa effect\n */\n\n\nEffectCompositor.prototype.disableFXAA = function () {\n  this._removeChainNode(this._fxaaNode);\n};\n/**\n * Enable fxaa effect\n */\n\n\nEffectCompositor.prototype.enableFXAA = function () {\n  this._addChainNode(this._fxaaNode);\n};\n/**\n * Enable bloom effect\n */\n\n\nEffectCompositor.prototype.enableBloom = function () {\n  this._compositeNode.inputs.bloom = 'bloom_composite';\n\n  this._compositor.dirty();\n};\n/**\n * Disable bloom effect\n */\n\n\nEffectCompositor.prototype.disableBloom = function () {\n  this._compositeNode.inputs.bloom = null;\n\n  this._compositor.dirty();\n};\n/**\n * Enable depth of field effect\n */\n\n\nEffectCompositor.prototype.enableDOF = function () {\n  this._compositeNode.inputs.texture = 'dof_composite';\n\n  this._compositor.dirty();\n};\n/**\n * Disable depth of field effect\n */\n\n\nEffectCompositor.prototype.disableDOF = function () {\n  this._compositeNode.inputs.texture = 'source';\n\n  this._compositor.dirty();\n};\n/**\n * Enable color correction\n */\n\n\nEffectCompositor.prototype.enableColorCorrection = function () {\n  this._compositeNode.define('COLOR_CORRECTION');\n\n  this._enableColorCorrection = true;\n};\n/**\n * Disable color correction\n */\n\n\nEffectCompositor.prototype.disableColorCorrection = function () {\n  this._compositeNode.undefine('COLOR_CORRECTION');\n\n  this._enableColorCorrection = false;\n};\n/**\n * Enable edge detection\n */\n\n\nEffectCompositor.prototype.enableEdge = function () {\n  this._enableEdge = true;\n};\n/**\n * Disable edge detection\n */\n\n\nEffectCompositor.prototype.disableEdge = function () {\n  this._enableEdge = false;\n};\n/**\n * Set bloom intensity\n * @param {number} value\n */\n\n\nEffectCompositor.prototype.setBloomIntensity = function (value) {\n  this._compositeNode.setParameter('bloomIntensity', value);\n};\n\nEffectCompositor.prototype.setSSAOParameter = function (name, value) {\n  switch (name) {\n    case 'quality':\n      // PENDING\n      var kernelSize = {\n        low: 6,\n        medium: 12,\n        high: 32,\n        ultra: 62\n      }[value] || 12;\n\n      this._ssaoPass.setParameter('kernelSize', kernelSize);\n\n      break;\n\n    case 'radius':\n      this._ssaoPass.setParameter(name, value);\n\n      this._ssaoPass.setParameter('bias', value / 200);\n\n      break;\n\n    case 'intensity':\n      this._ssaoPass.setParameter(name, value);\n\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown SSAO parameter ' + name);\n      }\n\n  }\n};\n\nEffectCompositor.prototype.setDOFParameter = function (name, value) {\n  switch (name) {\n    case 'focalDistance':\n    case 'focalRange':\n    case 'fstop':\n      this._cocNode.setParameter(name, value);\n\n      break;\n\n    case 'blurRadius':\n      for (var i = 0; i < this._dofBlurNodes.length; i++) {\n        this._dofBlurNodes[i].setParameter('blurRadius', value);\n      }\n\n      break;\n\n    case 'quality':\n      var kernelSize = {\n        low: 4,\n        medium: 8,\n        high: 16,\n        ultra: 32\n      }[value] || 8;\n      this._dofBlurKernelSize = kernelSize;\n\n      for (var i = 0; i < this._dofBlurNodes.length; i++) {\n        this._dofBlurNodes[i].pass.material.define('POISSON_KERNEL_SIZE', kernelSize);\n      }\n\n      this._dofBlurKernel = new Float32Array(kernelSize * 2);\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Unkown DOF parameter ' + name);\n      }\n\n  }\n};\n\nEffectCompositor.prototype.setSSRParameter = function (name, value) {\n  if (value == null) {\n    return;\n  }\n\n  switch (name) {\n    case 'quality':\n      // PENDING\n      var maxIteration = {\n        low: 10,\n        medium: 15,\n        high: 30,\n        ultra: 80\n      }[value] || 20;\n      var pixelStride = {\n        low: 32,\n        medium: 16,\n        high: 8,\n        ultra: 4\n      }[value] || 16;\n\n      this._ssrPass.setParameter('maxIteration', maxIteration);\n\n      this._ssrPass.setParameter('pixelStride', pixelStride);\n\n      break;\n\n    case 'maxRoughness':\n      this._ssrPass.setParameter('minGlossiness', Math.max(Math.min(1.0 - value, 1.0), 0.0));\n\n      break;\n\n    case 'physical':\n      this.setPhysicallyCorrectSSR(value);\n      break;\n\n    default:\n      console.warn('Unkown SSR parameter ' + name);\n  }\n};\n\nEffectCompositor.prototype.setPhysicallyCorrectSSR = function (physical) {\n  this._ssrPass.setPhysicallyCorrect(physical);\n};\n/**\n * Set color of edge\n */\n\n\nEffectCompositor.prototype.setEdgeColor = function (value) {\n  var color = graphicGL.parseColor(value);\n\n  this._edgePass.setParameter('edgeColor', color);\n};\n\nEffectCompositor.prototype.setExposure = function (value) {\n  this._compositeNode.setParameter('exposure', Math.pow(2, value));\n};\n\nEffectCompositor.prototype.setColorLookupTexture = function (image, api) {\n  this._compositeNode.pass.material.setTextureImage('lut', this._enableColorCorrection ? image : 'none', api, {\n    minFilter: graphicGL.Texture.NEAREST,\n    magFilter: graphicGL.Texture.NEAREST,\n    flipY: false\n  });\n};\n\nEffectCompositor.prototype.setColorCorrection = function (type, value) {\n  this._compositeNode.setParameter(type, value);\n};\n\nEffectCompositor.prototype.isSSREnabled = function () {\n  return this._enableSSR;\n};\n\nEffectCompositor.prototype.composite = function (renderer, scene, camera, framebuffer, frame) {\n  var sourceTexture = this._sourceTexture;\n  var targetTexture = sourceTexture;\n\n  if (this._enableEdge) {\n    this._edgePass.update(renderer, camera, sourceTexture, frame);\n\n    sourceTexture = targetTexture = this._edgePass.getTargetTexture();\n  }\n\n  if (this._enableSSR) {\n    this._ssrPass.update(renderer, camera, sourceTexture, frame);\n\n    targetTexture = this._ssrPass.getTargetTexture();\n\n    this._ssrPass.setSSAOTexture(this._enableSSAO ? this._ssaoPass.getTargetTexture() : null); // var lights = scene.getLights();\n    // for (var i = 0; i < lights.length; i++) {\n    //     if (lights[i].cubemap) {\n    //         this._ssrPass.setAmbientCubemap(lights[i].cubemap, lights[i].intensity);\n    //     }\n    // }\n\n  }\n\n  this._sourceNode.texture = targetTexture;\n\n  this._cocNode.setParameter('depth', this._depthTexture);\n\n  var blurKernel = this._dofBlurKernel;\n  var blurKernelSize = this._dofBlurKernelSize;\n  var frameAll = Math.floor(poissonKernel.length / 2 / blurKernelSize);\n  var kernelOffset = frame % frameAll;\n\n  for (var i = 0; i < blurKernelSize * 2; i++) {\n    blurKernel[i] = poissonKernel[i + kernelOffset * blurKernelSize * 2];\n  }\n\n  for (var i = 0; i < this._dofBlurNodes.length; i++) {\n    this._dofBlurNodes[i].setParameter('percent', frame / 30.0);\n\n    this._dofBlurNodes[i].setParameter('poissonKernel', blurKernel);\n  }\n\n  this._cocNode.setParameter('zNear', camera.near);\n\n  this._cocNode.setParameter('zFar', camera.far);\n\n  this._compositor.render(renderer, framebuffer);\n};\n\nEffectCompositor.prototype.dispose = function (renderer) {\n  this._sourceTexture.dispose(renderer);\n\n  this._depthTexture.dispose(renderer);\n\n  this._framebuffer.dispose(renderer);\n\n  this._compositor.dispose(renderer);\n\n  this._normalPass.dispose(renderer);\n\n  this._ssaoPass.dispose(renderer);\n};\n\nexport default EffectCompositor;","// Temporal Super Sample for static Scene\nimport halton from './halton';\nimport Pass from 'claygl/src/compositor/Pass';\nimport FrameBuffer from 'claygl/src/FrameBuffer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Shader from 'claygl/src/Shader';\nimport Matrix4 from 'claygl/src/math/Matrix4';\n\nfunction TemporalSuperSampling(frames) {\n  var haltonSequence = [];\n\n  for (var i = 0; i < 30; i++) {\n    haltonSequence.push([halton(i, 2), halton(i, 3)]);\n  }\n\n  this._haltonSequence = haltonSequence;\n  this._frame = 0;\n  this._sourceTex = new Texture2D();\n  this._sourceFb = new FrameBuffer();\n\n  this._sourceFb.attach(this._sourceTex); // Frame texture before temporal supersampling\n\n\n  this._prevFrameTex = new Texture2D();\n  this._outputTex = new Texture2D();\n  var blendPass = this._blendPass = new Pass({\n    fragment: Shader.source('clay.compositor.blend')\n  });\n  blendPass.material.disableTexturesAll();\n  blendPass.material.enableTexture(['texture1', 'texture2']);\n  this._blendFb = new FrameBuffer({\n    depthBuffer: false\n  });\n  this._outputPass = new Pass({\n    fragment: Shader.source('clay.compositor.output'),\n    // TODO, alpha is premultiplied?\n    blendWithPrevious: true\n  });\n\n  this._outputPass.material.define('fragment', 'OUTPUT_ALPHA');\n\n  this._outputPass.material.blend = function (_gl) {\n    // FIXME.\n    // Output is premultiplied alpha when BLEND is enabled ?\n    // http://stackoverflow.com/questions/2171085/opengl-blending-with-previous-contents-of-framebuffer\n    _gl.blendEquationSeparate(_gl.FUNC_ADD, _gl.FUNC_ADD);\n\n    _gl.blendFuncSeparate(_gl.ONE, _gl.ONE_MINUS_SRC_ALPHA, _gl.ONE, _gl.ONE_MINUS_SRC_ALPHA);\n  };\n}\n\nTemporalSuperSampling.prototype = {\n  constructor: TemporalSuperSampling,\n\n  /**\n   * Jitter camera projectionMatrix\n   * @parma {clay.Renderer} renderer\n   * @param {clay.Camera} camera\n   */\n  jitterProjection: function (renderer, camera) {\n    var viewport = renderer.viewport;\n    var dpr = viewport.devicePixelRatio || renderer.getDevicePixelRatio();\n    var width = viewport.width * dpr;\n    var height = viewport.height * dpr;\n    var offset = this._haltonSequence[this._frame % this._haltonSequence.length];\n    var translationMat = new Matrix4();\n    translationMat.array[12] = (offset[0] * 2.0 - 1.0) / width;\n    translationMat.array[13] = (offset[1] * 2.0 - 1.0) / height;\n    Matrix4.mul(camera.projectionMatrix, translationMat, camera.projectionMatrix);\n    Matrix4.invert(camera.invProjectionMatrix, camera.projectionMatrix);\n  },\n\n  /**\n   * Reset accumulating frame\n   */\n  resetFrame: function () {\n    this._frame = 0;\n  },\n\n  /**\n   * Return current frame\n   */\n  getFrame: function () {\n    return this._frame;\n  },\n\n  /**\n   * Get source framebuffer for usage\n   */\n  getSourceFrameBuffer: function () {\n    return this._sourceFb;\n  },\n  getOutputTexture: function () {\n    return this._outputTex;\n  },\n  resize: function (width, height) {\n    this._prevFrameTex.width = width;\n    this._prevFrameTex.height = height;\n    this._outputTex.width = width;\n    this._outputTex.height = height;\n    this._sourceTex.width = width;\n    this._sourceTex.height = height;\n\n    this._prevFrameTex.dirty();\n\n    this._outputTex.dirty();\n\n    this._sourceTex.dirty();\n  },\n  isFinished: function () {\n    return this._frame >= this._haltonSequence.length;\n  },\n  render: function (renderer, sourceTex, notOutput) {\n    var blendPass = this._blendPass;\n\n    if (this._frame === 0) {\n      // Direct output\n      blendPass.setUniform('weight1', 0);\n      blendPass.setUniform('weight2', 1);\n    } else {\n      blendPass.setUniform('weight1', 0.9);\n      blendPass.setUniform('weight2', 0.1);\n    }\n\n    blendPass.setUniform('texture1', this._prevFrameTex);\n    blendPass.setUniform('texture2', sourceTex || this._sourceTex);\n\n    this._blendFb.attach(this._outputTex);\n\n    this._blendFb.bind(renderer);\n\n    blendPass.render(renderer);\n\n    this._blendFb.unbind(renderer);\n\n    if (!notOutput) {\n      this._outputPass.setUniform('texture', this._outputTex);\n\n      this._outputPass.render(renderer);\n    } // Swap texture\n\n\n    var tmp = this._prevFrameTex;\n    this._prevFrameTex = this._outputTex;\n    this._outputTex = tmp;\n    this._frame++;\n  },\n  dispose: function (renderer) {\n    this._sourceFb.dispose(renderer);\n\n    this._blendFb.dispose(renderer);\n\n    this._prevFrameTex.dispose(renderer);\n\n    this._outputTex.dispose(renderer);\n\n    this._sourceTex.dispose(renderer);\n\n    this._outputPass.dispose(renderer);\n\n    this._blendPass.dispose(renderer);\n  }\n};\nexport default TemporalSuperSampling;","// Generate halton sequence\n// https://en.wikipedia.org/wiki/Halton_sequence\nfunction halton(index, base) {\n  var result = 0;\n  var f = 1 / base;\n  var i = index;\n\n  while (i > 0) {\n    result = result + f * (i % base);\n    i = Math.floor(i / base);\n    f = f / base;\n  }\n\n  return result;\n}\n\nexport default halton;","/**\n * Provide orbit control for 3D objects\n *\n * @module echarts-gl/util/OrbitControl\n * @author Yi Shen(http://github.com/pissang)\n */\n// TODO Remove magic numbers on sensitivity\nimport Base from 'claygl/src/core/Base';\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport retrieve from './retrieve';\nvar firstNotNull = retrieve.firstNotNull;\nvar MOUSE_BUTTON_KEY_MAP = {\n  left: 0,\n  middle: 1,\n  right: 2\n};\n\nfunction convertToArray(val) {\n  if (!(val instanceof Array)) {\n    val = [val, val];\n  }\n\n  return val;\n}\n/**\n * @alias module:echarts-x/util/OrbitControl\n */\n\n\nvar OrbitControl = Base.extend(function () {\n  return {\n    /**\n     * @type {module:zrender~ZRender}\n     */\n    zr: null,\n\n    /**\n     * @type {module:echarts-gl/core/ViewGL}\n     */\n    viewGL: null,\n\n    /**\n     * @type {clay.math.Vector3}\n     */\n    _center: new Vector3(),\n\n    /**\n     * Minimum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 0.5\n     */\n    minDistance: 0.5,\n\n    /**\n     * Maximum distance to the center\n     * Only available when camera is perspective.\n     * @type {number}\n     * @default 2\n     */\n    maxDistance: 1.5,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    maxOrthographicSize: 300,\n\n    /**\n     * Only available when camera is orthographic\n     */\n    minOrthographicSize: 30,\n\n    /**\n     * Minimum alpha rotation\n     */\n    minAlpha: -90,\n\n    /**\n     * Maximum alpha rotation\n     */\n    maxAlpha: 90,\n\n    /**\n     * Minimum beta rotation\n     */\n    minBeta: -Infinity,\n\n    /**\n     * Maximum beta rotation\n     */\n    maxBeta: Infinity,\n\n    /**\n     * Start auto rotating after still for the given time\n     */\n    autoRotateAfterStill: 0,\n\n    /**\n     * Direction of autoRotate. cw or ccw when looking top down.\n     */\n    autoRotateDirection: 'cw',\n\n    /**\n     * Degree per second\n     */\n    autoRotateSpeed: 60,\n\n    /**\n     * @param {number}\n     */\n    damping: 0.8,\n\n    /**\n     * @param {number}\n     */\n    rotateSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    zoomSensitivity: 1,\n\n    /**\n     * @param {number}\n     */\n    panSensitivity: 1,\n    panMouseButton: 'middle',\n    rotateMouseButton: 'left',\n\n    /**\n     * Pan or rotate\n     * @private\n     * @type {String}\n     */\n    _mode: 'rotate',\n\n    /**\n     * @private\n     * @type {clay.Camera}\n     */\n    _camera: null,\n    _needsUpdate: false,\n    _rotating: false,\n    // Rotation around yAxis in radian\n    _phi: 0,\n    // Rotation around xAxis in radian\n    _theta: 0,\n    _mouseX: 0,\n    _mouseY: 0,\n    _rotateVelocity: new Vector2(),\n    _panVelocity: new Vector2(),\n    _distance: 500,\n    _zoomSpeed: 0,\n    _stillTimeout: 0,\n    _animators: []\n  };\n}, function () {\n  // Each OrbitControl has it's own handler\n  ['_mouseDownHandler', '_mouseWheelHandler', '_mouseMoveHandler', '_mouseUpHandler', '_pinchHandler', '_contextMenuHandler', '_update'].forEach(function (hdlName) {\n    this[hdlName] = this[hdlName].bind(this);\n  }, this);\n}, {\n  /**\n   * Initialize.\n   * Mouse event binding\n   */\n  init: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.on('mousedown', this._mouseDownHandler);\n      zr.on('globalout', this._mouseUpHandler);\n      zr.on('mousewheel', this._mouseWheelHandler);\n      zr.on('pinch', this._pinchHandler);\n      zr.animation.on('frame', this._update);\n      zr.dom.addEventListener('contextmenu', this._contextMenuHandler);\n    }\n  },\n\n  /**\n   * Dispose.\n   * Mouse event unbinding\n   */\n  dispose: function () {\n    var zr = this.zr;\n\n    if (zr) {\n      zr.off('mousedown', this._mouseDownHandler);\n      zr.off('mousemove', this._mouseMoveHandler);\n      zr.off('mouseup', this._mouseUpHandler);\n      zr.off('mousewheel', this._mouseWheelHandler);\n      zr.off('pinch', this._pinchHandler);\n      zr.off('globalout', this._mouseUpHandler);\n      zr.dom.removeEventListener('contextmenu', this._contextMenuHandler);\n      zr.animation.off('frame', this._update);\n    }\n\n    this.stopAllAnimation();\n  },\n\n  /**\n   * Get distance\n   * @return {number}\n   */\n  getDistance: function () {\n    return this._distance;\n  },\n\n  /**\n   * Set distance\n   * @param {number} distance\n   */\n  setDistance: function (distance) {\n    this._distance = distance;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get size of orthographic viewing volume\n   * @return {number}\n   */\n  getOrthographicSize: function () {\n    return this._orthoSize;\n  },\n\n  /**\n   * Set size of orthographic viewing volume\n   * @param {number} size\n   */\n  setOrthographicSize: function (size) {\n    this._orthoSize = size;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Get alpha rotation\n   * Alpha angle for top-down rotation. Positive to rotate to top.\n   *\n   * Which means camera rotation around x axis.\n   */\n  getAlpha: function () {\n    return this._theta / Math.PI * 180;\n  },\n\n  /**\n   * Get beta rotation\n   * Beta angle for left-right rotation. Positive to rotate to right.\n   *\n   * Which means camera rotation around y axis.\n   */\n  getBeta: function () {\n    return -this._phi / Math.PI * 180;\n  },\n\n  /**\n   * Get control center\n   * @return {Array.<number>}\n   */\n  getCenter: function () {\n    return this._center.toArray();\n  },\n\n  /**\n   * Set alpha rotation angle\n   * @param {number} alpha\n   */\n  setAlpha: function (alpha) {\n    alpha = Math.max(Math.min(this.maxAlpha, alpha), this.minAlpha);\n    this._theta = alpha / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set beta rotation angle\n   * @param {number} beta\n   */\n  setBeta: function (beta) {\n    beta = Math.max(Math.min(this.maxBeta, beta), this.minBeta);\n    this._phi = -beta / 180 * Math.PI;\n    this._needsUpdate = true;\n  },\n\n  /**\n   * Set control center\n   * @param {Array.<number>} center\n   */\n  setCenter: function (centerArr) {\n    this._center.setArray(centerArr);\n  },\n\n  /**\n   * @param {module:echarts-gl/core/ViewGL} viewGL\n   */\n  setViewGL: function (viewGL) {\n    this.viewGL = viewGL;\n  },\n\n  /**\n   * @return {clay.Camera}\n   */\n  getCamera: function () {\n    return this.viewGL.camera;\n  },\n  setFromViewControlModel: function (viewControlModel, extraOpts) {\n    extraOpts = extraOpts || {};\n    var baseDistance = extraOpts.baseDistance || 0;\n    var baseOrthoSize = extraOpts.baseOrthoSize || 1;\n    var projection = viewControlModel.get('projection');\n\n    if (projection !== 'perspective' && projection !== 'orthographic' && projection !== 'isometric') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Unkown projection type %s, use perspective projection instead.', projection);\n      }\n\n      projection = 'perspective';\n    }\n\n    this._projection = projection;\n    this.viewGL.setProjection(projection);\n    var targetDistance = viewControlModel.get('distance') + baseDistance;\n    var targetOrthographicSize = viewControlModel.get('orthographicSize') + baseOrthoSize;\n    [['damping', 0.8], ['autoRotate', false], ['autoRotateAfterStill', 3], ['autoRotateDirection', 'cw'], ['autoRotateSpeed', 10], ['minDistance', 30], ['maxDistance', 400], ['minOrthographicSize', 30], ['maxOrthographicSize', 300], ['minAlpha', -90], ['maxAlpha', 90], ['minBeta', -Infinity], ['maxBeta', Infinity], ['rotateSensitivity', 1], ['zoomSensitivity', 1], ['panSensitivity', 1], ['panMouseButton', 'left'], ['rotateMouseButton', 'middle']].forEach(function (prop) {\n      this[prop[0]] = firstNotNull(viewControlModel.get(prop[0]), prop[1]);\n    }, this);\n    this.minDistance += baseDistance;\n    this.maxDistance += baseDistance;\n    this.minOrthographicSize += baseOrthoSize, this.maxOrthographicSize += baseOrthoSize;\n    var ecModel = viewControlModel.ecModel;\n    var animationOpts = {};\n    ['animation', 'animationDurationUpdate', 'animationEasingUpdate'].forEach(function (key) {\n      animationOpts[key] = firstNotNull(viewControlModel.get(key), ecModel && ecModel.get(key));\n    });\n    var alpha = firstNotNull(extraOpts.alpha, viewControlModel.get('alpha')) || 0;\n    var beta = firstNotNull(extraOpts.beta, viewControlModel.get('beta')) || 0;\n    var center = firstNotNull(extraOpts.center, viewControlModel.get('center')) || [0, 0, 0];\n\n    if (animationOpts.animation && animationOpts.animationDurationUpdate > 0 && this._notFirst) {\n      this.animateTo({\n        alpha: alpha,\n        beta: beta,\n        center: center,\n        distance: targetDistance,\n        orthographicSize: targetOrthographicSize,\n        easing: animationOpts.animationEasingUpdate,\n        duration: animationOpts.animationDurationUpdate\n      });\n    } else {\n      this.setDistance(targetDistance);\n      this.setAlpha(alpha);\n      this.setBeta(beta);\n      this.setCenter(center);\n      this.setOrthographicSize(targetOrthographicSize);\n    }\n\n    this._notFirst = true;\n\n    this._validateProperties();\n  },\n  _validateProperties: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (MOUSE_BUTTON_KEY_MAP[this.panMouseButton] == null) {\n        console.error('Unkown panMouseButton %s. It should be left|middle|right', this.panMouseButton);\n      }\n\n      if (MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton] == null) {\n        console.error('Unkown rotateMouseButton %s. It should be left|middle|right', this.rotateMouseButton);\n      }\n\n      if (this.autoRotateDirection !== 'cw' && this.autoRotateDirection !== 'ccw') {\n        console.error('Unkown autoRotateDirection %s. It should be cw|ccw', this.autoRotateDirection);\n      }\n    }\n  },\n\n  /**\n   * @param {Object} opts\n   * @param {number} opts.distance\n   * @param {number} opts.alpha\n   * @param {number} opts.beta\n   * @param {number} opts.orthographicSize\n   * @param {number} [opts.duration=1000]\n   * @param {number} [opts.easing='linear']\n   */\n  animateTo: function (opts) {\n    var zr = this.zr;\n    var self = this;\n    var obj = {};\n    var target = {};\n\n    if (opts.distance != null) {\n      obj.distance = this.getDistance();\n      target.distance = opts.distance;\n    }\n\n    if (opts.orthographicSize != null) {\n      obj.orthographicSize = this.getOrthographicSize();\n      target.orthographicSize = opts.orthographicSize;\n    }\n\n    if (opts.alpha != null) {\n      obj.alpha = this.getAlpha();\n      target.alpha = opts.alpha;\n    }\n\n    if (opts.beta != null) {\n      obj.beta = this.getBeta();\n      target.beta = opts.beta;\n    }\n\n    if (opts.center != null) {\n      obj.center = this.getCenter();\n      target.center = opts.center;\n    }\n\n    return this._addAnimator(zr.animation.animate(obj).when(opts.duration || 1000, target).during(function () {\n      if (obj.alpha != null) {\n        self.setAlpha(obj.alpha);\n      }\n\n      if (obj.beta != null) {\n        self.setBeta(obj.beta);\n      }\n\n      if (obj.distance != null) {\n        self.setDistance(obj.distance);\n      }\n\n      if (obj.center != null) {\n        self.setCenter(obj.center);\n      }\n\n      if (obj.orthographicSize != null) {\n        self.setOrthographicSize(obj.orthographicSize);\n      }\n\n      self._needsUpdate = true;\n    })).start(opts.easing || 'linear');\n  },\n\n  /**\n   * Stop all animation\n   */\n  stopAllAnimation: function () {\n    for (var i = 0; i < this._animators.length; i++) {\n      this._animators[i].stop();\n    }\n\n    this._animators.length = 0;\n  },\n  update: function () {\n    this._needsUpdate = true;\n\n    this._update(20);\n  },\n  _isAnimating: function () {\n    return this._animators.length > 0;\n  },\n\n  /**\n   * Call update each frame\n   * @param  {number} deltaTime Frame time\n   */\n  _update: function (deltaTime) {\n    if (this._rotating) {\n      var radian = (this.autoRotateDirection === 'cw' ? 1 : -1) * this.autoRotateSpeed / 180 * Math.PI;\n      this._phi -= radian * deltaTime / 1000;\n      this._needsUpdate = true;\n    } else if (this._rotateVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (Math.abs(this._zoomSpeed) > 0.1 || this._panVelocity.len() > 0) {\n      this._needsUpdate = true;\n    }\n\n    if (!this._needsUpdate) {\n      return;\n    }\n\n    deltaTime = Math.min(deltaTime, 50);\n\n    this._updateDistanceOrSize(deltaTime);\n\n    this._updatePan(deltaTime);\n\n    this._updateRotate(deltaTime);\n\n    this._updateTransform();\n\n    this.getCamera().update();\n    this.zr && this.zr.refresh();\n    this.trigger('update');\n    this._needsUpdate = false;\n  },\n  _updateRotate: function (deltaTime) {\n    var velocity = this._rotateVelocity;\n    this._phi = velocity.y * deltaTime / 20 + this._phi;\n    this._theta = velocity.x * deltaTime / 20 + this._theta;\n    this.setAlpha(this.getAlpha());\n    this.setBeta(this.getBeta());\n\n    this._vectorDamping(velocity, Math.pow(this.damping, deltaTime / 16));\n  },\n  _updateDistanceOrSize: function (deltaTime) {\n    if (this._projection === 'perspective') {\n      this._setDistance(this._distance + this._zoomSpeed * deltaTime / 20);\n    } else {\n      this._setOrthoSize(this._orthoSize + this._zoomSpeed * deltaTime / 20);\n    }\n\n    this._zoomSpeed *= Math.pow(this.damping, deltaTime / 16);\n  },\n  _setDistance: function (distance) {\n    this._distance = Math.max(Math.min(distance, this.maxDistance), this.minDistance);\n  },\n  _setOrthoSize: function (size) {\n    this._orthoSize = Math.max(Math.min(size, this.maxOrthographicSize), this.minOrthographicSize);\n    var camera = this.getCamera();\n    var cameraHeight = this._orthoSize;\n    var cameraWidth = cameraHeight / this.viewGL.viewport.height * this.viewGL.viewport.width;\n    camera.left = -cameraWidth / 2;\n    camera.right = cameraWidth / 2;\n    camera.top = cameraHeight / 2;\n    camera.bottom = -cameraHeight / 2;\n  },\n  _updatePan: function (deltaTime) {\n    var velocity = this._panVelocity;\n    var len = this._distance;\n    var target = this.getCamera();\n    var yAxis = target.worldTransform.y;\n    var xAxis = target.worldTransform.x; // PENDING\n\n    this._center.scaleAndAdd(xAxis, -velocity.x * len / 200).scaleAndAdd(yAxis, -velocity.y * len / 200);\n\n    this._vectorDamping(velocity, 0);\n  },\n  _updateTransform: function () {\n    var camera = this.getCamera();\n    var dir = new Vector3();\n    var theta = this._theta + Math.PI / 2;\n    var phi = this._phi + Math.PI / 2;\n    var r = Math.sin(theta);\n    dir.x = r * Math.cos(phi);\n    dir.y = -Math.cos(theta);\n    dir.z = r * Math.sin(phi);\n    camera.position.copy(this._center).scaleAndAdd(dir, this._distance);\n    camera.rotation.identity() // First around y, then around x\n    .rotateY(-this._phi).rotateX(-this._theta);\n  },\n  _startCountingStill: function () {\n    clearTimeout(this._stillTimeout);\n    var time = this.autoRotateAfterStill;\n    var self = this;\n\n    if (!isNaN(time) && time > 0) {\n      this._stillTimeout = setTimeout(function () {\n        self._rotating = true;\n      }, time * 1000);\n    }\n  },\n  _vectorDamping: function (v, damping) {\n    var speed = v.len();\n    speed = speed * damping;\n\n    if (speed < 1e-4) {\n      speed = 0;\n    }\n\n    v.normalize().scale(speed);\n  },\n  _decomposeTransform: function () {\n    if (!this.getCamera()) {\n      return;\n    }\n\n    this.getCamera().updateWorldTransform();\n    var forward = this.getCamera().worldTransform.z;\n    var alpha = Math.asin(forward.y);\n    var beta = Math.atan2(forward.x, forward.z);\n    this._theta = alpha;\n    this._phi = -beta;\n    this.setBeta(this.getBeta());\n    this.setAlpha(this.getAlpha()); // Is perspective\n\n    if (this.getCamera().aspect) {\n      this._setDistance(this.getCamera().position.dist(this._center));\n    } else {\n      this._setOrthoSize(this.getCamera().top - this.getCamera().bottom);\n    }\n  },\n  _mouseDownHandler: function (e) {\n    if (e.target) {\n      // If mouseon some zrender element.\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    this.zr.on('mousemove', this._mouseMoveHandler);\n    this.zr.on('mouseup', this._mouseUpHandler);\n\n    if (e.event.targetTouches) {\n      if (e.event.targetTouches.length === 1) {\n        this._mode = 'rotate';\n      }\n    } else {\n      if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.rotateMouseButton]) {\n        this._mode = 'rotate';\n      } else if (e.event.button === MOUSE_BUTTON_KEY_MAP[this.panMouseButton]) {\n        this._mode = 'pan';\n      } else {\n        this._mode = '';\n      }\n    } // Reset rotate velocity\n\n\n    this._rotateVelocity.set(0, 0);\n\n    this._rotating = false;\n\n    if (this.autoRotate) {\n      this._startCountingStill();\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n  },\n  _mouseMoveHandler: function (e) {\n    if (e.target && e.target.__isGLToZRProxy) {\n      return;\n    }\n\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var panSensitivity = convertToArray(this.panSensitivity);\n    var rotateSensitivity = convertToArray(this.rotateSensitivity);\n\n    if (this._mode === 'rotate') {\n      this._rotateVelocity.y = (e.offsetX - this._mouseX) / this.zr.getHeight() * 2 * rotateSensitivity[0];\n      this._rotateVelocity.x = (e.offsetY - this._mouseY) / this.zr.getWidth() * 2 * rotateSensitivity[1];\n    } else if (this._mode === 'pan') {\n      this._panVelocity.x = (e.offsetX - this._mouseX) / this.zr.getWidth() * panSensitivity[0] * 400;\n      this._panVelocity.y = (-e.offsetY + this._mouseY) / this.zr.getHeight() * panSensitivity[1] * 400;\n    }\n\n    this._mouseX = e.offsetX;\n    this._mouseY = e.offsetY;\n    e.event.preventDefault();\n  },\n  _mouseWheelHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    var delta = e.event.wheelDelta // Webkit\n    || -e.event.detail; // Firefox\n\n    this._zoomHandler(e, delta);\n  },\n  _pinchHandler: function (e) {\n    if (this._isAnimating()) {\n      return;\n    }\n\n    this._zoomHandler(e, e.pinchScale > 1 ? 1 : -1); // Not rotate when pinch\n\n\n    this._mode = '';\n  },\n  _zoomHandler: function (e, delta) {\n    if (delta === 0) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    var speed;\n\n    if (this._projection === 'perspective') {\n      speed = Math.max(Math.max(Math.min(this._distance - this.minDistance, this.maxDistance - this._distance)) / 20, 0.5);\n    } else {\n      speed = Math.max(Math.max(Math.min(this._orthoSize - this.minOrthographicSize, this.maxOrthographicSize - this._orthoSize)) / 20, 0.5);\n    }\n\n    this._zoomSpeed = (delta > 0 ? -1 : 1) * speed * this.zoomSensitivity;\n    this._rotating = false;\n\n    if (this.autoRotate && this._mode === 'rotate') {\n      this._startCountingStill();\n    }\n\n    e.event.preventDefault();\n  },\n  _mouseUpHandler: function () {\n    this.zr.off('mousemove', this._mouseMoveHandler);\n    this.zr.off('mouseup', this._mouseUpHandler);\n  },\n  _isRightMouseButtonUsed: function () {\n    return this.rotateMouseButton === 'right' || this.panMouseButton === 'right';\n  },\n  _contextMenuHandler: function (e) {\n    if (this._isRightMouseButtonUsed()) {\n      e.preventDefault();\n    }\n  },\n  _addAnimator: function (animator) {\n    var animators = this._animators;\n    animators.push(animator);\n    animator.done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    return animator;\n  }\n});\n/**\n * If auto rotate the target\n * @type {boolean}\n * @default false\n */\n\nObject.defineProperty(OrbitControl.prototype, 'autoRotate', {\n  get: function (val) {\n    return this._autoRotate;\n  },\n  set: function (val) {\n    this._autoRotate = val;\n    this._rotating = val;\n  }\n});\nexport default OrbitControl;","function swap(arr, a, b) {\n  var tmp = arr[a];\n  arr[a] = arr[b];\n  arr[b] = tmp;\n}\n\nfunction partition(arr, pivot, left, right, compare) {\n  var storeIndex = left;\n  var pivotValue = arr[pivot]; // put the pivot on the right\n\n  swap(arr, pivot, right); // go through the rest\n\n  for (var v = left; v < right; v++) {\n    if (compare(arr[v], pivotValue) < 0) {\n      swap(arr, v, storeIndex);\n      storeIndex++;\n    }\n  } // finally put the pivot in the correct place\n\n\n  swap(arr, right, storeIndex);\n  return storeIndex;\n}\n\nfunction quickSort(array, compare, left, right) {\n  if (left < right) {\n    var pivot = Math.floor((left + right) / 2);\n    var newPivot = partition(array, pivot, left, right, compare);\n    quickSort(array, compare, left, newPivot - 1);\n    quickSort(array, compare, newPivot + 1, right);\n  }\n} // TODO Test.\n\n\nfunction ProgressiveQuickSort() {\n  // this._pivotList = new LinkedList();\n  this._parts = [];\n}\n\nProgressiveQuickSort.prototype.step = function (arr, compare, frame) {\n  var len = arr.length;\n\n  if (frame === 0) {\n    this._parts = [];\n    this._sorted = false; // Pick a start pivot;\n\n    var pivot = Math.floor(len / 2);\n\n    this._parts.push({\n      pivot: pivot,\n      left: 0,\n      right: len - 1\n    });\n\n    this._currentSortPartIdx = 0;\n  }\n\n  if (this._sorted) {\n    return;\n  }\n\n  var parts = this._parts;\n\n  if (parts.length === 0) {\n    this._sorted = true; // Already finished.\n\n    return true;\n  } else if (parts.length < 512) {\n    // Sort large parts in about 10 frames.\n    for (var i = 0; i < parts.length; i++) {\n      // Partition and Modify the pivot index.\n      parts[i].pivot = partition(arr, parts[i].pivot, parts[i].left, parts[i].right, compare);\n    }\n\n    var subdividedParts = [];\n\n    for (var i = 0; i < parts.length; i++) {\n      // Subdivide left\n      var left = parts[i].left;\n      var right = parts[i].pivot - 1;\n\n      if (right > left) {\n        subdividedParts.push({\n          pivot: Math.floor((right + left) / 2),\n          left: left,\n          right: right\n        });\n      } // Subdivide right\n\n\n      var left = parts[i].pivot + 1;\n      var right = parts[i].right;\n\n      if (right > left) {\n        subdividedParts.push({\n          pivot: Math.floor((right + left) / 2),\n          left: left,\n          right: right\n        });\n      }\n    }\n\n    parts = this._parts = subdividedParts;\n  } else {\n    // console.time('sort');\n    // Finally quick sort each parts in 10 frames.\n    for (var i = 0; i < Math.floor(parts.length / 10); i++) {\n      // Sort near parts first.\n      var idx = parts.length - 1 - this._currentSortPartIdx;\n      quickSort(arr, compare, parts[idx].left, parts[idx].right);\n      this._currentSortPartIdx++; // Finish sort\n\n      if (this._currentSortPartIdx === parts.length) {\n        this._sorted = true;\n        return true;\n      }\n    } // console.timeEnd('sort');\n\n  }\n\n  return false;\n};\n\nProgressiveQuickSort.sort = quickSort;\nexport default ProgressiveQuickSort;","import Base from 'claygl/src/core/Base';\nimport retrieve from './retrieve';\n/**\n * @alias module:echarts-gl/util/Roam2DControl\n */\n\nvar Roam2DControl = Base.extend(function () {\n  return {\n    /**\n     * @type {module:zrender~ZRender}\n     */\n    zr: null,\n\n    /**\n     * @type {module:echarts-gl/core/ViewGL}\n     */\n    viewGL: null,\n    minZoom: 0.2,\n    maxZoom: 5,\n    _needsUpdate: false,\n    _dx: 0,\n    _dy: 0,\n    _zoom: 1\n  };\n}, function () {\n  // Each Roam2DControl has it's own handler\n  this._mouseDownHandler = this._mouseDownHandler.bind(this);\n  this._mouseWheelHandler = this._mouseWheelHandler.bind(this);\n  this._mouseMoveHandler = this._mouseMoveHandler.bind(this);\n  this._mouseUpHandler = this._mouseUpHandler.bind(this);\n  this._update = this._update.bind(this);\n}, {\n  init: function () {\n    var zr = this.zr;\n    zr.on('mousedown', this._mouseDownHandler);\n    zr.on('mousewheel', this._mouseWheelHandler);\n    zr.on('globalout', this._mouseUpHandler);\n    zr.animation.on('frame', this._update);\n  },\n  setTarget: function (target) {\n    this._target = target;\n  },\n  setZoom: function (zoom) {\n    this._zoom = Math.max(Math.min(zoom, this.maxZoom), this.minZoom);\n    this._needsUpdate = true;\n  },\n  setOffset: function (offset) {\n    this._dx = offset[0];\n    this._dy = offset[1];\n    this._needsUpdate = true;\n  },\n  getZoom: function () {\n    return this._zoom;\n  },\n  getOffset: function () {\n    return [this._dx, this._dy];\n  },\n  _update: function () {\n    if (!this._target) {\n      return;\n    }\n\n    if (!this._needsUpdate) {\n      return;\n    }\n\n    var target = this._target;\n    var scale = this._zoom;\n    target.position.x = this._dx;\n    target.position.y = this._dy;\n    target.scale.set(scale, scale, scale);\n    this.zr.refresh();\n    this._needsUpdate = false;\n    this.trigger('update');\n  },\n  _mouseDownHandler: function (e) {\n    if (e.target) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    this.zr.on('mousemove', this._mouseMoveHandler);\n    this.zr.on('mouseup', this._mouseUpHandler);\n\n    var pos = this._convertPos(x, y);\n\n    this._x = pos.x;\n    this._y = pos.y;\n  },\n  // Convert pos from screen space to viewspace.\n  _convertPos: function (x, y) {\n    var camera = this.viewGL.camera;\n    var viewport = this.viewGL.viewport; // PENDING\n\n    return {\n      x: (x - viewport.x) / viewport.width * (camera.right - camera.left) + camera.left,\n      y: (y - viewport.y) / viewport.height * (camera.bottom - camera.top) + camera.top\n    };\n  },\n  _mouseMoveHandler: function (e) {\n    var pos = this._convertPos(e.offsetX, e.offsetY);\n\n    this._dx += pos.x - this._x;\n    this._dy += pos.y - this._y;\n    this._x = pos.x;\n    this._y = pos.y;\n    this._needsUpdate = true;\n  },\n  _mouseUpHandler: function (e) {\n    this.zr.off('mousemove', this._mouseMoveHandler);\n    this.zr.off('mouseup', this._mouseUpHandler);\n  },\n  _mouseWheelHandler: function (e) {\n    e = e.event;\n    var delta = e.wheelDelta // Webkit\n    || -e.detail; // Firefox\n\n    if (delta === 0) {\n      return;\n    }\n\n    var x = e.offsetX;\n    var y = e.offsetY;\n\n    if (this.viewGL && !this.viewGL.containPoint(x, y)) {\n      return;\n    }\n\n    var zoomScale = delta > 0 ? 1.1 : 0.9;\n    var newZoom = Math.max(Math.min(this._zoom * zoomScale, this.maxZoom), this.minZoom);\n    zoomScale = newZoom / this._zoom;\n\n    var pos = this._convertPos(x, y);\n\n    var fixX = (pos.x - this._dx) * (zoomScale - 1);\n    var fixY = (pos.y - this._dy) * (zoomScale - 1);\n    this._dx -= fixX;\n    this._dy -= fixY;\n    this._zoom = newZoom;\n    this._needsUpdate = true;\n  },\n  dispose: function () {\n    var zr = this.zr;\n    zr.off('mousedown', this._mouseDownHandler);\n    zr.off('mousemove', this._mouseMoveHandler);\n    zr.off('mouseup', this._mouseUpHandler);\n    zr.off('mousewheel', this._mouseWheelHandler);\n    zr.off('globalout', this._mouseUpHandler);\n    zr.animation.off('frame', this._update);\n  }\n});\nexport default Roam2DControl;","/**\n * Texture Atlas for the sprites.\n * It uses zrender for 2d element management and rendering\n * @module echarts-gl/util/ZRTextureAtlasSurface\n */\n// TODO Expand.\nimport * as echarts from 'echarts/lib/echarts';\nimport Texture2D from 'claygl/src/Texture2D';\n\nfunction ZRTextureAtlasSurfaceNode(zr, offsetX, offsetY, width, height, gap, dpr) {\n  this._zr = zr;\n  /**\n   * Current cursor x\n   * @type {number}\n   * @private\n   */\n\n  this._x = 0;\n  /**\n   * Current cursor y\n   * @type {number}\n   */\n\n  this._y = 0;\n  this._rowHeight = 0;\n  /**\n   * width without dpr.\n   * @type {number}\n   * @private\n   */\n\n  this.width = width;\n  /**\n   * height without dpr.\n   * @type {number}\n   * @private\n   */\n\n  this.height = height;\n  /**\n   * offsetX without dpr\n   * @type {number}\n   */\n\n  this.offsetX = offsetX;\n  /**\n   * offsetY without dpr\n   * @type {number}\n   */\n\n  this.offsetY = offsetY;\n  this.dpr = dpr;\n  this.gap = gap;\n}\n\nZRTextureAtlasSurfaceNode.prototype = {\n  constructor: ZRTextureAtlasSurfaceNode,\n  clear: function () {\n    this._x = 0;\n    this._y = 0;\n    this._rowHeight = 0;\n  },\n\n  /**\n   * Add shape to atlas\n   * @param {module:zrender/graphic/Displayable} shape\n   * @param {number} width\n   * @param {number} height\n   * @return {Array}\n   */\n  add: function (el, width, height) {\n    // FIXME Text element not consider textAlign and textVerticalAlign.\n    // TODO, inner text, shadow\n    var rect = el.getBoundingRect(); // FIXME aspect ratio\n\n    if (width == null) {\n      width = rect.width;\n    }\n\n    if (height == null) {\n      height = rect.height;\n    }\n\n    width *= this.dpr;\n    height *= this.dpr;\n\n    this._fitElement(el, width, height); // var aspect = el.scale[1] / el.scale[0];\n    // Adjust aspect ratio to make the text more clearly\n    // FIXME If height > width, width is useless ?\n    // width = height * aspect;\n    // el.position[0] *= aspect;\n    // el.scale[0] = el.scale[1];\n\n\n    var x = this._x;\n    var y = this._y;\n    var canvasWidth = this.width * this.dpr;\n    var canvasHeight = this.height * this.dpr;\n    var gap = this.gap;\n\n    if (x + width + gap > canvasWidth) {\n      // Change a new row\n      x = this._x = 0;\n      y += this._rowHeight + gap;\n      this._y = y; // Reset row height\n\n      this._rowHeight = 0;\n    }\n\n    this._x += width + gap;\n    this._rowHeight = Math.max(this._rowHeight, height);\n\n    if (y + height + gap > canvasHeight) {\n      // There is no space anymore\n      return null;\n    } // Shift the el\n\n\n    el.x += this.offsetX * this.dpr + x;\n    el.y += this.offsetY * this.dpr + y;\n\n    this._zr.add(el);\n\n    var coordsOffset = [this.offsetX / this.width, this.offsetY / this.height];\n    var coords = [[x / canvasWidth + coordsOffset[0], y / canvasHeight + coordsOffset[1]], [(x + width) / canvasWidth + coordsOffset[0], (y + height) / canvasHeight + coordsOffset[1]]];\n    return coords;\n  },\n\n  /**\n   * Fit element size by correct its position and scaling\n   * @param {module:zrender/graphic/Displayable} el\n   * @param {number} spriteWidth\n   * @param {number} spriteHeight\n   */\n  _fitElement: function (el, spriteWidth, spriteHeight) {\n    // TODO, inner text, shadow\n    var rect = el.getBoundingRect();\n    var scaleX = spriteWidth / rect.width;\n    var scaleY = spriteHeight / rect.height;\n    el.x = -rect.x * scaleX;\n    el.y = -rect.y * scaleY;\n    el.scaleX = scaleX;\n    el.scaleY = scaleY;\n    el.update();\n  }\n};\n/**\n * constructor\n * @alias module:echarts-gl/util/ZRTextureAtlasSurface\n * @param {number} opt.width\n * @param {number} opt.height\n * @param {number} opt.devicePixelRatio\n * @param {number} opt.gap Gap for safe.\n * @param {Function} opt.onupdate\n */\n\nfunction ZRTextureAtlasSurface(opt) {\n  opt = opt || {};\n  opt.width = opt.width || 512;\n  opt.height = opt.height || 512;\n  opt.devicePixelRatio = opt.devicePixelRatio || 1;\n  opt.gap = opt.gap == null ? 2 : opt.gap;\n  var canvas = document.createElement('canvas');\n  canvas.width = opt.width * opt.devicePixelRatio;\n  canvas.height = opt.height * opt.devicePixelRatio;\n  this._canvas = canvas;\n  this._texture = new Texture2D({\n    image: canvas,\n    flipY: false\n  });\n  var self = this;\n  /**\n   * zrender instance in the Chart\n   * @type {zrender~ZRender}\n   */\n\n  this._zr = echarts.zrender.init(canvas);\n  var oldRefreshImmediately = this._zr.refreshImmediately;\n\n  this._zr.refreshImmediately = function () {\n    oldRefreshImmediately.call(this);\n\n    self._texture.dirty();\n\n    self.onupdate && self.onupdate();\n  };\n\n  this._dpr = opt.devicePixelRatio;\n  /**\n   * Texture coords map for each sprite image\n   * @type {Object}\n   */\n\n  this._coords = {};\n  this.onupdate = opt.onupdate;\n  this._gap = opt.gap; // Left sub atlas.\n\n  this._textureAtlasNodes = [new ZRTextureAtlasSurfaceNode(this._zr, 0, 0, opt.width, opt.height, this._gap, this._dpr)];\n  this._nodeWidth = opt.width;\n  this._nodeHeight = opt.height;\n  this._currentNodeIdx = 0;\n}\n\nZRTextureAtlasSurface.prototype = {\n  /**\n   * Clear the texture atlas\n   */\n  clear: function () {\n    for (var i = 0; i < this._textureAtlasNodes.length; i++) {\n      this._textureAtlasNodes[i].clear();\n    }\n\n    this._currentNodeIdx = 0;\n\n    this._zr.clear();\n\n    this._coords = {};\n  },\n\n  /**\n   * @return {number}\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * @return {number}\n   */\n  getHeight: function () {\n    return this._height;\n  },\n\n  /**\n   * @return {number}\n   */\n  getTexture: function () {\n    return this._texture;\n  },\n\n  /**\n   * @return {number}\n   */\n  getDevicePixelRatio: function () {\n    return this._dpr;\n  },\n  getZr: function () {\n    return this._zr;\n  },\n  _getCurrentNode: function () {\n    return this._textureAtlasNodes[this._currentNodeIdx];\n  },\n  _expand: function () {\n    this._currentNodeIdx++;\n\n    if (this._textureAtlasNodes[this._currentNodeIdx]) {\n      // Use the node created previously.\n      return this._textureAtlasNodes[this._currentNodeIdx];\n    }\n\n    var maxSize = 4096 / this._dpr;\n    var textureAtlasNodes = this._textureAtlasNodes;\n    var nodeLen = textureAtlasNodes.length;\n    var offsetX = nodeLen * this._nodeWidth % maxSize;\n\n    var offsetY = Math.floor(nodeLen * this._nodeWidth / maxSize) * this._nodeHeight;\n\n    if (offsetY >= maxSize) {\n      // Failed if image is too large.\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Too much labels. Some will be ignored.');\n      }\n\n      return;\n    }\n\n    var width = (offsetX + this._nodeWidth) * this._dpr;\n    var height = (offsetY + this._nodeHeight) * this._dpr;\n\n    try {\n      // Resize will error in node.\n      this._zr.resize({\n        width: width,\n        height: height\n      });\n    } catch (e) {\n      this._canvas.width = width;\n      this._canvas.height = height;\n    }\n\n    var newNode = new ZRTextureAtlasSurfaceNode(this._zr, offsetX, offsetY, this._nodeWidth, this._nodeHeight, this._gap, this._dpr);\n\n    this._textureAtlasNodes.push(newNode);\n\n    return newNode;\n  },\n  add: function (el, width, height) {\n    if (this._coords[el.id]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Element already been add');\n      }\n\n      return this._coords[el.id];\n    }\n\n    var coords = this._getCurrentNode().add(el, width, height);\n\n    if (!coords) {\n      var newNode = this._expand();\n\n      if (!newNode) {\n        // To maximum\n        return;\n      }\n\n      coords = newNode.add(el, width, height);\n    }\n\n    this._coords[el.id] = coords;\n    return coords;\n  },\n\n  /**\n   * Get coord scale after texture atlas is expanded.\n   * @return {Array.<number>}\n   */\n  getCoordsScale: function () {\n    var dpr = this._dpr;\n    return [this._nodeWidth / this._canvas.width * dpr, this._nodeHeight / this._canvas.height * dpr];\n  },\n\n  /**\n   * Get texture coords of sprite image\n   * @param  {string} id Image id\n   * @return {Array}\n   */\n  getCoords: function (id) {\n    return this._coords[id];\n  },\n  dispose: function () {\n    this._zr.dispose();\n  }\n};\nexport default ZRTextureAtlasSurface;","// https://github.com/mapbox/earcut/blob/master/src/earcut.js\nexport default earcut;\n\nfunction earcut(data, holeIndices, dim) {\n  dim = dim || 2;\n  var hasHoles = holeIndices && holeIndices.length,\n      outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n      outerNode = linkedList(data, 0, outerLen, dim, true),\n      triangles = [];\n  if (!outerNode) return triangles;\n  var minX, minY, maxX, maxY, x, y, size;\n  if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n  if (data.length > 80 * dim) {\n    minX = maxX = data[0];\n    minY = maxY = data[1];\n\n    for (var i = dim; i < outerLen; i += dim) {\n      x = data[i];\n      y = data[i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n    } // minX, minY and size are later used to transform coords into integers for z-order calculation\n\n\n    size = Math.max(maxX - minX, maxY - minY);\n  }\n\n  earcutLinked(outerNode, triangles, dim, minX, minY, size);\n  return triangles;\n} // create a circular doubly linked list from polygon points in the specified winding order\n\n\nfunction linkedList(data, start, end, dim, clockwise) {\n  var i, last;\n\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n} // eliminate colinear or duplicate points\n\n\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  var p = start,\n      again;\n\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) return null;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\nfunction earcutLinked(ear, triangles, dim, minX, minY, size, pass) {\n  if (!ear) return; // interlink polygon nodes in z-order\n\n  if (!pass && size) indexCurve(ear, minX, minY, size);\n  var stop = ear,\n      prev,\n      next; // iterate through ears, slicing them one by one\n\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (size ? isEarHashed(ear, minX, minY, size) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n      removeNode(ear); // skipping the next vertice leads to less sliver triangles\n\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n\n    ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, size, 1); // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(ear, triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, size, 2); // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, size);\n      }\n\n      break;\n    }\n  }\n} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\nfunction isEar(ear) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // now make sure we don't have other points inside the potential ear\n\n  var p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, size) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // triangle bbox; min & max are calculated like this for speed\n\n  var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n      minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n      maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n      maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n  var minZ = zOrder(minTX, minTY, minX, minY, size),\n      maxZ = zOrder(maxTX, maxTY, minX, minY, size); // first look for points inside the triangle in increasing z-order\n\n  var p = ear.nextZ;\n\n  while (p && p.z <= maxZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.nextZ;\n  } // then look for points in decreasing z-order\n\n\n  p = ear.prevZ;\n\n  while (p && p.z >= minZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  return true;\n} // go through all polygon nodes and cure small local self-intersections\n\n\nfunction cureLocalIntersections(start, triangles, dim) {\n  var p = start;\n\n  do {\n    var a = p.prev,\n        b = p.next.next;\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim); // remove two nodes involved\n\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return p;\n} // try splitting polygon into two and triangulate them independently\n\n\nfunction splitEarcut(start, triangles, dim, minX, minY, size) {\n  // look for a valid diagonal that divides the polygon into two\n  var a = start;\n\n  do {\n    var b = a.next.next;\n\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next); // run earcut on each half\n\n        earcutLinked(a, triangles, dim, minX, minY, size);\n        earcutLinked(c, triangles, dim, minX, minY, size);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  var queue = [],\n      i,\n      len,\n      start,\n      end,\n      list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX); // process holes from left to right\n\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n\n  if (outerNode) {\n    var b = splitPolygon(outerNode, hole);\n    filterPoints(b, b.next);\n  }\n} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\nfunction findHoleBridge(hole, outerNode) {\n  var p = outerNode,\n      hx = hole.x,\n      hy = hole.y,\n      qx = -Infinity,\n      m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n      if (x <= hx && x > qx) {\n        qx = x;\n\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n  if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  var stop = m,\n      mx = m.x,\n      my = m.y,\n      tanMin = Infinity,\n      tan;\n  p = m.next;\n\n  while (p !== stop) {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  }\n\n  return m;\n} // interlink polygon nodes in z-order\n\n\nfunction indexCurve(start, minX, minY, size) {\n  var p = start;\n\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, size);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n} // Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\nfunction sortLinked(list) {\n  var i,\n      p,\n      q,\n      e,\n      tail,\n      numMerges,\n      pSize,\n      qSize,\n      inSize = 1;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n} // z-order of a point given coords and size of the data bounding box\n\n\nfunction zOrder(x, y, minX, minY, size) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) / size;\n  y = 32767 * (y - minY) / size;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n} // find the leftmost node of a polygon ring\n\n\nfunction getLeftmost(start) {\n  var p = start,\n      leftmost = start;\n\n  do {\n    if (p.x < leftmost.x) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n} // check if a point lies within a convex triangle\n\n\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n} // signed area of a triangle\n\n\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n} // check if two points are equal\n\n\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n} // check if two segments intersect\n\n\nfunction intersects(p1, q1, p2, q2) {\n  if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n  return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n} // check if a polygon diagonal intersects any polygon segments\n\n\nfunction intersectsPolygon(a, b) {\n  var p = a;\n\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n} // check if a polygon diagonal is locally inside the polygon\n\n\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n} // check if the middle point of a polygon diagonal is inside the polygon\n\n\nfunction middleInside(a, b) {\n  var p = a,\n      inside = false,\n      px = (a.x + b.x) / 2,\n      py = (a.y + b.y) / 2;\n\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\nfunction splitPolygon(a, b) {\n  var a2 = new Node(a.i, a.x, a.y),\n      b2 = new Node(b.i, b.x, b.y),\n      an = a.next,\n      bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\nfunction insertNode(i, x, y, last) {\n  var p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  // vertice index in coordinates array\n  this.i = i; // vertex coordinates\n\n  this.x = x;\n  this.y = y; // previous and next vertice nodes in a polygon ring\n\n  this.prev = null;\n  this.next = null; // z-order curve value\n\n  this.z = null; // previous and next nodes in z-order\n\n  this.prevZ = null;\n  this.nextZ = null; // indicates whether this is a steiner point\n\n  this.steiner = false;\n} // return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\n\n\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n  var hasHoles = holeIndices && holeIndices.length;\n  var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n  var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n\n  if (hasHoles) {\n    for (var i = 0, len = holeIndices.length; i < len; i++) {\n      var start = holeIndices[i] * dim;\n      var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      polygonArea -= Math.abs(signedArea(data, start, end, dim));\n    }\n  }\n\n  var trianglesArea = 0;\n\n  for (i = 0; i < triangles.length; i += 3) {\n    var a = triangles[i] * dim;\n    var b = triangles[i + 1] * dim;\n    var c = triangles[i + 2] * dim;\n    trianglesArea += Math.abs((data[a] - data[c]) * (data[b + 1] - data[a + 1]) - (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n  }\n\n  return polygonArea === 0 && trianglesArea === 0 ? 0 : Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n  var sum = 0;\n\n  for (var i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n\n  return sum;\n}","import * as echarts from 'echarts/lib/echarts';\nvar formatUtil = {};\n\nformatUtil.getFormattedLabel = function (seriesModel, dataIndex, status, dataType, dimIndex) {\n  status = status || 'normal';\n  var data = seriesModel.getData(dataType);\n  var itemModel = data.getItemModel(dataIndex);\n  var params = seriesModel.getDataParams(dataIndex, dataType);\n\n  if (dimIndex != null && params.value instanceof Array) {\n    params.value = params.value[dimIndex];\n  }\n\n  var formatter = itemModel.get(status === 'normal' ? ['label', 'formatter'] : ['emphasis', 'label', 'formatter']);\n\n  if (formatter == null) {\n    formatter = itemModel.get(['label', 'formatter']);\n  }\n\n  var text;\n\n  if (typeof formatter === 'function') {\n    params.status = status;\n    text = formatter(params);\n  } else if (typeof formatter === 'string') {\n    text = echarts.format.formatTpl(formatter, params);\n  }\n\n  return text;\n};\n/**\n * If value is not array, then convert it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\n\nformatUtil.normalizeToArray = function (value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n};\n\nexport default formatUtil;","/**\n * Geometry collecting bars data\n *\n * @module echarts-gl/chart/bars/BarsGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport trianglesSortMixin from './trianglesSortMixin';\nimport Geometry from 'claygl/src/Geometry';\nimport glMatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glMatrix.vec3;\nvar mat3 = glMatrix.mat3;\n/**\n * @constructor\n * @alias module:echarts-gl/chart/bars/BarsGeometry\n * @extends clay.Geometry\n */\n\nvar BarsGeometry = Geometry.extend(function () {\n  return {\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      normal: new Geometry.Attribute('normal', 'float', 3, 'NORMAL'),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR'),\n      prevPosition: new Geometry.Attribute('prevPosition', 'float', 3),\n      prevNormal: new Geometry.Attribute('prevNormal', 'float', 3)\n    },\n    dynamic: true,\n    enableNormal: false,\n    bevelSize: 1,\n    bevelSegments: 0,\n    // Map from vertexIndex to dataIndex.\n    _dataIndices: null,\n    _vertexOffset: 0,\n    _triangleOffset: 0\n  };\n},\n/** @lends module:echarts-gl/chart/bars/BarsGeometry.prototype */\n{\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._triangleOffset = 0;\n  },\n  setBarCount: function (barCount) {\n    var enableNormal = this.enableNormal;\n    var vertexCount = this.getBarVertexCount() * barCount;\n    var triangleCount = this.getBarTriangleCount() * barCount;\n\n    if (this.vertexCount !== vertexCount) {\n      this.attributes.position.init(vertexCount);\n\n      if (enableNormal) {\n        this.attributes.normal.init(vertexCount);\n      } else {\n        this.attributes.normal.value = null;\n      }\n\n      this.attributes.color.init(vertexCount);\n    }\n\n    if (this.triangleCount !== triangleCount) {\n      this.indices = vertexCount > 0xffff ? new Uint32Array(triangleCount * 3) : new Uint16Array(triangleCount * 3);\n      this._dataIndices = new Uint32Array(vertexCount);\n    }\n  },\n  getBarVertexCount: function () {\n    var bevelSegments = this.bevelSize > 0 ? this.bevelSegments : 0;\n    return bevelSegments > 0 ? this._getBevelBarVertexCount(bevelSegments) : this.enableNormal ? 24 : 8;\n  },\n  getBarTriangleCount: function () {\n    var bevelSegments = this.bevelSize > 0 ? this.bevelSegments : 0;\n    return bevelSegments > 0 ? this._getBevelBarTriangleCount(bevelSegments) : 12;\n  },\n  _getBevelBarVertexCount: function (bevelSegments) {\n    return (bevelSegments + 1) * 4 * (bevelSegments + 1) * 2;\n  },\n  _getBevelBarTriangleCount: function (bevelSegments) {\n    var widthSegments = bevelSegments * 4 + 3;\n    var heightSegments = bevelSegments * 2 + 1;\n    return (widthSegments + 1) * heightSegments * 2 + 4;\n  },\n  setColor: function (idx, color) {\n    var vertexCount = this.getBarVertexCount();\n    var start = vertexCount * idx;\n    var end = vertexCount * (idx + 1);\n\n    for (var i = start; i < end; i++) {\n      this.attributes.color.set(i, color);\n    }\n\n    this.dirtyAttribute('color');\n  },\n\n  /**\n   * Get dataIndex of vertex.\n   * @param {number} vertexIndex\n   */\n  getDataIndexOfVertex: function (vertexIndex) {\n    return this._dataIndices ? this._dataIndices[vertexIndex] : null;\n  },\n\n  /**\n   * Add a bar\n   * @param {Array.<number>} start\n   * @param {Array.<number>} end\n   * @param {Array.<number>} orient  right direction\n   * @param {Array.<number>} size size on x and z\n   * @param {Array.<number>} color\n   */\n  addBar: function () {\n    var v3Create = vec3.create;\n    var v3ScaleAndAdd = vec3.scaleAndAdd;\n    var end = v3Create();\n    var px = v3Create();\n    var py = v3Create();\n    var pz = v3Create();\n    var nx = v3Create();\n    var ny = v3Create();\n    var nz = v3Create();\n    var pts = [];\n    var normals = [];\n\n    for (var i = 0; i < 8; i++) {\n      pts[i] = v3Create();\n    }\n\n    var cubeFaces4 = [// PX\n    [0, 1, 5, 4], // NX\n    [2, 3, 7, 6], // PY\n    [4, 5, 6, 7], // NY\n    [3, 2, 1, 0], // PZ\n    [0, 4, 7, 3], // NZ\n    [1, 2, 6, 5]];\n    var face4To3 = [0, 1, 2, 0, 2, 3];\n    var cubeFaces3 = [];\n\n    for (var i = 0; i < cubeFaces4.length; i++) {\n      var face4 = cubeFaces4[i];\n\n      for (var j = 0; j < 2; j++) {\n        var face = [];\n\n        for (var k = 0; k < 3; k++) {\n          face.push(face4[face4To3[j * 3 + k]]);\n        }\n\n        cubeFaces3.push(face);\n      }\n    }\n\n    return function (start, dir, leftDir, size, color, dataIndex) {\n      // Use vertex, triangle maybe sorted.\n      var startVertex = this._vertexOffset;\n\n      if (this.bevelSize > 0 && this.bevelSegments > 0) {\n        this._addBevelBar(start, dir, leftDir, size, this.bevelSize, this.bevelSegments, color);\n      } else {\n        vec3.copy(py, dir);\n        vec3.normalize(py, py); // x * y => z\n\n        vec3.cross(pz, leftDir, py);\n        vec3.normalize(pz, pz); // y * z => x\n\n        vec3.cross(px, py, pz);\n        vec3.normalize(pz, pz);\n        vec3.negate(nx, px);\n        vec3.negate(ny, py);\n        vec3.negate(nz, pz);\n        v3ScaleAndAdd(pts[0], start, px, size[0] / 2);\n        v3ScaleAndAdd(pts[0], pts[0], pz, size[2] / 2);\n        v3ScaleAndAdd(pts[1], start, px, size[0] / 2);\n        v3ScaleAndAdd(pts[1], pts[1], nz, size[2] / 2);\n        v3ScaleAndAdd(pts[2], start, nx, size[0] / 2);\n        v3ScaleAndAdd(pts[2], pts[2], nz, size[2] / 2);\n        v3ScaleAndAdd(pts[3], start, nx, size[0] / 2);\n        v3ScaleAndAdd(pts[3], pts[3], pz, size[2] / 2);\n        v3ScaleAndAdd(end, start, py, size[1]);\n        v3ScaleAndAdd(pts[4], end, px, size[0] / 2);\n        v3ScaleAndAdd(pts[4], pts[4], pz, size[2] / 2);\n        v3ScaleAndAdd(pts[5], end, px, size[0] / 2);\n        v3ScaleAndAdd(pts[5], pts[5], nz, size[2] / 2);\n        v3ScaleAndAdd(pts[6], end, nx, size[0] / 2);\n        v3ScaleAndAdd(pts[6], pts[6], nz, size[2] / 2);\n        v3ScaleAndAdd(pts[7], end, nx, size[0] / 2);\n        v3ScaleAndAdd(pts[7], pts[7], pz, size[2] / 2);\n        var attributes = this.attributes;\n\n        if (this.enableNormal) {\n          normals[0] = px;\n          normals[1] = nx;\n          normals[2] = py;\n          normals[3] = ny;\n          normals[4] = pz;\n          normals[5] = nz;\n          var vertexOffset = this._vertexOffset;\n\n          for (var i = 0; i < cubeFaces4.length; i++) {\n            var idx3 = this._triangleOffset * 3;\n\n            for (var k = 0; k < 6; k++) {\n              this.indices[idx3++] = vertexOffset + face4To3[k];\n            }\n\n            vertexOffset += 4;\n            this._triangleOffset += 2;\n          }\n\n          for (var i = 0; i < cubeFaces4.length; i++) {\n            var normal = normals[i];\n\n            for (var k = 0; k < 4; k++) {\n              var idx = cubeFaces4[i][k];\n              attributes.position.set(this._vertexOffset, pts[idx]);\n              attributes.normal.set(this._vertexOffset, normal);\n              attributes.color.set(this._vertexOffset++, color);\n            }\n          }\n        } else {\n          for (var i = 0; i < cubeFaces3.length; i++) {\n            var idx3 = this._triangleOffset * 3;\n\n            for (var k = 0; k < 3; k++) {\n              this.indices[idx3 + k] = cubeFaces3[i][k] + this._vertexOffset;\n            }\n\n            this._triangleOffset++;\n          }\n\n          for (var i = 0; i < pts.length; i++) {\n            attributes.position.set(this._vertexOffset, pts[i]);\n            attributes.color.set(this._vertexOffset++, color);\n          }\n        }\n      }\n\n      var endVerex = this._vertexOffset;\n\n      for (var i = startVertex; i < endVerex; i++) {\n        this._dataIndices[i] = dataIndex;\n      }\n    };\n  }(),\n\n  /**\n   * Add a bar with bevel\n   * @param {Array.<number>} start\n   * @param {Array.<number>} end\n   * @param {Array.<number>} orient  right direction\n   * @param {Array.<number>} size size on x and z\n   * @param {number} bevelSize\n   * @param {number} bevelSegments\n   * @param {Array.<number>} color\n   */\n  _addBevelBar: function () {\n    var px = vec3.create();\n    var py = vec3.create();\n    var pz = vec3.create();\n    var rotateMat = mat3.create();\n    var bevelStartSize = [];\n    var xOffsets = [1, -1, -1, 1];\n    var zOffsets = [1, 1, -1, -1];\n    var yOffsets = [2, 0];\n    return function (start, dir, leftDir, size, bevelSize, bevelSegments, color) {\n      vec3.copy(py, dir);\n      vec3.normalize(py, py); // x * y => z\n\n      vec3.cross(pz, leftDir, py);\n      vec3.normalize(pz, pz); // y * z => x\n\n      vec3.cross(px, py, pz);\n      vec3.normalize(pz, pz);\n      rotateMat[0] = px[0];\n      rotateMat[1] = px[1];\n      rotateMat[2] = px[2];\n      rotateMat[3] = py[0];\n      rotateMat[4] = py[1];\n      rotateMat[5] = py[2];\n      rotateMat[6] = pz[0];\n      rotateMat[7] = pz[1];\n      rotateMat[8] = pz[2];\n      bevelSize = Math.min(size[0], size[2]) / 2 * bevelSize;\n\n      for (var i = 0; i < 3; i++) {\n        bevelStartSize[i] = Math.max(size[i] - bevelSize * 2, 0);\n      }\n\n      var rx = (size[0] - bevelStartSize[0]) / 2;\n      var ry = (size[1] - bevelStartSize[1]) / 2;\n      var rz = (size[2] - bevelStartSize[2]) / 2;\n      var pos = [];\n      var normal = [];\n      var vertexOffset = this._vertexOffset;\n      var endIndices = [];\n\n      for (var i = 0; i < 2; i++) {\n        endIndices[i] = endIndices[i] = [];\n\n        for (var m = 0; m <= bevelSegments; m++) {\n          for (var j = 0; j < 4; j++) {\n            if (m === 0 && i === 0 || i === 1 && m === bevelSegments) {\n              endIndices[i].push(vertexOffset);\n            }\n\n            for (var n = 0; n <= bevelSegments; n++) {\n              var phi = n / bevelSegments * Math.PI / 2 + Math.PI / 2 * j;\n              var theta = m / bevelSegments * Math.PI / 2 + Math.PI / 2 * i; // var r = rx < ry ? (rz < rx ? rz : rx) : (rz < ry ? rz : ry);\n\n              normal[0] = rx * Math.cos(phi) * Math.sin(theta);\n              normal[1] = ry * Math.cos(theta);\n              normal[2] = rz * Math.sin(phi) * Math.sin(theta);\n              pos[0] = normal[0] + xOffsets[j] * bevelStartSize[0] / 2;\n              pos[1] = normal[1] + ry + yOffsets[i] * bevelStartSize[1] / 2;\n              pos[2] = normal[2] + zOffsets[j] * bevelStartSize[2] / 2; // Normal is not right if rx, ry, rz not equal.\n\n              if (!(Math.abs(rx - ry) < 1e-6 && Math.abs(ry - rz) < 1e-6)) {\n                normal[0] /= rx * rx;\n                normal[1] /= ry * ry;\n                normal[2] /= rz * rz;\n              }\n\n              vec3.normalize(normal, normal);\n              vec3.transformMat3(pos, pos, rotateMat);\n              vec3.transformMat3(normal, normal, rotateMat);\n              vec3.add(pos, pos, start);\n              this.attributes.position.set(vertexOffset, pos);\n\n              if (this.enableNormal) {\n                this.attributes.normal.set(vertexOffset, normal);\n              }\n\n              this.attributes.color.set(vertexOffset, color);\n              vertexOffset++;\n            }\n          }\n        }\n      }\n\n      var widthSegments = bevelSegments * 4 + 3;\n      var heightSegments = bevelSegments * 2 + 1;\n      var len = widthSegments + 1;\n\n      for (var j = 0; j < heightSegments; j++) {\n        for (var i = 0; i <= widthSegments; i++) {\n          var i2 = j * len + i + this._vertexOffset;\n          var i1 = j * len + (i + 1) % len + this._vertexOffset;\n          var i4 = (j + 1) * len + (i + 1) % len + this._vertexOffset;\n          var i3 = (j + 1) * len + i + this._vertexOffset;\n          this.setTriangleIndices(this._triangleOffset++, [i4, i2, i1]);\n          this.setTriangleIndices(this._triangleOffset++, [i4, i3, i2]);\n        }\n      } // Close top and bottom\n\n\n      this.setTriangleIndices(this._triangleOffset++, [endIndices[0][0], endIndices[0][2], endIndices[0][1]]);\n      this.setTriangleIndices(this._triangleOffset++, [endIndices[0][0], endIndices[0][3], endIndices[0][2]]);\n      this.setTriangleIndices(this._triangleOffset++, [endIndices[1][0], endIndices[1][1], endIndices[1][2]]);\n      this.setTriangleIndices(this._triangleOffset++, [endIndices[1][0], endIndices[1][2], endIndices[1][3]]);\n      this._vertexOffset = vertexOffset;\n    };\n  }()\n});\necharts.util.defaults(BarsGeometry.prototype, dynamicConvertMixin);\necharts.util.defaults(BarsGeometry.prototype, trianglesSortMixin);\nexport default BarsGeometry;","/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec2 = glmatrix.vec2; // var CURVE_RECURSION_LIMIT = 8;\n// var CURVE_COLLINEAR_EPSILON = 40;\n\nvar sampleLinePoints = [[0, 0], [1, 1]];\n/**\n * @constructor\n * @alias module:echarts-gl/util/geometry/LinesGeometry\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    segmentScale: 4,\n    dynamic: true,\n\n    /**\n     * Need to use mesh to expand lines if lineWidth > MAX_LINE_WIDTH\n     */\n    useNativeLine: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 2, 'POSITION'),\n      normal: new Geometry.Attribute('normal', 'float', 2),\n      offset: new Geometry.Attribute('offset', 'float', 1),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n    this._itemVertexOffsets = [];\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setVertexCount: function (nVertex) {\n    var attributes = this.attributes;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n      attributes.color.init(nVertex);\n\n      if (!this.useNativeLine) {\n        attributes.offset.init(nVertex);\n        attributes.normal.init(nVertex);\n      }\n\n      if (nVertex > 0xffff) {\n        if (this.indices instanceof Uint16Array) {\n          this.indices = new Uint32Array(this.indices);\n        }\n      } else {\n        if (this.indices instanceof Uint32Array) {\n          this.indices = new Uint16Array(this.indices);\n        }\n      }\n    }\n  },\n\n  /**\n   * @param {number} nTriangle\n   */\n  setTriangleCount: function (nTriangle) {\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  _getCubicCurveApproxStep: function (p0, p1, p2, p3) {\n    var len = vec2.dist(p0, p1) + vec2.dist(p2, p1) + vec2.dist(p3, p2);\n    var step = 1 / (len + 1) * this.segmentScale;\n    return step;\n  },\n\n  /**\n   * Get vertex count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveVertexCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2 + 2;\n    } else {\n      return segCount * 2;\n    }\n  },\n\n  /**\n   * Get face count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveTriangleCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2;\n    } else {\n      return 0;\n    }\n  },\n\n  /**\n   * Get vertex count of line\n   * @return {number}\n   */\n  getLineVertexCount: function () {\n    return this.getPolylineVertexCount(sampleLinePoints);\n  },\n\n  /**\n   * Get face count of line\n   * @return {number}\n   */\n  getLineTriangleCount: function () {\n    return this.getPolylineTriangleCount(sampleLinePoints);\n  },\n\n  /**\n   * Get how many vertices will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineVertexCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 2;\n    }\n\n    return !this.useNativeLine ? (pointsLen - 1) * 2 + 2 : (pointsLen - 1) * 2;\n  },\n\n  /**\n   * Get how many triangles will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineTriangleCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 2;\n    }\n\n    return !this.useNativeLine ? (pointsLen - 1) * 2 : 0;\n  },\n\n  /**\n   * Add a cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addCubicCurve: function (p0, p1, p2, p3, color, lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    } // incremental interpolation\n    // http://antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n\n\n    var x0 = p0[0],\n        y0 = p0[1];\n    var x1 = p1[0],\n        y1 = p1[1];\n    var x2 = p2[0],\n        y2 = p2[1];\n    var x3 = p3[0],\n        y3 = p3[1];\n\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var step2 = step * step;\n    var step3 = step2 * step;\n    var pre1 = 3.0 * step;\n    var pre2 = 3.0 * step2;\n    var pre4 = 6.0 * step2;\n    var pre5 = 6.0 * step3;\n    var tmp1x = x0 - x1 * 2.0 + x2;\n    var tmp1y = y0 - y1 * 2.0 + y2;\n    var tmp2x = (x1 - x2) * 3.0 - x0 + x3;\n    var tmp2y = (y1 - y2) * 3.0 - y0 + y3;\n    var fx = x0;\n    var fy = y0;\n    var dfx = (x1 - x0) * pre1 + tmp1x * pre2 + tmp2x * step3;\n    var dfy = (y1 - y0) * pre1 + tmp1y * pre2 + tmp2y * step3;\n    var ddfx = tmp1x * pre4 + tmp2x * pre5;\n    var ddfy = tmp1y * pre4 + tmp2y * pre5;\n    var dddfx = tmp2x * pre5;\n    var dddfy = tmp2y * pre5;\n    var t = 0;\n    var k = 0;\n    var segCount = Math.ceil(1 / step);\n    var points = new Float32Array((segCount + 1) * 3);\n    var points = [];\n    var offset = 0;\n\n    for (var k = 0; k < segCount + 1; k++) {\n      points[offset++] = fx;\n      points[offset++] = fy;\n      fx += dfx;\n      fy += dfy;\n      dfx += ddfx;\n      dfy += ddfy;\n      ddfx += dddfx;\n      ddfy += dddfy;\n      t += step;\n\n      if (t > 1) {\n        fx = dfx > 0 ? Math.min(fx, x3) : Math.max(fx, x3);\n        fy = dfy > 0 ? Math.min(fy, y3) : Math.max(fy, y3);\n      }\n    }\n\n    this.addPolyline(points, color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addLine: function (p0, p1, color, lineWidth) {\n    this.addPolyline([p0, p1], color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<Array> | Array.<number>} points\n   * @param {Array.<number> | Array.<Array>} color\n   * @param {number} [lineWidth=1]\n   * @param {number} [arrayOffset=0]\n   * @param {number} [pointsCount] Default to be amount of points in the first argument\n   */\n  addPolyline: function () {\n    var dirA = vec2.create();\n    var dirB = vec2.create();\n    var normal = vec2.create();\n    var tangent = vec2.create();\n    var point = [],\n        nextPoint = [],\n        prevPoint = [];\n    return function (points, color, lineWidth, arrayOffset, pointsCount) {\n      if (!points.length) {\n        return;\n      }\n\n      var is2DArray = typeof points[0] !== 'number';\n\n      if (pointsCount == null) {\n        pointsCount = is2DArray ? points.length : points.length / 2;\n      }\n\n      if (pointsCount < 2) {\n        return;\n      }\n\n      if (arrayOffset == null) {\n        arrayOffset = 0;\n      }\n\n      if (lineWidth == null) {\n        lineWidth = 1;\n      }\n\n      this._itemVertexOffsets.push(this._vertexOffset);\n\n      var notSharingColor = is2DArray ? typeof color[0] !== 'number' : color.length / 4 === pointsCount;\n      var positionAttr = this.attributes.position;\n      var colorAttr = this.attributes.color;\n      var offsetAttr = this.attributes.offset;\n      var normalAttr = this.attributes.normal;\n      var indices = this.indices;\n      var vertexOffset = this._vertexOffset;\n      var pointColor;\n\n      for (var k = 0; k < pointsCount; k++) {\n        if (is2DArray) {\n          point = points[k + arrayOffset];\n\n          if (notSharingColor) {\n            pointColor = color[k + arrayOffset];\n          } else {\n            pointColor = color;\n          }\n        } else {\n          var k2 = k * 2 + arrayOffset;\n          point = point || [];\n          point[0] = points[k2];\n          point[1] = points[k2 + 1];\n\n          if (notSharingColor) {\n            var k4 = k * 4 + arrayOffset;\n            pointColor = pointColor || [];\n            pointColor[0] = color[k4];\n            pointColor[1] = color[k4 + 1];\n            pointColor[2] = color[k4 + 2];\n            pointColor[3] = color[k4 + 3];\n          } else {\n            pointColor = color;\n          }\n        }\n\n        if (!this.useNativeLine) {\n          var offset;\n\n          if (k < pointsCount - 1) {\n            if (is2DArray) {\n              vec2.copy(nextPoint, points[k + 1]);\n            } else {\n              var k2 = (k + 1) * 2 + arrayOffset;\n              nextPoint = nextPoint || [];\n              nextPoint[0] = points[k2];\n              nextPoint[1] = points[k2 + 1];\n            } // TODO In case dir is (0, 0)\n            // TODO miterLimit\n\n\n            if (k > 0) {\n              vec2.sub(dirA, point, prevPoint);\n              vec2.sub(dirB, nextPoint, point);\n              vec2.normalize(dirA, dirA);\n              vec2.normalize(dirB, dirB);\n              vec2.add(tangent, dirA, dirB);\n              vec2.normalize(tangent, tangent);\n              var miter = lineWidth / 2 * Math.min(1 / vec2.dot(dirA, tangent), 2);\n              normal[0] = -tangent[1];\n              normal[1] = tangent[0];\n              offset = miter;\n            } else {\n              vec2.sub(dirA, nextPoint, point);\n              vec2.normalize(dirA, dirA);\n              normal[0] = -dirA[1];\n              normal[1] = dirA[0];\n              offset = lineWidth / 2;\n            }\n          } else {\n            vec2.sub(dirA, point, prevPoint);\n            vec2.normalize(dirA, dirA);\n            normal[0] = -dirA[1];\n            normal[1] = dirA[0];\n            offset = lineWidth / 2;\n          }\n\n          normalAttr.set(vertexOffset, normal);\n          normalAttr.set(vertexOffset + 1, normal);\n          offsetAttr.set(vertexOffset, offset);\n          offsetAttr.set(vertexOffset + 1, -offset);\n          vec2.copy(prevPoint, point);\n          positionAttr.set(vertexOffset, point);\n          positionAttr.set(vertexOffset + 1, point);\n          colorAttr.set(vertexOffset, pointColor);\n          colorAttr.set(vertexOffset + 1, pointColor);\n          vertexOffset += 2;\n        } else {\n          if (k > 1) {\n            positionAttr.copy(vertexOffset, vertexOffset - 1);\n            colorAttr.copy(vertexOffset, vertexOffset - 1);\n            vertexOffset++;\n          }\n        }\n\n        if (!this.useNativeLine) {\n          if (k > 0) {\n            var idx3 = this._faceOffset * 3;\n            var indices = this.indices; // 0-----2\n            // 1-----3\n            // 0->1->2, 1->3->2\n\n            indices[idx3] = vertexOffset - 4;\n            indices[idx3 + 1] = vertexOffset - 3;\n            indices[idx3 + 2] = vertexOffset - 2;\n            indices[idx3 + 3] = vertexOffset - 3;\n            indices[idx3 + 4] = vertexOffset - 1;\n            indices[idx3 + 5] = vertexOffset - 2;\n            this._faceOffset += 2;\n          }\n        } else {\n          colorAttr.set(vertexOffset, pointColor);\n          positionAttr.set(vertexOffset, point);\n          vertexOffset++;\n        }\n      }\n\n      this._vertexOffset = vertexOffset;\n    };\n  }(),\n\n  /**\n   * Set color of single line.\n   */\n  setItemColor: function (idx, color) {\n    var startOffset = this._itemVertexOffsets[idx];\n    var endOffset = idx < this._itemVertexOffsets.length - 1 ? this._itemVertexOffsets[idx + 1] : this._vertexOffset;\n\n    for (var i = startOffset; i < endOffset; i++) {\n      this.attributes.color.set(i, color);\n    }\n\n    this.dirty('color');\n  }\n});\necharts.util.defaults(LinesGeometry.prototype, dynamicConvertMixin);\nexport default LinesGeometry;","/**\n * Lines geometry\n * Use screen space projected lines lineWidth > MAX_LINE_WIDTH\n * https://mattdesl.svbtle.com/drawing-lines-is-hard\n * @module echarts-gl/util/geometry/LinesGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3; // var CURVE_RECURSION_LIMIT = 8;\n// var CURVE_COLLINEAR_EPSILON = 40;\n\nvar sampleLinePoints = [[0, 0], [1, 1]];\n/**\n * @constructor\n * @alias module:echarts-gl/util/geometry/LinesGeometry\n * @extends clay.Geometry\n */\n\nvar LinesGeometry = Geometry.extend(function () {\n  return {\n    segmentScale: 1,\n    dynamic: true,\n\n    /**\n     * Need to use mesh to expand lines if lineWidth > MAX_LINE_WIDTH\n     */\n    useNativeLine: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      positionPrev: new Geometry.Attribute('positionPrev', 'float', 3),\n      positionNext: new Geometry.Attribute('positionNext', 'float', 3),\n      prevPositionPrev: new Geometry.Attribute('prevPositionPrev', 'float', 3),\n      prevPosition: new Geometry.Attribute('prevPosition', 'float', 3),\n      prevPositionNext: new Geometry.Attribute('prevPositionNext', 'float', 3),\n      offset: new Geometry.Attribute('offset', 'float', 1),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/LinesGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._triangleOffset = 0;\n    this._itemVertexOffsets = [];\n  },\n\n  /**\n   * @param {number} nVertex\n   */\n  setVertexCount: function (nVertex) {\n    var attributes = this.attributes;\n\n    if (this.vertexCount !== nVertex) {\n      attributes.position.init(nVertex);\n      attributes.color.init(nVertex);\n\n      if (!this.useNativeLine) {\n        attributes.positionPrev.init(nVertex);\n        attributes.positionNext.init(nVertex);\n        attributes.offset.init(nVertex);\n      }\n\n      if (nVertex > 0xffff) {\n        if (this.indices instanceof Uint16Array) {\n          this.indices = new Uint32Array(this.indices);\n        }\n      } else {\n        if (this.indices instanceof Uint32Array) {\n          this.indices = new Uint16Array(this.indices);\n        }\n      }\n    }\n  },\n\n  /**\n   * @param {number} nTriangle\n   */\n  setTriangleCount: function (nTriangle) {\n    if (this.triangleCount !== nTriangle) {\n      if (nTriangle === 0) {\n        this.indices = null;\n      } else {\n        this.indices = this.vertexCount > 0xffff ? new Uint32Array(nTriangle * 3) : new Uint16Array(nTriangle * 3);\n      }\n    }\n  },\n  _getCubicCurveApproxStep: function (p0, p1, p2, p3) {\n    var len = vec3.dist(p0, p1) + vec3.dist(p2, p1) + vec3.dist(p3, p2);\n    var step = 1 / (len + 1) * this.segmentScale;\n    return step;\n  },\n\n  /**\n   * Get vertex count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveVertexCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2 + 2;\n    } else {\n      return segCount * 2;\n    }\n  },\n\n  /**\n   * Get face count of cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @return number\n   */\n  getCubicCurveTriangleCount: function (p0, p1, p2, p3) {\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var segCount = Math.ceil(1 / step);\n\n    if (!this.useNativeLine) {\n      return segCount * 2;\n    } else {\n      return 0;\n    }\n  },\n\n  /**\n   * Get vertex count of line\n   * @return {number}\n   */\n  getLineVertexCount: function () {\n    return this.getPolylineVertexCount(sampleLinePoints);\n  },\n\n  /**\n   * Get face count of line\n   * @return {number}\n   */\n  getLineTriangleCount: function () {\n    return this.getPolylineTriangleCount(sampleLinePoints);\n  },\n\n  /**\n   * Get how many vertices will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineVertexCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 3;\n    }\n\n    return !this.useNativeLine ? (pointsLen - 1) * 2 + 2 : (pointsLen - 1) * 2;\n  },\n\n  /**\n   * Get how many triangles will polyline take.\n   * @type {number|Array} points Can be a 1d/2d list of points, or a number of points amount.\n   * @return {number}\n   */\n  getPolylineTriangleCount: function (points) {\n    var pointsLen;\n\n    if (typeof points === 'number') {\n      pointsLen = points;\n    } else {\n      var is2DArray = typeof points[0] !== 'number';\n      pointsLen = is2DArray ? points.length : points.length / 3;\n    }\n\n    return !this.useNativeLine ? Math.max(pointsLen - 1, 0) * 2 : 0;\n  },\n\n  /**\n   * Add a cubic curve\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} p2\n   * @param {Array.<number>} p3\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addCubicCurve: function (p0, p1, p2, p3, color, lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    } // incremental interpolation\n    // http://antigrain.com/research/bezier_interpolation/index.html#PAGE_BEZIER_INTERPOLATION\n\n\n    var x0 = p0[0],\n        y0 = p0[1],\n        z0 = p0[2];\n    var x1 = p1[0],\n        y1 = p1[1],\n        z1 = p1[2];\n    var x2 = p2[0],\n        y2 = p2[1],\n        z2 = p2[2];\n    var x3 = p3[0],\n        y3 = p3[1],\n        z3 = p3[2];\n\n    var step = this._getCubicCurveApproxStep(p0, p1, p2, p3);\n\n    var step2 = step * step;\n    var step3 = step2 * step;\n    var pre1 = 3.0 * step;\n    var pre2 = 3.0 * step2;\n    var pre4 = 6.0 * step2;\n    var pre5 = 6.0 * step3;\n    var tmp1x = x0 - x1 * 2.0 + x2;\n    var tmp1y = y0 - y1 * 2.0 + y2;\n    var tmp1z = z0 - z1 * 2.0 + z2;\n    var tmp2x = (x1 - x2) * 3.0 - x0 + x3;\n    var tmp2y = (y1 - y2) * 3.0 - y0 + y3;\n    var tmp2z = (z1 - z2) * 3.0 - z0 + z3;\n    var fx = x0;\n    var fy = y0;\n    var fz = z0;\n    var dfx = (x1 - x0) * pre1 + tmp1x * pre2 + tmp2x * step3;\n    var dfy = (y1 - y0) * pre1 + tmp1y * pre2 + tmp2y * step3;\n    var dfz = (z1 - z0) * pre1 + tmp1z * pre2 + tmp2z * step3;\n    var ddfx = tmp1x * pre4 + tmp2x * pre5;\n    var ddfy = tmp1y * pre4 + tmp2y * pre5;\n    var ddfz = tmp1z * pre4 + tmp2z * pre5;\n    var dddfx = tmp2x * pre5;\n    var dddfy = tmp2y * pre5;\n    var dddfz = tmp2z * pre5;\n    var t = 0;\n    var k = 0;\n    var segCount = Math.ceil(1 / step);\n    var points = new Float32Array((segCount + 1) * 3);\n    var points = [];\n    var offset = 0;\n\n    for (var k = 0; k < segCount + 1; k++) {\n      points[offset++] = fx;\n      points[offset++] = fy;\n      points[offset++] = fz;\n      fx += dfx;\n      fy += dfy;\n      fz += dfz;\n      dfx += ddfx;\n      dfy += ddfy;\n      dfz += ddfz;\n      ddfx += dddfx;\n      ddfy += dddfy;\n      ddfz += dddfz;\n      t += step;\n\n      if (t > 1) {\n        fx = dfx > 0 ? Math.min(fx, x3) : Math.max(fx, x3);\n        fy = dfy > 0 ? Math.min(fy, y3) : Math.max(fy, y3);\n        fz = dfz > 0 ? Math.min(fz, z3) : Math.max(fz, z3);\n      }\n    }\n\n    return this.addPolyline(points, color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<number>} p0\n   * @param {Array.<number>} p1\n   * @param {Array.<number>} color\n   * @param {number} [lineWidth=1]\n   */\n  addLine: function (p0, p1, color, lineWidth) {\n    return this.addPolyline([p0, p1], color, lineWidth);\n  },\n\n  /**\n   * Add a straight line\n   * @param {Array.<Array> | Array.<number>} points\n   * @param {Array.<number> | Array.<Array>} color\n   * @param {number} [lineWidth=1]\n   * @param {number} [startOffset=0]\n   * @param {number} [pointsCount] Default to be amount of points in the first argument\n   */\n  addPolyline: function (points, color, lineWidth, startOffset, pointsCount) {\n    if (!points.length) {\n      return;\n    }\n\n    var is2DArray = typeof points[0] !== 'number';\n\n    if (pointsCount == null) {\n      pointsCount = is2DArray ? points.length : points.length / 3;\n    }\n\n    if (pointsCount < 2) {\n      return;\n    }\n\n    if (startOffset == null) {\n      startOffset = 0;\n    }\n\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    this._itemVertexOffsets.push(this._vertexOffset);\n\n    var is2DArray = typeof points[0] !== 'number';\n    var notSharingColor = is2DArray ? typeof color[0] !== 'number' : color.length / 4 === pointsCount;\n    var positionAttr = this.attributes.position;\n    var positionPrevAttr = this.attributes.positionPrev;\n    var positionNextAttr = this.attributes.positionNext;\n    var colorAttr = this.attributes.color;\n    var offsetAttr = this.attributes.offset;\n    var indices = this.indices;\n    var vertexOffset = this._vertexOffset;\n    var point;\n    var pointColor;\n    lineWidth = Math.max(lineWidth, 0.01);\n\n    for (var k = startOffset; k < pointsCount; k++) {\n      if (is2DArray) {\n        point = points[k];\n\n        if (notSharingColor) {\n          pointColor = color[k];\n        } else {\n          pointColor = color;\n        }\n      } else {\n        var k3 = k * 3;\n        point = point || [];\n        point[0] = points[k3];\n        point[1] = points[k3 + 1];\n        point[2] = points[k3 + 2];\n\n        if (notSharingColor) {\n          var k4 = k * 4;\n          pointColor = pointColor || [];\n          pointColor[0] = color[k4];\n          pointColor[1] = color[k4 + 1];\n          pointColor[2] = color[k4 + 2];\n          pointColor[3] = color[k4 + 3];\n        } else {\n          pointColor = color;\n        }\n      }\n\n      if (!this.useNativeLine) {\n        if (k < pointsCount - 1) {\n          // Set to next two points\n          positionPrevAttr.set(vertexOffset + 2, point);\n          positionPrevAttr.set(vertexOffset + 3, point);\n        }\n\n        if (k > 0) {\n          // Set to previous two points\n          positionNextAttr.set(vertexOffset - 2, point);\n          positionNextAttr.set(vertexOffset - 1, point);\n        }\n\n        positionAttr.set(vertexOffset, point);\n        positionAttr.set(vertexOffset + 1, point);\n        colorAttr.set(vertexOffset, pointColor);\n        colorAttr.set(vertexOffset + 1, pointColor);\n        offsetAttr.set(vertexOffset, lineWidth / 2);\n        offsetAttr.set(vertexOffset + 1, -lineWidth / 2);\n        vertexOffset += 2;\n      } else {\n        if (k > 1) {\n          positionAttr.copy(vertexOffset, vertexOffset - 1);\n          colorAttr.copy(vertexOffset, vertexOffset - 1);\n          vertexOffset++;\n        }\n      }\n\n      if (!this.useNativeLine) {\n        if (k > 0) {\n          var idx3 = this._triangleOffset * 3;\n          var indices = this.indices; // 0-----2\n          // 1-----3\n          // 0->1->2, 1->3->2\n\n          indices[idx3] = vertexOffset - 4;\n          indices[idx3 + 1] = vertexOffset - 3;\n          indices[idx3 + 2] = vertexOffset - 2;\n          indices[idx3 + 3] = vertexOffset - 3;\n          indices[idx3 + 4] = vertexOffset - 1;\n          indices[idx3 + 5] = vertexOffset - 2;\n          this._triangleOffset += 2;\n        }\n      } else {\n        colorAttr.set(vertexOffset, pointColor);\n        positionAttr.set(vertexOffset, point);\n        vertexOffset++;\n      }\n    }\n\n    if (!this.useNativeLine) {\n      var start = this._vertexOffset;\n      var end = this._vertexOffset + pointsCount * 2;\n      positionPrevAttr.copy(start, start + 2);\n      positionPrevAttr.copy(start + 1, start + 3);\n      positionNextAttr.copy(end - 1, end - 3);\n      positionNextAttr.copy(end - 2, end - 4);\n    }\n\n    this._vertexOffset = vertexOffset;\n    return this._vertexOffset;\n  },\n\n  /**\n   * Set color of single line.\n   */\n  setItemColor: function (idx, color) {\n    var startOffset = this._itemVertexOffsets[idx];\n    var endOffset = idx < this._itemVertexOffsets.length - 1 ? this._itemVertexOffsets[idx + 1] : this._vertexOffset;\n\n    for (var i = startOffset; i < endOffset; i++) {\n      this.attributes.color.set(i, color);\n    }\n\n    this.dirty('color');\n  },\n\n  /**\n   * @return {number}\n   */\n  currentTriangleOffset: function () {\n    return this._triangleOffset;\n  },\n\n  /**\n   * @return {number}\n   */\n  currentVertexOffset: function () {\n    return this._vertexOffset;\n  }\n});\necharts.util.defaults(LinesGeometry.prototype, dynamicConvertMixin);\nexport default LinesGeometry;","/**\n * @module echarts-gl/util/geometry/QuadsGeometry\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\n/**\n * @constructor\n * @alias module:echarts-gl/util/geometry/QuadsGeometry\n * @extends clay.Geometry\n */\n\nvar QuadsGeometry = Geometry.extend(function () {\n  return {\n    segmentScale: 1,\n\n    /**\n     * Need to use mesh to expand lines if lineWidth > MAX_LINE_WIDTH\n     */\n    useNativeLine: true,\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      normal: new Geometry.Attribute('normal', 'float', 3, 'NORMAL'),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n},\n/** @lends module: echarts-gl/util/geometry/QuadsGeometry.prototype */\n{\n  /**\n   * Reset offset\n   */\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n\n  /**\n   * @param {number} nQuad\n   */\n  setQuadCount: function (nQuad) {\n    var attributes = this.attributes;\n    var vertexCount = this.getQuadVertexCount() * nQuad;\n    var triangleCount = this.getQuadTriangleCount() * nQuad;\n\n    if (this.vertexCount !== vertexCount) {\n      attributes.position.init(vertexCount);\n      attributes.normal.init(vertexCount);\n      attributes.color.init(vertexCount);\n    }\n\n    if (this.triangleCount !== triangleCount) {\n      this.indices = vertexCount > 0xffff ? new Uint32Array(triangleCount * 3) : new Uint16Array(triangleCount * 3);\n    }\n  },\n  getQuadVertexCount: function () {\n    return 4;\n  },\n  getQuadTriangleCount: function () {\n    return 2;\n  },\n\n  /**\n   * Add a quad, which in following order:\n   * 0-----1\n   * 3-----2\n   */\n  addQuad: function () {\n    var a = vec3.create();\n    var b = vec3.create();\n    var normal = vec3.create();\n    var indices = [0, 3, 1, 3, 2, 1];\n    return function (coords, color) {\n      var positionAttr = this.attributes.position;\n      var normalAttr = this.attributes.normal;\n      var colorAttr = this.attributes.color;\n      vec3.sub(a, coords[1], coords[0]);\n      vec3.sub(b, coords[2], coords[1]);\n      vec3.cross(normal, a, b);\n      vec3.normalize(normal, normal);\n\n      for (var i = 0; i < 4; i++) {\n        positionAttr.set(this._vertexOffset + i, coords[i]);\n        colorAttr.set(this._vertexOffset + i, color);\n        normalAttr.set(this._vertexOffset + i, normal);\n      }\n\n      var idx = this._faceOffset * 3;\n\n      for (var i = 0; i < 6; i++) {\n        this.indices[idx + i] = indices[i] + this._vertexOffset;\n      }\n\n      this._vertexOffset += 4;\n      this._faceOffset += 2;\n    };\n  }()\n});\necharts.util.defaults(QuadsGeometry.prototype, dynamicConvertMixin);\nexport default QuadsGeometry;","export default {\n  convertToDynamicArray: function (clear) {\n    if (clear) {\n      this.resetOffset();\n    }\n\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (clear || !attributes[name].value) {\n        attributes[name].value = [];\n      } else {\n        attributes[name].value = Array.prototype.slice.call(attributes[name].value);\n      }\n    }\n\n    if (clear || !this.indices) {\n      this.indices = [];\n    } else {\n      this.indices = Array.prototype.slice.call(this.indices);\n    }\n  },\n  convertToTypedArray: function () {\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      if (attributes[name].value && attributes[name].value.length > 0) {\n        attributes[name].value = new Float32Array(attributes[name].value);\n      } else {\n        attributes[name].value = null;\n      }\n    }\n\n    if (this.indices && this.indices.length > 0) {\n      this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.indices) : new Uint16Array(this.indices);\n    }\n\n    this.dirty();\n  }\n};","import ProgressiveQuickSort from '../ProgressiveQuickSort';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nvar p0 = vec3.create();\nvar p1 = vec3.create();\nvar p2 = vec3.create(); // var cp = vec3.create();\n\nexport default {\n  needsSortTriangles: function () {\n    return this.indices && this.sortTriangles;\n  },\n  needsSortTrianglesProgressively: function () {\n    return this.needsSortTriangles() && this.triangleCount >= 2e4;\n  },\n  doSortTriangles: function (cameraPos, frame) {\n    var indices = this.indices; // Do progressive quick sort.\n\n    if (frame === 0) {\n      var posAttr = this.attributes.position;\n      var cameraPos = cameraPos.array;\n\n      if (!this._triangleZList || this._triangleZList.length !== this.triangleCount) {\n        this._triangleZList = new Float32Array(this.triangleCount);\n        this._sortedTriangleIndices = new Uint32Array(this.triangleCount);\n        this._indicesTmp = new indices.constructor(indices.length);\n        this._triangleZListTmp = new Float32Array(this.triangleCount);\n      }\n\n      var cursor = 0;\n      var firstZ;\n\n      for (var i = 0; i < indices.length;) {\n        posAttr.get(indices[i++], p0);\n        posAttr.get(indices[i++], p1);\n        posAttr.get(indices[i++], p2); // FIXME If use center ?\n        // cp[0] = (p0[0] + p1[0] + p2[0]) / 3;\n        // cp[1] = (p0[1] + p1[1] + p2[1]) / 3;\n        // cp[2] = (p0[2] + p1[2] + p2[2]) / 3;\n        // Camera position is in object space\n        // Use max of three points, PENDING\n\n        var z0 = vec3.sqrDist(p0, cameraPos);\n        var z1 = vec3.sqrDist(p1, cameraPos);\n        var z2 = vec3.sqrDist(p2, cameraPos);\n        var zMax = Math.min(z0, z1);\n        zMax = Math.min(zMax, z2);\n\n        if (i === 3) {\n          firstZ = zMax;\n          zMax = 0;\n        } else {\n          // Only store the difference to avoid the precision issue.\n          zMax = zMax - firstZ;\n        }\n\n        this._triangleZList[cursor++] = zMax;\n      }\n    }\n\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n\n    for (var i = 0; i < sortedTriangleIndices.length; i++) {\n      sortedTriangleIndices[i] = i;\n    }\n\n    if (this.triangleCount < 2e4) {\n      // Use simple timsort for simple geometries.\n      if (frame === 0) {\n        // Use native sort temporary.\n        this._simpleSort(true);\n      }\n    } else {\n      for (var i = 0; i < 3; i++) {\n        this._progressiveQuickSort(frame * 3 + i);\n      }\n    }\n\n    var targetIndices = this._indicesTmp;\n    var targetTriangleZList = this._triangleZListTmp;\n    var faceZList = this._triangleZList;\n\n    for (var i = 0; i < this.triangleCount; i++) {\n      var fromIdx3 = sortedTriangleIndices[i] * 3;\n      var toIdx3 = i * 3;\n      targetIndices[toIdx3++] = indices[fromIdx3++];\n      targetIndices[toIdx3++] = indices[fromIdx3++];\n      targetIndices[toIdx3] = indices[fromIdx3];\n      targetTriangleZList[i] = faceZList[sortedTriangleIndices[i]];\n    } // Swap indices.\n\n\n    var tmp = this._indicesTmp;\n    this._indicesTmp = this.indices;\n    this.indices = tmp;\n    var tmp = this._triangleZListTmp;\n    this._triangleZListTmp = this._triangleZList;\n    this._triangleZList = tmp;\n    this.dirtyIndices();\n  },\n  _simpleSort: function (useNativeQuickSort) {\n    var faceZList = this._triangleZList;\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n\n    function compare(a, b) {\n      // Sort from far to near. which is descending order\n      return faceZList[b] - faceZList[a];\n    }\n\n    if (useNativeQuickSort) {\n      Array.prototype.sort.call(sortedTriangleIndices, compare);\n    } else {\n      ProgressiveQuickSort.sort(sortedTriangleIndices, compare, 0, sortedTriangleIndices.length - 1);\n    }\n  },\n  _progressiveQuickSort: function (frame) {\n    var faceZList = this._triangleZList;\n    var sortedTriangleIndices = this._sortedTriangleIndices;\n    this._quickSort = this._quickSort || new ProgressiveQuickSort();\n\n    this._quickSort.step(sortedTriangleIndices, function (a, b) {\n      return faceZList[b] - faceZList[a];\n    }, frame);\n  }\n};","import ProgressiveQuickSort from '../ProgressiveQuickSort';\nimport glmatrix from 'claygl/src/dep/glmatrix';\nvar vec3 = glmatrix.vec3;\nexport default {\n  needsSortVertices: function () {\n    return this.sortVertices;\n  },\n  needsSortVerticesProgressively: function () {\n    return this.needsSortVertices() && this.vertexCount >= 2e4;\n  },\n  doSortVertices: function (cameraPos, frame) {\n    var indices = this.indices;\n    var p = vec3.create();\n\n    if (!indices) {\n      indices = this.indices = this.vertexCount > 0xffff ? new Uint32Array(this.vertexCount) : new Uint16Array(this.vertexCount);\n\n      for (var i = 0; i < indices.length; i++) {\n        indices[i] = i;\n      }\n    } // Do progressive quick sort.\n\n\n    if (frame === 0) {\n      var posAttr = this.attributes.position;\n      var cameraPos = cameraPos.array;\n      var noneCount = 0;\n\n      if (!this._zList || this._zList.length !== this.vertexCount) {\n        this._zList = new Float32Array(this.vertexCount);\n      }\n\n      var firstZ;\n\n      for (var i = 0; i < this.vertexCount; i++) {\n        posAttr.get(i, p); // Camera position is in object space\n\n        var z = vec3.sqrDist(p, cameraPos);\n\n        if (isNaN(z)) {\n          // Put far away, NaN value may cause sort slow\n          z = 1e7;\n          noneCount++;\n        }\n\n        if (i === 0) {\n          firstZ = z;\n          z = 0;\n        } else {\n          // Only store the difference to avoid the precision issue.\n          z = z - firstZ;\n        }\n\n        this._zList[i] = z;\n      }\n\n      this._noneCount = noneCount;\n    }\n\n    if (this.vertexCount < 2e4) {\n      // Use simple native sort for simple geometries.\n      if (frame === 0) {\n        this._simpleSort(this._noneCount / this.vertexCount > 0.05);\n      }\n    } else {\n      for (var i = 0; i < 3; i++) {\n        this._progressiveQuickSort(frame * 3 + i);\n      }\n    }\n\n    this.dirtyIndices();\n  },\n  _simpleSort: function (useNativeQuickSort) {\n    var zList = this._zList;\n    var indices = this.indices;\n\n    function compare(a, b) {\n      // Sort from far to near. which is descending order\n      return zList[b] - zList[a];\n    } // When too much value are equal, using native quick sort with three partition..\n    // or the simple quick sort will be nearly O(n*n)\n    // http://stackoverflow.com/questions/5126586/quicksort-complexity-when-all-the-elements-are-same\n    // Otherwise simple quicksort is more effecient than v8 native quick sort when data all different.\n\n\n    if (useNativeQuickSort) {\n      Array.prototype.sort.call(indices, compare);\n    } else {\n      ProgressiveQuickSort.sort(indices, compare, 0, indices.length - 1);\n    }\n  },\n  _progressiveQuickSort: function (frame) {\n    var zList = this._zList;\n    var indices = this.indices;\n    this._quickSort = this._quickSort || new ProgressiveQuickSort();\n\n    this._quickSort.step(indices, function (a, b) {\n      return zList[b] - zList[a];\n    }, frame);\n  }\n};","/**\n * Surface texture in the 3D scene.\n * Provide management and rendering of zrender shapes and groups\n *\n * @module echarts-gl/util/EChartsSurface\n * @author Yi Shen(http://github.com/pissang)\n */\nimport Texture2D from 'claygl/src/Texture2D';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector2 from 'claygl/src/math/Vector2';\nvar events = ['mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'click', 'dblclick', 'contextmenu'];\n\nfunction makeHandlerName(eventName) {\n  return '_on' + eventName;\n}\n/**\n * @constructor\n * @alias echarts-gl/util/EChartsSurface\n * @param {module:echarts~ECharts} chart\n */\n\n\nvar EChartsSurface = function (chart) {\n  var self = this;\n  this._texture = new Texture2D({\n    anisotropic: 32,\n    flipY: false,\n    surface: this,\n    dispose: function (renderer) {\n      self.dispose();\n      Texture2D.prototype.dispose.call(this, renderer);\n    }\n  });\n  events.forEach(function (eventName) {\n    this[makeHandlerName(eventName)] = function (eveObj) {\n      if (!eveObj.triangle) {\n        return;\n      }\n\n      this._meshes.forEach(function (mesh) {\n        this.dispatchEvent(eventName, mesh, eveObj.triangle, eveObj.point);\n      }, this);\n    };\n  }, this);\n  this._meshes = [];\n\n  if (chart) {\n    this.setECharts(chart);\n  } // Texture updated callback;\n\n\n  this.onupdate = null;\n};\n\nEChartsSurface.prototype = {\n  constructor: EChartsSurface,\n  getTexture: function () {\n    return this._texture;\n  },\n  setECharts: function (chart) {\n    this._chart = chart;\n    var canvas = chart.getDom();\n\n    if (!(canvas instanceof HTMLCanvasElement)) {\n      console.error('ECharts must init on canvas if it is used as texture.'); // Use an empty canvas\n\n      canvas = document.createElement('canvas');\n    } else {\n      var self = this; // Wrap refreshImmediately\n\n      var zr = chart.getZr();\n      var oldRefreshImmediately = zr.__oldRefreshImmediately || zr.refreshImmediately;\n\n      zr.refreshImmediately = function () {\n        oldRefreshImmediately.call(this);\n\n        self._texture.dirty();\n\n        self.onupdate && self.onupdate();\n      };\n\n      zr.__oldRefreshImmediately = oldRefreshImmediately;\n    }\n\n    this._texture.image = canvas;\n\n    this._texture.dirty();\n\n    this.onupdate && this.onupdate();\n  },\n\n  /**\n   * @method\n   * @param {clay.Mesh} attachedMesh\n   * @param {Array.<number>} triangle Triangle indices\n   * @param {clay.math.Vector3} point\n   */\n  dispatchEvent: function () {\n    var p0 = new Vector3();\n    var p1 = new Vector3();\n    var p2 = new Vector3();\n    var uv0 = new Vector2();\n    var uv1 = new Vector2();\n    var uv2 = new Vector2();\n    var uv = new Vector2();\n    var vCross = new Vector3();\n    return function (eventName, attachedMesh, triangle, point) {\n      var geo = attachedMesh.geometry;\n      var position = geo.attributes.position;\n      var texcoord = geo.attributes.texcoord0;\n      var dot = Vector3.dot;\n      var cross = Vector3.cross;\n      position.get(triangle[0], p0.array);\n      position.get(triangle[1], p1.array);\n      position.get(triangle[2], p2.array);\n      texcoord.get(triangle[0], uv0.array);\n      texcoord.get(triangle[1], uv1.array);\n      texcoord.get(triangle[2], uv2.array);\n      cross(vCross, p1, p2);\n      var det = dot(p0, vCross);\n      var t = dot(point, vCross) / det;\n      cross(vCross, p2, p0);\n      var u = dot(point, vCross) / det;\n      cross(vCross, p0, p1);\n      var v = dot(point, vCross) / det;\n      Vector2.scale(uv, uv0, t);\n      Vector2.scaleAndAdd(uv, uv, uv1, u);\n      Vector2.scaleAndAdd(uv, uv, uv2, v);\n\n      var x = uv.x * this._chart.getWidth();\n\n      var y = uv.y * this._chart.getHeight();\n\n      this._chart.getZr().handler.dispatch(eventName, {\n        zrX: x,\n        zrY: y\n      });\n    };\n  }(),\n  attachToMesh: function (mesh) {\n    if (this._meshes.indexOf(mesh) >= 0) {\n      return;\n    }\n\n    events.forEach(function (eventName) {\n      mesh.on(eventName, this[makeHandlerName(eventName)], this);\n    }, this);\n\n    this._meshes.push(mesh);\n  },\n  detachFromMesh: function (mesh) {\n    var idx = this._meshes.indexOf(mesh);\n\n    if (idx >= 0) {\n      this._meshes.splice(idx, 1);\n    }\n\n    events.forEach(function (eventName) {\n      mesh.off(eventName, this[makeHandlerName(eventName)]);\n    }, this);\n  },\n  dispose: function () {\n    this._meshes.forEach(function (mesh) {\n      this.detachFromMesh(mesh);\n    }, this);\n  }\n};\nexport default EChartsSurface;","import Animator from 'zrender/lib/animation/Animator';\nvar animatableMixin = {\n  _animators: null,\n  getAnimators: function () {\n    this._animators = this._animators || [];\n    return this._animators;\n  },\n  animate: function (path, opts) {\n    this._animators = this._animators || [];\n    var el = this;\n    var target;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el;\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (target == null) {\n      throw new Error('Target ' + path + ' not exists');\n    }\n\n    var animators = this._animators;\n    var animator = new Animator(target, opts);\n    var self = this;\n    animator.during(function () {\n      if (self.__zr) {\n        self.__zr.refresh();\n      }\n    }).done(function () {\n      var idx = animators.indexOf(animator);\n\n      if (idx >= 0) {\n        animators.splice(idx, 1);\n      }\n    });\n    animators.push(animator);\n\n    if (this.__zr) {\n      this.__zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n  stopAnimation: function (forwardToLast) {\n    this._animators = this._animators || [];\n    var animators = this._animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n  addAnimatorsToZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.addAnimator(this._animators[i]);\n      }\n    }\n  },\n  removeAnimatorsFromZr: function (zr) {\n    if (this._animators) {\n      for (var i = 0; i < this._animators.length; i++) {\n        zr.animation.removeAnimator(this._animators[i]);\n      }\n    }\n  }\n};\nexport default animatableMixin;","export default \"\\n@export ecgl.common.transformUniforms\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nuniform mat4 world : WORLD;\\n@end\\n\\n@export ecgl.common.attributes\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 normal : NORMAL;\\n@end\\n\\n@export ecgl.common.uv.header\\nuniform vec2 uvRepeat : [1.0, 1.0];\\nuniform vec2 uvOffset : [0.0, 0.0];\\nuniform vec2 detailUvRepeat : [1.0, 1.0];\\nuniform vec2 detailUvOffset : [0.0, 0.0];\\n\\nvarying vec2 v_Texcoord;\\nvarying vec2 v_DetailTexcoord;\\n@end\\n\\n@export ecgl.common.uv.main\\nv_Texcoord = texcoord * uvRepeat + uvOffset;\\nv_DetailTexcoord = texcoord * detailUvRepeat + detailUvOffset;\\n@end\\n\\n@export ecgl.common.uv.fragmentHeader\\nvarying vec2 v_Texcoord;\\nvarying vec2 v_DetailTexcoord;\\n@end\\n\\n\\n@export ecgl.common.albedo.main\\n\\n vec4 albedoTexel = vec4(1.0);\\n#ifdef DIFFUSEMAP_ENABLED\\n albedoTexel = texture2D(diffuseMap, v_Texcoord);\\n #ifdef SRGB_DECODE\\n albedoTexel = sRGBToLinear(albedoTexel);\\n #endif\\n#endif\\n\\n#ifdef DETAILMAP_ENABLED\\n vec4 detailTexel = texture2D(detailMap, v_DetailTexcoord);\\n #ifdef SRGB_DECODE\\n detailTexel = sRGBToLinear(detailTexel);\\n #endif\\n albedoTexel.rgb = mix(albedoTexel.rgb, detailTexel.rgb, detailTexel.a);\\n albedoTexel.a = detailTexel.a + (1.0 - detailTexel.a) * albedoTexel.a;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.wireframe.vertexHeader\\n\\n#ifdef WIREFRAME_QUAD\\nattribute vec4 barycentric;\\nvarying vec4 v_Barycentric;\\n#elif defined(WIREFRAME_TRIANGLE)\\nattribute vec3 barycentric;\\nvarying vec3 v_Barycentric;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.wireframe.vertexMain\\n\\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\\n v_Barycentric = barycentric;\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.wireframe.fragmentHeader\\n\\nuniform float wireframeLineWidth : 1;\\nuniform vec4 wireframeLineColor: [0, 0, 0, 0.5];\\n\\n#ifdef WIREFRAME_QUAD\\nvarying vec4 v_Barycentric;\\nfloat edgeFactor () {\\n vec4 d = fwidth(v_Barycentric);\\n vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);\\n return min(min(min(a4.x, a4.y), a4.z), a4.w);\\n}\\n#elif defined(WIREFRAME_TRIANGLE)\\nvarying vec3 v_Barycentric;\\nfloat edgeFactor () {\\n vec3 d = fwidth(v_Barycentric);\\n vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);\\n return min(min(a3.x, a3.y), a3.z);\\n}\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.wireframe.fragmentMain\\n\\n#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)\\n if (wireframeLineWidth > 0.) {\\n vec4 lineColor = wireframeLineColor;\\n#ifdef SRGB_DECODE\\n lineColor = sRGBToLinear(lineColor);\\n#endif\\n\\n gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor()) * lineColor.a);\\n }\\n#endif\\n@end\\n\\n\\n\\n\\n@export ecgl.common.bumpMap.header\\n\\n#ifdef BUMPMAP_ENABLED\\nuniform sampler2D bumpMap;\\nuniform float bumpScale : 1.0;\\n\\n\\nvec3 bumpNormal(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)\\n{\\n vec2 dSTdx = dFdx(v_Texcoord);\\n vec2 dSTdy = dFdy(v_Texcoord);\\n\\n float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;\\n float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;\\n float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;\\n\\n vec3 vSigmaX = dFdx(surfPos);\\n vec3 vSigmaY = dFdy(surfPos);\\n vec3 vN = surfNormal;\\n\\n vec3 R1 = cross(vSigmaY, vN);\\n vec3 R2 = cross(vN, vSigmaX);\\n\\n float fDet = dot(vSigmaX, R1);\\n\\n vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);\\n return normalize(abs(fDet) * baseNormal - vGrad);\\n\\n}\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.vertexHeader\\n\\n#ifdef NORMALMAP_ENABLED\\nattribute vec4 tangent : TANGENT;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.vertexMain\\n\\n#ifdef NORMALMAP_ENABLED\\n if (dot(tangent, tangent) > 0.0) {\\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n }\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.normalMap.fragmentHeader\\n\\n#ifdef NORMALMAP_ENABLED\\nuniform sampler2D normalMap;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.normalMap.fragmentMain\\n#ifdef NORMALMAP_ENABLED\\n if (dot(v_Tangent, v_Tangent) > 0.0) {\\n vec3 normalTexel = texture2D(normalMap, v_DetailTexcoord).xyz;\\n if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;\\n mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);\\n N = normalize(tbn * N);\\n }\\n }\\n#endif\\n@end\\n\\n\\n\\n@export ecgl.common.vertexAnimation.header\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nattribute vec3 prevNormal;\\nuniform float percent;\\n#endif\\n\\n@end\\n\\n@export ecgl.common.vertexAnimation.main\\n\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n vec3 norm = mix(prevNormal, normal, percent);\\n#else\\n vec3 pos = position;\\n vec3 norm = normal;\\n#endif\\n\\n@end\\n\\n\\n@export ecgl.common.ssaoMap.header\\n#ifdef SSAOMAP_ENABLED\\nuniform sampler2D ssaoMap;\\nuniform vec4 viewport : VIEWPORT;\\n#endif\\n@end\\n\\n@export ecgl.common.ssaoMap.main\\n float ao = 1.0;\\n#ifdef SSAOMAP_ENABLED\\n ao = texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;\\n#endif\\n@end\\n\\n\\n\\n\\n@export ecgl.common.diffuseLayer.header\\n\\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\\nuniform float layerDiffuseIntensity[LAYER_DIFFUSEMAP_COUNT];\\nuniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];\\n#endif\\n\\n@end\\n\\n@export ecgl.common.emissiveLayer.header\\n\\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\\nuniform float layerEmissionIntensity[LAYER_EMISSIVEMAP_COUNT];\\nuniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];\\n#endif\\n\\n@end\\n\\n@export ecgl.common.layers.header\\n@import ecgl.common.diffuseLayer.header\\n@import ecgl.common.emissiveLayer.header\\n@end\\n\\n@export ecgl.common.diffuseLayer.main\\n\\n#if (LAYER_DIFFUSEMAP_COUNT > 0)\\n for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{\\n float intensity = layerDiffuseIntensity[_idx_];\\n vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);\\n #ifdef SRGB_DECODE\\n texel2 = sRGBToLinear(texel2);\\n #endif\\n albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb * intensity, texel2.a);\\n albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;\\n }}\\n#endif\\n\\n@end\\n\\n@export ecgl.common.emissiveLayer.main\\n\\n#if (LAYER_EMISSIVEMAP_COUNT > 0)\\n for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)\\n {{\\n vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * layerEmissionIntensity[_idx_];\\n #ifdef SRGB_DECODE\\n texel2 = sRGBToLinear(texel2);\\n #endif\\n float intensity = layerEmissionIntensity[_idx_];\\n gl_FragColor.rgb += texel2.rgb * texel2.a * intensity;\\n }}\\n#endif\\n\\n@end\\n\";","export default \"@export ecgl.color.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\n@import ecgl.common.uv.header\\n\\nattribute vec2 texcoord : TEXCOORD_0;\\nattribute vec3 position: POSITION;\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nuniform float percent : 1.0;\\n#endif\\n\\n#ifdef ATMOSPHERE_ENABLED\\nattribute vec3 normal: NORMAL;\\nuniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;\\nvarying vec3 v_Normal;\\n#endif\\n\\nvoid main()\\n{\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n#else\\n vec3 pos = position;\\n#endif\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n @import ecgl.common.uv.main\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n#ifdef ATMOSPHERE_ENABLED\\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n\\n}\\n\\n@end\\n\\n@export ecgl.color.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n\\nuniform sampler2D diffuseMap;\\nuniform sampler2D detailMap;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\nvarying vec3 v_Normal;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n@import ecgl.common.layers.header\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color);\\n#else\\n gl_FragColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n gl_FragColor *= albedoTexel;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n\\n}\\n@end\";","export default \"/**\\n * http: */\\n\\n@export ecgl.lambert.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n\\n@import ecgl.common.attributes\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.vertexAnimation.header\\n\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nvoid main()\\n{\\n @import ecgl.common.uv.main\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n}\\n\\n@end\\n\\n\\n@export ecgl.lambert.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform sampler2D diffuseMap;\\nuniform sampler2D detailMap;\\n\\n@import ecgl.common.layers.header\\n\\nuniform float emissionIntensity: 1.0;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\n#endif\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color);\\n#else\\n gl_FragColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n gl_FragColor *= sRGBToLinear(v_Color);\\n #else\\n gl_FragColor *= v_Color;\\n #endif\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n gl_FragColor *= albedoTexel;\\n\\n vec3 N = v_Normal;\\n#ifdef DOUBLE_SIDED\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n vec3 diffuseColor = vec3(0.0, 0.0, 0.0);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\\n {\\n diffuseColor += ambientLightColor[i] * ambientFactor * ao;\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseColor += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\\n }}\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n vec3 lightColor = directionalLightColor[i];\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n\\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\\n\\n diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);\\n }\\n#endif\\n\\n gl_FragColor.rgb *= diffuseColor;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","export default \"@export ecgl.realistic.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n@import ecgl.common.attributes\\n\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\n#ifdef NORMALMAP_ENABLED\\nattribute vec4 tangent : TANGENT;\\nvarying vec3 v_Tangent;\\nvarying vec3 v_Bitangent;\\n#endif\\n\\n@import ecgl.common.vertexAnimation.header\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nvoid main()\\n{\\n\\n @import ecgl.common.uv.main\\n\\n @import ecgl.common.vertexAnimation.main\\n\\n gl_Position = worldViewProjection * vec4(pos, 1.0);\\n\\n v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);\\n v_WorldPosition = (world * vec4(pos, 1.0)).xyz;\\n\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n\\n#ifdef NORMALMAP_ENABLED\\n v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);\\n v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);\\n#endif\\n\\n @import ecgl.common.wireframe.vertexMain\\n\\n}\\n\\n@end\\n\\n\\n\\n@export ecgl.realistic.fragment\\n\\n#define LAYER_DIFFUSEMAP_COUNT 0\\n#define LAYER_EMISSIVEMAP_COUNT 0\\n#define PI 3.14159265358979\\n#define ROUGHNESS_CHANEL 0\\n#define METALNESS_CHANEL 1\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform sampler2D diffuseMap;\\n\\nuniform sampler2D detailMap;\\nuniform sampler2D metalnessMap;\\nuniform sampler2D roughnessMap;\\n\\n@import ecgl.common.layers.header\\n\\nuniform float emissionIntensity: 1.0;\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform float metalness : 0.0;\\nuniform float roughness : 0.5;\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef ATMOSPHERE_ENABLED\\nuniform mat4 viewTranspose: VIEWTRANSPOSE;\\nuniform vec3 glowColor;\\nuniform float glowPower;\\n#endif\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n@import clay.header.ambient_cubemap_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n@import ecgl.common.normalMap.fragmentHeader\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import clay.util.rgbm\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvec3 F_Schlick(float ndv, vec3 spec) {\\n return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);\\n}\\n\\nfloat D_Phong(float g, float ndh) {\\n float a = pow(8192.0, g);\\n return (a + 2.0) / 8.0 * pow(ndh, a);\\n}\\n\\nvoid main()\\n{\\n vec4 albedoColor = color;\\n\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n albedoColor *= sRGBToLinear(v_Color);\\n #else\\n albedoColor *= v_Color;\\n #endif\\n#endif\\n\\n @import ecgl.common.albedo.main\\n\\n @import ecgl.common.diffuseLayer.main\\n\\n albedoColor *= albedoTexel;\\n\\n float m = metalness;\\n\\n#ifdef METALNESSMAP_ENABLED\\n float m2 = texture2D(metalnessMap, v_DetailTexcoord)[METALNESS_CHANEL];\\n m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);\\n#endif\\n\\n vec3 baseColor = albedoColor.rgb;\\n albedoColor.rgb = baseColor * (1.0 - m);\\n vec3 specFactor = mix(vec3(0.04), baseColor, m);\\n\\n float g = 1.0 - roughness;\\n\\n#ifdef ROUGHNESSMAP_ENABLED\\n float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];\\n g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);\\n#endif\\n\\n vec3 N = v_Normal;\\n\\n#ifdef DOUBLE_SIDED\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n@import ecgl.common.normalMap.fragmentMain\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n vec3 diffuseTerm = vec3(0.0);\\n vec3 specularTerm = vec3(0.0);\\n\\n float ndv = clamp(dot(N, V), 0.0, 1.0);\\n vec3 fresnelTerm = F_Schlick(ndv, specFactor);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += ambientLightColor[_idx_] * ambientFactor * ao;\\n }}\\n#endif\\n\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n diffuseTerm += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;\\n }}\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)\\n {{\\n vec3 L = -directionalLightDirection[_idx_];\\n vec3 lc = directionalLightColor[_idx_];\\n\\n vec3 H = normalize(L + V);\\n float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);\\n float ndh = clamp(dot(N, H), 0.0, 1.0);\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[_idx_];\\n }\\n#endif\\n\\n vec3 li = lc * ndl * shadowContrib;\\n\\n diffuseTerm += li;\\n specularTerm += li * fresnelTerm * D_Phong(g, ndh);\\n }}\\n#endif\\n\\n\\n#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT\\n vec3 L = reflect(-V, N);\\n L = vec3(L.x, L[NORMAL_UP_AXIS], L[NORMAL_FRONT_AXIS]);\\n float rough2 = clamp(1.0 - g, 0.0, 1.0);\\n float bias2 = rough2 * 5.0;\\n vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;\\n vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;\\n vec3 envTexel2;\\n for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)\\n {{\\n envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);\\n specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2 * ao;\\n }}\\n#endif\\n\\n gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;\\n gl_FragColor.a = albedoColor.a;\\n\\n#ifdef ATMOSPHERE_ENABLED\\n float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);\\n gl_FragColor.rgb += glowColor * atmoIntensity;\\n#endif\\n\\n#ifdef SRGB_ENCODE\\n gl_FragColor = linearTosRGB(gl_FragColor);\\n#endif\\n\\n @import ecgl.common.emissiveLayer.main\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","export default \"@export ecgl.hatching.vertex\\n\\n@import ecgl.realistic.vertex\\n\\n@end\\n\\n\\n@export ecgl.hatching.fragment\\n\\n#define NORMAL_UP_AXIS 1\\n#define NORMAL_FRONT_AXIS 2\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform vec4 color : [0.0, 0.0, 0.0, 1.0];\\nuniform vec4 paperColor : [1.0, 1.0, 1.0, 1.0];\\n\\nuniform mat4 viewInverse : VIEWINVERSE;\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n@import clay.header.ambient_light\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n@import clay.header.ambient_sh_light\\n#endif\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\n\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import ecgl.common.bumpMap.header\\n\\n@import clay.util.srgb\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.plugin.compute_shadow_map\\n\\nuniform sampler2D hatch1;\\nuniform sampler2D hatch2;\\nuniform sampler2D hatch3;\\nuniform sampler2D hatch4;\\nuniform sampler2D hatch5;\\nuniform sampler2D hatch6;\\n\\nfloat shade(in float tone) {\\n vec4 c = vec4(1. ,1., 1., 1.);\\n float step = 1. / 6.;\\n vec2 uv = v_DetailTexcoord;\\n if (tone <= step / 2.0) {\\n c = mix(vec4(0.), texture2D(hatch6, uv), 12. * tone);\\n }\\n else if (tone <= step) {\\n c = mix(texture2D(hatch6, uv), texture2D(hatch5, uv), 6. * tone);\\n }\\n if(tone > step && tone <= 2. * step){\\n c = mix(texture2D(hatch5, uv), texture2D(hatch4, uv) , 6. * (tone - step));\\n }\\n if(tone > 2. * step && tone <= 3. * step){\\n c = mix(texture2D(hatch4, uv), texture2D(hatch3, uv), 6. * (tone - 2. * step));\\n }\\n if(tone > 3. * step && tone <= 4. * step){\\n c = mix(texture2D(hatch3, uv), texture2D(hatch2, uv), 6. * (tone - 3. * step));\\n }\\n if(tone > 4. * step && tone <= 5. * step){\\n c = mix(texture2D(hatch2, uv), texture2D(hatch1, uv), 6. * (tone - 4. * step));\\n }\\n if(tone > 5. * step){\\n c = mix(texture2D(hatch1, uv), vec4(1.), 6. * (tone - 5. * step));\\n }\\n\\n return c.r;\\n}\\n\\nconst vec3 w = vec3(0.2125, 0.7154, 0.0721);\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n vec4 inkColor = sRGBToLinear(color);\\n#else\\n vec4 inkColor = color;\\n#endif\\n\\n#ifdef VERTEX_COLOR\\n #ifdef SRGB_DECODE\\n inkColor *= sRGBToLinear(v_Color);\\n #else\\n inkColor *= v_Color;\\n #endif\\n#endif\\n\\n vec3 N = v_Normal;\\n#ifdef DOUBLE_SIDED\\n vec3 eyePos = viewInverse[3].xyz;\\n vec3 V = normalize(eyePos - v_WorldPosition);\\n\\n if (dot(N, V) < 0.0) {\\n N = -N;\\n }\\n#endif\\n\\n float tone = 0.0;\\n\\n float ambientFactor = 1.0;\\n\\n#ifdef BUMPMAP_ENABLED\\n N = bumpNormal(v_WorldPosition, v_Normal, N);\\n ambientFactor = dot(v_Normal, N);\\n#endif\\n\\n vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#ifdef AMBIENT_LIGHT_COUNT\\n for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)\\n {\\n tone += dot(ambientLightColor[i], w) * ambientFactor * ao;\\n }\\n#endif\\n#ifdef AMBIENT_SH_LIGHT_COUNT\\n for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)\\n {{\\n tone += dot(calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_], w) * ao;\\n }}\\n#endif\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n#endif\\n for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)\\n {\\n vec3 lightDirection = -directionalLightDirection[i];\\n float lightTone = dot(directionalLightColor[i], w);\\n\\n float shadowContrib = 1.0;\\n#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n if (shadowEnabled)\\n {\\n shadowContrib = shadowContribsDir[i];\\n }\\n#endif\\n\\n float ndl = dot(N, normalize(lightDirection)) * shadowContrib;\\n\\n tone += lightTone * clamp(ndl, 0.0, 1.0);\\n }\\n#endif\\n\\n gl_FragColor = mix(inkColor, paperColor, shade(clamp(tone, 0.0, 1.0)));\\n }\\n@end\\n\";","export default \"@export ecgl.sm.depth.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec3 position : POSITION;\\nattribute vec2 texcoord : TEXCOORD_0;\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nuniform float percent : 1.0;\\n#endif\\n\\nvarying vec4 v_ViewPosition;\\nvarying vec2 v_Texcoord;\\n\\nvoid main(){\\n\\n#ifdef VERTEX_ANIMATION\\n vec3 pos = mix(prevPosition, position, percent);\\n#else\\n vec3 pos = position;\\n#endif\\n\\n v_ViewPosition = worldViewProjection * vec4(pos, 1.0);\\n gl_Position = v_ViewPosition;\\n\\n v_Texcoord = texcoord;\\n\\n}\\n@end\\n\\n\\n\\n@export ecgl.sm.depth.fragment\\n\\n@import clay.sm.depth.fragment\\n\\n@end\";","import Mesh from 'claygl/src/Mesh';\nimport Renderer from 'claygl/src/Renderer';\nimport Texture2D from 'claygl/src/Texture2D';\nimport Texture from 'claygl/src/Texture';\nimport Shader from 'claygl/src/Shader';\nimport Material from 'claygl/src/Material';\nimport Node3D from 'claygl/src/Node';\nimport Geometry from 'claygl/src/Geometry';\nimport * as echarts from 'echarts/lib/echarts';\nimport Scene from 'claygl/src/Scene';\nimport LRUCache from 'zrender/lib/core/LRU';\nimport textureUtil from 'claygl/src/util/texture';\nimport EChartsSurface from './EChartsSurface';\nimport AmbientCubemapLight from 'claygl/src/light/AmbientCubemap';\nimport AmbientSHLight from 'claygl/src/light/AmbientSH';\nimport shUtil from 'claygl/src/util/sh';\nimport retrieve from './retrieve';\nimport SphereGeometry from 'claygl/src/geometry/Sphere';\nimport PlaneGeometry from 'claygl/src/geometry/Plane';\nimport CubeGeometry from 'claygl/src/geometry/Cube';\nimport AmbientLight from 'claygl/src/light/Ambient';\nimport DirectionalLight from 'claygl/src/light/Directional';\nimport PointLight from 'claygl/src/light/Point';\nimport SpotLight from 'claygl/src/light/Spot';\nimport PerspectiveCamera from 'claygl/src/camera/Perspective';\nimport OrthographicCamera from 'claygl/src/camera/Orthographic'; // Math\n\nimport Vector2 from 'claygl/src/math/Vector2';\nimport Vector3 from 'claygl/src/math/Vector3';\nimport Vector4 from 'claygl/src/math/Vector4';\nimport Quaternion from 'claygl/src/math/Quaternion';\nimport Matrix2 from 'claygl/src/math/Matrix2';\nimport Matrix2d from 'claygl/src/math/Matrix2d';\nimport Matrix3 from 'claygl/src/math/Matrix3';\nimport Matrix4 from 'claygl/src/math/Matrix4';\nimport Plane from 'claygl/src/math/Plane';\nimport Ray from 'claygl/src/math/Ray';\nimport BoundingBox from 'claygl/src/math/BoundingBox';\nimport Frustum from 'claygl/src/math/Frustum';\nimport animatableMixin from './animatableMixin'; // Some common shaders\n\nimport utilGLSL from 'claygl/src/shader/source/util.glsl.js';\nimport prezGLSL from 'claygl/src/shader/source/prez.glsl.js';\nimport commonGLSL from './shader/common.glsl.js';\nimport colorGLSL from './shader/color.glsl.js';\nimport lambertGLSL from './shader/lambert.glsl.js';\nimport realisticGLSL from './shader/realistic.glsl.js';\nimport hatchingGLSL from './shader/hatching.glsl.js';\nimport shadowGLSL from './shader/shadow.glsl.js';\nObject.assign(Node3D.prototype, animatableMixin);\nShader.import(utilGLSL);\nShader.import(prezGLSL);\nShader.import(commonGLSL);\nShader.import(colorGLSL);\nShader.import(lambertGLSL);\nShader.import(realisticGLSL);\nShader.import(hatchingGLSL);\nShader.import(shadowGLSL);\n\nfunction isValueNone(value) {\n  return !value || value === 'none';\n}\n\nfunction isValueImage(value) {\n  return value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof Image;\n}\n\nfunction isECharts(value) {\n  return value.getZr && value.setOption;\n} // Overwrite addToScene and removeFromScene\n\n\nvar oldAddToScene = Scene.prototype.addToScene;\nvar oldRemoveFromScene = Scene.prototype.removeFromScene;\n\nScene.prototype.addToScene = function (node) {\n  oldAddToScene.call(this, node);\n\n  if (this.__zr) {\n    var zr = this.__zr;\n    node.traverse(function (child) {\n      child.__zr = zr;\n\n      if (child.addAnimatorsToZr) {\n        child.addAnimatorsToZr(zr);\n      }\n    });\n  }\n};\n\nScene.prototype.removeFromScene = function (node) {\n  oldRemoveFromScene.call(this, node);\n  node.traverse(function (child) {\n    var zr = child.__zr;\n    child.__zr = null;\n\n    if (zr && child.removeAnimatorsFromZr) {\n      child.removeAnimatorsFromZr(zr);\n    }\n  });\n};\n/**\n * @param {string} textureName\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [textureOpts]\n */\n\n\nMaterial.prototype.setTextureImage = function (textureName, imgValue, api, textureOpts) {\n  if (!this.shader) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var material = this;\n  var texture;\n  material.autoUpdateTextureStatus = false; // disableTexture first\n\n  material.disableTexture(textureName);\n\n  if (!isValueNone(imgValue)) {\n    texture = graphicGL.loadTexture(imgValue, api, textureOpts, function (texture) {\n      material.enableTexture(textureName);\n      zr && zr.refresh();\n    }); // Set texture immediately for other code to verify if have this texture.\n\n    material.set(textureName, texture);\n  }\n\n  return texture;\n};\n\nvar graphicGL = {};\ngraphicGL.Renderer = Renderer;\ngraphicGL.Node = Node3D;\ngraphicGL.Mesh = Mesh;\ngraphicGL.Shader = Shader;\ngraphicGL.Material = Material;\ngraphicGL.Texture = Texture;\ngraphicGL.Texture2D = Texture2D; // Geometries\n\ngraphicGL.Geometry = Geometry;\ngraphicGL.SphereGeometry = SphereGeometry;\ngraphicGL.PlaneGeometry = PlaneGeometry;\ngraphicGL.CubeGeometry = CubeGeometry; // Lights\n\ngraphicGL.AmbientLight = AmbientLight;\ngraphicGL.DirectionalLight = DirectionalLight;\ngraphicGL.PointLight = PointLight;\ngraphicGL.SpotLight = SpotLight; // Cameras\n\ngraphicGL.PerspectiveCamera = PerspectiveCamera;\ngraphicGL.OrthographicCamera = OrthographicCamera; // Math\n\ngraphicGL.Vector2 = Vector2;\ngraphicGL.Vector3 = Vector3;\ngraphicGL.Vector4 = Vector4;\ngraphicGL.Quaternion = Quaternion;\ngraphicGL.Matrix2 = Matrix2;\ngraphicGL.Matrix2d = Matrix2d;\ngraphicGL.Matrix3 = Matrix3;\ngraphicGL.Matrix4 = Matrix4;\ngraphicGL.Plane = Plane;\ngraphicGL.Ray = Ray;\ngraphicGL.BoundingBox = BoundingBox;\ngraphicGL.Frustum = Frustum; // Texture utilities\n\nvar blankImage = null;\n\nfunction getBlankImage() {\n  if (blankImage !== null) {\n    return blankImage;\n  }\n\n  blankImage = textureUtil.createBlank('rgba(255,255,255,0)').image;\n  return blankImage;\n}\n\nfunction nearestPowerOfTwo(val) {\n  return Math.pow(2, Math.round(Math.log(val) / Math.LN2));\n}\n\nfunction convertTextureToPowerOfTwo(texture) {\n  if ((texture.wrapS === Texture.REPEAT || texture.wrapT === Texture.REPEAT) && texture.image) {\n    // var canvas = document.createElement('canvas');\n    var width = nearestPowerOfTwo(texture.width);\n    var height = nearestPowerOfTwo(texture.height);\n\n    if (width !== texture.width || height !== texture.height) {\n      var canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(texture.image, 0, 0, width, height);\n      texture.image = canvas;\n    }\n  }\n}\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement} imgValue\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [textureOpts]\n * @param {Function} cb\n */\n// TODO Promise, test\n\n\ngraphicGL.loadTexture = function (imgValue, api, textureOpts, cb) {\n  if (typeof textureOpts === 'function') {\n    cb = textureOpts;\n    textureOpts = {};\n  }\n\n  textureOpts = textureOpts || {};\n  var keys = Object.keys(textureOpts).sort();\n  var prefix = '';\n\n  for (var i = 0; i < keys.length; i++) {\n    prefix += keys[i] + '_' + textureOpts[keys[i]] + '_';\n  }\n\n  var textureCache = api.__textureCache = api.__textureCache || new LRUCache(20);\n\n  if (isECharts(imgValue)) {\n    var id = imgValue.__textureid__;\n    var textureObj = textureCache.get(prefix + id);\n\n    if (!textureObj) {\n      var surface = new EChartsSurface(imgValue);\n\n      surface.onupdate = function () {\n        api.getZr().refresh();\n      };\n\n      textureObj = {\n        texture: surface.getTexture()\n      };\n\n      for (var i = 0; i < keys.length; i++) {\n        textureObj.texture[keys[i]] = textureOpts[keys[i]];\n      }\n\n      id = imgValue.__textureid__ || '__ecgl_ec__' + textureObj.texture.__uid__;\n      imgValue.__textureid__ = id;\n      textureCache.put(prefix + id, textureObj);\n      cb && cb(textureObj.texture);\n    } else {\n      textureObj.texture.surface.setECharts(imgValue);\n      cb && cb(textureObj.texture);\n    }\n\n    return textureObj.texture;\n  } else if (isValueImage(imgValue)) {\n    var id = imgValue.__textureid__;\n    var textureObj = textureCache.get(prefix + id);\n\n    if (!textureObj) {\n      textureObj = {\n        texture: new graphicGL.Texture2D({\n          image: imgValue\n        })\n      };\n\n      for (var i = 0; i < keys.length; i++) {\n        textureObj.texture[keys[i]] = textureOpts[keys[i]];\n      }\n\n      id = imgValue.__textureid__ || '__ecgl_image__' + textureObj.texture.__uid__;\n      imgValue.__textureid__ = id;\n      textureCache.put(prefix + id, textureObj);\n      convertTextureToPowerOfTwo(textureObj.texture); // TODO Next tick?\n\n      cb && cb(textureObj.texture);\n    }\n\n    return textureObj.texture;\n  } else {\n    var textureObj = textureCache.get(prefix + imgValue);\n\n    if (textureObj) {\n      if (textureObj.callbacks) {\n        // Add to pending callbacks\n        textureObj.callbacks.push(cb);\n      } else {\n        // TODO Next tick?\n        cb && cb(textureObj.texture);\n      }\n    } else {\n      // Maybe base64\n      if (imgValue.match(/.hdr$|^data:application\\/octet-stream/)) {\n        textureObj = {\n          callbacks: [cb]\n        };\n        var texture = textureUtil.loadTexture(imgValue, {\n          exposure: textureOpts.exposure,\n          fileType: 'hdr'\n        }, function () {\n          texture.dirty();\n          textureObj.callbacks.forEach(function (cb) {\n            cb && cb(texture);\n          });\n          textureObj.callbacks = null;\n        });\n        textureObj.texture = texture;\n        textureCache.put(prefix + imgValue, textureObj);\n      } else {\n        var texture = new graphicGL.Texture2D({\n          image: new Image()\n        });\n\n        for (var i = 0; i < keys.length; i++) {\n          texture[keys[i]] = textureOpts[keys[i]];\n        }\n\n        textureObj = {\n          texture: texture,\n          callbacks: [cb]\n        };\n        var originalImage = texture.image;\n\n        originalImage.onload = function () {\n          texture.image = originalImage;\n          convertTextureToPowerOfTwo(texture);\n          texture.dirty();\n          textureObj.callbacks.forEach(function (cb) {\n            cb && cb(texture);\n          });\n          textureObj.callbacks = null;\n        };\n\n        originalImage.crossOrigin = 'Anonymous';\n        originalImage.src = imgValue; // Use blank image as place holder.\n\n        texture.image = getBlankImage();\n        textureCache.put(prefix + imgValue, textureObj);\n      }\n    }\n\n    return textureObj.texture;\n  }\n};\n/**\n * Create ambientCubemap and ambientSH light. respectively to have specular and diffuse light\n * @return {Object} { specular, diffuse }\n */\n\n\ngraphicGL.createAmbientCubemap = function (opt, renderer, api, cb) {\n  opt = opt || {};\n  var textureUrl = opt.texture;\n  var exposure = retrieve.firstNotNull(opt.exposure, 1.0);\n  var ambientCubemap = new AmbientCubemapLight({\n    intensity: retrieve.firstNotNull(opt.specularIntensity, 1.0)\n  });\n  var ambientSH = new AmbientSHLight({\n    intensity: retrieve.firstNotNull(opt.diffuseIntensity, 1.0),\n    coefficients: [0.844, 0.712, 0.691, -0.037, 0.083, 0.167, 0.343, 0.288, 0.299, -0.041, -0.021, -0.009, -0.003, -0.041, -0.064, -0.011, -0.007, -0.004, -0.031, 0.034, 0.081, -0.060, -0.049, -0.060, 0.046, 0.056, 0.050]\n  });\n  ambientCubemap.cubemap = graphicGL.loadTexture(textureUrl, api, {\n    exposure: exposure\n  }, function () {\n    // TODO Performance when multiple view\n    ambientCubemap.cubemap.flipY = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var time = Date.now();\n    }\n\n    ambientCubemap.prefilter(renderer, 32);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var dTime = Date.now() - time;\n      console.log('Prefilter environment map: ' + dTime + 'ms');\n    }\n\n    ambientSH.coefficients = shUtil.projectEnvironmentMap(renderer, ambientCubemap.cubemap, {\n      lod: 1\n    });\n    cb && cb(); // TODO Refresh ?\n  });\n  return {\n    specular: ambientCubemap,\n    diffuse: ambientSH\n  };\n};\n/**\n * Create a blank texture for placeholder\n */\n\n\ngraphicGL.createBlankTexture = textureUtil.createBlank;\n/**\n * If value is image\n * @param {*}\n * @return {boolean}\n */\n\ngraphicGL.isImage = isValueImage;\n\ngraphicGL.additiveBlend = function (gl) {\n  gl.blendEquation(gl.FUNC_ADD);\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n};\n/**\n * @param {string|Array.<number>} colorStr\n * @param {Array.<number>} [rgba]\n * @return {Array.<number>} rgba\n */\n\n\ngraphicGL.parseColor = function (colorStr, rgba) {\n  if (colorStr instanceof Array) {\n    if (!rgba) {\n      rgba = [];\n    } // Color has been parsed.\n\n\n    rgba[0] = colorStr[0];\n    rgba[1] = colorStr[1];\n    rgba[2] = colorStr[2];\n\n    if (colorStr.length > 3) {\n      rgba[3] = colorStr[3];\n    } else {\n      rgba[3] = 1;\n    }\n\n    return rgba;\n  }\n\n  rgba = echarts.color.parse(colorStr || '#000', rgba) || [0, 0, 0, 0];\n  rgba[0] /= 255;\n  rgba[1] /= 255;\n  rgba[2] /= 255;\n  return rgba;\n};\n/**\n * Convert alpha beta rotation to direction.\n * @param {number} alpha\n * @param {number} beta\n * @return {Array.<number>}\n */\n\n\ngraphicGL.directionFromAlphaBeta = function (alpha, beta) {\n  var theta = alpha / 180 * Math.PI + Math.PI / 2;\n  var phi = -beta / 180 * Math.PI + Math.PI / 2;\n  var dir = [];\n  var r = Math.sin(theta);\n  dir[0] = r * Math.cos(phi);\n  dir[1] = -Math.cos(theta);\n  dir[2] = r * Math.sin(phi);\n  return dir;\n};\n/**\n * Get shadow resolution from shadowQuality configuration\n */\n\n\ngraphicGL.getShadowResolution = function (shadowQuality) {\n  var shadowResolution = 1024;\n\n  switch (shadowQuality) {\n    case 'low':\n      shadowResolution = 512;\n      break;\n\n    case 'medium':\n      break;\n\n    case 'high':\n      shadowResolution = 2048;\n      break;\n\n    case 'ultra':\n      shadowResolution = 4096;\n      break;\n  }\n\n  return shadowResolution;\n};\n/**\n * Shading utilities\n */\n\n\ngraphicGL.COMMON_SHADERS = ['lambert', 'color', 'realistic', 'hatching', 'shadow'];\n/**\n * Create shader including vertex and fragment\n * @param {string} prefix.\n */\n\ngraphicGL.createShader = function (prefix) {\n  if (prefix === 'ecgl.shadow') {\n    prefix = 'ecgl.displayShadow';\n  }\n\n  var vertexShaderStr = Shader.source(prefix + '.vertex');\n  var fragmentShaderStr = Shader.source(prefix + '.fragment');\n\n  if (!vertexShaderStr) {\n    console.error('Vertex shader of \\'%s\\' not exits', prefix);\n  }\n\n  if (!fragmentShaderStr) {\n    console.error('Fragment shader of \\'%s\\' not exits', prefix);\n  }\n\n  var shader = new Shader(vertexShaderStr, fragmentShaderStr);\n  shader.name = prefix;\n  return shader;\n};\n\ngraphicGL.createMaterial = function (prefix, defines) {\n  if (!(defines instanceof Array)) {\n    defines = [defines];\n  }\n\n  var shader = graphicGL.createShader(prefix);\n  var material = new Material({\n    shader: shader\n  });\n  defines.forEach(function (defineName) {\n    if (typeof defineName === 'string') {\n      material.define(defineName);\n    }\n  });\n  return material;\n};\n/**\n * Set material from model.\n * @param {clay.Material} material\n * @param {module:echarts/model/Model} model\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngraphicGL.setMaterialFromModel = function (shading, material, model, api) {\n  material.autoUpdateTextureStatus = false;\n  var materialModel = model.getModel(shading + 'Material');\n  var detailTexture = materialModel.get('detailTexture');\n  var uvRepeat = retrieve.firstNotNull(materialModel.get('textureTiling'), 1.0);\n  var uvOffset = retrieve.firstNotNull(materialModel.get('textureOffset'), 0.0);\n\n  if (typeof uvRepeat === 'number') {\n    uvRepeat = [uvRepeat, uvRepeat];\n  }\n\n  if (typeof uvOffset === 'number') {\n    uvOffset = [uvOffset, uvOffset];\n  }\n\n  var repeatParam = uvRepeat[0] > 1 || uvRepeat[1] > 1 ? graphicGL.Texture.REPEAT : graphicGL.Texture.CLAMP_TO_EDGE;\n  var textureOpt = {\n    anisotropic: 8,\n    wrapS: repeatParam,\n    wrapT: repeatParam\n  };\n\n  if (shading === 'realistic') {\n    var roughness = materialModel.get('roughness');\n    var metalness = materialModel.get('metalness');\n\n    if (metalness != null) {\n      // Try to treat as a texture, TODO More check\n      if (isNaN(metalness)) {\n        material.setTextureImage('metalnessMap', metalness, api, textureOpt);\n        metalness = retrieve.firstNotNull(materialModel.get('metalnessAdjust'), 0.5);\n      }\n    } else {\n      // Default metalness.\n      metalness = 0;\n    }\n\n    if (roughness != null) {\n      // Try to treat as a texture, TODO More check\n      if (isNaN(roughness)) {\n        material.setTextureImage('roughnessMap', roughness, api, textureOpt);\n        roughness = retrieve.firstNotNull(materialModel.get('roughnessAdjust'), 0.5);\n      }\n    } else {\n      // Default roughness.\n      roughness = 0.5;\n    }\n\n    var normalTextureVal = materialModel.get('normalTexture');\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.setTextureImage('normalMap', normalTextureVal, api, textureOpt);\n    material.set({\n      roughness: roughness,\n      metalness: metalness,\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    }); // var normalTexture = material.get('normalMap');\n    // if (normalTexture) {\n    // PENDING\n    // normalTexture.format = Texture.SRGB;\n    // }\n  } else if (shading === 'lambert') {\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  } else if (shading === 'color') {\n    material.setTextureImage('detailMap', detailTexture, api, textureOpt);\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  } else if (shading === 'hatching') {\n    var tams = materialModel.get('hatchingTextures') || [];\n\n    if (tams.length < 6) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Invalid hatchingTextures.');\n      }\n    }\n\n    for (var i = 0; i < 6; i++) {\n      material.setTextureImage('hatch' + (i + 1), tams[i], api, {\n        anisotropic: 8,\n        wrapS: graphicGL.Texture.REPEAT,\n        wrapT: graphicGL.Texture.REPEAT\n      });\n    }\n\n    material.set({\n      detailUvRepeat: uvRepeat,\n      detailUvOffset: uvOffset\n    });\n  }\n};\n\ngraphicGL.updateVertexAnimation = function (mappingAttributes, previousMesh, currentMesh, seriesModel) {\n  var enableAnimation = seriesModel.get('animation');\n  var duration = seriesModel.get('animationDurationUpdate');\n  var easing = seriesModel.get('animationEasingUpdate');\n  var shadowDepthMaterial = currentMesh.shadowDepthMaterial;\n\n  if (enableAnimation && previousMesh && duration > 0 // Only animate when bar count are not changed\n  && previousMesh.geometry.vertexCount === currentMesh.geometry.vertexCount) {\n    currentMesh.material.define('vertex', 'VERTEX_ANIMATION');\n    currentMesh.ignorePreZ = true;\n\n    if (shadowDepthMaterial) {\n      shadowDepthMaterial.define('vertex', 'VERTEX_ANIMATION');\n    }\n\n    for (var i = 0; i < mappingAttributes.length; i++) {\n      currentMesh.geometry.attributes[mappingAttributes[i][0]].value = previousMesh.geometry.attributes[mappingAttributes[i][1]].value;\n    }\n\n    currentMesh.geometry.dirty();\n    currentMesh.__percent = 0;\n    currentMesh.material.set('percent', 0);\n    currentMesh.stopAnimation();\n    currentMesh.animate().when(duration, {\n      __percent: 1\n    }).during(function () {\n      currentMesh.material.set('percent', currentMesh.__percent);\n\n      if (shadowDepthMaterial) {\n        shadowDepthMaterial.set('percent', currentMesh.__percent);\n      }\n    }).done(function () {\n      currentMesh.ignorePreZ = false;\n      currentMesh.material.undefine('vertex', 'VERTEX_ANIMATION');\n\n      if (shadowDepthMaterial) {\n        shadowDepthMaterial.undefine('vertex', 'VERTEX_ANIMATION');\n      }\n    }).start(easing);\n  } else {\n    currentMesh.material.undefine('vertex', 'VERTEX_ANIMATION');\n\n    if (shadowDepthMaterial) {\n      shadowDepthMaterial.undefine('vertex', 'VERTEX_ANIMATION');\n    }\n  }\n};\n\nexport default graphicGL;","/**\n * Geometry collecting sprites\n *\n * @module echarts-gl/util/geometry/Sprites\n * @author Yi Shen(https://github.com/pissang)\n */\nimport * as echarts from 'echarts/lib/echarts';\nimport Geometry from 'claygl/src/Geometry';\nimport dynamicConvertMixin from './dynamicConvertMixin';\nvar squareTriangles = [0, 1, 2, 0, 2, 3];\nvar SpritesGeometry = Geometry.extend(function () {\n  return {\n    attributes: {\n      position: new Geometry.Attribute('position', 'float', 3, 'POSITION'),\n      texcoord: new Geometry.Attribute('texcoord', 'float', 2, 'TEXCOORD_0'),\n      offset: new Geometry.Attribute('offset', 'float', 2),\n      color: new Geometry.Attribute('color', 'float', 4, 'COLOR')\n    }\n  };\n}, {\n  resetOffset: function () {\n    this._vertexOffset = 0;\n    this._faceOffset = 0;\n  },\n  setSpriteCount: function (spriteCount) {\n    this._spriteCount = spriteCount;\n    var vertexCount = spriteCount * 4;\n    var triangleCount = spriteCount * 2;\n\n    if (this.vertexCount !== vertexCount) {\n      this.attributes.position.init(vertexCount);\n      this.attributes.offset.init(vertexCount);\n      this.attributes.color.init(vertexCount);\n    }\n\n    if (this.triangleCount !== triangleCount) {\n      this.indices = vertexCount > 0xffff ? new Uint32Array(triangleCount * 3) : new Uint16Array(triangleCount * 3);\n    }\n  },\n  setSpriteAlign: function (spriteOffset, size, align, verticalAlign, margin) {\n    if (align == null) {\n      align = 'left';\n    }\n\n    if (verticalAlign == null) {\n      verticalAlign = 'top';\n    }\n\n    var leftOffset, topOffset, rightOffset, bottomOffset;\n    margin = margin || 0;\n\n    switch (align) {\n      case 'left':\n        leftOffset = margin;\n        rightOffset = size[0] + margin;\n        break;\n\n      case 'center':\n      case 'middle':\n        leftOffset = -size[0] / 2;\n        rightOffset = size[0] / 2;\n        break;\n\n      case 'right':\n        leftOffset = -size[0] - margin;\n        rightOffset = -margin;\n        break;\n    }\n\n    switch (verticalAlign) {\n      case 'bottom':\n        topOffset = margin;\n        bottomOffset = size[1] + margin;\n        break;\n\n      case 'middle':\n        topOffset = -size[1] / 2;\n        bottomOffset = size[1] / 2;\n        break;\n\n      case 'top':\n        topOffset = -size[1] - margin;\n        bottomOffset = -margin;\n        break;\n    } // 3----2\n    // 0----1\n\n\n    var vertexOffset = spriteOffset * 4;\n    var offsetAttr = this.attributes.offset;\n    offsetAttr.set(vertexOffset, [leftOffset, bottomOffset]);\n    offsetAttr.set(vertexOffset + 1, [rightOffset, bottomOffset]);\n    offsetAttr.set(vertexOffset + 2, [rightOffset, topOffset]);\n    offsetAttr.set(vertexOffset + 3, [leftOffset, topOffset]);\n  },\n\n  /**\n   * Add sprite\n   * @param {Array.<number>} position\n   * @param {Array.<number>} size [width, height]\n   * @param {Array.<Array>} coords [leftBottom, rightTop]\n   * @param {string} [align='left'] 'left' 'center' 'right'\n   * @param {string} [verticalAlign='top'] 'top' 'middle' 'bottom'\n   * @param {number} [screenMargin=0]\n   */\n  addSprite: function (position, size, coords, align, verticalAlign, screenMargin) {\n    var vertexOffset = this._vertexOffset;\n    this.setSprite(this._vertexOffset / 4, position, size, coords, align, verticalAlign, screenMargin);\n\n    for (var i = 0; i < squareTriangles.length; i++) {\n      this.indices[this._faceOffset * 3 + i] = squareTriangles[i] + vertexOffset;\n    }\n\n    this._faceOffset += 2;\n    this._vertexOffset += 4;\n    return vertexOffset / 4;\n  },\n  setSprite: function (spriteOffset, position, size, coords, align, verticalAlign, screenMargin) {\n    var vertexOffset = spriteOffset * 4;\n    var attributes = this.attributes;\n\n    for (var i = 0; i < 4; i++) {\n      attributes.position.set(vertexOffset + i, position);\n    } // 3----2\n    // 0----1\n\n\n    var texcoordAttr = attributes.texcoord;\n    texcoordAttr.set(vertexOffset, [coords[0][0], coords[0][1]]);\n    texcoordAttr.set(vertexOffset + 1, [coords[1][0], coords[0][1]]);\n    texcoordAttr.set(vertexOffset + 2, [coords[1][0], coords[1][1]]);\n    texcoordAttr.set(vertexOffset + 3, [coords[0][0], coords[1][1]]);\n    this.setSpriteAlign(spriteOffset, size, align, verticalAlign, screenMargin);\n  }\n});\necharts.util.defaults(SpritesGeometry.prototype, dynamicConvertMixin);\nexport default SpritesGeometry;","export default \"@export ecgl.labels.vertex\\n\\nattribute vec3 position: POSITION;\\nattribute vec2 texcoord: TEXCOORD_0;\\nattribute vec2 offset;\\n#ifdef VERTEX_COLOR\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n#endif\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main()\\n{\\n vec4 proj = worldViewProjection * vec4(position, 1.0);\\n\\n vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;\\n\\n screen += offset;\\n\\n proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);\\n gl_Position = proj;\\n#ifdef VERTEX_COLOR\\n v_Color = a_Color;\\n#endif\\n v_Texcoord = texcoord;\\n}\\n@end\\n\\n\\n@export ecgl.labels.fragment\\n\\nuniform vec3 color : [1.0, 1.0, 1.0];\\nuniform float alpha : 1.0;\\nuniform sampler2D textureAtlas;\\nuniform vec2 uvScale: [1.0, 1.0];\\n\\n#ifdef VERTEX_COLOR\\nvarying vec4 v_Color;\\n#endif\\nvarying float v_Miter;\\n\\nvarying vec2 v_Texcoord;\\n\\nvoid main()\\n{\\n gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord * uvScale);\\n#ifdef VERTEX_COLOR\\n gl_FragColor *= v_Color;\\n#endif\\n}\\n\\n@end\";","import graphicGL from '../graphicGL';\nimport SpritesGeometry from '../geometry/Sprites';\nimport labelsGLSL from '../shader/labels.glsl.js';\ngraphicGL.Shader.import(labelsGLSL);\nexport default graphicGL.Mesh.extend(function () {\n  var geometry = new SpritesGeometry({\n    dynamic: true\n  });\n  var material = new graphicGL.Material({\n    shader: graphicGL.createShader('ecgl.labels'),\n    transparent: true,\n    depthMask: false\n  });\n  return {\n    geometry: geometry,\n    material: material,\n    culling: false,\n    castShadow: false,\n    ignorePicking: true\n  };\n});","import * as echarts from 'echarts/lib/echarts';\nvar retrieve = {\n  firstNotNull: function () {\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      if (arguments[i] != null) {\n        return arguments[i];\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n   *                         each of which can be Array or primary type.\n   * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n   */\n  queryDataIndex: function (data, payload) {\n    if (payload.dataIndexInside != null) {\n      return payload.dataIndexInside;\n    } else if (payload.dataIndex != null) {\n      return echarts.util.isArray(payload.dataIndex) ? echarts.util.map(payload.dataIndex, function (value) {\n        return data.indexOfRawIndex(value);\n      }) : data.indexOfRawIndex(payload.dataIndex);\n    } else if (payload.name != null) {\n      return echarts.util.isArray(payload.name) ? echarts.util.map(payload.name, function (value) {\n        return data.indexOfName(value);\n      }) : data.indexOfName(payload.name);\n    }\n  }\n};\nexport default retrieve;","export default \"\\n@export ecgl.displayShadow.vertex\\n\\n@import ecgl.common.transformUniforms\\n\\n@import ecgl.common.uv.header\\n\\n@import ecgl.common.attributes\\n\\nvarying vec3 v_WorldPosition;\\n\\nvarying vec3 v_Normal;\\n\\nvoid main()\\n{\\n @import ecgl.common.uv.main\\n v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);\\n\\n v_WorldPosition = (world * vec4(position, 1.0)).xyz;\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n}\\n\\n@end\\n\\n\\n@export ecgl.displayShadow.fragment\\n\\n@import ecgl.common.uv.fragmentHeader\\n\\nvarying vec3 v_Normal;\\nvarying vec3 v_WorldPosition;\\n\\nuniform float roughness: 0.2;\\n\\n#ifdef DIRECTIONAL_LIGHT_COUNT\\n@import clay.header.directional_light\\n#endif\\n\\n@import ecgl.common.ssaoMap.header\\n\\n@import clay.plugin.compute_shadow_map\\n\\nvoid main()\\n{\\n float shadow = 1.0;\\n\\n @import ecgl.common.ssaoMap.main\\n\\n#if defined(DIRECTIONAL_LIGHT_COUNT) && defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)\\n float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];\\n if(shadowEnabled)\\n {\\n computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);\\n }\\n for (int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++) {\\n shadow = min(shadow, shadowContribsDir[i] * 0.5 + 0.5);\\n }\\n#endif\\n\\n shadow *= 0.5 + ao * 0.5;\\n shadow = clamp(shadow, 0.0, 1.0);\\n\\n gl_FragColor = vec4(vec3(0.0), 1.0 - shadow);\\n}\\n\\n@end\";","export default \"@export ecgl.lines2D.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec2 position: POSITION;\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n\\n#ifdef POSITIONTEXTURE_ENABLED\\nuniform sampler2D positionTexture;\\n#endif\\n\\nvoid main()\\n{\\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\\n\\n v_Color = a_Color;\\n}\\n\\n@end\\n\\n@export ecgl.lines2D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\n\\nvoid main()\\n{\\n gl_FragColor = color * v_Color;\\n}\\n@end\\n\\n\\n@export ecgl.meshLines2D.vertex\\n\\nattribute vec2 position: POSITION;\\nattribute vec2 normal;\\nattribute float offset;\\nattribute vec4 a_Color : COLOR;\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\n\\nvarying vec4 v_Color;\\nvarying float v_Miter;\\n\\nvoid main()\\n{\\n vec4 p2 = worldViewProjection * vec4(position + normal, -10.0, 1.0);\\n gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);\\n\\n p2.xy /= p2.w;\\n gl_Position.xy /= gl_Position.w;\\n\\n vec2 N = normalize(p2.xy - gl_Position.xy);\\n gl_Position.xy += N * offset / viewport.zw * 2.0;\\n\\n gl_Position.xy *= gl_Position.w;\\n\\n v_Color = a_Color;\\n}\\n@end\\n\\n\\n@export ecgl.meshLines2D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\nvarying float v_Miter;\\n\\nvoid main()\\n{\\n gl_FragColor = color * v_Color;\\n}\\n\\n@end\";","export default \"@export ecgl.lines3D.vertex\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\n\\nattribute vec3 position: POSITION;\\nattribute vec4 a_Color : COLOR;\\nvarying vec4 v_Color;\\n\\nvoid main()\\n{\\n gl_Position = worldViewProjection * vec4(position, 1.0);\\n v_Color = a_Color;\\n}\\n\\n@end\\n\\n@export ecgl.lines3D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color * v_Color);\\n#else\\n gl_FragColor = color * v_Color;\\n#endif\\n}\\n@end\\n\\n\\n\\n@export ecgl.lines3D.clipNear\\n\\nvec4 clipNear(vec4 p1, vec4 p2) {\\n float n = (p1.w - near) / (p1.w - p2.w);\\n return vec4(mix(p1.xy, p2.xy, n), -near, near);\\n}\\n\\n@end\\n\\n@export ecgl.lines3D.expandLine\\n#ifdef VERTEX_ANIMATION\\n vec4 prevProj = worldViewProjection * vec4(mix(prevPositionPrev, positionPrev, percent), 1.0);\\n vec4 currProj = worldViewProjection * vec4(mix(prevPosition, position, percent), 1.0);\\n vec4 nextProj = worldViewProjection * vec4(mix(prevPositionNext, positionNext, percent), 1.0);\\n#else\\n vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);\\n vec4 currProj = worldViewProjection * vec4(position, 1.0);\\n vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);\\n#endif\\n\\n if (currProj.w < 0.0) {\\n if (nextProj.w > 0.0) {\\n currProj = clipNear(currProj, nextProj);\\n }\\n else if (prevProj.w > 0.0) {\\n currProj = clipNear(currProj, prevProj);\\n }\\n }\\n\\n vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;\\n vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;\\n vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;\\n\\n vec2 dir;\\n float len = offset;\\n if (position == positionPrev) {\\n dir = normalize(nextScreen - currScreen);\\n }\\n else if (position == positionNext) {\\n dir = normalize(currScreen - prevScreen);\\n }\\n else {\\n vec2 dirA = normalize(currScreen - prevScreen);\\n vec2 dirB = normalize(nextScreen - currScreen);\\n\\n vec2 tanget = normalize(dirA + dirB);\\n\\n float miter = 1.0 / max(dot(tanget, dirA), 0.5);\\n len *= miter;\\n dir = tanget;\\n }\\n\\n dir = vec2(-dir.y, dir.x) * len;\\n currScreen += dir;\\n\\n currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);\\n@end\\n\\n\\n@export ecgl.meshLines3D.vertex\\n\\nattribute vec3 position: POSITION;\\nattribute vec3 positionPrev;\\nattribute vec3 positionNext;\\nattribute float offset;\\nattribute vec4 a_Color : COLOR;\\n\\n#ifdef VERTEX_ANIMATION\\nattribute vec3 prevPosition;\\nattribute vec3 prevPositionPrev;\\nattribute vec3 prevPositionNext;\\nuniform float percent : 1.0;\\n#endif\\n\\nuniform mat4 worldViewProjection : WORLDVIEWPROJECTION;\\nuniform vec4 viewport : VIEWPORT;\\nuniform float near : NEAR;\\n\\nvarying vec4 v_Color;\\n\\n@import ecgl.common.wireframe.vertexHeader\\n\\n@import ecgl.lines3D.clipNear\\n\\nvoid main()\\n{\\n @import ecgl.lines3D.expandLine\\n\\n gl_Position = currProj;\\n\\n v_Color = a_Color;\\n\\n @import ecgl.common.wireframe.vertexMain\\n}\\n@end\\n\\n\\n@export ecgl.meshLines3D.fragment\\n\\nuniform vec4 color : [1.0, 1.0, 1.0, 1.0];\\n\\nvarying vec4 v_Color;\\n\\n@import ecgl.common.wireframe.fragmentHeader\\n\\n@import clay.util.srgb\\n\\nvoid main()\\n{\\n#ifdef SRGB_DECODE\\n gl_FragColor = sRGBToLinear(color * v_Color);\\n#else\\n gl_FragColor = color * v_Color;\\n#endif\\n\\n @import ecgl.common.wireframe.fragmentMain\\n}\\n\\n@end\";","import * as echarts from 'echarts/lib/echarts';\n\nfunction makeSprite(size, canvas, draw) {\n  // http://simonsarris.com/blog/346-how-you-clear-your-canvas-matters\n  // http://jsperf.com/canvasclear\n  // Set width and height is fast\n  // And use the exist canvas if possible\n  // http://jsperf.com/create-canvas-vs-set-width-height/2\n  var canvas = canvas || document.createElement('canvas');\n  canvas.width = size;\n  canvas.height = size;\n  var ctx = canvas.getContext('2d');\n  draw && draw(ctx);\n  return canvas;\n}\n\nfunction makePath(symbol, symbolSize, style, marginBias) {\n  if (!echarts.util.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var margin = spriteUtil.getMarginByStyle(style, marginBias);\n  var width = symbolSize[0] + margin.left + margin.right;\n  var height = symbolSize[1] + margin.top + margin.bottom;\n  var path = echarts.helper.createSymbol(symbol, 0, 0, symbolSize[0], symbolSize[1]);\n  var size = Math.max(width, height);\n  path.x = margin.left;\n  path.y = margin.top;\n\n  if (width > height) {\n    path.y += (size - height) / 2;\n  } else {\n    path.x += (size - width) / 2;\n  }\n\n  var rect = path.getBoundingRect();\n  path.x -= rect.x;\n  path.y -= rect.y;\n  path.setStyle(style);\n  path.update();\n  path.__size = size;\n  return path;\n} // http://www.valvesoftware.com/publications/2007/SIGGRAPH2007_AlphaTestedMagnification.pdf\n\n\nfunction generateSDF(ctx, sourceImageData, range) {\n  var sourceWidth = sourceImageData.width;\n  var sourceHeight = sourceImageData.height;\n  var width = ctx.canvas.width;\n  var height = ctx.canvas.height;\n  var scaleX = sourceWidth / width;\n  var scaleY = sourceHeight / height;\n\n  function sign(r) {\n    return r < 128 ? 1 : -1;\n  }\n\n  function searchMinDistance(x, y) {\n    var minDistSqr = Infinity;\n    x = Math.floor(x * scaleX);\n    y = Math.floor(y * scaleY);\n    var i = y * sourceWidth + x;\n    var r = sourceImageData.data[i * 4];\n    var a = sign(r); // Search for min distance\n\n    for (var y2 = Math.max(y - range, 0); y2 < Math.min(y + range, sourceHeight); y2++) {\n      for (var x2 = Math.max(x - range, 0); x2 < Math.min(x + range, sourceWidth); x2++) {\n        var i = y2 * sourceWidth + x2;\n        var r2 = sourceImageData.data[i * 4];\n        var b = sign(r2);\n        var dx = x2 - x;\n        var dy = y2 - y;\n\n        if (a !== b) {\n          var distSqr = dx * dx + dy * dy;\n\n          if (distSqr < minDistSqr) {\n            minDistSqr = distSqr;\n          }\n        }\n      }\n    }\n\n    return a * Math.sqrt(minDistSqr);\n  }\n\n  var sdfImageData = ctx.createImageData(width, height);\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var dist = searchMinDistance(x, y);\n      var normalized = dist / range * 0.5 + 0.5;\n      var i = (y * width + x) * 4;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = (1.0 - normalized) * 255;\n      sdfImageData.data[i++] = 255;\n    }\n  }\n\n  return sdfImageData;\n}\n\nvar spriteUtil = {\n  getMarginByStyle: function (style) {\n    var minMargin = style.minMargin || 0;\n    var lineWidth = 0;\n\n    if (style.stroke && style.stroke !== 'none') {\n      lineWidth = style.lineWidth == null ? 1 : style.lineWidth;\n    }\n\n    var shadowBlurSize = style.shadowBlur || 0;\n    var shadowOffsetX = style.shadowOffsetX || 0;\n    var shadowOffsetY = style.shadowOffsetY || 0;\n    var margin = {};\n    margin.left = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize, minMargin);\n    margin.right = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize, minMargin);\n    margin.top = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize, minMargin);\n    margin.bottom = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize, minMargin);\n    return margin;\n  },\n  // TODO Not consider shadowOffsetX, shadowOffsetY.\n\n  /**\n   * @param {string} symbol\n   * @param {number | Array.<number>} symbolSize\n   * @param {Object} style\n   */\n  createSymbolSprite: function (symbol, symbolSize, style, canvas) {\n    var path = makePath(symbol, symbolSize, style);\n    var margin = spriteUtil.getMarginByStyle(style);\n    return {\n      image: makeSprite(path.__size, canvas, function (ctx) {\n        echarts.innerDrawElementOnCanvas(ctx, path);\n      }),\n      margin: margin\n    };\n  },\n  createSDFFromCanvas: function (canvas, size, range, outCanvas) {\n    // TODO Create a low resolution SDF from high resolution image.\n    return makeSprite(size, outCanvas, function (outCtx) {\n      var ctx = canvas.getContext('2d');\n      var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      outCtx.putImageData(generateSDF(outCtx, imgData, range), 0, 0);\n    });\n  },\n  createSimpleSprite: function (size, canvas) {\n    return makeSprite(size, canvas, function (ctx) {\n      var halfSize = size / 2;\n      ctx.beginPath();\n      ctx.arc(halfSize, halfSize, 60, 0, Math.PI * 2, false);\n      ctx.closePath();\n      var gradient = ctx.createRadialGradient(halfSize, halfSize, 0, halfSize, halfSize, halfSize);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n      gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\n      gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\n      ctx.fillStyle = gradient;\n      ctx.fill();\n    });\n  }\n};\nexport default spriteUtil;","/*\n (c) 2011-2014, Vladimir Agafonkin\n SunCalc is a JavaScript library for calculating sun/mooon position and light phases.\n https://github.com/mourner/suncalc\n*/\n// shortcuts for easier to read formulas\nvar PI = Math.PI,\n    sin = Math.sin,\n    cos = Math.cos,\n    tan = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    rad = PI / 180; // sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n// date/time constants and conversions\n\nvar dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n\nfunction toJulian(date) {\n  return date.valueOf() / dayMs - 0.5 + J1970;\n}\n\nfunction toDays(date) {\n  return toJulian(date) - J2000;\n} // general calculations for position\n\n\nvar e = rad * 23.4397; // obliquity of the Earth\n\nfunction rightAscension(l, b) {\n  return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l));\n}\n\nfunction declination(l, b) {\n  return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l));\n}\n\nfunction azimuth(H, phi, dec) {\n  return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi));\n}\n\nfunction altitude(H, phi, dec) {\n  return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H));\n}\n\nfunction siderealTime(d, lw) {\n  return rad * (280.16 + 360.9856235 * d) - lw;\n} // general sun calculations\n\n\nfunction solarMeanAnomaly(d) {\n  return rad * (357.5291 + 0.98560028 * d);\n}\n\nfunction eclipticLongitude(M) {\n  var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)),\n      // equation of center\n  P = rad * 102.9372; // perihelion of the Earth\n\n  return M + C + P + PI;\n}\n\nfunction sunCoords(d) {\n  var M = solarMeanAnomaly(d),\n      L = eclipticLongitude(M);\n  return {\n    dec: declination(L, 0),\n    ra: rightAscension(L, 0)\n  };\n}\n\nvar SunCalc = {}; // calculates sun position for a given date and latitude/longitude\n\nSunCalc.getPosition = function (date, lat, lng) {\n  var lw = rad * -lng,\n      phi = rad * lat,\n      d = toDays(date),\n      c = sunCoords(d),\n      H = siderealTime(d, lw) - c.ra;\n  return {\n    azimuth: azimuth(H, phi, c.dec),\n    altitude: altitude(H, phi, c.dec)\n  };\n};\n\nexport default SunCalc;","export function getVisualColor(data) {\n  const style = data.getVisual('style');\n\n  if (style) {\n    const drawType = data.getVisual('drawType');\n    return style[drawType];\n  }\n}\nexport function getVisualOpacity(data) {\n  const style = data.getVisual('style');\n  return style.opacity;\n}\nexport function getItemVisualColor(data, idx) {\n  const style = data.getItemVisual(idx, 'style');\n\n  if (style) {\n    const drawType = data.getVisual('drawType');\n    return style[drawType];\n  }\n}\nexport function getItemVisualOpacity(data, idx) {\n  const style = data.getItemVisual(idx, 'style');\n  return style && style.opacity;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from './lib/extension.js';\nexport * from './lib/export/core.js';\n// ----------------------------------------------\n// All of the modules that are allowed to be\n// imported are listed below.\n//\n// Users MUST NOT import other modules that are\n// not included in this list.\n// ----------------------------------------------\nimport { SVGRenderer, CanvasRenderer } from './lib/export/renderers.js';\nimport { LineChart, BarChart, PieChart, ScatterChart, RadarChart, MapChart, TreeChart, TreemapChart, GraphChart, GaugeChart, FunnelChart, ParallelChart, SankeyChart, BoxplotChart, CandlestickChart, EffectScatterChart, LinesChart, HeatmapChart, PictorialBarChart, ThemeRiverChart, SunburstChart, CustomChart } from './lib/export/charts.js';\nimport { GridComponent, PolarComponent, GeoComponent, SingleAxisComponent, ParallelComponent, CalendarComponent, GraphicComponent, ToolboxComponent, TooltipComponent, AxisPointerComponent, BrushComponent, TitleComponent, TimelineComponent, MarkPointComponent, MarkLineComponent, MarkAreaComponent, LegendComponent, DataZoomComponent, DataZoomInsideComponent, DataZoomSliderComponent, VisualMapComponent, VisualMapContinuousComponent, VisualMapPiecewiseComponent, AriaComponent, DatasetComponent, TransformComponent } from './lib/export/components.js';\nimport { UniversalTransition, LabelLayout } from './lib/export/features.js';\n// -----------------\n// Render engines\n// -----------------\n// Render via Canvas.\n// echarts.init(dom, null, { renderer: 'canvas' })\nuse([CanvasRenderer]);\n// Render via SVG.\n// echarts.init(dom, null, { renderer: 'svg' })\nuse([SVGRenderer]);\n// ----------------\n// Charts (series)\n// ----------------\n// All of the series types, for example:\n// chart.setOption({\n//     series: [{\n//         type: 'line' // or 'bar', 'pie', ...\n//     }]\n// });\nuse([LineChart, BarChart, PieChart, ScatterChart, RadarChart, MapChart, TreeChart, TreemapChart, GraphChart, GaugeChart, FunnelChart, ParallelChart, SankeyChart, BoxplotChart, CandlestickChart, EffectScatterChart, LinesChart, HeatmapChart, PictorialBarChart, ThemeRiverChart, SunburstChart, CustomChart]);\n// -------------------\n// Coordinate systems\n// -------------------\n// All of the axis modules have been included in the\n// coordinate system module below, do not need to\n// make extra import.\n// `cartesian` coordinate system. For some historical\n// reasons, it is named as grid, for example:\n// chart.setOption({\n//     grid: {...},\n//     xAxis: {...},\n//     yAxis: {...},\n//     series: [{...}]\n// });\nuse(GridComponent);\n// `polar` coordinate system, for example:\n// chart.setOption({\n//     polar: {...},\n//     radiusAxis: {...},\n//     angleAxis: {...},\n//     series: [{\n//         coordinateSystem: 'polar'\n//     }]\n// });\nuse(PolarComponent);\n// `geo` coordinate system, for example:\n// chart.setOption({\n//     geo: {...},\n//     series: [{\n//         coordinateSystem: 'geo'\n//     }]\n// });\nuse(GeoComponent);\n// `singleAxis` coordinate system (notice, it is a coordinate system\n// with only one axis, work for chart like theme river), for example:\n// chart.setOption({\n//     singleAxis: {...}\n//     series: [{type: 'themeRiver', ...}]\n// });\nuse(SingleAxisComponent);\n// `parallel` coordinate system, only work for parallel series, for example:\n// chart.setOption({\n//     parallel: {...},\n//     parallelAxis: [{...}, ...],\n//     series: [{\n//         type: 'parallel'\n//     }]\n// });\nuse(ParallelComponent);\n// `calendar` coordinate system. for example,\n// chart.setOption({\n//     calendar: {...},\n//     series: [{\n//         coordinateSystem: 'calendar'\n//     }]\n// );\nuse(CalendarComponent);\n// ------------------\n// Other components\n// ------------------\n// `graphic` component, for example:\n// chart.setOption({\n//     graphic: {...}\n// });\nuse(GraphicComponent);\n// `toolbox` component, for example:\n// chart.setOption({\n//     toolbox: {...}\n// });\nuse(ToolboxComponent);\n// `tooltip` component, for example:\n// chart.setOption({\n//     tooltip: {...}\n// });\nuse(TooltipComponent);\n// `axisPointer` component, for example:\n// chart.setOption({\n//     tooltip: {axisPointer: {...}, ...}\n// });\n// Or\n// chart.setOption({\n//     axisPointer: {...}\n// });\nuse(AxisPointerComponent);\n// `brush` component, for example:\n// chart.setOption({\n//     brush: {...}\n// });\n// Or\n// chart.setOption({\n//     tooltip: {feature: {brush: {...}}\n// })\nuse(BrushComponent);\n// `title` component, for example:\n// chart.setOption({\n//     title: {...}\n// });\nuse(TitleComponent);\n// `timeline` component, for example:\n// chart.setOption({\n//     timeline: {...}\n// });\nuse(TimelineComponent);\n// `markPoint` component, for example:\n// chart.setOption({\n//     series: [{markPoint: {...}}]\n// });\nuse(MarkPointComponent);\n// `markLine` component, for example:\n// chart.setOption({\n//     series: [{markLine: {...}}]\n// });\nuse(MarkLineComponent);\n// `markArea` component, for example:\n// chart.setOption({\n//     series: [{markArea: {...}}]\n// });\nuse(MarkAreaComponent);\n// `legend` component not scrollable. for example:\n// chart.setOption({\n//     legend: {...}\n// });\nuse(LegendComponent);\n// `dataZoom` component including both `dataZoomInside` and `dataZoomSlider`.\nuse(DataZoomComponent);\n// `dataZoom` component providing drag, pinch, wheel behaviors\n// inside coordinate system, for example:\n// chart.setOption({\n//     dataZoom: {type: 'inside'}\n// });\nuse(DataZoomInsideComponent);\n// `dataZoom` component providing a slider bar, for example:\n// chart.setOption({\n//     dataZoom: {type: 'slider'}\n// });\nuse(DataZoomSliderComponent);\n// `visualMap` component including both `visualMapContinuous` and `visualMapPiecewise`.\nuse(VisualMapComponent);\n// `visualMap` component providing continuous bar, for example:\n// chart.setOption({\n//     visualMap: {type: 'continuous'}\n// });\nuse(VisualMapContinuousComponent);\n// `visualMap` component providing pieces bar, for example:\n// chart.setOption({\n//     visualMap: {type: 'piecewise'}\n// });\nuse(VisualMapPiecewiseComponent);\n// `aria` component providing aria, for example:\n// chart.setOption({\n//     aria: {...}\n// });\nuse(AriaComponent);\n// dataset transform\n// chart.setOption({\n//     dataset: {\n//          transform: []\n//     }\n// });\nuse(TransformComponent);\nuse(DatasetComponent);\n// universal transition\n// chart.setOption({\n//     series: {\n//         universalTransition: { enabled: true }\n//     }\n// })\nuse(UniversalTransition);\n// label layout\n// chart.setOption({\n//     series: {\n//         labelLayout: { hideOverlap: true }\n//     }\n// })\nuse(LabelLayout);"],"names":["GL_SERIES","convertNormalEmphasis","option","optType","normal","emphasis","normalOpt","emphasisOpt","convertNormalEmphasisForEach","removeTextStyleInAxis","axesOpt","Array","echarts","axisOpt","axisLabel","labelOpt","Object","assign","textStyle","series","type","coordinateSystem","mapbox3D","mapbox","xAxis3D","yAxis3D","zAxis3D","grid3D","geo3D","EChartsGL","zr","this","_layers","_zr","prototype","update","ecModel","api","self","getZr","getWidth","getHeight","zlevel","removeViewsAll","eachComponent","componentType","componentModel","view","getViewOfComponentModel","coordSys","__ecgl__","viewGL","console","error","id","layerGL","getLayerGL","addView","afterRender","setSilent","groupGL","get","eachSeries","seriesModel","chartView","getViewOfSeriesModel","warn","model","setSleepAfterStill","layers","LayerGL","painter","isSingleCanvas","virtual","img","z","style","image","renderer","canvas","silent","__hostImage","add","insertLayer","setStyle","width","height","traverse","mesh","isRenderable","ignorePicking","$ignorePicking","chart","oldDispose","dispose","eachOtherLayer","layer","call","getRenderedCanvas","opts","_singleCanvas","dom","document","createElement","dpr","pixelRatio","ctx","getContext","clearRect","backgroundColor","fillStyle","fillRect","displayList","storage","getDisplayList","scope","findAndDrawOtherLayer","smaller","larger","intermediateLayer","zlevelList","_zlevelList","Infinity","i","length","__builtin__","renderToCanvas","save","restore","el","_doPaintEl","egl","__egl","backwardCompat","generateNoiseData","size","data","Uint8Array","n","v3","Vector3","j","set","Math","random","normalize","x","y","generateNoiseTexture","Texture2D","pixels","wrapS","Texture","REPEAT","wrapT","generateKernel","offset","hemisphere","kernel","Float32Array","phi","halton","PI","theta","r","cos","sin","SSAOPass","opt","_ssaoPass","Pass","fragment","Shader","source","_blurPass","_framebuffer","FrameBuffer","depthBuffer","_ssaoTexture","_blurTexture","_blurTexture2","_depthTex","depthTexture","_normalTex","normalTexture","setNoiseSize","setKernelSize","kernelSize","radius","setParameter","power","material","disableTexture","setUniform","import","SSAOGLSL","setDepthTexture","depthTex","setNormalTexture","normalTex","_kernelSize","camera","frame","ssaoPass","blurPass","_kernels","viewInverseTranspose","Matrix4","transpose","worldTransform","projectionMatrix","array","invProjectionMatrix","ssaoTexture","blurTexture","blurTexture2","attach","bind","gl","clearColor","clear","COLOR_BUFFER_BIT","render","unbind","getTargetTexture","name","val","define","texture","getUniform","dirty","SSRPass","_ssrPass","_blurPass1","_blurPass2","_blendPass","disableTexturesAll","enableTexture","_ssrTexture","HALF_FLOAT","_texture2","_texture3","_prevTexture","_currentTexture","_frameBuffer","_normalDistribution","_totalSamples","_samplePerFrame","_downScale","SSRGLSLCode","setAmbientCubemap","specularCubemap","specularIntensity","enableSpecularMap","sourceTexture","ssrTexture","texture2","texture3","frameBuffer","ssrPass","blurPass1","blurPass2","blendPass","toViewSpace","toWorldSpace","viewMatrix","near","percent","_physicallyCorrect","tmp","setPhysicallyCorrect","isPhysicallyCorrect","cubemapUtil","generateNormalDistribution","undefine","setSSAOTexture","isFinished","attachTextureToSlot","program","symbol","slot","activeTexture","TEXTURE0","getBeforeRenderHook","defaultNormalMap","defaultBumpMap","defaultRoughnessMap","normalMaterial","previousNormalMap","previousBumpMap","previousRoughnessMap","previousRenderable","renderable","prevNormalMaterial","__program","roughness","normalMap","roughnessMap","bumpMap","uvRepeat","uvOffset","detailUvRepeat","detailUvOffset","useBumpMap","isTextureEnabled","useRoughnessMap","doubleSide","isDefined","NormalPass","format","DEPTH_COMPONENT","UNSIGNED_INT","DEPTH_ATTACHMENT","_normalMaterial","Material","shader","_defaultNormalMap","textureUtil","createBlank","_defaultBumpMap","_defaultRoughessMap","_debugPass","normalGLSL","getDepthTexture","getNormalTexture","scene","opaqueList","getRenderList","opaque","DEPTH_BUFFER_BIT","disable","BLEND","renderPass","getMaterial","ifRender","object","renderNormal","beforeRender","sort","opaqueSortCompare","renderDebug","EdgePass","_edgePass","_targetTexture","makeCommonOutputs","color","parameters","blurCode","lutCode","outputCode","brightCode","downsampleCode","upsampleCode","hdrCode","blendCode","fxaaCode","DOFCode","edgeCode","FINAL_NODES_CHAIN","EffectCompositor","_width","_height","_dpr","_sourceTexture","_depthTexture","_normalPass","_compositor","createCompositor","effectJson","sourceNode","getNodeByName","cocNode","_sourceNode","_cocNode","_compositeNode","_fxaaNode","_dofBlurNodes","map","_dofBlurKernel","_dofBlurKernelSize","_finalNodesChain","gBufferObj","resize","rendererMock","getDevicePixelRatio","wrapCallback","obj","key","oldFunc","__original","nodes","forEach","node","outKey","outputs","paramKey","_ifRenderNormalPass","_enableSSAO","_enableEdge","_enableSSR","_getPrevNode","idx","indexOf","prevNode","_getNextNode","nextNode","_addChainNode","inputs","addNode","_removeChainNode","removeNode","updateNormal","updateSSAO","enableSSAO","disableSSAO","enableSSR","disableSSR","getSSAOTexture","getSourceFrameBuffer","getSourceTexture","disableFXAA","enableFXAA","enableBloom","bloom","disableBloom","enableDOF","disableDOF","enableColorCorrection","_enableColorCorrection","disableColorCorrection","enableEdge","disableEdge","setBloomIntensity","value","setSSAOParameter","low","medium","high","ultra","process","setDOFParameter","pass","setSSRParameter","maxIteration","pixelStride","max","min","setPhysicallyCorrectSSR","physical","setEdgeColor","graphicGL","parseColor","setExposure","pow","setColorLookupTexture","setTextureImage","minFilter","NEAREST","magFilter","flipY","setColorCorrection","isSSREnabled","composite","framebuffer","targetTexture","blurKernel","blurKernelSize","frameAll","floor","poissonKernel","kernelOffset","far","TemporalSuperSampling","frames","haltonSequence","push","_haltonSequence","_frame","_sourceTex","_sourceFb","_prevFrameTex","_outputTex","_blendFb","_outputPass","blendWithPrevious","blend","_gl","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","constructor","jitterProjection","viewport","devicePixelRatio","translationMat","mul","invert","resetFrame","getFrame","getOutputTexture","sourceTex","notOutput","index","base","result","f","firstNotNull","retrieve","MOUSE_BUTTON_KEY_MAP","left","middle","right","convertToArray","OrbitControl","Base","extend","_center","minDistance","maxDistance","maxOrthographicSize","minOrthographicSize","minAlpha","maxAlpha","minBeta","maxBeta","autoRotateAfterStill","autoRotateDirection","autoRotateSpeed","damping","rotateSensitivity","zoomSensitivity","panSensitivity","panMouseButton","rotateMouseButton","_mode","_camera","_needsUpdate","_rotating","_phi","_theta","_mouseX","_mouseY","_rotateVelocity","Vector2","_panVelocity","_distance","_zoomSpeed","_stillTimeout","_animators","hdlName","init","on","_mouseDownHandler","_mouseUpHandler","_mouseWheelHandler","_pinchHandler","animation","_update","addEventListener","_contextMenuHandler","off","_mouseMoveHandler","removeEventListener","stopAllAnimation","getDistance","setDistance","distance","getOrthographicSize","_orthoSize","setOrthographicSize","getAlpha","getBeta","getCenter","toArray","setAlpha","alpha","setBeta","beta","setCenter","centerArr","setArray","setViewGL","getCamera","setFromViewControlModel","viewControlModel","extraOpts","baseDistance","baseOrthoSize","projection","_projection","setProjection","targetDistance","targetOrthographicSize","prop","animationOpts","center","animationDurationUpdate","_notFirst","animateTo","orthographicSize","easing","animationEasingUpdate","duration","_validateProperties","target","_addAnimator","animate","when","during","start","stop","_isAnimating","deltaTime","radian","len","abs","_updateDistanceOrSize","_updatePan","_updateRotate","_updateTransform","refresh","trigger","velocity","_vectorDamping","_setDistance","_setOrthoSize","cameraHeight","cameraWidth","top","bottom","yAxis","xAxis","scaleAndAdd","dir","position","copy","rotation","identity","rotateY","rotateX","_startCountingStill","clearTimeout","time","isNaN","setTimeout","v","speed","scale","_decomposeTransform","updateWorldTransform","forward","asin","atan2","aspect","dist","e","offsetX","offsetY","containPoint","event","targetTouches","button","autoRotate","__isGLToZRProxy","preventDefault","delta","wheelDelta","detail","_zoomHandler","pinchScale","_isRightMouseButtonUsed","animator","animators","done","splice","defineProperty","_autoRotate","swap","arr","a","b","partition","pivot","compare","storeIndex","pivotValue","quickSort","newPivot","ProgressiveQuickSort","_parts","step","_sorted","_currentSortPartIdx","parts","subdividedParts","Roam2DControl","minZoom","maxZoom","_dx","_dy","_zoom","setTarget","_target","setZoom","zoom","setOffset","getZoom","getOffset","pos","_convertPos","_x","_y","zoomScale","newZoom","fixX","fixY","ZRTextureAtlasSurfaceNode","gap","_rowHeight","ZRTextureAtlasSurface","_canvas","_texture","oldRefreshImmediately","refreshImmediately","onupdate","_coords","_gap","_textureAtlasNodes","_nodeWidth","_nodeHeight","_currentNodeIdx","rect","getBoundingRect","_fitElement","canvasWidth","canvasHeight","coordsOffset","coords","spriteWidth","spriteHeight","scaleX","scaleY","getTexture","_getCurrentNode","_expand","maxSize","textureAtlasNodes","nodeLen","newNode","getCoordsScale","getCoords","earcut","holeIndices","dim","minX","minY","maxX","maxY","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","end","clockwise","last","signedArea","insertNode","equals","next","filterPoints","again","p","steiner","area","prev","ear","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","c","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","nextZ","prevZ","intersects","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","m","hx","hy","qx","tan","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","px","py","intersectsPolygon","middleInside","p1","p2","q1","q2","inside","a2","Node","b2","an","bp","sum","deviation","polygonArea","trianglesArea","formatUtil","dataIndex","status","dataType","dimIndex","getData","itemModel","getItemModel","params","getDataParams","text","formatter","vec3","glMatrix","mat3","BarsGeometry","Geometry","attributes","Attribute","prevPosition","prevNormal","dynamic","enableNormal","bevelSize","bevelSegments","_dataIndices","_vertexOffset","_triangleOffset","resetOffset","setBarCount","barCount","vertexCount","getBarVertexCount","triangleCount","getBarTriangleCount","indices","Uint32Array","Uint16Array","_getBevelBarVertexCount","_getBevelBarTriangleCount","widthSegments","heightSegments","setColor","dirtyAttribute","getDataIndexOfVertex","vertexIndex","addBar","v3Create","create","v3ScaleAndAdd","pz","nx","ny","nz","pts","normals","cubeFaces4","face4To3","cubeFaces3","face4","face","k","leftDir","startVertex","_addBevelBar","cross","negate","vertexOffset","idx3","endVerex","rotateMat","bevelStartSize","xOffsets","zOffsets","yOffsets","rx","ry","rz","endIndices","transformMat3","i2","i1","i4","i3","setTriangleIndices","dynamicConvertMixin","trianglesSortMixin","vec2","glmatrix","sampleLinePoints","LinesGeometry","segmentScale","useNativeLine","_faceOffset","_itemVertexOffsets","setVertexCount","nVertex","setTriangleCount","nTriangle","_getCubicCurveApproxStep","p0","p3","getCubicCurveVertexCount","segCount","ceil","getCubicCurveTriangleCount","getLineVertexCount","getPolylineVertexCount","getLineTriangleCount","getPolylineTriangleCount","points","pointsLen","is2DArray","addCubicCurve","lineWidth","x0","y0","x1","y1","x2","y2","x3","y3","step2","step3","pre1","pre2","pre4","pre5","tmp1x","tmp1y","tmp2x","tmp2y","fx","fy","dfx","dfy","ddfx","ddfy","dddfx","dddfy","t","addPolyline","addLine","dirA","dirB","tangent","point","nextPoint","prevPoint","arrayOffset","pointsCount","pointColor","notSharingColor","positionAttr","colorAttr","offsetAttr","normalAttr","k2","k4","sub","miter","dot","setItemColor","startOffset","endOffset","positionPrev","positionNext","prevPositionPrev","prevPositionNext","z0","z1","z2","z3","tmp1z","tmp2z","fz","dfz","ddfz","dddfz","positionPrevAttr","positionNextAttr","k3","currentTriangleOffset","currentVertexOffset","QuadsGeometry","setQuadCount","nQuad","getQuadVertexCount","getQuadTriangleCount","addQuad","convertToDynamicArray","slice","convertToTypedArray","needsSortTriangles","sortTriangles","needsSortTrianglesProgressively","doSortTriangles","cameraPos","posAttr","_triangleZList","_sortedTriangleIndices","_indicesTmp","_triangleZListTmp","firstZ","cursor","sqrDist","zMax","sortedTriangleIndices","_simpleSort","_progressiveQuickSort","targetIndices","targetTriangleZList","faceZList","fromIdx3","toIdx3","dirtyIndices","useNativeQuickSort","_quickSort","needsSortVertices","sortVertices","needsSortVerticesProgressively","doSortVertices","noneCount","_zList","_noneCount","zList","events","makeHandlerName","eventName","EChartsSurface","anisotropic","surface","eveObj","triangle","_meshes","dispatchEvent","setECharts","_chart","getDom","HTMLCanvasElement","__oldRefreshImmediately","uv0","uv1","uv2","uv","vCross","attachedMesh","geo","geometry","texcoord","texcoord0","det","u","handler","dispatch","zrX","zrY","attachToMesh","detachFromMesh","animatableMixin","getAnimators","path","pathSplitted","split","l","Error","Animator","__zr","addAnimator","stopAnimation","forwardToLast","addAnimatorsToZr","removeAnimatorsFromZr","removeAnimator","isValueNone","isValueImage","HTMLImageElement","Image","isECharts","setOption","Node3D","utilGLSL","prezGLSL","commonGLSL","colorGLSL","lambertGLSL","realisticGLSL","hatchingGLSL","shadowGLSL","oldAddToScene","Scene","addToScene","oldRemoveFromScene","removeFromScene","child","textureName","imgValue","textureOpts","autoUpdateTextureStatus","loadTexture","Renderer","Mesh","SphereGeometry","PlaneGeometry","CubeGeometry","AmbientLight","DirectionalLight","PointLight","SpotLight","PerspectiveCamera","OrthographicCamera","Vector4","Quaternion","Matrix2","Matrix2d","Matrix3","Plane","Ray","BoundingBox","Frustum","blankImage","getBlankImage","nearestPowerOfTwo","round","log","LN2","convertTextureToPowerOfTwo","drawImage","cb","keys","prefix","textureCache","__textureCache","LRUCache","__textureid__","textureObj","__uid__","put","callbacks","match","exposure","fileType","originalImage","onload","crossOrigin","src","createAmbientCubemap","textureUrl","ambientCubemap","AmbientCubemapLight","intensity","ambientSH","AmbientSHLight","diffuseIntensity","coefficients","cubemap","prefilter","shUtil","projectEnvironmentMap","lod","specular","diffuse","createBlankTexture","isImage","additiveBlend","blendEquation","blendFunc","SRC_ALPHA","colorStr","rgba","directionFromAlphaBeta","getShadowResolution","shadowQuality","shadowResolution","COMMON_SHADERS","createShader","vertexShaderStr","fragmentShaderStr","createMaterial","defines","defineName","setMaterialFromModel","shading","materialModel","getModel","detailTexture","repeatParam","CLAMP_TO_EDGE","textureOpt","metalness","normalTextureVal","tams","updateVertexAnimation","mappingAttributes","previousMesh","currentMesh","enableAnimation","shadowDepthMaterial","ignorePreZ","__percent","squareTriangles","SpritesGeometry","setSpriteCount","spriteCount","_spriteCount","setSpriteAlign","spriteOffset","align","verticalAlign","margin","leftOffset","topOffset","rightOffset","bottomOffset","addSprite","screenMargin","setSprite","texcoordAttr","labelsGLSL","transparent","depthMask","culling","castShadow","arguments","queryDataIndex","payload","dataIndexInside","indexOfRawIndex","indexOfName","makeSprite","draw","makePath","symbolSize","marginBias","spriteUtil","getMarginByStyle","__size","generateSDF","sourceImageData","range","sourceWidth","sourceHeight","sign","searchMinDistance","minDistSqr","r2","dx","dy","distSqr","sqrt","sdfImageData","createImageData","normalized","minMargin","stroke","shadowBlurSize","shadowBlur","shadowOffsetX","shadowOffsetY","createSymbolSprite","createSDFFromCanvas","outCanvas","outCtx","imgData","getImageData","putImageData","createSimpleSprite","halfSize","beginPath","arc","closePath","gradient","createRadialGradient","addColorStop","fill","atan","rad","dayMs","J1970","J2000","toJulian","date","valueOf","toDays","rightAscension","declination","azimuth","H","dec","altitude","siderealTime","d","lw","solarMeanAnomaly","eclipticLongitude","M","C","P","sunCoords","L","ra","SunCalc","lat","lng","getVisualColor","getVisual","drawType","getVisualOpacity","opacity","getItemVisualColor","getItemVisual","getItemVisualOpacity","use","CanvasRenderer","SVGRenderer","LineChart","BarChart","PieChart","ScatterChart","RadarChart","MapChart","TreeChart","TreemapChart","GraphChart","GaugeChart","FunnelChart","ParallelChart","SankeyChart","BoxplotChart","CandlestickChart","EffectScatterChart","LinesChart","HeatmapChart","PictorialBarChart","ThemeRiverChart","SunburstChart","CustomChart","GridComponent","PolarComponent","GeoComponent","SingleAxisComponent","ParallelComponent","CalendarComponent","GraphicComponent","ToolboxComponent","TooltipComponent","AxisPointerComponent","BrushComponent","TitleComponent","TimelineComponent","MarkPointComponent","MarkLineComponent","MarkAreaComponent","LegendComponent","DataZoomComponent","DataZoomInsideComponent","DataZoomSliderComponent","VisualMapComponent","VisualMapContinuousComponent","VisualMapPiecewiseComponent","AriaComponent","TransformComponent","DatasetComponent","UniversalTransition","LabelLayout"],"sourceRoot":""}